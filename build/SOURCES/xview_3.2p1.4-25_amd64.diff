diff -Naur xview-3.2p1.4.orig/Build-LinuxXView.bash xview-3.2p1.4/Build-LinuxXView.bash
--- xview-3.2p1.4.orig/Build-LinuxXView.bash	2013-01-07 12:36:49.401732000 +0100
+++ xview-3.2p1.4/Build-LinuxXView.bash	2013-01-07 13:06:11.834511000 +0100
@@ -11,6 +11,13 @@
 
 [ $# -gt 0 ] && set -e
 
+ARCH=`uname -p`
+if [ "x${ARCH}" = "xx86_64" ]; then
+	EXTRAFLAGS="-Wimplicit -D_XV_API_BROKEN_64BIT"
+else
+	EXTRAFLAGS=""
+fi
+
 if ! [ -d lib/libxview ]; then
   echo Please change to XView source tree and try again
   exit 1
@@ -34,7 +41,7 @@
 
 # Variable-definitions appended by imake-wrapper
   XVDESTDIR      = $OWDEST
-  EXTRA_DEFINES  = -DOPENWINHOME_DEFAULT=\"$OPENWINHOME\" -D_GNU_SOURCE
+  EXTRA_DEFINES  = -DOPENWINHOME_DEFAULT=\"$OPENWINHOME\" -D_GNU_SOURCE $EXTRAFLAGS
   CONFIGDIR      = $OPENWINHOME/lib/config
   INCLUDES      := -I`pwd`/build/include $IMAKE_EXTRA_INCLUDES -I$OWDEST/include \$(INCLUDES)
   LOCAL_LDFLAGS := -L`pwd`/lib/libolgx -L`pwd`/lib/libxview $IMAKE_EXTRA_LOCAL_LDFLAGS -L$OWDEST/lib \$(LOCAL_LDFLAGS)
diff -Naur xview-3.2p1.4.orig/clients/clock/clock.c xview-3.2p1.4/clients/clock/clock.c
--- xview-3.2p1.4.orig/clients/clock/clock.c	2013-01-07 12:36:39.248828000 +0100
+++ xview-3.2p1.4/clients/clock/clock.c	2013-01-07 12:50:33.472305000 +0100
@@ -31,6 +31,7 @@
 #include  <xview/pixwin.h>
 #include  <xview/rectlist.h>
 #include  <sys/time.h>
+#include  <stdlib.h>			/* malloc() and friends */
 #include  "ds_popup.h"
 
 #define		FROMRIM			15	/* tip of hour hand to rim */
@@ -54,7 +55,7 @@
 #define		NULLPR	(struct pixrect *) NULL
 #define		DIGITAL_ON		0
 
-extern double rint();
+extern double rint(double);
 
 static int initializing;
 static int centerX, centerY;
@@ -133,6 +134,8 @@
 static void paint_ticks();
 static void erase_second_hand();
 static void enable_timer();
+static void update_slots();
+static void build_numbers();
 
 static Notify_value clock_resize_proc();
 static Notify_value clock_repaint_proc();
@@ -224,6 +227,19 @@
 int		lastw;
 int		lasth;
 
+#ifdef __STDC__
+static int seconds_on(Options o);
+static int date_on(Options o);
+static int min(int a, int b);
+static int armwidth(int r);
+#else
+static int seconds_on();
+static int date_on();
+static int min();
+static int armwidth();
+#endif
+
+
 void
 print_event (handle, event)
 Xv_window	handle;
@@ -277,7 +293,7 @@
 		printf ("DOWN");
 
 	printf ("\tx = %d  y = %d  w = %d  h = %d\n", event_x(event), event_y(event),
-		(int) xv_get(handle, XV_WIDTH, 0), (int) xv_get(handle, XV_HEIGHT, 0));
+		(int) xv_get(handle, XV_WIDTH, NULL), (int) xv_get(handle, XV_HEIGHT, NULL));
 }
 
 static void
@@ -374,19 +390,19 @@
 	rc = notify_next_event_func (pw, event, arg, type);
 	id = event_action(event);
 	
-	c = (Clock) xv_get(pw, XV_KEY_DATA, key, 0);
+	c = (Clock) xv_get(pw, XV_KEY_DATA, (Attr_attribute)key, NULL);
 	switch(id) {
 	case WIN_REPAINT:
 		(void)clock_repaint_proc(c->canvas, pw, NULL);
 		break;
 	case WIN_RESIZE:  /* pw doesn't get WIN_RESIZE; more horse shit */
-		(void)clock_resize_proc(pw, (int)xv_get(pw, XV_WIDTH, 0), (int)xv_get(pw, XV_HEIGHT, 0));
+		(void)clock_resize_proc(pw, (int)xv_get(pw, XV_WIDTH, NULL), (int)xv_get(pw, XV_HEIGHT, NULL));
 		break;
 	case ACTION_MENU:
 		if (event_is_down(event)) {
 			menu_show((Menu) xv_get(pw, WIN_MENU, 0), pw, event, 0);
 /*			menu_show(c->menu, c->canvas, event, 0);   */
-/*			xv_set(c->menu, XV_SHOW, TRUE, 0);	   */
+/*			xv_set(c->menu, XV_SHOW, TRUE, NULL);	   */
 		}
 		break;
 
@@ -408,18 +424,18 @@
 
 	rc = notify_next_event_func (frame, event, arg, type);
 	if (event_action(event) == ACTION_CLOSE) {
-		c = (Clock) xv_get (frame, XV_KEY_DATA, key, 0);
-		w = (int) xv_get (c->canvas, XV_WIDTH, 0);
-		h = (int) xv_get (c->canvas, XV_HEIGHT, 0);
+		c = (Clock) xv_get (frame, XV_KEY_DATA, (Attr_attribute)key, NULL);
+		w = (int) xv_get (c->canvas, XV_WIDTH, NULL);
+		h = (int) xv_get (c->canvas, XV_HEIGHT, NULL);
 		centerX=0; centerY=0;
 		pw_write(c->pw, 0, 0, w, h, PIX_CLR, 0, 0, 0);
 		init_images(c, 64, 64);
 		icon_repaint(c->icon, c->iconpw, NULL);
 	}
 	if (event_action(event) == ACTION_OPEN) {
-		c = (Clock) xv_get (frame, XV_KEY_DATA, key, 0);
-		w = (int) xv_get (c->canvas, XV_WIDTH, 0);
-		h = (int) xv_get (c->canvas, XV_HEIGHT, 0);
+		c = (Clock) xv_get (frame, XV_KEY_DATA, (Attr_attribute)key, NULL);
+		w = (int) xv_get (c->canvas, XV_WIDTH, NULL);
+		h = (int) xv_get (c->canvas, XV_HEIGHT, NULL);
 		centerX=0; centerY=0;
 		smaller = min(w, h);
 		init_images(c, smaller, smaller);
@@ -438,7 +454,7 @@
 	Clock c;
 
 	rc = notify_next_event_func(icon, event, arg, type);
-	c = (Clock) xv_get(icon, XV_KEY_DATA, key, 0);
+	c = (Clock) xv_get(icon, XV_KEY_DATA, (Attr_attribute)key, NULL);
 
 	if (event_action(event) == WIN_REPAINT) {
 		icon_repaint(icon, c->iconpw, NULL);
@@ -457,9 +473,9 @@
 	int w, h;
 	Clock c;
 
-	c = (Clock) xv_get (canvas, XV_KEY_DATA, key, 0);
-	w = (int) xv_get (canvas, XV_WIDTH, 0);
-	h = (int) xv_get (canvas, XV_HEIGHT, 0);
+	c = (Clock) xv_get (canvas, XV_KEY_DATA, (Attr_attribute)key, NULL);
+	w = (int) xv_get (canvas, XV_WIDTH, NULL);
+	h = (int) xv_get (canvas, XV_HEIGHT, NULL);
 	pw_write (pw, 0, 0, w, h, PIX_CLR, 0, 0, 0);
 	switch (c->options->face) {
 	case analog:
@@ -480,12 +496,12 @@
 	caddr_t kd;
 {
 	Server_image i;
-	i = (Server_image) xv_create (NULL, SERVER_IMAGE,
+	i = (Server_image) xv_create ((Xv_object)NULL, SERVER_IMAGE,
 		XV_WIDTH, w,
 		XV_HEIGHT, h,
 		SERVER_IMAGE_DEPTH, 1,
-		0);
-	xv_set (i, XV_KEY_DATA, key, kd, 0);
+		NULL);
+	xv_set (i, XV_KEY_DATA, (Attr_attribute)key, kd, NULL);
 	pw_write (i, 0, 0, w, h, PIX_CLR, 0, 0, 0);
 	return (i);
 }
@@ -541,9 +557,9 @@
 		initializing = 0;
 		return;
 	}
-	c	= (Clock) xv_get (canvas, XV_KEY_DATA, key, 0);
-	cwidth	= (int) xv_get (canvas, XV_WIDTH, 0);
-	cheight = (int) xv_get (canvas, XV_HEIGHT, 0);
+	c	= (Clock) xv_get (canvas, XV_KEY_DATA, (Attr_attribute)key, NULL);
+	cwidth	= (int) xv_get (canvas, XV_WIDTH, NULL);
+	cheight = (int) xv_get (canvas, XV_HEIGHT, NULL);
 	d	= c-> display;
 	smaller	= min(cwidth,cheight);
 
@@ -862,7 +878,7 @@
 erase_date (c)
         Clock c;
 {
-	xv_set(c->frame, FRAME_LABEL, "", 0);
+	xv_set(c->frame, FRAME_LABEL, "", NULL);
 	date_buf[0] = NULL;
 }
 
@@ -887,7 +903,7 @@
 	sprintf (buf, "%s %d",  months[tm->tm_mon], tm->tm_mday);
 	if (strcmp(buf, date_buf))
         {
-		xv_set (f, FRAME_LABEL, buf, 0);
+		xv_set (f, FRAME_LABEL, buf, NULL);
 		strcpy(date_buf, buf);
         }
 
@@ -902,7 +918,7 @@
 	Pixwin *pw;
 
 	d = c->display;
-	if (xv_get(c->frame, FRAME_CLOSED, 0)) {
+	if (xv_get(c->frame, FRAME_CLOSED, NULL)) {
 		pw = (Pixwin *)c->icon;
 	}
 	else {
@@ -937,7 +953,7 @@
 	angle	= tm-> tm_sec * 6;
 	d	= c-> display;
 
-	if (xv_get(c->frame, FRAME_CLOSED, 0)) {
+	if (xv_get(c->frame, FRAME_CLOSED, NULL)) {
 		pw = (Pixwin *)c->icon;	/* pretty bogus */
 		width = 64;
 		height = 64;
@@ -945,9 +961,9 @@
 	}
 	else {
 		pw = c->pw;
-		width = (int)xv_get (pw, XV_WIDTH, 0);
-		height = (int)xv_get (pw, XV_HEIGHT, 0);
-		diameter= (int)xv_get(handspr, XV_WIDTH, 0);
+		width = (int)xv_get (pw, XV_WIDTH, NULL);
+		height = (int)xv_get (pw, XV_HEIGHT, NULL);
+		diameter= (int)xv_get(handspr, XV_WIDTH, NULL);
 		/*fprintf(stderr, "w=%d, h=%d, di=%d\n", width, height, diameter);*/
 	}
 	radius	= diameter/2;
@@ -982,9 +998,9 @@
 	Clock		c;
 	Options		o;
 
-	c	= (Clock) xv_get (me, XV_KEY_DATA, key, 0);
+	c	= (Clock) xv_get (me, XV_KEY_DATA, (Attr_attribute)key, NULL);
 	o	= c-> options;
-	closed  = (int)xv_get(me, FRAME_CLOSED, 0);
+	closed  = (int)xv_get(me, FRAME_CLOSED, NULL);
 	if (closed)  return (icon_timer_expired (me, which));
 	switch (o-> face) {
 	case digital:
@@ -1024,13 +1040,13 @@
 	struct tm *tm;
 	Clock c;
 
-	c = (Clock) xv_get (canvas, XV_KEY_DATA, key, 0);
+	c = (Clock) xv_get (canvas, XV_KEY_DATA, (Attr_attribute)key, NULL);
 	now = time(0);
 	tm = localtime (&now);
-	w = (int) xv_get (canvas, XV_WIDTH, 0);
-	h = (int) xv_get (canvas, XV_HEIGHT, 0);
-	prw = (int) xv_get (handspr, XV_WIDTH, 0);
-	prh = (int) xv_get (handspr, XV_HEIGHT, 0);
+	w = (int) xv_get (canvas, XV_WIDTH, NULL);
+	h = (int) xv_get (canvas, XV_HEIGHT, NULL);
+	prw = (int) xv_get (handspr, XV_WIDTH, NULL);
+	prh = (int) xv_get (handspr, XV_HEIGHT, NULL);
 	pw_write (handspr, 0, 0, prw, prh, PIX_CLR, 0, 0, 0);
 	paint_hands (c, handspr, tm-> tm_min*6,
 		tm-> tm_hour*30 + tm-> tm_min/2, prw);
@@ -1052,7 +1068,7 @@
 	struct tm *tm;
 	Clock c;
 
-	c	= (Clock) xv_get(i, XV_KEY_DATA, key, 0);
+	c	= (Clock) xv_get(i, XV_KEY_DATA, (Attr_attribute)key, NULL);
 	now	= time(0);
 	tm	= localtime (&now);
 	pw_write (iconhandspr, 3, 3, 58, 58, PIX_CLR, 0, 0, 0);
@@ -1087,7 +1103,7 @@
 	Clock		c;
 	Xv_Font		f;
 
-	c	= (Clock) xv_get (me, XV_KEY_DATA, key, 0);
+	c	= (Clock) xv_get (me, XV_KEY_DATA, (Attr_attribute)key, NULL);
 	now	= time(0);
 	tm	= (struct tm *) localtime (&now);
 	
@@ -1129,11 +1145,11 @@
 	struct		tm *tm;
 	Clock		c;
 
-	c	= (Clock) xv_get (me, XV_KEY_DATA, key, 0);
-	w	= (int) xv_get (c->canvas, XV_WIDTH, 0);
-	h	= (int) xv_get (c->canvas, XV_HEIGHT, 0);
-	prw	= (int) xv_get (tempr, XV_WIDTH, 0);
-	prh	= (int) xv_get (tempr, XV_HEIGHT, 0);
+	c	= (Clock) xv_get (me, XV_KEY_DATA, (Attr_attribute)key, NULL);
+	w	= (int) xv_get (c->canvas, XV_WIDTH, NULL);
+	h	= (int) xv_get (c->canvas, XV_HEIGHT, NULL);
+	prw	= (int) xv_get (tempr, XV_WIDTH, NULL);
+	prh	= (int) xv_get (tempr, XV_HEIGHT, NULL);
 	now	= time(0);
 	tm	= (struct tm *) localtime (&now);
 
@@ -1209,13 +1225,13 @@
 	Clock		c;
 	ClockDisplay		d;
 
-	c		= (Clock) xv_get (canvas, XV_KEY_DATA, key, 0);
+	c		= (Clock) xv_get (canvas, XV_KEY_DATA,(Attr_attribute) key, NULL);
 	d		= c-> display;
 	fontHeight	= d-> fontHeight;
 	fontWidth	= d-> fontWidth;
 	now		= time(0);
 	tm		= localtime (&now);
-	y_coord		= ((int) xv_get (canvas, XV_HEIGHT, 0)-fontHeight)/2;
+	y_coord		= ((int) xv_get (canvas, XV_HEIGHT, NULL)-fontHeight)/2;
 	d->y_coord	= y_coord;
 
 	if (tm-> tm_hour == 0)
@@ -1275,7 +1291,7 @@
 	struct		tm *tm;
 	Clock		c;
 
-	c		= (Clock) xv_get(me, XV_KEY_DATA, key, 0);
+	c		= (Clock) xv_get(me, XV_KEY_DATA,(Attr_attribute) key, NULL);
 	now		= time(0);
 	tm		= (struct tm *) localtime(&now);
 
@@ -1297,11 +1313,11 @@
 	Panel_item item;
 	Event *event;
 {
-	Clock c		= (Clock) xv_get (item, XV_KEY_DATA, key, 0);
+	Clock c		= (Clock) xv_get (item, XV_KEY_DATA, (Attr_attribute)key, NULL);
 	Options o	= c-> options;
-	xv_set (o-> faceChoice, PANEL_VALUE, o-> faceBAK, 0);
-	xv_set (o-> secondsToggle, PANEL_VALUE, o->secondsBAK, 0);
-	xv_set (o-> dateToggle, PANEL_VALUE, o->dateBAK, 0);
+	xv_set (o-> faceChoice, PANEL_VALUE, (Attr_attribute)o-> faceBAK, NULL);
+	xv_set (o-> secondsToggle, PANEL_VALUE, (Attr_attribute)o->secondsBAK, NULL);
+	xv_set (o-> dateToggle, PANEL_VALUE, (Attr_attribute)o->dateBAK, NULL);
 }
 
 static int
@@ -1335,12 +1351,12 @@
 {
 	int w, h, now;
 	struct tm *tm;
-	Clock c		= (Clock) xv_get (item, XV_KEY_DATA, key, 0);
+	Clock c		= (Clock) xv_get (item, XV_KEY_DATA, (Attr_attribute)key, NULL);
 	ClockDisplay d	= c-> display;
 	Options o	= c-> options;
-	o-> face	= (Face) xv_get (o-> faceChoice, PANEL_VALUE, 0);
-	o-> seconds	= (int) xv_get (o-> secondsToggle, PANEL_VALUE, 0);
-	o-> date	= (int) xv_get (o-> dateToggle, PANEL_VALUE, 0);
+	o-> face	= (Face) xv_get (o-> faceChoice, PANEL_VALUE, NULL);
+	o-> seconds	= (int) xv_get (o-> secondsToggle, PANEL_VALUE, NULL);
+	o-> date	= (int) xv_get (o-> dateToggle, PANEL_VALUE, NULL);
 
 	writerc(c->options);
 	if (date_changed(o)) {
@@ -1355,8 +1371,8 @@
 		now = time(0);
 		tm = localtime(&now);
 		if (face_changed(o)) {
-			w = (int) xv_get (c->canvas, XV_WIDTH, 0);
-			h = (int) xv_get (c->canvas, XV_HEIGHT, 0);
+			w = (int) xv_get (c->canvas, XV_WIDTH, NULL);
+			h = (int) xv_get (c->canvas, XV_HEIGHT, NULL);
 			pw_write(c->pw, 0, 0, w, h, PIX_CLR, 0, 0, 0);
 		}
 		if (seconds_changed(o)) {
@@ -1378,7 +1394,7 @@
 				}
 				else {
 					enable_timer (c->frame, 0, 60-tm->tm_sec, 0, 60);
-					if (xv_get(c->frame, FRAME_CLOSED, 0)) {
+					if (xv_get(c->frame, FRAME_CLOSED, NULL)) {
 						icon_repaint(c->icon, c->iconpw, NULL);
 					}
 					else {
@@ -1389,12 +1405,12 @@
 			  	break;
 			}
 			backup_values(o);
-			xv_set(o->frame, XV_SHOW, FALSE, 0);
+			xv_set(o->frame, XV_SHOW, FALSE, NULL);
 			return;
 		}
 		backup_values(o);
 		clock_repaint_proc (c->canvas, c->pw, NULL); 
-		xv_set(o->frame, XV_SHOW, FALSE, 0);
+		xv_set(o->frame, XV_SHOW, FALSE, NULL);
 		return;
 	}
 	clock_repaint_proc (c->canvas, c->pw, NULL); 
@@ -1406,19 +1422,19 @@
 	Panel_item item;
 	Event *event;
 {
-	Clock c		= (Clock) xv_get (item, XV_KEY_DATA, key, 0);
+	Clock c		= (Clock) xv_get (item, XV_KEY_DATA, (Attr_attribute)key, NULL);
 	ClockDisplay d	= c-> display;
 	Options o	= c-> options;
 
-	xv_set(o-> faceChoice, PANEL_VALUE, 1, 0);
+	xv_set(o-> faceChoice, PANEL_VALUE, 1L, NULL);
 	o->face=digital;
-	xv_set(o-> secondsToggle, PANEL_VALUE, 0, 0);
+	xv_set(o-> secondsToggle, PANEL_VALUE, 0L, NULL);
 	o->seconds=0;
-	xv_set(o-> dateToggle, PANEL_VALUE, 0, 0);
+	xv_set(o-> dateToggle, PANEL_VALUE, 0L, NULL);
 	o->date=0;
 	writerc(c->options);
 	clock_repaint_proc(c->canvas, c->pw, NULL);
-	xv_set(o->frame, XV_SHOW, FALSE, 0);
+	xv_set(o->frame, XV_SHOW, FALSE, NULL);
 }
 
 
@@ -1428,44 +1444,44 @@
 	Font_string_dims size;
 	int	wd = 128;
 	char	*str = "";
-	Pixfont *pf = (Pixfont *) xv_get (o->panel, XV_FONT, 0);
+	Pixfont *pf = (Pixfont *) xv_get (o->panel, XV_FONT, NULL);
 	
-	str	= (char *) xv_get (o-> faceStr, PANEL_LABEL_STRING, 0);
+	str	= (char *) xv_get (o-> faceStr, PANEL_LABEL_STRING, NULL);
 	xv_get(pf, FONT_STRING_DIMS, str, &size);
 	xv_set (o-> faceStr, 
 		XV_X, wd - size.width,	
 		XV_Y, xv_row (o-> panel, 1),
-		0);
+		NULL);
 	xv_set (o-> faceChoice,
 		XV_X, xv_get (o-> faceStr, XV_X, 0) + size.width + 15,
 		XV_Y, xv_row (o-> panel, 1),
-		0);
-	str	= (char *) xv_get (o-> displayStr, PANEL_LABEL_STRING, 0);
+		NULL);
+	str	= (char *) xv_get (o-> displayStr, PANEL_LABEL_STRING, NULL);
 	xv_get(pf, FONT_STRING_DIMS, str, &size);
 	xv_set (o-> displayStr,
 		XV_X, wd - size.width,
 		XV_Y, xv_row (o->panel, 2),
-		0);
+		NULL);
 	xv_set (o-> secondsToggle,
 		XV_X, xv_get (o-> displayStr, XV_X, 0) + size.width + 22,
 		XV_Y, xv_row(o-> panel, 2),
-		0);
+		NULL);
 	xv_set (o-> dateToggle,
 		XV_X, xv_get (o-> secondsToggle, XV_X, 0) + 80,
 		XV_Y, xv_row (o-> panel, 2),
-		0);
+		NULL);
 	xv_set (o-> apply_button,
 		XV_X, xv_get(o->displayStr, XV_X, 0)+30,
 		XV_Y, xv_row (o-> panel, 3),
-		0);
+		NULL);
 	xv_set (o-> reset_button,
 		XV_X, xv_get(o->apply_button, XV_X, 0)+60,
 		XV_Y, xv_row (o-> panel, 3),
-		0);
+		NULL);
 	xv_set (o-> defaults_button,
 		XV_X, xv_get(o->reset_button, XV_X, 0)+60,
 		XV_Y, xv_row (o-> panel, 3),
-		0);
+		NULL);
 	
 }
 		 
@@ -1515,72 +1531,72 @@
 		XV_SHOW, FALSE,
 		FRAME_SHOW_FOOTER, TRUE,
 		XV_HELP_DATA,           "clock:PropertyFrame",
-		0);
-	xv_set (o-> frame, XV_KEY_DATA, key, c, 0);
+		NULL);
+	xv_set (o-> frame, XV_KEY_DATA, (Attr_attribute)key, c, NULL);
 	o-> panel = (Panel) xv_get
-		(o-> frame, FRAME_PROPS_PANEL, 0);
+		(o-> frame, FRAME_PROPS_PANEL, NULL);
 	xv_set (o-> panel,
 		XV_X, 0, 
 		XV_Y, 0,
 		XV_WIDTH, 350,
 		XV_HEIGHT, xv_row(o-> panel, 4),
 		XV_HELP_DATA,           "clock:PropertyPanel",
-		0); 
-	xv_set (o-> panel, XV_KEY_DATA, key, c, 0);
+		NULL); 
+	xv_set (o-> panel, XV_KEY_DATA, (Attr_attribute)key, c, NULL);
 	o-> apply_button =
 		(Panel_item) xv_create (o->panel, PANEL_BUTTON,
 		PANEL_LABEL_BOLD, TRUE,
 		PANEL_LABEL_STRING, "Apply",
 		PANEL_NOTIFY_PROC, clock_apply,	
-		XV_KEY_DATA, key, c,
+		XV_KEY_DATA, (Attr_attribute)key, c,
 		XV_HELP_DATA,           "clock:ApplyButton",
-		0);
+		NULL);
 	o-> reset_button =
 		(Panel_item) xv_create (o->panel, PANEL_BUTTON,
 		PANEL_LABEL_BOLD, TRUE,
 		PANEL_LABEL_STRING, "Reset",
 		PANEL_NOTIFY_PROC, clock_reset,
-		XV_KEY_DATA, key, c,
+		XV_KEY_DATA, (Attr_attribute)key, c,
 		XV_HELP_DATA,           "clock:ResetButton",
-		0);
+		NULL);
 	o-> defaults_button =
 		(Panel_item) xv_create (o->panel, PANEL_BUTTON,
 		PANEL_LABEL_BOLD, TRUE,
 		PANEL_LABEL_STRING, "Defaults",
 		PANEL_NOTIFY_PROC, clock_defaults,
-		XV_KEY_DATA, key, c,
+		XV_KEY_DATA, (Attr_attribute)key, c,
 		XV_HELP_DATA,           "clock:DefaultButton",
-		0);
+		NULL);
 	o-> faceStr =
 		(Panel_item) xv_create (o-> panel, PANEL_MESSAGE,
 		PANEL_LABEL_BOLD, TRUE,
 		PANEL_LABEL_STRING, "Clock Face:",
 		XV_HELP_DATA,           "clock:FaceStyle",
-		0);
+		NULL);
 	o-> faceChoice =
 		(Panel_item) xv_create (o-> panel, PANEL_CHOICE,
-		PANEL_CHOICE_STRINGS, "digital", "analog", 0,
-		PANEL_VALUE, o->face,
+		PANEL_CHOICE_STRINGS, "digital", "analog", NULL,
+		PANEL_VALUE, (Attr_attribute)o->face,
 		XV_HELP_DATA,           "clock:FaceStyle",
-		0);
+		NULL);
 	o-> displayStr =
 		(Panel_item) xv_create (o-> panel, PANEL_MESSAGE,
 		PANEL_LABEL_BOLD, TRUE,
 		PANEL_LABEL_STRING, "Display Options:",
 		XV_HELP_DATA,           "clock:DisplayStyle",
-		0);
+		NULL);
 	o-> secondsToggle =
 		(Panel_item) xv_create (o-> panel, PANEL_TOGGLE,
-		PANEL_CHOICE_STRINGS, "Seconds", 0,
-		PANEL_VALUE, o->seconds,
+		PANEL_CHOICE_STRINGS, "Seconds", NULL,
+		PANEL_VALUE, (Attr_attribute)o->seconds,
 		XV_HELP_DATA,           "clock:DisplayStyle",
-		0);
+		NULL);
 	o-> dateToggle =
 		(Panel_item) xv_create (o-> panel, PANEL_TOGGLE,
-		PANEL_CHOICE_STRINGS, "Date", 0,
-		PANEL_VALUE, o->date,
+		PANEL_CHOICE_STRINGS, "Date", NULL,
+		PANEL_VALUE, (Attr_attribute)o->date,
 		XV_HELP_DATA,           "clock:DisplayStyle",
-		0);
+		NULL);
 	layout_options (o);
 	window_fit (o-> panel);  
 	window_fit (o-> frame);
@@ -1603,17 +1619,17 @@
 show_props (m, mi) 
 	Menu m; Menu_item mi;
 {
-	Clock c = (Clock) xv_get (m, XV_KEY_DATA, key, 0);
+	Clock c = (Clock) xv_get (m, XV_KEY_DATA, (Attr_attribute)key, NULL);
 	Options o;
 
 	init_options (c);
 	o = c-> options;
 	backup_values (o);
-	xv_set (o->faceChoice, PANEL_VALUE, o->face, 0);
-	xv_set (o->secondsToggle, PANEL_VALUE, o->seconds, 0);
-	xv_set (o->dateToggle, PANEL_VALUE, o->date, 0);
-	xv_set (o->frame, FRAME_PROPS_PUSHPIN_IN, TRUE, 0);
-	xv_set (o->frame, XV_SHOW, TRUE, 0); 
+	xv_set (o->faceChoice, PANEL_VALUE, (Attr_attribute)o->face, NULL);
+	xv_set (o->secondsToggle, PANEL_VALUE, (Attr_attribute)o->seconds, NULL);
+	xv_set (o->dateToggle, PANEL_VALUE, (Attr_attribute)o->date, NULL);
+	xv_set (o->frame, FRAME_PROPS_PUSHPIN_IN, TRUE, NULL);
+	xv_set (o->frame, XV_SHOW, TRUE, NULL); 
 	clock_repaint_proc(c->canvas, c->pw, NULL);
 }
 
@@ -1658,11 +1674,11 @@
 	c->icon = (Icon) xv_create (NULL, ICON, 
 		ICON_IMAGE, iconpr,
 /*		WIN_REPAINT, icon_repaint,   */
-		XV_KEY_DATA, key, c,
-		0);
+		XV_KEY_DATA, (Attr_attribute)key, c,
+		NULL);
 
-	c->iconpw = (Pixwin *) xv_get(c->icon, CANVAS_NTH_PAINT_WINDOW, 0);
-/*	(void) xv_set(c->iconpw, XV_KEY_DATA, key, c, 0); */
+	c->iconpw = (Pixwin *) xv_get(c->icon, CANVAS_NTH_PAINT_WINDOW, NULL);
+/*	(void) xv_set(c->iconpw, XV_KEY_DATA, (Attr_attribute)key, c, NULL); */
 
 	notify_interpose_event_func(c->icon, icon_interpose, 0);
 
@@ -1697,12 +1713,12 @@
 	d-> font = (Xv_Font) xv_create (NULL, FONT, 
 		FONT_FAMILY, FONT_FAMILY_LUCIDA,
 		FONT_SIZE, 10,
-		0);
+		NULL);
 	if (d->font==NULL) {
 		d->font = (Xv_Font) xv_create (NULL, FONT, 
 			FONT_NAME, "fixed",
 			FONT_SIZE, 10,
-			0);
+			NULL);
 		if (d->font==NULL) {
 			cleanup(c);
 			fprintf(stderr, "%s\n", "Cannot open font");
@@ -1749,7 +1765,7 @@
 	}
 
 
-	xv_init (XV_INIT_ARGC_PTR_ARGV, &argc, argv, 0);
+	xv_init (XV_INIT_ARGC_PTR_ARGV, &argc, argv, NULL);
 	readrc (clck->options);
 	init_gray_patch();
 	init_numbers ();
@@ -1765,24 +1781,24 @@
 		FRAME_PROPERTIES_PROC, show_props,  
 		FRAME_ICON, clck->icon,
 		XV_HELP_DATA, "clock:ClockFrame",
-		0);
+		NULL);
 	notify_interpose_event_func(clck->frame, frame_interpose, 0);
-	xv_set (clck-> frame, XV_KEY_DATA, key, clck, 0);
+	xv_set (clck-> frame, XV_KEY_DATA, (Attr_attribute)key, clck, NULL);
         clck-> menu = xv_create(XV_NULL, MENU, 
 				MENU_TITLE_ITEM, "Clock", 
-				XV_KEY_DATA, key, clck,
-				0);
+				XV_KEY_DATA, (Attr_attribute)key, clck,
+				NULL);
 
         tmp_item = xv_create(XV_NULL, MENUITEM,
                         MENU_STRING, "Properties",
                         MENU_ACTION_PROC, show_props,
                         MENU_CLIENT_DATA, 0,
                         XV_HELP_DATA, "clock:Properties",
-                        0);
+                        NULL);
 
         xv_set(clck-> menu,
                 MENU_APPEND_ITEM, tmp_item,
-                0);
+                NULL);
 
 	clck-> canvas = (Canvas) xv_create (clck-> frame, CANVAS,
 		CANVAS_AUTO_EXPAND, TRUE, 
@@ -1790,21 +1806,21 @@
 		CANVAS_AUTO_CLEAR, TRUE,			
 		CANVAS_RETAINED, FALSE,
 		CANVAS_RESIZE_PROC, clock_resize_proc,	
-		XV_KEY_DATA, key, clck,		
+		XV_KEY_DATA, (Attr_attribute)key, clck,		
 		XV_SHOW, TRUE,
 		XV_HELP_DATA, "clock:DisplayCanvas",
-		0);					
+		NULL);					
 	clck-> pw = (Pixwin *)
-		 xv_get (clck-> canvas, CANVAS_NTH_PAINT_WINDOW, 0);       
+		 xv_get (clck-> canvas, CANVAS_NTH_PAINT_WINDOW, NULL);       
 	(void)xv_set(clck->pw, 
 		WIN_CONSUME_KBD_EVENTS, KEY_LEFT(3), WIN_MOUSE_BUTTONS, 0,
-		XV_KEY_DATA, key, clck,
+		XV_KEY_DATA, (Attr_attribute)key, clck,
 		WIN_MENU, clck->menu,
 		WIN_BIT_GRAVITY, ForgetGravity,  /* horse shit */
-		0);
+		NULL);
 	notify_interpose_event_func(clck->pw, canvas_interpose, 0); 
-	init_images (clck, (int) xv_get (clck->canvas, XV_WIDTH, 0),
-		(int) xv_get (clck->canvas, XV_HEIGHT, 0));
+	init_images (clck, (int) xv_get (clck->canvas, XV_WIDTH, NULL),
+		(int) xv_get (clck->canvas, XV_HEIGHT, NULL));
 	now = time (0);
 	tm = localtime (&now);
 
@@ -1814,12 +1830,12 @@
 			XV_HEIGHT, 
 			digital_on (clck-> options) ?
 			DEF_DIG_HEIGHT : DEF_ANALOG_HEIGHT,
-			0);
+			NULL);
 		xv_set (clck->canvas, 
 			XV_WIDTH, 
 			digital_on (clck-> options) ?
 			DEF_DIG_WIDTH : DEF_ANALOG_WIDTH, 
-			0);
+			NULL);
 	}
 	else
 	{
@@ -1831,7 +1847,7 @@
 				MIN_DIG_HEIGHT : MIN_ANALOG_HEIGHT,
 */
 			MIN_WINDOW_HEIGHT,
-				0);
+				NULL);
 
 		if (xv_get(clck->canvas, XV_WIDTH) < (digital_on (clck-> options) ? MIN_DIG_WIDTH : MIN_ANALOG_WIDTH))
 			xv_set (clck->canvas, 
@@ -1841,7 +1857,7 @@
 				MIN_DIG_WIDTH : MIN_ANALOG_WIDTH, 
 */
 			MIN_WINDOW_WIDTH,
-				0);
+				NULL);
 	}
 
 	clock_resize_proc (clck->canvas, xv_get(clck->canvas, XV_WIDTH), xv_get(clck->canvas, XV_HEIGHT));
@@ -1861,6 +1877,7 @@
 }
 
 
+static void
 update_slots (c)
 	Clock c;
 {
@@ -1868,7 +1885,7 @@
 
 	if (c==NULL) return;
 	fontWidth	= c-> display-> fontWidth;
-	windowWidth	= (int) xv_get (c->canvas, XV_WIDTH, 0);
+	windowWidth	= (int) xv_get (c->canvas, XV_WIDTH, NULL);
 	spacing		= (1.0/8.0) * fontWidth;
 	startAt		= (windowWidth - (6 * (fontWidth + spacing)))/2;
 
@@ -1877,6 +1894,7 @@
 }
 
 
+static void
 build_numbers (c)
 	Clock c;
 {
@@ -1898,8 +1916,8 @@
 			XV_WIDTH, width,
 			XV_HEIGHT, height,
 			SERVER_IMAGE_DEPTH, 1,
-			XV_KEY_DATA, key, c,
-			0);
+			XV_KEY_DATA, (Attr_attribute)key, c,
+			NULL);
 		pw_write (d-> images[i], 0, 0, width, height, PIX_CLR, 0, 0, 0);
 	}
 
diff -Naur xview-3.2p1.4.orig/clients/cmdtool/cmdtool.c xview-3.2p1.4/clients/cmdtool/cmdtool.c
--- xview-3.2p1.4.orig/clients/cmdtool/cmdtool.c	2013-01-07 12:36:39.006592000 +0100
+++ xview-3.2p1.4/clients/cmdtool/cmdtool.c	2013-01-07 12:50:33.519004000 +0100
@@ -28,13 +28,19 @@
 #include <xview/tty.h>
 #include <xview/termsw.h>
 #include <xview/textsw.h>
+#include <stdlib.h>		/* getenv() */
+
+#ifdef __STDC__
+extern char *getenv(const char *);
+extern char *dgettext(char *, char *);
+#else
+extern char *getenv();
+extern char *dgettext();
+#endif
 
 #define	TEXTDOMAIN	"cmdtool"
 #define	MSG(msg)	dgettext(TEXTDOMAIN, msg)
 
-extern	char *getenv();
-extern char *dgettext();
-
 static unsigned short tty_image[258] = {
 #include <images/terminal.icon>
 };
@@ -60,6 +66,7 @@
 };
 
 
+void
 print_usage(am_cmdtool, toolname)
 	int	 am_cmdtool;
 	char	*toolname;
@@ -163,7 +170,7 @@
 	icon_label[0] = 0177;	/* del, highly unlikely as cmd arg */
 	icon_label[1] = '\0';
 
-        cmd_pixmap = (Server_image)xv_create(NULL, SERVER_IMAGE,
+        cmd_pixmap = (Server_image)xv_create((Xv_object)NULL, SERVER_IMAGE,
                    	                     XV_WIDTH,  64,
 		                             XV_HEIGHT, 64,
 		                             SERVER_IMAGE_BITS,      
@@ -171,7 +178,7 @@
                                              am_cmdtool ? cmd_image : tty_image,
 		                             NULL);
 
-        cmd_mask_pixmap = (Server_image)xv_create(NULL, SERVER_IMAGE,
+        cmd_mask_pixmap = (Server_image)xv_create((Xv_object)NULL, SERVER_IMAGE,
 		                                 XV_WIDTH,  64,
 		                                 XV_HEIGHT, 64,
 		                                 SERVER_IMAGE_BITS,
@@ -180,7 +187,7 @@
                                                               tty_mask_image,
 		                                 NULL);
 
-	tool_icon = (Icon)xv_create(NULL, ICON,
+	tool_icon = (Icon)xv_create((Xv_object)NULL, ICON,
             WIN_RETAINED, TRUE,				    
             ICON_IMAGE, cmd_pixmap,
             ICON_MASK_IMAGE, cmd_mask_pixmap,
@@ -188,12 +195,12 @@
             ICON_TRANSPARENT,TRUE,
             NULL);
 
-	base_frame = xv_create((Xv_window)NULL, FRAME,
+	base_frame = (Frame)xv_create((Xv_window)NULL, FRAME,
 			FRAME_ICON, tool_icon,
 		        HELP_STRING_FILENAME,	"manpage_synopsis_help_index",
-			0);
+			NULL);
 			
-	if (base_frame == NULL) {
+	if (base_frame == (Frame)NULL) {
 	    fprintf(stderr, MSG("Cannot create base frame.  Process aborted.\n"));
 	    exit(1);
 	}		
@@ -298,7 +305,7 @@
 			(void)strncat(frame_label, " - ", sizeof(frame_label));
 		}
 		(void)strncat(frame_label, *argv, sizeof(frame_label));
-		(void)xv_set(base_frame, FRAME_LABEL, frame_label, 0);
+		(void)xv_set(base_frame, FRAME_LABEL, frame_label, NULL);
 	}
 	tool_icon = (Icon)xv_get(base_frame, FRAME_ICON);
 	if (((tmp_label2 = (char *) xv_get(tool_icon, ICON_LABEL)) == NULL) ||
@@ -310,16 +317,16 @@
 	    } else {
 		(void)strncpy(icon_label, *argv, sizeof(icon_label));
 	    }
-	    (void)xv_set(tool_icon, ICON_LABEL, icon_label, 0);
+	    (void)xv_set(tool_icon, ICON_LABEL, icon_label, NULL);
 	    xv_set(tool_icon, ICON_LABEL, icon_label, NULL);
 	}
 	
 
-	ttysw = xv_create(base_frame, TERMSW,   WIN_IS_CLIENT_PANE,
+	ttysw = (Tty)xv_create(base_frame, TERMSW,   WIN_IS_CLIENT_PANE,
 		  TTY_ARGV,			argv,
 		  TTY_QUIT_ON_CHILD_DEATH,	TRUE,
 		  TTY_CONSOLE,			become_console,
-		  0);
+		  NULL);
 
 	if (!(defaults_exists("window.width", "Window.Width") ||
 	      defaults_exists("window.height", "window.height") ||
@@ -334,20 +341,20 @@
 	    xv_set(ttysw,
 		   WIN_COLUMNS, cols,
 		   WIN_ROWS, rows,
-		   0);
+		   NULL);
 	    window_fit(base_frame);
 	}
 
         if (!am_cmdtool)
-		xv_set(ttysw, TERMSW_MODE, TTYSW_MODE_TYPE, 0);
+		xv_set(ttysw, TERMSW_MODE, TTYSW_MODE_TYPE, NULL);
 	if (bold_name) {
-		(void)xv_set(ttysw, TTY_BOLDSTYLE_NAME, bold_name, 0);
+		(void)xv_set(ttysw, TTY_BOLDSTYLE_NAME, bold_name, NULL);
 	}
 	if (am_cmdtool) {
 	    (void) xv_set(ttysw,
 			  TEXTSW_CHECKPOINT_FREQUENCY, checkpoint,
 			  TEXTSW_WRAPAROUND_SIZE, edit_log_wraps_at,
-			  0);
+			  NULL);
 	}
 	
 	tty_pid = (int)xv_get(ttysw, TTY_PID);
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/Imakefile xview-3.2p1.4/clients/olvwm-4.1/Imakefile
--- xview-3.2p1.4.orig/clients/olvwm-4.1/Imakefile	2013-01-07 12:36:40.868067000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/Imakefile	2013-01-07 12:50:33.557029000 +0100
@@ -90,11 +90,11 @@
 DEPLIBS = 
 LOCAL_LIBRARIES = $(MORELDFLAGS) $(OLGXLIB) $(XLIB)
 
-HEADERS = cmdstream.h cursors.h debug.h defaults.h dsdm.h environ.h error.h \
-          events.h gettext.h globals.h group.h helpcmd.h i18n.h iconimage.h \
-          iconmask.h kbdfuncs.h list.h mem.h menu.h notice.h olcursor.h \
-          olgx_impl.h ollocale.h olwm.h patchlevel.h properties.h resources.h \
-          screen.h selection.h slots.h st.h virtual.h win.h
+HEADERS = client.h cmdstream.h cursors.h debug.h defaults.h dsdm.h environ.h error.h \
+          evbind.h events.h gettext.h globals.h group.h helpcmd.h i18n.h iconimage.h \
+          iconmask.h info.h kbdfuncs.h list.h mem.h menu.h notice.h olcursor.h \
+          olgx_impl.h ollocale.h olwm.h patchlevel.h pixmap.h properties.h resources.h \
+          screen.h selection.h services.h slots.h st.h states.h usermenu.h virtual.h win.h
 
 INFOFILES = olvwm.info
 #if NeedOlwmManPage
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/Makefile.sunpro xview-3.2p1.4/clients/olvwm-4.1/Makefile.sunpro
--- xview-3.2p1.4.orig/clients/olvwm-4.1/Makefile.sunpro	1996-11-10 15:14:04.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/Makefile.sunpro	2013-01-07 12:50:33.607825000 +0100
@@ -90,11 +90,11 @@
 INC = -I${OPENWINHOME}/include
 CFLAGS = ${INC} ${MORECCFLAGS}
 
-HEADERS = cmdstream.h cursors.h debug.h defaults.h dsdm.h environ.h error.h \
-	  events.h gettext.h globals.h group.h helpcmd.h i18n.h iconimage.h \
-	  iconmask.h kbdfuncs.h list.h mem.h menu.h notice.h olcursor.h \
-	  olgx_impl.h ollocale.h olwm.h patchlevel.h properties.h resources.h \
-	  screen.h selection.h slots.h st.h virtual.h win.h
+HEADERS = client.h cmdstream.h cursors.h debug.h defaults.h dsdm.h environ.h error.h \
+	  events.h evbind.h gettext.h globals.h group.h helpcmd.h i18n.h iconimage.h \
+	  iconmask.h info.h kbdfuncs.h list.h mem.h menu.h notice.h olcursor.h \
+	  olgx_impl.h ollocale.h olwm.h patchlevel.h pixmap.h properties.h resources.h \
+	  screen.h selection.h services.h slots.h st.h states.h usermenu.h virtual.h win.h
 
 SRCS = atom.c client.c cmdstream.c cursors.c debug.c defaults.c dsdm.c \
        environ.c error.c evbind.c events.c fontset.c gettext.c gif.c group.c \
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/client.c xview-3.2p1.4/clients/olvwm-4.1/client.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/client.c	1994-01-13 22:36:03.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/client.c	2013-01-07 12:50:33.636234000 +0100
@@ -38,6 +38,10 @@
 #include "dsdm.h"
 #include "resources.h"
 #include "virtual.h"
+#include "client.h"
+#include "selection.h"
+#include "states.h"
+#include "properties.h"
 
 /***************************************************************************
 * global data
@@ -179,7 +183,7 @@
 {
 	int	*ledMap;
 	int	i,numLeds;
-	unsigned int nitems,nremain;
+	unsigned long nitems, nremain;
 
 	DoingWindowState = False;
 
@@ -780,7 +784,8 @@
     int state;		/* PropertyNewValue or PropertyDelete */
 {
     unsigned long *data;
-    int nitems, remain, nsites, i, areatype, nelts;
+    unsigned long nitems, remain;
+    int nsites, i, areatype, nelts;
     int cur = 0;
     Window wid;
     unsigned long sid, flags;
@@ -882,9 +887,9 @@
 	WinPane *wp;
 
 	if ((wf = cli->framewin) == NULL)
-		return NULL;
+		return (Window)0;
 	if ((wp = (WinPane *)(wf->fcore.panewin)) == NULL)
-		return NULL;
+		return (Window)0;
 	return wp->core.self;
 }
 
@@ -998,7 +1003,7 @@
 
     while (tc = ListEnum(&l)) {
 	if (tc->transientFor == PANEWINOFCLIENT(cli)) {
-	    RaiseWindow(tc->framewin);
+	    RaiseWindow((WinGeneric *)tc->framewin);
 	    if (first == NULL)
 		first = tc;
 	}
@@ -1032,7 +1037,7 @@
     xwc.sibling = cli->framewin->core.self;
     while (tc = ListEnum(&l)) {
 	if (tc->transientFor == PANEWINOFCLIENT(cli)) {
-	    ConfigureWindow(tc->dpy, tc->framewin,
+	    ConfigureWindow(tc->dpy, (WinGeneric *)tc->framewin,
 			     CWSibling | CWStackMode, &xwc);
 	}
     }
@@ -1058,14 +1063,14 @@
 		if (firsttransient != NULL) {
 		    xwc.sibling = firsttransient->framewin->core.self;
 		    xwc.stack_mode = Below;
-		    ConfigureWindow(cli->dpy, cli->framewin,
+		    ConfigureWindow(cli->dpy, (WinGeneric *)cli->framewin,
 				     CWSibling | CWStackMode, &xwc);
 		} else {
-		    RaiseWindow(cli->framewin);
+		    RaiseWindow((WinGeneric *)cli->framewin);
 		}
 		break;
 	case IconicState:
-		RaiseWindow(cli->iconwin);
+		RaiseWindow((WinGeneric *)cli->iconwin);
 		break;
 	default:
 		break;
@@ -1097,21 +1102,21 @@
 		    owner = WIGetInfo(cli->transientFor);
 		    if (owner == NULL ||
 			    owner->core.kind != WIN_PANE) {
-			LowerWindow(cli->framewin);
+			LowerWindow((WinGeneric *)cli->framewin);
 		    } else {
 			ownerwin = owner->core.client->framewin->core.self;
-			LowerWindow(owner->core.client->framewin);
+			LowerWindow((WinGeneric *)owner->core.client->framewin);
 			xwc.sibling = ownerwin;
 			xwc.stack_mode = Above;
-			ConfigureWindow(cli->dpy, cli->framewin,
+			ConfigureWindow(cli->dpy, (WinGeneric *)cli->framewin,
 					 CWSibling | CWStackMode, &xwc);
 		    }
 		} else {
-		    LowerWindow(cli->framewin);
+		    LowerWindow((WinGeneric *)cli->framewin);
 		}
 		break;
 	case IconicState:
-		LowerWindow(cli->iconwin);
+		LowerWindow((WinGeneric *)cli->iconwin);
 		break;
 	default:
 		break;
@@ -1209,7 +1214,7 @@
 {
 	Client  *cliLead = GroupLeader(cli->groupid);
 	if (cliLead && cliLead->framewin) {
-		RaiseWindow(cliLead->framewin);
+		RaiseWindow((WinGeneric *)cliLead->framewin);
 		WinCallDraw((WinGeneric *)cliLead->framewin);
 		FrameFlashTitleBar(cliLead->framewin);
 	}
@@ -1238,13 +1243,13 @@
  *      which fall inside the rectangle
  */
 void *
-ClientInBox(cli, close)
+ClientInBox(cli, cclose)
 Client *cli;
-ClientInBoxClosure *close;
+ClientInBoxClosure *cclose;
 {
 	int x, y, w, h;
 
-	if (cli->screen != close->screen)
+	if (cli->screen != cclose->screen)
 		return NULL;
 
 	if (cli->framewin == NULL)
@@ -1271,11 +1276,11 @@
 	
 	}
 
-	if ((x >= close->bx) &&
-	    (y >= close->by) &&
-	    ((x + w) <= (close->bx + close->bw)) &&
-	    ((y + h) <= (close->by + close->bh)))
-		(close->func)(cli, close->timestamp);
+	if ((x >= cclose->bx) &&
+	    (y >= cclose->by) &&
+	    ((x + w) <= (cclose->bx + cclose->bw)) &&
+	    ((y + h) <= (cclose->by + cclose->bh)))
+		(cclose->func)(cli, cclose->timestamp);
 
 	return NULL;
 }
@@ -1515,10 +1520,10 @@
  * have the focus.  Therefore, select them.
  */
 void
-ClientActivate(dpy, cli, time)
+ClientActivate(dpy, cli, timestamp)
     Display *dpy;
     Client *cli;
-    Time time;
+    Time timestamp;
 {
     /*
      * If the current client is selected, assume it was selected because it 
@@ -1532,11 +1537,11 @@
      * frame (i.e. a root client), activate the NoFocus client.
      */
     if (cli == NULL) {
-	NoFocusTakeFocus(dpy, time, NULL);
+	NoFocusTakeFocus(dpy, timestamp, NULL);
     } else if (cli->framewin == NULL) {
-	NoFocusTakeFocus(dpy, time, cli->scrInfo);
+	NoFocusTakeFocus(dpy, timestamp, cli->scrInfo);
     } else {
-	ClientSetFocus(cli, True, time);
+	ClientSetFocus(cli, True, timestamp);
 
 	/*
 	 * If the client is iconic or has no header, select it to show that it 
@@ -1545,7 +1550,7 @@
 	if (cli->wmState == IconicState ||
 		!(cli->wmDecors->flags & WMDecorationHeader)) {
 	    ClearSelections(dpy);
-	    AddSelection(cli, time);
+	    AddSelection(cli, timestamp);
 	}
 
 	if (GRV.RaiseOnActivate)
@@ -1560,10 +1565,10 @@
  * Set the focus to the topmost window on the given screen.
  */
 void
-ClientFocusTopmost(dpy, scrinfo, time)
+ClientFocusTopmost(dpy, scrinfo, timestamp)
     Display *dpy;
     ScreenInfo *scrinfo;
-    Time time;
+    Time timestamp;
 {
     Window wjunk;
     Window *children;
@@ -1594,9 +1599,9 @@
     }
 
     if (topframeclient != NULL)
-	ClientSetFocus(topframeclient, True, time);
+	ClientSetFocus(topframeclient, True, timestamp);
     else
-	NoFocusTakeFocus(dpy, time, scrinfo);
+	NoFocusTakeFocus(dpy, timestamp, scrinfo);
 
     XFree((char *) children);
 }
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/client.h xview-3.2p1.4/clients/olvwm-4.1/client.h
--- xview-3.2p1.4.orig/clients/olvwm-4.1/client.h	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/client.h	2013-01-07 12:50:33.668730000 +0100
@@ -0,0 +1,78 @@
+#ifndef _OLWM_CLIENT_H
+#define _OLWM_CLIENT_H
+
+#ifdef __STDC__
+void ClientActivate(Display *dpy, Client *cli, Time timestamp);
+void ClientBack(Client *cli);
+void ClientConfigure(Client *cli, WinGeneric *win, XConfigureRequestEvent *pxcre);
+void ClientDefaultWindowState(Display *dpy);
+void ClientDistributeProperty(Client *cli, XPropertyEvent *event);
+void ClientFlashOwner(Client *cli);
+void ClientFocusTopmost(Display *dpy, ScreenInfo *scrinfo, Time timestamp);
+void ClientFront(Client *cli);
+void ClientFullRestoreSizeToggle(Client *cli, Time timestamp);
+Client *ClientGetLastCurrent(void);
+void ClientGetWindowState(Client *cli);
+void *ClientInBox(Client *cli, ClientInBoxClosure *cclose);
+void ClientInhibitFocus(Bool inhibit);
+void *ClientKill(Client *cli, Bool pforce);
+void ClientLowerTransients(Client *cli);
+void ClientMove(Client *cli, XEvent *trigger);
+void ClientOpenCloseToggle(Client *cli, Time timestamp);
+void ClientProcessDragDropInterest(Client *cli, int state);
+Client *ClientRaiseTransients(Client *cli);
+void ClientRefresh(Client *cli);
+void ClientResize(Client *cli, XEvent *trigger, WhichResize which, void (*callback)(), void *cbarg);
+void ClientSetCurrent(Client *cli);
+void ClientSetFocus(Client *cli, Bool sendTF, Time evtime);
+void ClientSetInstanceVars(Client *cli);
+void ClientSetWindowState(Client *cli);
+void ClientSetWMState(Client *cli, WMState wmState);
+void ClientStickUnstickToggle(Client *cli);
+Bool ClientTogglePin(Client *cli);
+void ClientToggleStacking(Client *cli);
+void ClientUpdateBusy(Client *cli, XPropertyEvent *event);
+void ClientUpdateDragDropInterest(Client *cli, XPropertyEvent *event);
+void DestroyClient(Client *cli);
+void DestroyPinnedMenuClients(void);
+void InitClients(Display *dpy);
+void VisitPinnedMenuClients(void (*pproc)(), void *extra);
+#else
+void ClientActivate();
+void ClientBack();
+void ClientConfigure();
+void ClientDefaultWindowState();
+void ClientDistributeProperty();
+void ClientFlashOwner();
+void ClientFocusTopmost();
+void ClientFront();
+void ClientFullRestoreSizeToggle();
+Client *ClientGetLastCurrent();
+void ClientGetWindowState();
+void *ClientInBox();
+void ClientInhibitFocus();
+void *ClientKill();
+void ClientLowerTransients();
+void ClientMove();
+void ClientOpenCloseToggle();
+void ClientProcessDragDropInterest();
+Client *ClientRaiseTransients();
+void ClientRefresh();
+void ClientResize();
+void ClientSetCurrent();
+void ClientSetFocus();
+void ClientSetInstanceVars();
+void ClientSetWindowState();
+void ClientSetWMState();
+void ClientStickUnstickToggle();
+Bool ClientTogglePin();
+void ClientToggleStacking();
+void ClientUpdateBusy();
+void ClientUpdateDragDropInterest();
+void DestroyClient();
+void DestroyPinnedMenuClients();
+void InitClients();
+void VisitPinnedMenuClients();
+#endif
+
+#endif
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/evbind.c xview-3.2p1.4/clients/olvwm-4.1/evbind.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/evbind.c	2013-01-07 12:36:43.172431000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/evbind.c	2013-01-07 12:50:33.705879000 +0100
@@ -38,6 +38,8 @@
 #include "kbdfuncs.h"
 #include "resources.h"
 #include "error.h"
+#include "virtual.h"
+#include "evbind.h"
 
 
 /* ===== externs ========================================================== */
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/evbind.h xview-3.2p1.4/clients/olvwm-4.1/evbind.h
--- xview-3.2p1.4.orig/clients/olvwm-4.1/evbind.h	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/evbind.h	2013-01-07 12:50:33.735409000 +0100
@@ -0,0 +1,22 @@
+#ifndef _OLWM_EVBIND_H
+#define _OLWM_EVBIND_H
+
+#ifdef __STDC__
+#include <X11/Intrinsic.h>
+#endif
+
+#ifdef __STDC__
+void SetProgKeys(Display *dpy, KeySym start_sym, KeySym end_sym, unsigned long modstate, Boolean off);
+void GrabVKeys(Display *dpy, Bool grab, Bool virtual_only);
+SemanticAction FindKeyboardAction(Display *dpy, XEvent *event);
+void RefreshKeyGrabsFile(Display *dpy, XrmDatabase rdb, char *file);
+SemanticAction ResolveMouseBinding(Display *dpy, XEvent *pevent, unsigned long ignoremask);
+#else
+void SetProgKeys();
+void GrabVKeys();
+SemanticAction FindKeyboardAction();
+void RefreshKeyGrabsFile();
+SemanticAction ResolveMouseBinding();
+#endif
+
+#endif
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/gif.c xview-3.2p1.4/clients/olvwm-4.1/gif.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/gif.c	2013-01-07 12:36:44.978539000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/gif.c	2013-01-07 12:55:40.238678000 +0100
@@ -10,6 +10,7 @@
 
 
 #include <stdio.h>
+#include <string.h>		/* strncmp() */
 #include <X11/X.h>
 #include <X11/Xatom.h>
 #include <X11/Xlib.h>
@@ -17,7 +18,14 @@
 #include <X11/keysym.h>
 #include <X11/keysymdef.h>
 #include <X11/XWDFile.h>
+#include "i18n.h"
+#include <olgx/olgx.h>
 #include "mem.h"
+#include "olwm.h"
+#include "ollocale.h"
+#include "globals.h"
+#include "screen.h"
+#include "pixmap.h"
 
 
 #define MAXCOLORMAPSIZE         256
@@ -56,10 +64,17 @@
 	int     disposal;
 } Gif89 = { -1, -1, -1, 0 };
 
-static XImage* ReadImage();
-static int ReadColorMap(FILE *fd, int number, XColor *buffer);
+#ifdef __STDC__
 static int DoExtension(FILE *fd, int label);
-static int GetDataBlock(FILE *fd, unsigned char *buf);
+static XImage* ReadImage(Display *dpy, FILE *fd, int len, int height, XColor *cmap, int interlace, int ignore);
+static int ReadColorMap(FILE *fd, int number, XColor *buffer);
+static int GetDataBlock(FILE *fd, unsigned char  *buf);
+#else
+static int DoExtension();
+static XImage* ReadImage();
+static int ReadColorMap();
+static int GetDataBlock();
+#endif
 
 XImage *ReadGIF(dpy, fd, pNcolors, pColors)
 Display *dpy;
@@ -84,12 +99,12 @@
 		return NULL;
 	}
 
-	if (strncmp(buf,"GIF",3) != 0)
+	if (strncmp((char *)buf,"GIF",3) != 0)
 	{
 		return NULL;
 	}
 
-	strncpy(version, buf + 3, 3);
+	strncpy(version, (char *)buf + 3, 3);
 	version[3] = '\0';
 
 	if ((strcmp(version, "87a") != 0) && (strcmp(version, "89a") != 0))
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/info.c xview-3.2p1.4/clients/olvwm-4.1/info.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/info.c	1994-01-13 22:36:07.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/info.c	2013-01-07 12:50:33.824785000 +0100
@@ -26,6 +26,7 @@
 #include "st.h"
 #include "mem.h"
 #include "error.h"
+#include "info.h"
 
 
 st_table	*wiHashTable;
@@ -72,7 +73,7 @@
 		ErrorGeneral(
 		  GetString("Tried to duplicate-register a window -- bailing"));
 	}
-	st_insert(wiHashTable, (int)info->core.self, (char *)info);
+	st_insert(wiHashTable, (char *)info->core.self, (char *)info);
 }
 
 /*
@@ -89,7 +90,7 @@
 	Window  *tmpWinPtr = &tmpWin;
 	Bool	ret;
 
-	ret = st_delete(wiHashTable, (char *)tmpWinPtr, (char *)&oldInfo);
+	ret = st_delete(wiHashTable, (char **)tmpWinPtr, (char **)&oldInfo);
 	if (oldInfo)
 	    VUninstallInfo(oldInfo->core.virtual);
 	return ret;
@@ -106,7 +107,7 @@
 {
 	WinGeneric *winInfo = NULL;
 
-	st_lookup(wiHashTable, win, &winInfo);
+	st_lookup(wiHashTable, (char *)win, (char **)&winInfo);
 	return winInfo;
 }
 
@@ -127,7 +128,7 @@
 {
 	if (VGetInfo(info->core.virtual) != NULL)
 	    ErrorGeneral(gettext("Tried to duplicate register a virtual window"));
-	st_insert(vHashTable, (int) info->core.virtual, (char *) info);
+	st_insert(vHashTable, (char *)info->core.virtual, (char *) info);
 }
 
 /*
@@ -143,7 +144,7 @@
 	Window	tmpWin = win;
 	Window  *tmpWinPtr = &tmpWin;
 
-	return st_delete(vHashTable, (char *)tmpWinPtr, (char *)&oldInfo);
+	return st_delete(vHashTable, (char **)tmpWinPtr, (char **)&oldInfo);
 }
 
 WinGeneric *
@@ -152,6 +153,6 @@
 {
     WinGeneric	*winInfo = NULL;
 
-    st_lookup(vHashTable, win, &winInfo);
+    st_lookup(vHashTable, (char *)win, (char **)&winInfo);
     return winInfo;
 }
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/info.h xview-3.2p1.4/clients/olvwm-4.1/info.h
--- xview-3.2p1.4.orig/clients/olvwm-4.1/info.h	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/info.h	2013-01-07 12:50:33.843819000 +0100
@@ -0,0 +1,10 @@
+#ifndef _OLWM_INFO_H
+#define _OLWM_INFO_H
+
+#ifdef __STDC__
+Bool VUninstallInfo(Window win);
+#else
+Bool VUninstallInfo();
+#endif
+
+#endif
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/kbdfuncs.c xview-3.2p1.4/clients/olvwm-4.1/kbdfuncs.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/kbdfuncs.c	1994-01-13 22:36:08.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/kbdfuncs.c	2013-01-07 12:50:33.861230000 +0100
@@ -32,6 +32,11 @@
 #include "globals.h"
 #include "group.h"
 #include "resources.h"
+#include "client.h"
+#include "virtual.h"
+#include "usermenu.h"
+#include "states.h"
+#include "services.h"
 
 /*
  * Externals
@@ -42,6 +47,8 @@
 extern Client *ClientRaiseTransients();
 extern void ClientSetCurrent();
 
+WinGeneric * lookupWindow();
+
 /* ===== private functions ================================================ */
 
 
@@ -524,7 +531,7 @@
 		(owner = WIGetInfo(cli->transientFor)) != NULL &&
 		owner->core.kind == WIN_PANE &&
 		owner->core.client != NULL) {
-	    LowerWindow(owner->core.client->framewin);
+	    LowerWindow((WinGeneric *)owner->core.client->framewin);
 	    ClientLowerTransients(owner->core.client);
 	} else {
 	    transient = ClientRaiseTransients(cli);
@@ -820,7 +827,7 @@
 
     if (CurrentClient->framewin != NULL &&
 		!(CurrentClient->wmDecors->flags & WMNoDecor))
-	ClientMove(CurrentClient,ke);
+	ClientMove(CurrentClient, (XEvent *)ke);
 }
 
 
@@ -838,7 +845,7 @@
 
     if (CurrentClient->framewin != NULL &&
 		!(CurrentClient->wmDecors->flags & WMNoDecor))
-	ClientResize(CurrentClient, ke, keyevent, NULL, NULL);
+	ClientResize(CurrentClient, (XEvent *)ke, keyevent, NULL, NULL);
 }
 
 
@@ -864,7 +871,7 @@
     XKeyEvent *ke;
 {
     if (ke->type == KeyPress)
-	RootMenuShow(dpy, WIGetInfo(ke->root), ke);
+	RootMenuShow(dpy, WIGetInfo(ke->root), (XEvent *)ke);
 }
 
 
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/kbdfuncs.h xview-3.2p1.4/clients/olvwm-4.1/kbdfuncs.h
--- xview-3.2p1.4.orig/clients/olvwm-4.1/kbdfuncs.h	1994-01-13 22:40:02.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/kbdfuncs.h	2013-01-07 12:50:33.891922000 +0100
@@ -17,8 +17,12 @@
  *
  */
 
-extern void KeyBackFocus();
+#ifdef __STDC__
+extern void KeyBeep(Display *dpy, XKeyEvent *ke);
+#else
 extern void KeyBeep();
+#endif
+extern void KeyBackFocus();
 extern void KeyFocusToPointer();
 extern void KeyRaiseLowerPointer();
 extern void KeyFrontFocus();
@@ -50,7 +54,7 @@
 extern void KeyToggleSticky();         /* Toggle Sticky State */
 extern void KeySaveWorkspace();
 
-extern void KeyMoveVDM();
+extern int KeyMoveVDM();
 extern void AddKeyBinding();
 
 #endif /* _OLWM_KBDFUNCS_H */
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/olvwmrc.y xview-3.2p1.4/clients/olvwm-4.1/olvwmrc.y
--- xview-3.2p1.4.orig/clients/olvwm-4.1/olvwmrc.y	2013-01-07 12:36:41.084688000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/olvwmrc.y	2013-01-07 12:50:33.942622000 +0100
@@ -30,6 +30,11 @@
 #include "kbdfuncs.h"
 #include "globals.h"
 #include "virtual.h"
+#include "client.h"
+#include "error.h"
+#include "resources.h"
+#include "states.h"
+#include "evbind.h"
 
 #define OLVWM_USE_SELECTION	"OLVWM_USE_SELECTION"
 
@@ -917,9 +922,9 @@
 		if (!strcmp(t, OLVWM_USE_SELECTION)) {
 		    if (cli && cli->framewin) {
 		        if (cli->wmState == IconicState)
-			    RaiseWindow(cli->iconwin);
+			    RaiseWindow((WinGeneric *)cli->iconwin);
 		        else if (cli->wmState == NormalState)
-			    RaiseWindow(cli->framewin);
+			    RaiseWindow((WinGeneric *)cli->framewin);
 		    }
 		}
 		else {
@@ -927,9 +932,9 @@
 		    for (c = ListEnum(&l); c != NULL; c = ListEnum(&l))
 			if (findClient(c, t))
 			    if (c->wmState == IconicState)
-			        RaiseWindow(c->iconwin);
+			        RaiseWindow((WinGeneric *)c->iconwin);
 			    else if (c->wmState == NormalState)
-				RaiseWindow(c->framewin);
+				RaiseWindow((WinGeneric *)c->framewin);
 		}
 		t = LookupToken(NULL, ",");
 	    }
@@ -962,9 +967,9 @@
 		if (!strcmp(t, OLVWM_USE_SELECTION)) {
 		    if (cli && cli->framewin) {
 		        if (cli->wmState == IconicState)
-			    LowerWindow(cli->iconwin);
+			    LowerWindow((WinGeneric *)cli->iconwin);
 		        else if (cli->wmState == NormalState)
-			    LowerWindow(cli->framewin);
+			    LowerWindow((WinGeneric *)cli->framewin);
 		    }
 		}
 		else {
@@ -972,9 +977,9 @@
 		    for (c = ListEnum(&l); c != NULL; c = ListEnum(&l))
 			if (findClient(c, t))
 			    if (c->wmState == IconicState)
-			        LowerWindow(c->iconwin);
+			        LowerWindow((WinGeneric *)c->iconwin);
 			    else if (c->wmState == NormalState)
-				LowerWindow(c->framewin);
+				LowerWindow((WinGeneric *)c->framewin);
 		}
 		t = LookupToken(NULL, ",");
 	    }
@@ -1278,6 +1283,7 @@
 static struct stat olvwmBuf;
 static struct stat olvwmOldBuf;
 
+void
 InitOlvwmRC(ldpy, path)
     Display	*ldpy;
     char	*path;
@@ -1303,6 +1309,7 @@
 /*
  * Check to see if olvwmrc has been changed since we last read it
  */
+void
 CheckOlvwmRC(dpy)
     Display *dpy;
 {
@@ -1366,6 +1373,7 @@
     return False;
 }
 
+void
 ReInitOlvwmRC(ldpy, path)
     Display	*ldpy;
     char	*path;
@@ -1386,6 +1394,7 @@
     InitOlvwmRC(ldpy, path);
 }
 
+void
 SearchProgString(dpy, scrInfo, name, inst, wm_class,
 		 frame_x, frame_y, icon_x, icon_y)
     Display	*dpy;
@@ -1416,6 +1425,7 @@
 }
 
 /* ARGSUSED */
+int
 CheckForKeyProg(dpy, ev)
     Display	*dpy;
     XEvent	*ev;
@@ -1551,7 +1561,7 @@
 	if (cli && cli->wmState != NormalState)
 	    StateNormal(cli, TimeFresh());
 	/* Raise */
-	RaiseWindow(cli->framewin);
+	RaiseWindow((WinGeneric *)cli->framewin);
     }
 }
 
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/olwm.h xview-3.2p1.4/clients/olvwm-4.1/olwm.h
--- xview-3.2p1.4.orig/clients/olvwm-4.1/olwm.h	1994-01-13 22:40:04.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/olwm.h	2013-01-07 12:50:33.987891000 +0100
@@ -85,10 +85,21 @@
 
 /* miscellaneous functions */
 extern int ExitOLWM();
+#ifdef __STDC__
+extern void CheckOlvwmRC(Display *dpy);
+extern void *GetWindowProperty(Display *dpy, Window w, Atom property, long long_offset, long long_length, Atom req_type, int req_fmt, unsigned long *nitems, unsigned long *bytes_after);
+extern void InitOlvwmRC(Display *ldpy, char *path);
+extern void ReInitOlvwmRC(Display *ldpy, char *path);
+#else
+extern void CheckOlvwmRC();
 extern void *GetWindowProperty();
+extern void InitOlvwmRC();
+extern void ReInitOlvwmRC();
+#endif
 #ifdef OW_I18N_L4
 extern void parseApplicationLocaleDefaults();
 #endif
+extern void SearchProgString();
 
 /* state functions */
 extern struct _client *StateNew();
@@ -187,7 +198,6 @@
 extern Bool IsSelected();
 extern struct _client *EnumSelections();
 extern Time TimeFresh();
-extern int AddSelection();
 extern Bool RemoveSelection();
 extern Bool ToggleSelection();
 extern void ClearSelections();
@@ -217,4 +227,10 @@
 /* busy windows */
 extern struct _winbusy *MakeBusy();
 
+#ifdef __STDC__
+int CheckForKeyProg(Display *dpy, XEvent *ev);
+#else
+int CheckForKeyProg();
+#endif
+
 #endif /* _OLWM_OLWM_H */
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/pixmap.c xview-3.2p1.4/clients/olvwm-4.1/pixmap.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/pixmap.c	2013-01-07 12:36:41.930594000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/pixmap.c	2013-01-07 12:50:34.102377000 +0100
@@ -43,7 +43,10 @@
 #include "globals.h"
 #include "screen.h"
 #include "mem.h"
+#include "error.h"
+#include "pixmap.h"
 
+void
 _swaplong (bp, n)
     register char *bp;
     register unsigned n;
@@ -174,6 +177,7 @@
       return ret;
 }
 
+void
 FreePixmapColors(dpy, ncolors, colors, colormap)
     Display *dpy;
     int ncolors;
@@ -192,6 +196,7 @@
     }
 }
 
+void
 doPseudo8(dpy, colormap, ncolors, colors, in_image, out_image)
 Display *dpy;
 Colormap *colormap;
@@ -288,6 +293,7 @@
     }
 }
 
+void
 doPseudo24(dpy, colormap, ncolors, colors, in_image, out_image)
 Display *dpy;
 Colormap *colormap;
@@ -309,6 +315,7 @@
     }
 }
 
+void
 doPseudo(dpy, colormap, ncolors, colors, in_image, out_image)
 Display *dpy;
 Colormap *colormap;
@@ -701,7 +708,7 @@
         }
         rval = True;
 FAILURE:
-        if (freeFilename != NULL)
+        if (freeFilename != False)
             MemFree(newname);
         return rval;
 }
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/pixmap.h xview-3.2p1.4/clients/olvwm-4.1/pixmap.h
--- xview-3.2p1.4.orig/clients/olvwm-4.1/pixmap.h	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/pixmap.h	2013-01-07 12:50:34.149509000 +0100
@@ -0,0 +1,22 @@
+#ifndef _OLWM_PIXMAP_H
+#define _OLWM_PIXMAP_H
+
+#ifdef __STDC__
+void FreePixmapColors(Display *dpy, int ncolors, XColor *colors, Colormap *colormap);
+unsigned ImageSize(XImage *image);
+Bool MakePixmap(Display *dpy, ScreenInfo *scrInfo, char *filename, PixInfo *pixinfo);
+void doPseudo8(Display *dpy, Colormap *colormap, int ncolors, XColor *colors, XImage *in_image, XImage *out_image);
+void doPseudo24(Display *dpy, Colormap *colormap, int ncolors, XColor *colors, XImage *in_image, XImage *out_image);
+void doPseudo(Display *dpy, Colormap *colormap, int ncolors, XColor *colors, XImage *in_image, XImage *out_image);
+void _swaplong(char *bp, unsigned n);
+#else
+void FreePixmapColors();
+unsigned ImageSize();
+Bool MakePixmap();
+void doPseudo8();
+void doPseudo24();
+void doPseudo();
+void _swaplong();
+#endif
+
+#endif
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/screen.c xview-3.2p1.4/clients/olvwm-4.1/screen.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/screen.c	2013-01-07 12:36:42.694755000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/screen.c	2013-01-07 17:41:38.107055000 +0100
@@ -47,6 +47,11 @@
 #include "iconimage.h"
 #include "iconmask.h"
 
+#include "client.h"
+#include "pixmap.h"
+#include "usermenu.h"
+#include "screen.h"
+
 /*-------------------------------------------------------------------------
  *      Default Constants
  *-------------------------------------------------------------------------*/
@@ -65,7 +70,6 @@
  *	Global Data
  *-------------------------------------------------------------------------*/
 List	*ScreenInfoList;			/* List of managed screens */
-extern	Bool BoolString();
 
 /*-------------------------------------------------------------------------
  *	Local Data
@@ -153,13 +157,31 @@
 static XrmQuark virtualPixmapColorCQ;
 static XrmQuark virtualPixmapColorIQ;
 
-static updateScreenWorkspaceColor(Display *dpy, ScreenInfo *scrInfo);
-static updateScreenWindowColor(Display *dpy, ScreenInfo *scrInfo);
-static updateScreenForegroundColor(Display *dpy, ScreenInfo *scrInfo);
-static updateScreenBackgroundColor(Display *dpy, ScreenInfo *scrInfo);
-static updateScreenBorderColor(Display *dpy, ScreenInfo *scrInfo);
-static updateScreenInputFocusColor(Display *dpy, ScreenInfo *scrInfo);
-static updateScreenGlyphFont(Display *dpy, ScreenInfo *scrInfo);
+#ifdef __STDC__
+static void updateScreenBackgroundColor(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenBorderColor(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenForegroundColor(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenInputFocusColor(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenTitleFont(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenTextFont(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenButtonFont(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenIconFont(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenGlyphFont(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenWindowColor(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenWorkspaceColor(Display *dpy, ScreenInfo *scrInfo);
+#else
+static void updateScreenBackgroundColor();
+static void updateScreenBorderColor();
+static void updateScreenForegroundColor();
+static void updateScreenInputFocusColor();
+static void updateScreenTitleFont();
+static void updateScreenTextFont();
+static void updateScreenButtonFont();
+static void updateScreenIconFont();
+static void updateScreenGlyphFont();
+static void updateScreenWindowColor();
+static void updateScreenWorkspaceColor();
+#endif
 
 /*-------------------------------------------------------------------------
  *	Local Functions
@@ -410,7 +432,7 @@
 	 * Note: %i converts from hex (if leading "0x"), from octal (if
 	 * leading "0"), otherwise from decimal.
 	 */
-	if (1 == sscanf(buf, "%i", &vtemplate.visualid))
+	if (1 == sscanf(buf, "%li", &vtemplate.visualid))
 	    vinfomask |= VisualIDMask;
     }
 
@@ -521,6 +543,7 @@
 	    (Window *) MemCalloc(GRV.WindowCacheSize, sizeof(Window));
 }
 
+#if 0
 /*
  * Bitmap Search Path
  */
@@ -599,6 +622,7 @@
 
 	return (char *)NULL;
 }
+#endif
 
 /*
  *	makeColor	- alloc a color using colorname or defaultcolor
@@ -1554,7 +1578,7 @@
 	setScreenWindowColor(dpy,scrInfo);
 
 	scrInfo->pixInfo.colors = 0;
-	scrInfo->pixInfo.ncolors = NULL;
+	scrInfo->pixInfo.ncolors = 0;
 	setScreenWorkspaceBackground(dpy,scrInfo);
 
 	SetScreenVirtualForegroundColor(dpy,scrInfo);
@@ -1981,7 +2005,7 @@
 /*
  * updateScreenWorkspaceColor -- change all GC/Ginfo's that use WorkspaceColor
  */
-static
+static void
 updateScreenWorkspaceColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2003,7 +2027,7 @@
 /*
  * updateScreenWindowColor -- change all GC/Ginfo's that use WindowColor
  */
-static
+static void
 updateScreenWindowColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2060,7 +2084,7 @@
 /*
  * updateScreenForegroundColor -- change all GC/Ginfo's that use Foreground
  */
-static
+static void
 updateScreenForegroundColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2093,7 +2117,7 @@
 /*
  * updateScreenBackgroundColor -- change all GC/Ginfo's that use Background
  */
-static
+static void
 updateScreenBackgroundColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2108,7 +2132,7 @@
 /*
  * updateScreenBorderColor -- change all GC/Ginfo's that use Border
  */
-static
+static void
 updateScreenBorderColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2127,6 +2151,7 @@
 /*
  * UpdateScreenVirtualForegroundColor -- change all GC/Ginfo's that use vfg
  */
+void
 UpdateScreenVirtualForegroundColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2145,6 +2170,7 @@
 /*
  * UpdateScreenVirtualBackgroundColor -- change all GC/Ginfo's that use vfg
  */
+void
 UpdateScreenVirtualBackgroundColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2161,6 +2187,7 @@
 /*
  * UpdateScreenVirtualFontColor -- change all GC/Ginfo's that use vfg
  */
+void
 UpdateScreenVirtualFontColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2179,6 +2206,7 @@
 /*
  * UpdateScreenVirtualGridColor -- change all GC/Ginfo's that use vfg
  */
+void
 /* ARGSUSED */
 UpdateScreenVirtualGridColor(dpy,scrInfo)
 	Display		*dpy;
@@ -2193,7 +2221,7 @@
  * updateScreenInputFocusColor -- change all GC/Ginfo's that use vfg
  */
 /* ARGSUSED */
-static
+static void
 updateScreenInputFocusColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2210,6 +2238,7 @@
 			     scrInfo->colorInfo.inputBg0Color, OLGX_SPECIAL);
 }
 
+void
 /* ARGSUSED */
 UpdateScreenVirtualDesktop(dpy,scrInfo)
     Display		*dpy;
@@ -2224,6 +2253,7 @@
     ResizeVDM(scrInfo->vdm, size);
 }
 
+void
 /* ARGSUSED */
 UpdateScreenVirtualIconGeometry(dpy,scrInfo)
     Display		*dpy;
@@ -2238,9 +2268,10 @@
     if (scrInfo->vdm->resources->iconGeometry)
 	free(scrInfo->vdm->resources->iconGeometry);
     scrInfo->vdm->resources->iconGeometry = strdup(geometry);
-    VirtualSetGeometry(scrInfo->vdm->client->iconwin, geometry);
+    VirtualSetGeometry((WinGeneric *)scrInfo->vdm->client->iconwin, geometry);
 }
 
+void
 /* ARGSUSED */
 UpdateScreenVirtualDrawSticky(dpy,scrInfo)
     Display		*dpy;
@@ -2250,6 +2281,7 @@
     VirtualUpdateDrawSticky(scrInfo->vdm->client);
 }
 
+void
 /* ARGSUSED */
 UpdateScreenVirtualScale(dpy,scrInfo)
     Display		*dpy;
@@ -2282,7 +2314,7 @@
 /*
  * updateScreenTitleFont -- change all GC/Ginfo's that use TitleFont
  */
-static
+static void
 updateScreenTitleFont(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2317,7 +2349,7 @@
 /*
  * updateScreenTextFont -- change all GC/Ginfo's that use TextFont
  */
-static
+static void
 /* ARGSUSED */
 updateScreenTextFont(dpy,scrInfo)
 	Display		*dpy;
@@ -2337,7 +2369,7 @@
 /*
  * updateScreenButtonFont -- change all GC/Ginfo's that use ButtonFont
  */
-static
+static void
 /* ARGSUSED */
 updateScreenButtonFont(dpy,scrInfo)
 	Display		*dpy;
@@ -2357,7 +2389,7 @@
 /*
  * updateScreenIconFont -- change all GC/Ginfo's that use IconFont
  */
-static
+static void
 updateScreenIconFont(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2374,7 +2406,7 @@
 /*
  * updateScreenGlyphFont -- change all GC/Ginfo's that use GlyphFont
  */
-static
+static void
 /* ARGSUSED */
 updateScreenGlyphFont(dpy,scrInfo)
 	Display		*dpy;
@@ -2407,6 +2439,7 @@
 /*
  * UpdateScreenVirtualFont -- change all GC/Ginfo's that use VirtualFont
  */
+void
 UpdateScreenVirtualFont(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2434,6 +2467,7 @@
 
 /*
  */
+void
 /* ARGSUSED */
 UpdateScreenVirtualGeometry(dpy,scrInfo)
 	Display		*dpy;
@@ -2449,15 +2483,16 @@
 	if (scrInfo->vdm->resources->geometry)
 	    free(scrInfo->vdm->resources->geometry);
 	scrInfo->vdm->resources->geometry = strdup(geom);
-	VirtualSetGeometry(scrInfo->vdm->client->framewin, geom);
+	VirtualSetGeometry((WinGeneric *)scrInfo->vdm->client->framewin, geom);
 }
 
+void
 UpdateScreenVirtualMap(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
 {
 char		*name;
-XSizeHints	*sizeHints;
+XSizeHints	*sizeHints = NULL;
 PixInfo		*pm;
 long		sizeSet;
 	
@@ -2488,6 +2523,7 @@
 	}
 }
 
+void
 UpdateScreenVirtualPixmapColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2611,7 +2647,7 @@
 	/*
  	 *	Initalize the colormap focus for screen/root
 	 */
-	ColorFocusInit(dpy,scrInfo->rootwin);
+	ColorFocusInit(dpy, (WinGeneric *)scrInfo->rootwin);
 
 	initVDM(dpy, scrInfo, client);
 
@@ -2749,7 +2785,7 @@
 GetFirstScrInfo()
 {
 	ScreenInfo	*si;
-	ScreenInfo	*lowestScrInfo;
+	ScreenInfo	*lowestScrInfo = NULL;
 	List		*l = ScreenInfoList;
 	int		lowestScreen = 99999;	/* REMIND */
 
@@ -2940,7 +2976,7 @@
 /*
  * ReparentScreens - reparents each of the screens window trees
  */
-int
+void
 ReparentScreens(dpy)
 	Display		*dpy;
 {
@@ -2952,7 +2988,7 @@
 	}
 }
 
-int
+void
 CreateScreenWindowMenuInfo(dpy)
 	Display		*dpy;
 {
@@ -2964,7 +3000,7 @@
 	}
 }
 
-int
+void
 DestroyScreenWindowMenuInfo(dpy)
 	Display		*dpy;
 {
@@ -2976,7 +3012,7 @@
 	}
 }
 
-int
+void
 CreateScreenUserMenuInfo(dpy)
 	Display		*dpy;
 {
@@ -2988,7 +3024,7 @@
 	}
 }
 
-int
+void
 DestroyScreenUserMenuInfo(dpy)
 	Display		*dpy;
 {
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/screen.h xview-3.2p1.4/clients/olvwm-4.1/screen.h
--- xview-3.2p1.4.orig/clients/olvwm-4.1/screen.h	1994-01-13 22:40:05.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/screen.h	2013-01-07 12:50:34.253355000 +0100
@@ -170,11 +170,18 @@
 
 #if defined(__STDC__)
 
-extern  void            InitScreens(Display *dpy);
+extern	void		CreateAutoRootMenu(Display *dpy);
+extern	void		CreateAutoRootMenuScreen(Display *dpy, ScreenInfo *si);
+extern	void		CreateScreenUserMenuInfo(Display *dpy);
+extern	void		CreateScreenWindowMenuInfo(Display *dpy);
 extern  void            DestroyScreens(Display *dpy);
+extern	void		DestroyScreenUserMenuInfo(Display *dpy);
+extern	void		DestroyScreenWindowMenuInfo(Display *dpy);
 extern  ScreenInfo      *GetFirstScrInfo(void);
 extern  ScreenInfo      *GetScrInfoOfScreen(int screen);
 extern  ScreenInfo      *GetScrInfoOfRoot(Window root);
+extern  void            InitScreens(Display *dpy);
+extern	void		ReparentScreens(Display *dpy);
 extern  void            SetWorkspaceBackground(Display *dpy);
 extern  void            SetWindowColor(Display *dpy);
 extern  void            SetForegroundColor(Display *dpy);
@@ -191,14 +198,40 @@
 					   XSetWindowAttributes*);
 extern  void            ScreenDestroyWindow(ScreenInfo*, Window);
 extern  void            ScreenUpdateWinCacheSize(Display *dpy);
+extern	void		SetScreenInputFocusColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		SetScreenVirtualBackgroundColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		SetScreenVirtualFontColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		SetScreenVirtualForegroundColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		SetScreenVirtualGridColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		SetScreenVirtualIconColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		SetScreenVirtualPixmapColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualBackgroundColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualDesktop(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualDrawSticky(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualFontColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualForegroundColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualGridColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualIconGeometry(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualScale(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualFont(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualGeometry(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualMap(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualPixmapColor(Display *dpy, ScreenInfo *scrInfo);
 
 #else
 
-extern  void            InitScreens();
+extern	void		CreateAutoRootMenu();
+extern	void		CreateAutoRootMenuScreen();
+extern	void		CreateScreenUserMenuInfo();
+extern	void		CreateScreenWindowMenuInfo();
 extern  void            DestroyScreens();
+extern	void		DestroyScreenUserMenuInfo();
+extern	void		DestroyScreenWindowMenuInfo();
 extern  ScreenInfo      *GetFirstScrInfo();
 extern  ScreenInfo      *GetScrInfoOfScreen();
 extern  ScreenInfo      *GetScrInfoOfRoot();
+extern  void            InitScreens();
+extern	void		ReparentScreens();
 extern  void            SetWorkspaceBackground();
 extern  void            SetWindowColor();
 extern  void            SetForegroundColor();
@@ -213,6 +246,25 @@
 extern  Window          ScreenCreateWindow();
 extern  void            ScreenDestroyWindow();
 extern  void            ScreenUpdateWinCacheSize();
+extern	void		SetScreenInputFocusColor();
+extern	void		SetScreenVirtualBackgroundColor();
+extern	void		SetScreenVirtualFontColor();
+extern	void		SetScreenVirtualForegroundColor();
+extern	void		SetScreenVirtualGridColor();
+extern	void		SetScreenVirtualIconColor();
+extern	void		SetScreenVirtualPixmapColor();
+extern	void		UpdateScreenVirtualBackgroundColor();
+extern	void		UpdateScreenVirtualDesktop();
+extern	void		UpdateScreenVirtualDrawSticky();
+extern	void		UpdateScreenVirtualFontColor();
+extern	void		UpdateScreenVirtualForegroundColor();
+extern	void		UpdateScreenVirtualGridColor();
+extern	void		UpdateScreenVirtualIconGeometry();
+extern	void		UpdateScreenVirtualScale();
+extern	void		UpdateScreenVirtualFont();
+extern	void		UpdateScreenVirtualGeometry();
+extern	void		UpdateScreenVirtualMap();
+extern	void		UpdateScreenVirtualPixmapColor();
 #endif /* STDC */
  
 #endif  /* _OLWM_SCREEN_H */
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/services.c xview-3.2p1.4/clients/olvwm-4.1/services.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/services.c	2013-01-07 12:36:42.529547000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/services.c	2013-01-07 12:50:34.310401000 +0100
@@ -17,6 +17,7 @@
 #include <stdio.h>
 #include <string.h>
 #include <errno.h>
+#include <stdlib.h>		/* exit() */
 #include <sys/time.h>
 #include <sys/types.h>
 #include <sys/stat.h>
@@ -42,6 +43,8 @@
 #include "resources.h"
 #include "error.h"
 #include "dsdm.h"
+#include "client.h"
+#include "services.h"
 
 extern	char		*getenv();
 extern	unsigned int	FindModifierMask();
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/services.h xview-3.2p1.4/clients/olvwm-4.1/services.h
--- xview-3.2p1.4.orig/clients/olvwm-4.1/services.h	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/services.h	2013-01-07 12:50:34.335353000 +0100
@@ -0,0 +1,10 @@
+#ifndef _OLWM_SERVICES_H
+#define _OLWM_SERVICES_H
+
+#ifdef __STDC__
+int SaveWorkspaceFunc(Display *dpy, WinGeneric *winInfo, MenuInfo *menuInfo, int idx);
+#else
+int SaveWorkspaceFunc();
+#endif
+
+#endif
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/st.c xview-3.2p1.4/clients/olvwm-4.1/st.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/st.c	2013-01-07 12:36:40.661147000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/st.c	2013-01-07 17:24:34.204327000 +0100
@@ -11,6 +11,7 @@
  */
 
 #include <stdio.h>
+#include <stdlib.h>			/* free() */
 #include "st.h"
 #include "mem.h"
 
@@ -39,13 +40,17 @@
 
 #define do_hash(key, table) (*table->hash)(key, table->num_bins)
 
-static rehash(st_table *table);
-
 /*#define do_hash(key, table)\
     ((table->hash == ST_PTRHASH) ? (((int) (key) >> 2) % table->num_bins) :\
 	(table->hash == ST_NUMHASH) ? ((int) (key) % table->num_bins) :\
 	(*table->hash)((key), table->num_bins))*/
 
+#ifdef __STDC__
+static void rehash(st_table *table);
+#else
+static void rehash();
+#endif
+
 st_table *st_init_table_with_params(compare, hash, size, density, grow_factor,
 				    reorder_flag)
 int (*compare)();
@@ -80,6 +85,7 @@
 				     ST_DEFAULT_REORDER_FLAG);
 }
 			    
+void
 st_free_table(table)
 st_table *table;
 {
@@ -118,6 +124,7 @@
     }\
 }
 	
+int
 st_lookup(table, key, value)
 st_table *table;
 register char *key;
@@ -154,6 +161,7 @@
     table->num_entries++;\
 }
 
+int
 st_insert(table, key, value)
 register st_table *table;
 register char *key;
@@ -176,6 +184,7 @@
     }
 }
 
+void
 st_add_direct(table, key, value)
 st_table *table;
 char *key;
@@ -188,6 +197,7 @@
     ADD_DIRECT(table, key, value, hash_val, new);
 }
 
+int
 st_find_or_add(table, key, slot)
 st_table *table;
 char *key;
@@ -210,7 +220,7 @@
     }
 }
 
-static rehash(table)
+static void rehash(table)
 register st_table *table;
 {
     register st_table_entry *ptr, *next, **old_bins = table->bins;
@@ -281,6 +291,7 @@
     return new_table;
 }
 
+int
 st_delete(table, key, value)
 register st_table *table;
 register char **key;
@@ -322,6 +333,7 @@
     return 0;
 }
 
+void
 st_foreach(table, func, arg)
 st_table *table;
 enum st_retval (*func)();
@@ -356,6 +368,7 @@
     }
 }
 
+int
 st_strhash(string, modulus)
 register char *string;
 int modulus;
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/st.h xview-3.2p1.4/clients/olvwm-4.1/st.h
--- xview-3.2p1.4.orig/clients/olvwm-4.1/st.h	2013-01-07 12:36:45.066895000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/st.h	2013-01-07 12:50:34.390255000 +0100
@@ -40,9 +40,29 @@
 
 enum st_retval {ST_CONTINUE, ST_STOP, ST_DELETE};
 
-int st_delete(), st_insert(), st_foreach(), st_free_table();
-int st_lookup(), st_find_or_add(), st_add_direct();
-st_table *st_init_table(), *st_init_table_with_params();
+#ifdef __STDC__
+int st_delete(st_table *table, char **key, char **value);
+int st_find_or_add(st_table *table, char *key, char ***slot);
+st_table *st_init_table(int (*compare)(), int (*hash)());
+st_table *st_init_table_with_params(int (*compare)(), int (*hash)(), int size, int density, double grow_factor, int reorder_flag);
+void st_free_table(st_table *table);
+int st_insert(st_table *table, char *key, char *value);
+int st_lookup(st_table *table, char *key, char **value);
+void st_add_direct(st_table *table, char *key, char *value);
+void st_foreach(st_table *table, enum st_retval (*func)(), char *arg);
+int st_strhash(char *string, int modulus);
+#else
+int st_delete();
+int st_find_or_add();
+st_table *st_init_table();
+st_table *st_init_table_with_params();
+void st_free_table();
+int st_insert();
+int st_lookup();
+void st_add_direct();
+void st_foreach();
+int st_strhash();
+#endif
 
 #ifdef NOT
 #define ST_NUMCMP	((int (*)()) 0)
@@ -62,6 +82,4 @@
 #define ST_DEFAULT_GROW_FACTOR 2.0
 #define ST_DEFAULT_REORDER_FLAG 0
 
-int st_strhash();
-
 #endif /* ST_INCLUDED */
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/states.c xview-3.2p1.4/clients/olvwm-4.1/states.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/states.c	1996-11-10 15:14:05.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/states.c	2013-01-07 12:50:34.488501000 +0100
@@ -37,6 +37,10 @@
 #include "globals.h"
 #include "properties.h"
 #include "virtual.h"
+#include "client.h"
+#include "slots.h"
+#include "states.h"
+#include "evbind.h"
 
 /***************************************************************************
 * global data
@@ -74,7 +78,6 @@
 extern	void	IconPaneSetPixmap();
 extern	void	IconPaneSetMask();
 
-static void	checkGroupBinding();
 
 /***************************************************************************
 * private data
@@ -156,6 +159,30 @@
 } minimalclosure;
 
 
+/*
+ * Check to see if a given focus action requires any change to the
+ * key bindings
+ */
+
+typedef struct {
+    List **list;
+    KeySym start_sym;
+    KeySym end_sym;
+    unsigned int modstate;
+    Boolean  state;
+    char *desc;
+} FocusClosure;
+
+
+#ifdef __STDC__
+static void	checkGroupBinding(Display *dpy, minimalclosure *mc, Boolean focus, FocusClosure *fcl);
+static void	promoteDependentFollowers(Window window, Window groupid);
+#else
+static void	checkGroupBinding();
+static void	promoteDependentFollowers();
+#endif
+
+
 /***************************************************************************
 * private functions
 ***************************************************************************/
@@ -424,6 +451,7 @@
 	    !(GRV.PPositionCompat && paneAttr->x <= 1 && paneAttr->y <= 1));
 }
 
+#if 0
 /*
  * Return an indication of whether this frame would be visible on the screen
  * if it were mapped at the given location.  Visibility is defined as having
@@ -452,6 +480,7 @@
 	    x + (int) winFrame->core.width >= Resize_width &&
 	    y + (int) winFrame->core.height >= Resize_height);
 }
+#endif
 
 
 /*
@@ -514,7 +543,7 @@
 	else
 	    DrawIconToWindowLines(cli->dpy, winIcon, cli->framewin);
 
-	UnmapWindow(cli->framewin);
+	UnmapWindow((WinGeneric *)cli->framewin);
 	XUnmapWindow(cli->dpy, PANEWINOFCLIENT(cli));
 	cli->framewin->fcore.panewin->pcore.pendingUnmaps++;
 
@@ -534,9 +563,9 @@
 	    DrawIconToWindowLines(cli->dpy, winIcon, cli->framewin);
 
 	if (raise)
-	    RaiseWindow(cli->framewin);
+	    RaiseWindow((WinGeneric *)cli->framewin);
 
-	MapWindow(cli->framewin);
+	MapWindow((WinGeneric *)cli->framewin);
 	XMapRaised(cli->dpy, PANEWINOFCLIENT(cli));
 
 	ClientSetWMState(cli,NormalState);
@@ -679,7 +708,7 @@
  * REMIND we don't update the group data structures while the GroupApply is in
  * progress.  Doing so will corrupt the group data structure.
  */  
-static void *
+static void
 promoteDependentFollowers(window, groupid)
     Window window;
     Window groupid;
@@ -1125,7 +1154,7 @@
 	 * Size and generally configure the frame window tree
 	 */
 	FrameSetPosFromPane(winFrame,paneAttr.x,paneAttr.y);
-	WinCallConfig(dpy, winPane, NULL);
+	WinCallConfig(dpy, (WinGeneric *)winPane, NULL);
 
 	/* 
 	 * Size and generally configure the icon window tree
@@ -1136,12 +1165,12 @@
 	    cli->wmHints->icon_x += cli->scrInfo->vdm->offsetX;
 	    cli->wmHints->icon_y += cli->scrInfo->vdm->offsetY;
 	}
-	WinCallConfig(dpy, winIconPane, NULL);
+	WinCallConfig(dpy, (WinGeneric *)winIconPane, NULL);
 	if (cli->wmHints != NULL && (cli->wmHints->flags & IconPositionHint))
 	    IconSetPos(winIcon,cli->wmHints->icon_x,cli->wmHints->icon_y);
 	else
 	    IconSetPos(winIcon,icon_x,icon_y);
-	WinCallConfig(dpy, winIcon, NULL);
+	WinCallConfig(dpy, (WinGeneric *)winIcon, NULL);
 
         /*
 	 * We manually move the icon pane window, since all the configuration
@@ -1224,14 +1253,14 @@
 	cli->restoreSticky = STICKY_NO_RESTORE;
 	switch ( initstate ) {
 	case NormalState:
-	    MapRaised(winFrame);
+	    MapRaised((WinGeneric *)winFrame);
 	    XMapRaised(dpy, winPane->core.self);
 	    if (!fexisting) {
 		FrameWarpPointer(cli);
 		if (GRV.AutoInputFocus)
 		    ClientSetFocus(cli, True, CurrentTime);
 		if (GRV.AutoColorFocus)
-		    LockColormap(dpy, cli, winPane);
+		    LockColormap(dpy, cli, (WinGeneric *)winPane);
 	    }
 	    break;
 	case IconicState:
@@ -1497,7 +1526,7 @@
  
         case NormalState:
                 /* Unmap the frame and pane. */
-                UnmapWindow(frameInfo);
+                UnmapWindow((WinGeneric *)frameInfo);
                 XUnmapWindow(dpy, PANEWINOFCLIENT(cli));
                 break;
  
@@ -1510,7 +1539,7 @@
         FrameUnwarpPointer(cli);
 
 	/* move the pane and unparent it */
-	FrameUnparentPane(cli, frameInfo, frameInfo->fcore.panewin);
+	FrameUnparentPane(cli, frameInfo, (WinPane *)frameInfo->fcore.panewin);
 
         DestroyClient(cli);
 }
@@ -1543,7 +1572,7 @@
  
         case NormalState:
                 /* Unmap the frame and pane */
-                UnmapWindow(frameInfo);
+                UnmapWindow((WinGeneric *)frameInfo);
                 XUnmapWindow(dpy, PANEWINOFCLIENT(cli));
                 frameInfo->fcore.panewin->pcore.pendingUnmaps++;
                 break;
@@ -1704,20 +1733,6 @@
 }
 
 /*
- * Check to see if a given focus action requires any change to the
- * key bindings
- */
-
-typedef struct {
-    List **list;
-    KeySym start_sym;
-    KeySym end_sym;
-    unsigned int modstate;
-    Boolean  state;
-    char *desc;
-} FocusClosure;
-
-/*
  * Check the binding state for a given key group
  */
 static void
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/states.h xview-3.2p1.4/clients/olvwm-4.1/states.h
--- xview-3.2p1.4.orig/clients/olvwm-4.1/states.h	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/states.h	2013-01-07 12:50:34.521895000 +0100
@@ -0,0 +1,26 @@
+#ifndef _OLWM_STATES_H
+#define _OLWM_STATES_H
+
+#ifdef __STDC__
+#include <X11/Intrinsic.h>
+#endif
+
+#ifdef __STDC__
+void CheckBindingState(WinGenericFrame *win, Boolean focus);
+void StateIconic(Client *cli, Time timestamp);
+void StateInvisible(Client *cli, Time timestamp);
+void StateNormal(Client *cli, Time timestamp);
+void StateUpdateWMHints(Client *cli, XPropertyEvent *event);
+void StateUpdateWMNormalHints(Client *cli, XPropertyEvent *event);
+void StateUpdateWMProtocols(Client *cli, XPropertyEvent *event);
+#else
+void CheckBindingState();
+void StateIconic();
+void StateInvisible();
+void StateNormal();
+void StateUpdateWMHints();
+void StateUpdateWMNormalHints();
+void StateUpdateWMProtocols();
+#endif
+
+#endif
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/usermenu.c xview-3.2p1.4/clients/olvwm-4.1/usermenu.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/usermenu.c	2013-01-07 12:36:45.165127000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/usermenu.c	2013-01-07 12:50:34.541980000 +0100
@@ -96,7 +96,7 @@
 #include <errno.h>
 #include <stdio.h>
 #include <ctype.h>
-#ifdef SYSV
+#if defined(SYSV) || defined(__linux__)
 #include <string.h>
 #else
 #include <strings.h>
@@ -108,6 +108,7 @@
 #include <X11/Xlib.h>
 #include <X11/Xutil.h>
 #include <X11/Xatom.h>
+#include <stdlib.h>		/* atoi() */
 
 #ifdef XPM
 #ifndef	NO_PIXEL_FIX
@@ -137,6 +138,10 @@
 #include "mem.h"
 #include "win.h"
 #include "menu.h"
+#include "pixmap.h"
+#include "usermenu.h"
+#include "client.h"
+#include "services.h"
 
 static char *menuFileName	= "openwin-menu";
 static char *workspaceHelpStub	= "workspace";
@@ -734,7 +739,7 @@
 
     orig = pin;
 
-    *pathname = NULL;
+    *pathname = '\0';
 
     len = strlen(pin);
 
@@ -760,7 +765,7 @@
 		}
 		tmp = pend - pin;
 		memcpy(envbuff, pin, tmp);
-		envbuff[tmp] = NULL;
+		envbuff[tmp] = '\0';
 		pin = pend;
 		len -= tmp;
 		ppw = getpwnam(envbuff);
@@ -810,7 +815,7 @@
 		}
 		tmp = pend - pin;
 		memcpy(envbuff, pin, tmp);
-		envbuff[tmp] = NULL;
+		envbuff[tmp] = '\0';
 		len -= (2 + tmp + 1);
 		pin = pend+1;
 	    } else {
@@ -819,12 +824,12 @@
 		if (pend) {
 		    int tmp = pend - pin;
 		    memcpy(envbuff, pin, tmp);
-		    envbuff[tmp] = NULL;
+		    envbuff[tmp] = '\0';
 		    len -= tmp;
 		    pin = pend;
 		} else {
 		    memcpy(envbuff, pin, len);
-		    envbuff[len] = NULL;
+		    envbuff[len] = '\0';
 		    len = 0;
 		}
 	    }
@@ -868,9 +873,9 @@
 	    --len;
 	}
     }
-    *p = NULL;
+    *p = '\0';
     if (haveslash)
-	pathname[strlen(pathname)-1] = NULL;
+	pathname[strlen(pathname)-1] = '\0';
 
     return MemNewString(pathname);
 }
@@ -2024,6 +2029,7 @@
 	moveHomeButton.label[0].string = GetText("Move Home");
 }
 
+void
 SetWindowMenuTitle(scrInfo)
     ScreenInfo *scrInfo;
 {
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/usermenu.h xview-3.2p1.4/clients/olvwm-4.1/usermenu.h
--- xview-3.2p1.4.orig/clients/olvwm-4.1/usermenu.h	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/usermenu.h	2013-01-07 12:50:34.598454000 +0100
@@ -0,0 +1,24 @@
+#ifndef _OLWM_USERMENU_H
+#define _OLWM_USERMENU_H
+
+#ifdef __STDC__
+void CreateWindowMenuInfo(Display *dpy, ScreenInfo *scrInfo);
+Menu *GetEnabledMenu(Client *cli, Bool flfull, Bool flnotitle, Bool flsticky);
+void RootMenuShow(Display *dpy, WinGeneric *winInfo, XEvent *pEvent);
+void ReInitUserMenu(Display *dpy, ScreenInfo  *scrInfo, Bool forceReRead);
+void SetWindowMenuTitle(ScreenInfo *scrInfo);
+void ShowStandardMenu(WinGenericFrame *win, XEvent *eve, Bool flbutton);
+void ShowStandardMenuSync(WinGenericFrame *win, XEvent *eve, Bool flbutton, void (*proc)(), void *data);
+void WindowMenuCreate(Display *dpy, ScreenInfo *scrInfo);
+#else
+void CreateWindowMenuInfo();
+Menu *GetEnabledMenu();
+void RootMenuShow();
+void ReInitUserMenu();
+void SetWindowMenuTitle();
+void ShowStandardMenu();
+void ShowStandardMenuSync();
+void WindowMenuCreate();
+#endif
+
+#endif
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/virtual.c xview-3.2p1.4/clients/olvwm-4.1/virtual.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/virtual.c	2013-01-07 12:36:44.771357000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/virtual.c	2013-01-07 17:50:02.787736000 +0100
@@ -30,6 +30,13 @@
 #include "vdm.icon"
 #include "vdm.mask"
 
+#include "error.h"
+#include "client.h"
+#include "pixmap.h"
+#include "states.h"
+#include "evbind.h"
+#include "info.h"
+
 #if defined(__linux__) && defined(__GLIBC__) && 0
 /* GNU libc doesn't use INIT, so we have to define sp ourselves. We have to
  * initialize it as well before we call compile(). Maybe this is a bug in
@@ -58,6 +65,12 @@
 #define TRUE 1
 #define FALSE 0
 
+#ifdef __STDC__
+static void regerr(int val);
+#else
+static void regerr(int val);
+#endif
+
 #include <regexp.h>
 #ifdef REGEXP
 regexp *expbuf;
@@ -113,8 +126,14 @@
 
 #define CEIL(a,b)	(((a)+(b)-1)/(b))
 
-static rexMatch(char *string);
-static rexInit(char *pattern);
+#ifdef __STDC__
+static int rexMatch(char *string);
+static void rexInit(char *pattern);
+#else
+static int rexMatch();
+static void rexInit();
+#endif
+
 
 /*
  * ==========================================================================
@@ -661,7 +680,7 @@
  *
  * Event functions for the VDM
  */
-static
+static int
 vdmExpose(dpy, event, winInfo)
     Display	*dpy;
     XEvent	*event;
@@ -676,7 +695,7 @@
 	;	/* empty */
 }
 
-static
+static void
 vdmKeyPress(dpy, ev, winInfo)
     Display	*dpy;
     XEvent	*ev;
@@ -687,7 +706,7 @@
 	    NoFocusEventBeep(dpy, ev, winInfo);
 }
 
-static
+static void
 vdmConfigure(dpy, event, winInfo)
     Display		*dpy;
     XConfigureEvent	*event;
@@ -740,7 +759,7 @@
     }
 }
 
-static
+static int
 vdmNewConfigure(winInfo, pxcre)
     WinVirtual			*winInfo;
     XConfigureRequestEvent	*pxcre;
@@ -774,7 +793,7 @@
     return winInfo->core.dirtyconfig;
 }
 	
-static
+static void
 vdmButtonPress(dpy, event, winInfo)
     Display	*dpy;
     XEvent	*event;
@@ -806,10 +825,12 @@
 	    MenuShowSync(dpy, winInfo, scrInfo->menuTable[MENU_VDM],
 			 event, NULL, NULL, False, False);
 	    break;
+	default:
+	    break;
     }
 }
 
-static
+static void
 /* ARGSUSED */
 vdmRedraw(dpy, win)
     Display	*dpy;
@@ -818,13 +839,13 @@
     drawVDMGrid(win->core.client->dpy, win->core.client->scrInfo->vdm);
 }
 
-static
+static void
 vdmExit()
 {
     fprintf(stderr, "VDM destroy\n");
 }
 
-static
+static void
 vdmButtonRelease()
 {
 /*
@@ -832,7 +853,7 @@
  */
 }
 
-static
+static void
 vdmSetConfigure(dpy, winInfo)
     Display	*dpy;
     WinVirtual	*winInfo;
@@ -845,7 +866,7 @@
 	xwc.y = winInfo->core.y;
 	xwc.width = winInfo->core.width;
 	xwc.height = winInfo->core.height;
-	ConfigureWindow(dpy, winInfo,
+	ConfigureWindow(dpy, (WinGeneric *)winInfo,
 			 winInfo->core.dirtyconfig, &xwc);
 	winInfo->core.dirtyconfig &= ~(CWX|CWY|CWWidth|CWHeight);
     }
@@ -866,7 +887,7 @@
     vdmConfigure(dpy, &ce, winInfo);
 }
 
-static
+static void
 vdmButtonMotion()
 {
 /*
@@ -874,7 +895,7 @@
  */
 }
 
-static
+static int
 vdmNewpos(win, x, y)
     WinVirtual	*win;
     int		x, y;
@@ -890,7 +911,7 @@
     return win->core.dirtyconfig;
 }
 
-static
+static void
 vdmSelect()
 {
 }
@@ -917,7 +938,7 @@
 /*
  * Callback function when VDM frame is mapped
  */
-static
+static void
 vdmSetupFrame(win, cli, frame)
     WinGeneric		*win;
     Client		*cli;
@@ -939,7 +960,7 @@
 				vdmmask_width, vdmmask_height);
 }
 
-static
+static void
 /* ARGSUSED */
 vdmComputeWidth(dpy, event, winInfo)
     Display	*dpy;
@@ -948,7 +969,7 @@
 {
 }
 
-static
+static void
 /* ARGSUSED */
 vdmComputeHeight(dpy, event, winInfo)
     Display	*dpy;
@@ -957,7 +978,7 @@
 {
 }
 
-static
+static void
 vdmProperty(dpy, event, winInfo)
 Display *dpy;
 XPropertyEvent *event;
@@ -1098,7 +1119,7 @@
 
     wmHints->icon_window = XCreateSimpleWindow(dpy,
 				RootWindow(dpy, scrInfo->screen),
-				0, 0, vdm_width, vdm_height, 0, 0,
+				0, 0, vdm_width, vdm_height, 0, 0L,
 				scrInfo->colorInfo.workspaceRootPixel);
 
     classHints = XAllocClassHint();
@@ -1153,7 +1174,7 @@
     w->core.dirtyconfig = CWX | CWY | CWWidth | CWHeight;
     w->core.exposures = NULL;
     w->core.helpstring = "olvwm:VDM";
-    w->core.colormap = NULL;		/* initialized in callback */
+    w->core.colormap = 0;		/* initialized in callback */
 
     w->core.self = XCreateWindow(dpy, RootWindow(dpy, scrInfo->screen),
 	    			sizeHints->x, sizeHints->y,
@@ -1183,9 +1204,9 @@
 					v->client->wmHints->icon_pixmap;
     ((WinIconPane *) v->client->iconwin->fcore.panewin)->iconMask =
 					v->client->wmHints->icon_mask;
-    VirtualSetGeometry(v->client->framewin,
+    VirtualSetGeometry((WinGeneric *)v->client->framewin,
 		       v->client->scrInfo->vdm->resources->geometry);
-    VirtualSetGeometry(v->client->iconwin,
+    VirtualSetGeometry((WinGeneric *)v->client->iconwin,
 		       v->client->scrInfo->vdm->resources->iconGeometry);
 #if 1
 /* If a geometry for the virtual desktop icon was specified, treat the icon as
@@ -1288,6 +1309,7 @@
     MakeVirtualIcon(cli);
 }
 
+void
 MakeVirtualIcon(cli)
     Client	*cli;
 
@@ -1379,6 +1401,7 @@
 /*
  * Dispatch the event to its virtual window if it belongs to a virtual window
  */
+int
 DispatchVirtual(dpy, event)
     Display	*dpy;
     XEvent	*event;
@@ -1469,6 +1492,7 @@
     return True;
 }
 
+int
 MakeSticky(cli, sticky)
     Client	*cli;
     Bool	sticky;
@@ -1482,7 +1506,7 @@
     if (cli->groupid == PANEWINOFCLIENT(cli->scrInfo->vdm->client) && !sticky) {
 	if (GRV.Beep == BeepAlways)
 	    XBell(cli->dpy, 100);
-	return !NULL;
+	return -1;
     }
     cli->sticky = sticky;
     if (sticky && !GRV.VirtualDrawSticky)
@@ -1503,14 +1527,15 @@
 	y = cli->iconwin->core.y;
 	cli->iconwin->core.dirtyconfig |= CWX;
 	IconSetPos(cli->iconwin, x + ICON_HORZBORDER, y + ICON_VERTBORDER);
-	WinCallConfig(cli->dpy, cli->iconwin, NULL);
+	WinCallConfig(cli->dpy, (WinGeneric *)cli->iconwin, NULL);
     }
-    return NULL;
+    return 0;
 }
 
 /*
  * Return true if the given key action should affect the VDM
  */
+int
 KeyMoveVDM(dpy, ev)
     Display *dpy;
     XEvent  *ev;
@@ -1548,6 +1573,7 @@
 /*
  * Update the selection state of the given window's virtual representation
  */
+void
 VirtualSelect(win, sel)
     WinGeneric	*win;
     Bool	sel;
@@ -1563,6 +1589,7 @@
  * is called so that all the coordinates will be correct for startup
  * position
  */
+void
 VirtualSaveDesktops(dpy, x, y)
     Display	*dpy;
     int		x, y;
@@ -1580,6 +1607,7 @@
     }
 }
 
+void
 VirtualRestoreDesktops(dpy)
     Display	*dpy;
 {
@@ -1594,6 +1622,7 @@
     }
 }
 
+void
 VirtualCleanup(dpy)
     Display	*dpy;
 
@@ -1601,6 +1630,7 @@
     VirtualSaveDesktops(dpy, 0, 0);
 }
 
+void
 ResizeVDM(vdm, size)
     VirtualDesktop	*vdm;
     char		*size;
@@ -1679,6 +1709,7 @@
 /*
  * Resize the VDM with the new scale
  */
+void
 RescaleVDM(vdm, scale)
     VirtualDesktop	*vdm;
     int			scale;
@@ -1703,6 +1734,7 @@
     ListApply(ActiveClientList, remakeVirtual, 0);
 }
 
+void
 VirtualUpdateVirtualWindows(cli)
     Client	*cli;
 {
@@ -1710,6 +1742,7 @@
     ClientRefresh(cli);
 }
 
+void
 VirtualUpdateDrawSticky(cli)
     Client	*cli;
 {
@@ -1720,6 +1753,7 @@
 /*
  * Size the VDM with the new geometry
  */
+void
 VirtualSetGeometry(win, geom)
     WinGeneric	*win;
     char	*geom;
@@ -1776,6 +1810,7 @@
  * This move is constrained to a logical screen, even if the grid is
  * off.
  */
+void
 VDMMoveTo(dpy, client, x, y)
     Display	*dpy;
     Client	*client;
@@ -1798,6 +1833,7 @@
  * Goto logical screen passed 
  */
 
+void
 VDMGoto(dpy, client, screen)
     Display	*dpy;
     Client	*client;
@@ -1814,6 +1850,7 @@
 					client->scrInfo->vdm->offsetY);
 }
 
+void
 MoveDesktopFunc(dpy, wininfo, menuinfo, btn)
     Display	*dpy;
     WinGeneric	*wininfo;
@@ -1844,6 +1881,7 @@
  * X window and its virtual representation.
  */
 
+void
 MapWindow(win)
     WinGeneric	*win;
 {
@@ -1853,9 +1891,10 @@
     if (GRV.VirtualDrawSticky || !win->core.client->sticky)
         XMapWindow(win->core.client->dpy, win->core.virtual);
     if (GRV.VirtualRaiseVDM && win->core.client->scrInfo->vdm->client)
-	RaiseWindow(win->core.client->scrInfo->vdm->client->framewin);
+	RaiseWindow((WinGeneric *)win->core.client->scrInfo->vdm->client->framewin);
 }
 
+void
 UnmapWindow(win)
     WinGeneric	*win;
 {
@@ -1864,6 +1903,7 @@
         XUnmapWindow(win->core.client->dpy, win->core.virtual);
 }
 
+void
 MapRaised(win)
     WinGeneric	*win;
 {
@@ -1873,9 +1913,10 @@
     if (GRV.VirtualDrawSticky || !win->core.client->sticky)
         XMapRaised(win->core.client->dpy, win->core.virtual);
     if (GRV.VirtualRaiseVDM && win->core.client->scrInfo->vdm->client)
-	RaiseWindow(win->core.client->scrInfo->vdm->client->framewin);
+	RaiseWindow((WinGeneric *)win->core.client->scrInfo->vdm->client->framewin);
 }
 
+void
 RaiseWindow(win)
     WinGeneric	*win;
 {
@@ -1885,18 +1926,20 @@
 	win->core.client->scrInfo->vdm->client &&
 	win->core.client->scrInfo->vdm->client &&
   win->core.self != win->core.client->scrInfo->vdm->client->framewin->core.self)
-	RaiseWindow(win->core.client->scrInfo->vdm->client->framewin);
+	RaiseWindow((WinGeneric *)win->core.client->scrInfo->vdm->client->framewin);
 }
 
+void
 LowerWindow(win)
     WinGeneric	*win;
 {
     XLowerWindow(win->core.client->dpy, win->core.self);
     XLowerWindow(win->core.client->dpy, win->core.virtual);
     if (GRV.VirtualRaiseVDM)
-	RaiseWindow(win->core.client->scrInfo->vdm->client->framewin);
+	RaiseWindow((WinGeneric *)win->core.client->scrInfo->vdm->client->framewin);
 }
 
+void
 DestroyWindow(win)
     WinGeneric	*win;
 {
@@ -1906,6 +1949,7 @@
 	XDestroyWindow(win->core.client->dpy, win->core.virtual);
 }
 
+void
 DeleteProperty(dpy, win, atom)
     Display		*dpy;
     WinGenericFrame	*win;
@@ -1917,6 +1961,7 @@
 	XDeleteProperty(dpy, win->core.virtual, atom);
 }
 
+void
 ChangeProperty(dpy, win, property, type, format, mode, data, nelements)
    Display		*dpy;
    WinGenericFrame	*win;
@@ -1933,6 +1978,7 @@
 		    mode, data, nelements);
 }
 
+void
 ConfigureWindow(dpy, win, mask, values)
     Display	*dpy;
     WinGeneric	*win;
@@ -1986,7 +2032,7 @@
     }
     XConfigureWindow(dpy, win->core.virtual, mask, values);
     if (GRV.VirtualRaiseVDM)
-	RaiseWindow(vdm->client->framewin);
+	RaiseWindow((WinGeneric *)vdm->client->framewin);
 }
 
 /*
@@ -2007,6 +2053,7 @@
  * Menu generation function for DIRMENU
  *
  */
+void
 /* ARGSUSED */
 GenDirMenuFunc(dpy, menuInfo, bindex, cache, winInfo, depth)
     Display	*dpy;
@@ -2148,7 +2195,7 @@
 
 static char expbuf[256];
 
-static
+static int
 rexMatch(string)
     char *string;
 {
@@ -2159,7 +2206,7 @@
 #endif
 }
 
-static
+static void
 rexInit(pattern)
     char *pattern;
 {
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/virtual.h xview-3.2p1.4/clients/olvwm-4.1/virtual.h
--- xview-3.2p1.4.orig/clients/olvwm-4.1/virtual.h	1994-01-13 22:40:06.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/virtual.h	2013-01-07 12:50:34.695363000 +0100
@@ -110,4 +110,60 @@
     double	delta_x, delta_y;
 };
 
+#ifdef __STDC__
+void ChangeProperty(Display *dpy, WinGenericFrame *win, Atom property, Atom type, int format, int mode, unsigned char *data, int nelements);
+void ConfigureWindow(Display *dpy, WinGeneric *win, int mask, XWindowChanges *values);
+void DeleteProperty(Display *dpy, WinGenericFrame *win, Atom atom);
+void DestroyVDM(Display *dpy, VirtualDesktop *vdm, Colormap *cm);
+int DispatchVirtual(Display *dpy, XEvent *event);
+int KeyMoveVDM(Display *dpy, XEvent *ev);
+void LowerWindow(WinGeneric *win);
+void MakeVDM(Display *dpy, ScreenInfo *scrInfo, Client *client, VirtualResources *rsc);
+void MakeVirtualIcon(Client *cli);
+void MakeVirtual(Client *cli);
+int MakeSticky(Client *cli, Bool sticky);
+void MapWindow(WinGeneric *win);
+void UnmapWindow(WinGeneric *win);
+void MapRaised(WinGeneric *win);
+void RaiseWindow(WinGeneric *win);
+void RedrawVDM(VirtualDesktop *vdm);
+void RescaleVDM(VirtualDesktop *vdm, int scale);
+void ResizeVDM(VirtualDesktop *vdm, char *size);
+void SetWName(Display *dpy, VirtualDesktop *vdm);
+void VDMGoto(Display *dpy, Client *client, int screen);
+void VDMMoveTo(Display *dpy, Client *client, int x, int y);
+void VirtualCleanup(Display *dpy);
+void VirtualSelect(WinGeneric *win, Bool sel);
+void VirtualSetGeometry(WinGeneric *win, char *geom);
+void VirtualUpdateDrawSticky(Client *cli);
+void VirtualUpdateVirtualWindows(Client *cli);
+#else
+void ChangeProperty();
+void ConfigureWindow();
+void DeleteProperty();
+void DestroyVDM();
+int DispatchVirtual();
+int KeyMoveVDM();
+void LowerWindow();
+void MakeVDM();
+void MakeVirtualIcon();
+void MakeVirtual();
+int MakeSticky();
+void MapWindow();
+void UnmapWindow();
+void MapRaised();
+void RaiseWindow();
+void RedrawVDM();
+void RescaleVDM();
+void ResizeVDM();
+void SetWName();
+void VDMGoto();
+void VDMMoveTo();
+void VirtualCleanup();
+void VirtualSelect();
+void VirtualSetGeometry();
+void VirtualUpdateDrawSticky();
+void VirtualUpdateVirtualWindows();
+#endif
+
 #endif	/* _OLWM_VIRTUAL_H */
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/win.h xview-3.2p1.4/clients/olvwm-4.1/win.h
--- xview-3.2p1.4.orig/clients/olvwm-4.1/win.h	1994-01-13 22:40:06.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/win.h	2013-01-07 12:50:34.721533000 +0100
@@ -556,10 +556,6 @@
 extern WinGeneric *VGetInfo();
 extern void WIApply();
 
-/* window functions */
-extern void WinAddChild();
-extern void WinRemoveChild();
-
 /* Useful client macros */
 #define PANEOFCLIENT(cli) ((cli)->framewin->fcore.panewin)
 #define PANEWINOFCLIENT(cli) (PANEOFCLIENT(cli)->core.self)
@@ -573,4 +569,57 @@
 
 extern Client *CurrentClient;
 
+#ifdef __STDC__
+void ColorFocusInit(Display *dpy, WinGeneric *root);
+void FrameFlashTitleBar(WinPaneFrame *winInfo);
+void FrameMinSize(WinPaneFrame *frame, int *width, int *height);
+void FrameSetupGrabs(Client *cli, Window win, Bool activate);
+void FrameUnparentPane(Client *cli, WinPaneFrame *winFrame, WinPane *winPane);
+void FrameUpdateShape(Client *cli, WinPaneFrame *winInfo);
+void FrameFlashTitleBar(WinPaneFrame *winInfo);
+void HandleHelpKey(Display *dpy, XEvent *pEvent);
+void IconUpdateName(Client *cli, XPropertyEvent *event);
+void LockColormap(Display *dpy, Client *cli, WinGeneric *winInfo);
+/*WinPinMenu *MakePinMenu(Display *dpy, WinGeneric *winInfo, MenuInfo *origMenuInfo);*/
+void MenuInit(Display *dpy);
+int PinMenuInit(Display *dpy);
+void PushPinInit(Display *dpy);
+void PushPinSetPinState(Display *dpy, WinPushPin *winInfo, int newState, Bool sendDelete);
+void PushPinTogglePinState(Display *dpy, WinPushPin *winInfo, Bool sendDelete);
+void ResizeInit(Display *dpy);
+void RootInit(Display *dpy);
+void WinAddChild(WinGeneric *parent, WinGeneric *child);
+void WinCallConfig(Display *dpy, WinGeneric *win, XConfigureRequestEvent *pxcre);
+void WinCallDestroy(Client *cli);
+void WinCallDraw(WinGeneric *win);
+void WinRemoveChild(WinGeneric *parent, WinGeneric *child);
+void WinRootPos(WinGeneric *win, int *px, int *py);
+void WinCallSelect(Client *cli, Bool sel);
+#else
+void ColorFocusInit();
+void FrameFlashTitleBar();
+void FrameMinSize();
+void FrameSetupGrabs();
+void FrameUnparentPane();
+void FrameUpdateShape();
+void HandleHelpKey();
+void IconUpdateName();
+void LockColormap();
+/*WinPinMenu *MakePinMenu();*/
+void MenuInit();
+int PinMenuInit();
+void PushPinInit();
+void PushPinSetPinState();
+void PushPinTogglePinState();
+void ResizeInit();
+void RootInit();
+void WinAddChild();
+void WinCallConfig();
+void WinCallDestroy();
+void WinCallDraw();
+void WinRemoveChild();
+void WinRootPos();
+void WinCallSelect();
+#endif
+
 #endif /* _OLWM_WIN_H */
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/winframe.c xview-3.2p1.4/clients/olvwm-4.1/winframe.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/winframe.c	2013-01-07 12:36:41.379103000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/winframe.c	2013-01-07 12:50:34.769172000 +0100
@@ -34,6 +34,9 @@
 #include "globals.h"
 #include "error.h"
 
+#include "client.h"
+#include "states.h"
+
 /***************************************************************************
 * global data
 ***************************************************************************/
@@ -355,7 +358,7 @@
 	Client *cli = frameInfo->core.client;
 	WinPane		*winPane = (WinPane*)frameInfo->fcore.panewin;
 
-	ClientConfigure(cli,winPane,event);
+	ClientConfigure(cli, (WinGeneric *)winPane, (XConfigureRequestEvent *)event);
 }
 
 /*
@@ -404,7 +407,7 @@
 WinPaneFrame *frameInfo;
 XButtonEvent *lastpress;
 {
-	ClientMove(frameInfo->core.client,lastpress);
+	ClientMove(frameInfo->core.client, (XEvent *)lastpress);
 }
 
 /*
@@ -1747,7 +1750,7 @@
 
 	/* Set the new pos/height */
 	(WinFunc(paneInfo,pcore.setsizefunc))(paneInfo,width,height);
-	WinCallConfig(client->dpy,paneInfo,NULL);
+	WinCallConfig(client->dpy, (WinGeneric *)paneInfo, NULL);
 
 	frameInfo->fcore.fullsize = !frameInfo->fcore.fullsize;
 
@@ -1810,15 +1813,15 @@
  * devices.
  */
 void
-FrameAllowEvents(cli, time)
+FrameAllowEvents(cli, timestamp)
     Client *cli;
-    Time time;
+    Time timestamp;
 {
     if (!GRV.FocusFollowsMouse) {
 	switch (cli->focusMode) {
 	case Passive:
 	case LocallyActive:
-	    XAllowEvents(cli->dpy, AsyncBoth, time);
+	    XAllowEvents(cli->dpy, AsyncBoth, timestamp);
 	    break;
 	}
     }
@@ -2251,7 +2254,7 @@
 	{
 	    (WinFunc(win->winBusy,core.destroyfunc))(win->core.client->dpy, win->winBusy);
 	}
-	WinCallDraw(win);
+	WinCallDraw((WinGeneric *)win);
 }
 
 /*
@@ -2301,7 +2304,7 @@
 
 	if (warpParam == NULL) {
 
-	    WinRootPos(frameInfo, &offsetX, &offsetY);
+	    WinRootPos((WinGeneric *)frameInfo, &offsetX, &offsetY);
 
 	    /* warp to the pushpin */
 	    cli->warpInfo.dflButtonX = xposPushPin(gis);
@@ -2318,7 +2321,7 @@
 
 	} else {
 
-	    WinRootPos(paneInfo, &offsetX, &offsetY);
+	    WinRootPos((WinGeneric *)paneInfo, &offsetX, &offsetY);
 
 	    /* save warp destination information */
 	    cli->warpInfo.warpToX = warpParam[0];
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/wingframe.c xview-3.2p1.4/clients/olvwm-4.1/wingframe.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/wingframe.c	1994-01-13 22:36:25.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/wingframe.c	2013-01-07 12:50:34.833637000 +0100
@@ -37,6 +37,9 @@
 #include "globals.h"
 #include "events.h"
 #include "virtual.h"
+#include "client.h"
+#include "selection.h"
+#include "evbind.h"
 
 /***************************************************************************
 * private data
@@ -207,7 +210,7 @@
 		    !(win->core.dirtyconfig &CWStackMode))
 			win->core.dirtyconfig &= ~CWSibling;
 
-                ConfigureWindow(dpy,win,win->core.dirtyconfig,&xwc);
+                ConfigureWindow(dpy, (WinGeneric *)win, win->core.dirtyconfig, &xwc);
 		win->core.dirtyconfig &= ~(CWX|CWY|CWWidth|CWHeight|CWSibling|CWStackMode);
         }
 }
@@ -258,11 +261,11 @@
                 (WinFunc(pane,pcore.setsizefunc))(pane,
                     w-(WinFunc(win,fcore.widthleft))(win)-(WinFunc(win,fcore.widthright))(win),
                     h-(WinFunc(win,fcore.heighttop))(win)-(WinFunc(win,fcore.heightbottom))(win));
-            WinCallConfig(win->core.client->dpy, pane, NULL);
+            WinCallConfig(win->core.client->dpy, (WinGeneric *)pane, NULL);
 	}
 	else
 	{
-            WinCallConfig(win->core.client->dpy, win, NULL);
+            WinCallConfig(win->core.client->dpy, (WinGeneric *)win, NULL);
 	}
 }
 
@@ -337,6 +340,8 @@
                 }
 		currentAction = ACTION_NONE;
 		break;
+	default:
+		break;
 
         }
 }
@@ -456,6 +461,8 @@
 	    if (WinFunc(frameInfo,fcore.menuPress) != NULL)
 		(WinFunc(frameInfo,fcore.menuPress))(dpy, event, frameInfo);
             break;
+	default:
+	    break;
 
         }  /*  End switch on button pressed */
 }
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/winicon.c xview-3.2p1.4/clients/olvwm-4.1/winicon.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/winicon.c	2013-01-07 12:36:41.745478000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/winicon.c	2013-01-07 12:50:34.883115000 +0100
@@ -33,6 +33,10 @@
 #include "globals.h"
 #include "slots.h"
 #include "group.h"
+#include "client.h"
+#include "virtual.h"
+#include "selection.h"
+#include "states.h"
 
 extern 	Bool	PropGetWMName();
 extern 	Bool	PropGetWMIconName();
@@ -56,6 +60,16 @@
 static int heightBottomIcon(WinIconFrame *win);
 static int widthBothIcon(WinIconFrame *win);
 
+#ifdef __STDC__
+static int heightBottomIcon(WinIconFrame *win);
+static int heightTopIcon(WinIconFrame *win);
+static int widthBothIcon(WinIconFrame *win);
+#else
+static int heightBottomIcon();
+static int heightTopIcon();
+static int widthBothIcon();
+#endif
+
 /***************************************************************************
 * private event functions
 ***************************************************************************/
@@ -154,7 +168,7 @@
 {
 	SlotFree(iframe);
 	iframe->fManuallyPositioned = True;
-	ClientMove(iframe->core.client,lastpress);
+	ClientMove(iframe->core.client, (XEvent *)lastpress);
 }
 
 
@@ -254,10 +268,10 @@
  * drawIconBorder -- based on the value of select, draw the border for an icon
  */
 static void
-drawIconBorder(dpy, winInfo, select)
+drawIconBorder(dpy, winInfo, bselect)
 Display *dpy;
 WinIconFrame *winInfo;
-Bool    select;
+Bool    bselect;
 {
 	int 	x, y;           /* values for use with */
 	unsigned int width, height;  /* rectangle drawn for border */
@@ -273,7 +287,7 @@
 	 * If 3D is used, give "borderless" icons.  Otherwise, give black and 
 	 * white borders.
 	 */
-	if (select) {
+	if (bselect) {
 	    XDrawRectangle(dpy, w, borderGC,
 			   x, y, width, height );
 	    XDrawRectangle(dpy, w, borderGC,
@@ -319,7 +333,7 @@
               case 0:         /* outermost rectangle */
                       if (Win3D(winInfo))
                       {
-                              if ( select )
+                              if ( bselect )
                                       olgxState = OLGX_INVOKED;
                               else
                                       olgxState = OLGX_NORMAL;
@@ -332,14 +346,14 @@
                       }
                       else
                       {
-                              highlightGC = select
+                              highlightGC = bselect
                                               ? DrawSelectedGC
                                               : DrawBackgroundGC;
                               drawRectangle = True;
                       }
                       break;
               case 1:         /* middle rectangle */
-                      if ( select )
+                      if ( bselect )
                                       highlightGC = DrawSelectedGC;
                       else if (Win3D(winInfo))
                               highlightGC = DrawBackgroundGC;
@@ -351,7 +365,7 @@
                       break;
               case 2:         /* innermost rectangle */
               default:
-                      highlightGC = select ? DrawSelectedGC
+                      highlightGC = bselect ? DrawSelectedGC
                                            : DrawBackgroundGC;
                       drawRectangle = True;
                       break;
@@ -823,7 +837,7 @@
         XChangeSaveSet(cli->dpy, pane->core.self, SetModeInsert);
 #endif
     XMapWindow(cli->dpy, pane->core.self);
-    MapWindow(winIcon);
+    MapWindow((WinGeneric *)winIcon);
 }
 
 
@@ -838,7 +852,7 @@
 {
     WinIconPane *pane = (WinIconPane *)winIcon->fcore.panewin;
 
-    UnmapWindow(winIcon);
+    UnmapWindow((WinGeneric *)winIcon);
     XUnmapWindow(cli->dpy, pane->core.self);
 #ifdef notdef
     /* see winipane.c */
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/winnofoc.c xview-3.2p1.4/clients/olvwm-4.1/winnofoc.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/winnofoc.c	1994-01-13 22:36:27.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/winnofoc.c	2013-01-07 12:50:34.918520000 +0100
@@ -30,6 +30,8 @@
 #include "win.h"
 #include "globals.h"
 #include "selection.h"
+#include "client.h"
+#include "kbdfuncs.h"
 
 extern unsigned int FindModifierMask();
 extern Atom AtomOlwmNoFocusWin;
@@ -262,7 +264,7 @@
                                       ButtonRelease,&dummy))
 	    /*EMPTY*/
             ;
-	KeyBeep(dpy,event);
+	KeyBeep(dpy, (XKeyEvent *)event);
 }
 
 /*
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/winpane.c xview-3.2p1.4/clients/olvwm-4.1/winpane.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/winpane.c	1994-01-13 22:36:27.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/winpane.c	2013-01-07 12:50:34.952739000 +0100
@@ -29,6 +29,9 @@
 #include "olwm.h"
 #include "win.h"
 #include "globals.h"
+#include "virtual.h"
+#include "client.h"
+#include "states.h"
 
 /***************************************************************************
 * global data
@@ -130,7 +133,7 @@
 XEvent	*event;
 WinPane	*winInfo;
 {
-	ClientDistributeProperty(winInfo->core.client,event);
+	ClientDistributeProperty(winInfo->core.client, (XPropertyEvent *)event);
 }
 
 /* 
@@ -238,7 +241,7 @@
 		xwc.y = winInfo->core.y;
 		xwc.width = winInfo->core.width;
 		xwc.height = winInfo->core.height;
-		ConfigureWindow(dpy, winInfo,
+		ConfigureWindow(dpy, (WinGeneric *)winInfo,
 			winInfo->core.dirtyconfig, &xwc);
 		winInfo->core.dirtyconfig &= ~(CWX|CWY|CWWidth|CWHeight);
 	}
@@ -248,7 +251,7 @@
 	ce.serial = 0L;
 	ce.event = winInfo->core.self;
 	ce.window = winInfo->core.self;
-	WinRootPos(winInfo,&ce.x,&ce.y);
+	WinRootPos((WinGeneric *)winInfo, &ce.x, &ce.y);
 	ce.x -= winInfo->pcore.oldBorderWidth;
 	ce.y -= winInfo->pcore.oldBorderWidth;
 	ce.width = winInfo->core.width;
@@ -283,7 +286,7 @@
     if (pxcre == NULL)
 	return win->core.dirtyconfig;
 
-    WinRootPos(winFrame, &oldX, &oldY);
+    WinRootPos((WinGeneric *)winFrame, &oldX, &oldY);
     FrameGetGravityOffset(winFrame, &dx, &dy);
     oldX += dx;
     oldY += dy;
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/winpinmenu.c xview-3.2p1.4/clients/olvwm-4.1/winpinmenu.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/winpinmenu.c	1994-01-13 22:36:28.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/winpinmenu.c	2013-01-07 12:50:34.979967000 +0100
@@ -30,6 +30,7 @@
 #include "win.h"
 #include "menu.h"
 #include "globals.h"
+#include "client.h"
 
 /***************************************************************************
 * global data
@@ -90,12 +91,12 @@
     XEvent		*event;
     WinPinMenu		*winInfo;
 {
-    if (! StartMenuGrabs(dpy, winInfo))
+    if (! StartMenuGrabs(dpy, (WinGeneric *)winInfo))
 	return;
 
     MenuMakeFirst(winInfo->menuInfo, afterMenuShow, winInfo);
 
-    MenuTrack(dpy, event, winInfo, winInfo);
+    MenuTrack(dpy, event, (WinGeneric *)winInfo, (WinGeneric *)winInfo);
 }
 
 
@@ -107,8 +108,8 @@
 {
     MenuMakeFirst(winInfo->menuInfo, afterMenuShow, winInfo);
 
-    if (MenuHandleKeyEvent(dpy, event, winInfo, winInfo)) {
-	if (! StartMenuGrabs(dpy, winInfo))
+    if (MenuHandleKeyEvent(dpy, event, (WinGeneric *)winInfo, (WinGeneric *)winInfo)) {
+	if (! StartMenuGrabs(dpy, (WinGeneric *)winInfo))
 	    return;
     }
 }
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/winpush.c xview-3.2p1.4/clients/olvwm-4.1/winpush.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/winpush.c	1994-01-13 22:36:28.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/winpush.c	2013-01-07 12:50:35.007701000 +0100
@@ -29,6 +29,9 @@
 #include "olwm.h"
 #include "win.h"
 #include "globals.h"
+#include "virtual.h"
+#include "client.h"
+#include "evbind.h"
 
 /***************************************************************************
 * global data
@@ -89,6 +92,8 @@
             pushpinStateAfterPress = winInfo->pushpinin;
 	    currentAction = a;
 	    break;
+	default:
+	    break;
 	}
 }
 
@@ -302,7 +307,7 @@
 	w->core.self = win;
 	w->class = &classPushPin;
 	w->core.kind = WIN_PUSHPIN;
-	WinAddChild(par,w);
+	WinAddChild(par, (WinGeneric *)w);
 	w->core.children = NULL;
 	w->core.client = par->core.client;
 	w->core.x = x;	
@@ -327,7 +332,7 @@
 	/* register the window */
 	WIInstallInfo(w);
 
-        MapRaised(w);
+        MapRaised((WinGeneric *)w);
 
 	return w;
 }
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/winresize.c xview-3.2p1.4/clients/olvwm-4.1/winresize.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/winresize.c	1994-01-13 22:36:28.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/winresize.c	2013-01-07 12:50:35.039417000 +0100
@@ -31,6 +31,9 @@
 #include "win.h"
 #include "globals.h"
 #include "events.h"
+#include "client.h"
+#include "virtual.h"
+#include "evbind.h"
 
 /***************************************************************************
 * global data
@@ -283,7 +286,7 @@
 	w->core.self = win;
 	w->class = &classResize;
 	w->core.kind = WIN_RESIZE;
-	WinAddChild(par,w);
+	WinAddChild(par, (WinGeneric *)w);
 	w->core.children = NULL;
 	w->core.client = par->core.client;
 	w->core.x = x;	
@@ -298,7 +301,7 @@
 	/* register the window */
 	WIInstallInfo(w);
 
-        MapRaised(w);
+        MapRaised((WinGeneric *)w);
 
 	return w;
 }
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.1/winroot.c xview-3.2p1.4/clients/olvwm-4.1/winroot.c
--- xview-3.2p1.4.orig/clients/olvwm-4.1/winroot.c	1994-01-13 22:36:29.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.1/winroot.c	2013-01-07 12:50:35.077063000 +0100
@@ -34,6 +34,13 @@
 #include "events.h"
 #include "virtual.h"
 #include "error.h"
+#include "resources.h"
+#include "kbdfuncs.h"
+#include "usermenu.h"
+#include "client.h"
+#include "usermenu.h"
+#include "selection.h"
+#include "evbind.h"
 
 /***************************************************************************
 * global data
@@ -170,6 +177,7 @@
     	}
 }
 
+#if 0
 static Bool
 matchKeystrokeToSpec(event,spec)
 	XEvent *event;
@@ -179,6 +187,7 @@
 	        (spec->modmask == AnyModifier ||
 	         spec->modmask == event->xkey.state));
 }
+#endif
 
 /***************************************************************************
 * event functions
@@ -197,13 +206,16 @@
 	WinRoot		*winInfo;
 {
         if (pEvent->xcrossing.detail == NotifyNonlinearVirtual)
-            return;
+	    /* FIXME: return value? */
+            return True;
 
 	ColorWindowCrossing(dpy, pEvent, winInfo);
 
 	if (GRV.FocusFollowsMouse)
 	    NoFocusTakeFocus(dpy, pEvent->xcrossing.time,
 			     winInfo->core.client->scrInfo);
+	/* FIXME: return value? */
+	return (int)True;
 }
 
 /* 
@@ -222,14 +234,16 @@
 	if ((clientInfo = WIGetInfo(ConfEvent.window)) == NULL)
 	{
 		/* we don't know about this window, so let it go */
-		ClientConfigure(NULL,NULL,pEvent);
+		ClientConfigure(NULL, NULL, (XConfigureRequestEvent *)pEvent);
 	}
 	else /* OBSOLETE: if (ConfEvent.value_mask & (CWX | CWY | CWWidth | CWHeight)) */
 	{
 		/* configure the window and its frame */
-		ClientConfigure(clientInfo->core.client,clientInfo,pEvent);
+		ClientConfigure(clientInfo->core.client, clientInfo, (XConfigureRequestEvent *)pEvent);
 	}
 	/* REMIND doesn't handle stacking or border width yet */
+	/* FIXME: return value? */
+	return (int)True;
 }
 
 /* 
@@ -248,6 +262,8 @@
 #ifdef GPROF_HOOKS
 	moncontrol(0);
 #endif /* GPROF_HOOKS */
+	/* FIXME: return value? */
+	return (int)True;
 }
 
 
@@ -291,7 +307,8 @@
 	int			(*selectFunc)();
 
 	if (!pEvent->xmotion.same_screen)
-	    return;
+	    /* FIXME: return value? */
+	    return True;
 
 	/* If the user hasn't moved more than the threshold
 	 * amount, break out of here.  REMIND  Also, if we get a 
@@ -304,9 +321,11 @@
 	     GRV.MoveThreshold) &&
 	    (ABS(pEvent->xmotion.y - winInfo->buttonPressEvent.xbutton.y) < 
 	     GRV.MoveThreshold))
-	    return;
+	    /* FIXME: return value? */
+	    return True;
 	if (pEvent->xmotion.state == 0)
-	   return;
+	   /* FIXME: return value? */
+	   return True;
 	
 	/*
 	 * On Select: Clear existing selected clients and add new ones
@@ -328,6 +347,8 @@
 	if (selectFunc)
 	    TraceRootBox(dpy, winInfo, &(winInfo->buttonPressEvent),
 			     selectInBox, selectFunc);
+	/* FIXME: return value? */
+	return (int)True;
 }
 
 /* 
@@ -343,7 +364,8 @@
 	WinRoot		*winInfo;
 {
 	if (!AllButtonsUp(pEvent))
-	    return;
+	    /* FIXME: return value? */
+	    return True;
 
 	/*
 	 * This only happens if we did NOT get a motion notify
@@ -358,6 +380,8 @@
 	    SelectionTime = pEvent->xbutton.time;
 	}
 	winInfo->currentAction = ACTION_NONE;
+	/* FIXME: return value? */
+	return (int)True;
 }
 		
 /* 
@@ -379,7 +403,7 @@
 
 	if (pEvent->xbutton.state & ModMaskMap[MOD_WMGRAB]) {
 	    /* redistribute to child */
-	    if (pEvent->xbutton.subwindow != NULL &&
+	    if (pEvent->xbutton.subwindow != 0 &&
 		(child = WIGetInfo(pEvent->xbutton.subwindow)) != NULL &&
 		(child->core.kind == WIN_FRAME ||
 		 child->core.kind == WIN_ICON) &&
@@ -389,7 +413,8 @@
 		    pEvent->xbutton.time)))
 	    {
 		PropagatePressEventToChild(dpy, pEvent, child);
-		return;
+		/* FIXME: return value? */
+		return True;
 	    }
 
 	    /*
@@ -406,13 +431,17 @@
 
 	switch (a) {
 	case ACTION_MENU:
-	    	RootMenuShow(dpy, winInfo, pEvent);
+	    	RootMenuShow(dpy, (WinGeneric *)winInfo, pEvent);
 	    	/* FALL THRU */
 	case ACTION_SELECT:
 	case ACTION_ADJUST:
 	    	winInfo->currentAction = a;
 	    	break;
+	default:
+		break;
 	}
+	/* FIXME: return value? */
+	return (int)True;
 }
 
 
@@ -436,7 +465,9 @@
 	    isbound = KeyMoveVDM(dpy, pEvent);
 
 	if (!isbound && pEvent->type == KeyPress)
-	    KeyBeep(dpy,pEvent);
+	    KeyBeep(dpy, (XKeyEvent *)pEvent);
+	/* FIXME: return value? */
+	return (int)True;
 }
 
 /* 
@@ -449,17 +480,20 @@
 	XEvent		*pEvent;
 	WinRoot		*winInfo;
 {
-	unsigned long	nitems, remain;
-	char		*resourceString;
+	/*unsigned long	nitems, remain;*/
+	/*char		*resourceString;*/
 
 	/* make sure that the property was the one we care about and
 	 * changed (as opposed to deleted)
 	 */
 	if ((pEvent->xproperty.atom != XA_RESOURCE_MANAGER) 
 	     || (pEvent->xproperty.state != PropertyNewValue))
-		return;
+		/* FIXME: return value? */
+		return True;
 
 	UpdateGlobals(dpy);
+	/* FIXME: return value? */
+	return True;
 }
 
 /*
@@ -474,6 +508,8 @@
     if (pEvent->xclient.message_type == AtomSunReReadMenuFile) {
 	ReInitAllUserMenus(dpy);
     }
+	/* FIXME: return value? */
+	return True;
 }
 /* 
  * eventUnmapNotify - an unreparented pane is going away
@@ -492,6 +528,8 @@
 	if (wg != NULL) {
 		StateWithdrawn(wg->core.client, TimeFresh());
 	}
+	/* FIXME: return value? */
+	return True;
 }
 
 /*
@@ -512,6 +550,8 @@
 	/* free our data and throw away window */
 	WIUninstallInfo(winInfo->core.self);
 	MemFree(winInfo);
+	/* FIXME: return value? */
+	return True;
 }
 
 /*
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/Imakefile xview-3.2p1.4/clients/olvwm-4.5/Imakefile
--- xview-3.2p1.4.orig/clients/olvwm-4.5/Imakefile	1998-01-13 22:23:54.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.5/Imakefile	2013-01-07 12:55:39.694715000 +0100
@@ -74,11 +74,11 @@
 DEPLIBS = 
 LOCAL_LIBRARIES = $(MORELDFLAGS) $(OLGXLIB) $(XLIB)
 
-HEADERS = cmdstream.h cursors.h debug.h defaults.h dsdm.h environ.h error.h \
-          events.h gettext.h globals.h group.h helpcmd.h i18n.h iconimage.h \
-          iconmask.h kbdfuncs.h list.h mem.h menu.h notice.h olcursor.h \
-          olgx_impl.h ollocale.h olwm.h patchlevel.h properties.h resources.h \
-          screen.h selection.h slots.h st.h virtual.h win.h
+HEADERS = client.h cmdstream.h cursors.h debug.h defaults.h dsdm.h environ.h error.h \
+          evbind.h events.h gettext.h globals.h group.h helpcmd.h i18n.h iconimage.h \
+          iconmask.h info.h kbdfuncs.h list.h mem.h menu.h notice.h olcursor.h \
+          olgx_impl.h ollocale.h olwm.h patchlevel.h pixmap.h properties.h resources.h \
+          screen.h selection.h services.h slots.h st.h states.h usermenu.h virtual.h win.h
 
 INFOFILES = olvwm.info
 #if NeedOlwmManPage
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/Makefile.sunpro xview-3.2p1.4/clients/olvwm-4.5/Makefile.sunpro
--- xview-3.2p1.4.orig/clients/olvwm-4.5/Makefile.sunpro	2003-09-22 23:57:08.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/Makefile.sunpro	2013-01-07 12:55:39.868402000 +0100
@@ -90,11 +90,11 @@
 INC = -I${OPENWINHOME}/include
 CFLAGS = ${INC} ${MORECCFLAGS}
 
-HEADERS = cmdstream.h cursors.h debug.h defaults.h dsdm.h environ.h error.h \
-	  events.h gettext.h globals.h group.h helpcmd.h i18n.h iconimage.h \
-	  iconmask.h kbdfuncs.h list.h mem.h menu.h notice.h olcursor.h \
-	  olgx_impl.h ollocale.h olwm.h patchlevel.h properties.h resources.h \
-	  screen.h selection.h slots.h st.h virtual.h win.h
+HEADERS = client.h cmdstream.h cursors.h debug.h defaults.h dsdm.h environ.h error.h \
+	  events.h evbind.h gettext.h globals.h group.h helpcmd.h i18n.h iconimage.h \
+	  iconmask.h info.h kbdfuncs.h list.h mem.h menu.h notice.h olcursor.h \
+	  olgx_impl.h ollocale.h olwm.h patchlevel.h pixmap.h properties.h resources.h \
+	  screen.h selection.h services.h slots.h st.h states.h usermenu.h virtual.h win.h
 
 SRCS = atom.c client.c cmdstream.c cursors.c debug.c defaults.c dsdm.c \
        environ.c error.c evbind.c events.c fontset.c gettext.c gif.c group.c \
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/client.c xview-3.2p1.4/clients/olvwm-4.5/client.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/client.c	2003-09-22 23:48:36.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/client.c	2013-01-07 12:55:40.039921000 +0100
@@ -38,6 +38,10 @@
 #include "dsdm.h"
 #include "resources.h"
 #include "virtual.h"
+#include "client.h"
+#include "selection.h"
+#include "states.h"
+#include "properties.h"
 
 /***************************************************************************
 * global data
@@ -179,7 +183,7 @@
 {
 	int	*ledMap;
 	int	i,numLeds;
-	unsigned int nitems,nremain;
+	unsigned long nitems, nremain;
 
 	DoingWindowState = False;
 
@@ -780,7 +784,8 @@
     int state;		/* PropertyNewValue or PropertyDelete */
 {
     unsigned long *data;
-    int nitems, remain, nsites, i, areatype, nelts;
+    unsigned long nitems, remain;
+    int nsites, i, areatype, nelts;
     int cur = 0;
     Window wid;
     unsigned long sid, flags;
@@ -882,9 +887,9 @@
 	WinPane *wp;
 
 	if ((wf = cli->framewin) == NULL)
-		return NULL;
+		return (Window)0;
 	if ((wp = (WinPane *)(wf->fcore.panewin)) == NULL)
-		return NULL;
+		return (Window)0;
 	return wp->core.self;
 }
 
@@ -998,7 +1003,7 @@
 
     while (tc = ListEnum(&l)) {
 	if (tc->transientFor == PANEWINOFCLIENT(cli)) {
-	    RaiseWindow(tc->framewin);
+	    RaiseWindow((WinGeneric *)tc->framewin);
 	    if (first == NULL)
 		first = tc;
 	}
@@ -1032,7 +1037,7 @@
     xwc.sibling = cli->framewin->core.self;
     while (tc = ListEnum(&l)) {
 	if (tc->transientFor == PANEWINOFCLIENT(cli)) {
-	    ConfigureWindow(tc->dpy, tc->framewin,
+	    ConfigureWindow(tc->dpy, (WinGeneric *)tc->framewin,
 			     CWSibling | CWStackMode, &xwc);
 	}
     }
@@ -1058,14 +1063,14 @@
 		if (firsttransient != NULL) {
 		    xwc.sibling = firsttransient->framewin->core.self;
 		    xwc.stack_mode = Below;
-		    ConfigureWindow(cli->dpy, cli->framewin,
+		    ConfigureWindow(cli->dpy, (WinGeneric *)cli->framewin,
 				     CWSibling | CWStackMode, &xwc);
 		} else {
-		    RaiseWindow(cli->framewin);
+		    RaiseWindow((WinGeneric *)cli->framewin);
 		}
 		break;
 	case IconicState:
-		RaiseWindow(cli->iconwin);
+		RaiseWindow((WinGeneric *)cli->iconwin);
 		break;
 	default:
 		break;
@@ -1097,21 +1102,21 @@
 		    owner = WIGetInfo(cli->transientFor);
 		    if (owner == NULL ||
 			    owner->core.kind != WIN_PANE) {
-			LowerWindow(cli->framewin);
+			LowerWindow((WinGeneric *)cli->framewin);
 		    } else {
 			ownerwin = owner->core.client->framewin->core.self;
-			LowerWindow(owner->core.client->framewin);
+			LowerWindow((WinGeneric *)owner->core.client->framewin);
 			xwc.sibling = ownerwin;
 			xwc.stack_mode = Above;
-			ConfigureWindow(cli->dpy, cli->framewin,
+			ConfigureWindow(cli->dpy, (WinGeneric *)cli->framewin,
 					 CWSibling | CWStackMode, &xwc);
 		    }
 		} else {
-		    LowerWindow(cli->framewin);
+		    LowerWindow((WinGeneric *)cli->framewin);
 		}
 		break;
 	case IconicState:
-		LowerWindow(cli->iconwin);
+		LowerWindow((WinGeneric *)cli->iconwin);
 		break;
 	default:
 		break;
@@ -1209,7 +1214,7 @@
 {
 	Client  *cliLead = GroupLeader(cli->groupid);
 	if (cliLead && cliLead->framewin) {
-		RaiseWindow(cliLead->framewin);
+		RaiseWindow((WinGeneric *)cliLead->framewin);
 		WinCallDraw((WinGeneric *)cliLead->framewin);
 		FrameFlashTitleBar(cliLead->framewin);
 	}
@@ -1238,13 +1243,13 @@
  *      which fall inside the rectangle
  */
 void *
-ClientInBox(cli, close)
+ClientInBox(cli, cclose)
 Client *cli;
-ClientInBoxClosure *close;
+ClientInBoxClosure *cclose;
 {
 	int x, y, w, h;
 
-	if (cli->screen != close->screen)
+	if (cli->screen != cclose->screen)
 		return NULL;
 
 	if (cli->framewin == NULL)
@@ -1271,11 +1276,11 @@
 	
 	}
 
-	if ((x >= close->bx) &&
-	    (y >= close->by) &&
-	    ((x + w) <= (close->bx + close->bw)) &&
-	    ((y + h) <= (close->by + close->bh)))
-		(close->func)(cli, close->timestamp);
+	if ((x >= cclose->bx) &&
+	    (y >= cclose->by) &&
+	    ((x + w) <= (cclose->bx + cclose->bw)) &&
+	    ((y + h) <= (cclose->by + cclose->bh)))
+		(cclose->func)(cli, cclose->timestamp);
 
 	return NULL;
 }
@@ -1515,10 +1520,10 @@
  * have the focus.  Therefore, select them.
  */
 void
-ClientActivate(dpy, cli, time)
+ClientActivate(dpy, cli, timestamp)
     Display *dpy;
     Client *cli;
-    Time time;
+    Time timestamp;
 {
     /*
      * If the current client is selected, assume it was selected because it 
@@ -1532,11 +1537,11 @@
      * frame (i.e. a root client), activate the NoFocus client.
      */
     if (cli == NULL) {
-	NoFocusTakeFocus(dpy, time, NULL);
+	NoFocusTakeFocus(dpy, timestamp, NULL);
     } else if (cli->framewin == NULL) {
-	NoFocusTakeFocus(dpy, time, cli->scrInfo);
+	NoFocusTakeFocus(dpy, timestamp, cli->scrInfo);
     } else {
-	ClientSetFocus(cli, True, time);
+	ClientSetFocus(cli, True, timestamp);
 
 	/*
 	 * If the client is iconic or has no header, select it to show that it 
@@ -1545,7 +1550,7 @@
 	if (cli->wmState == IconicState ||
 		!(cli->wmDecors->flags & WMDecorationHeader)) {
 	    ClearSelections(dpy);
-	    AddSelection(cli, time);
+	    AddSelection(cli, timestamp);
 	}
 
 	if (GRV.RaiseOnActivate)
@@ -1560,10 +1565,10 @@
  * Set the focus to the topmost window on the given screen.
  */
 void
-ClientFocusTopmost(dpy, scrinfo, time)
+ClientFocusTopmost(dpy, scrinfo, timestamp)
     Display *dpy;
     ScreenInfo *scrinfo;
-    Time time;
+    Time timestamp;
 {
     Window wjunk;
     Window *children;
@@ -1594,9 +1599,9 @@
     }
 
     if (topframeclient != NULL)
-	ClientSetFocus(topframeclient, True, time);
+	ClientSetFocus(topframeclient, True, timestamp);
     else
-	NoFocusTakeFocus(dpy, time, scrinfo);
+	NoFocusTakeFocus(dpy, timestamp, scrinfo);
 
     XFree((char *) children);
 }
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/client.h xview-3.2p1.4/clients/olvwm-4.5/client.h
--- xview-3.2p1.4.orig/clients/olvwm-4.5/client.h	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.5/client.h	2013-01-07 12:55:40.103018000 +0100
@@ -0,0 +1,78 @@
+#ifndef _OLWM_CLIENT_H
+#define _OLWM_CLIENT_H
+
+#ifdef __STDC__
+void ClientActivate(Display *dpy, Client *cli, Time timestamp);
+void ClientBack(Client *cli);
+void ClientConfigure(Client *cli, WinGeneric *win, XConfigureRequestEvent *pxcre);
+void ClientDefaultWindowState(Display *dpy);
+void ClientDistributeProperty(Client *cli, XPropertyEvent *event);
+void ClientFlashOwner(Client *cli);
+void ClientFocusTopmost(Display *dpy, ScreenInfo *scrinfo, Time timestamp);
+void ClientFront(Client *cli);
+void ClientFullRestoreSizeToggle(Client *cli, Time timestamp);
+Client *ClientGetLastCurrent(void);
+void ClientGetWindowState(Client *cli);
+void *ClientInBox(Client *cli, ClientInBoxClosure *cclose);
+void ClientInhibitFocus(Bool inhibit);
+void *ClientKill(Client *cli, Bool pforce);
+void ClientLowerTransients(Client *cli);
+void ClientMove(Client *cli, XEvent *trigger);
+void ClientOpenCloseToggle(Client *cli, Time timestamp);
+void ClientProcessDragDropInterest(Client *cli, int state);
+Client *ClientRaiseTransients(Client *cli);
+void ClientRefresh(Client *cli);
+void ClientResize(Client *cli, XEvent *trigger, WhichResize which, void (*callback)(), void *cbarg);
+void ClientSetCurrent(Client *cli);
+void ClientSetFocus(Client *cli, Bool sendTF, Time evtime);
+void ClientSetInstanceVars(Client *cli);
+void ClientSetWindowState(Client *cli);
+void ClientSetWMState(Client *cli, WMState wmState);
+void ClientStickUnstickToggle(Client *cli);
+Bool ClientTogglePin(Client *cli);
+void ClientToggleStacking(Client *cli);
+void ClientUpdateBusy(Client *cli, XPropertyEvent *event);
+void ClientUpdateDragDropInterest(Client *cli, XPropertyEvent *event);
+void DestroyClient(Client *cli);
+void DestroyPinnedMenuClients(void);
+void InitClients(Display *dpy);
+void VisitPinnedMenuClients(void (*pproc)(), void *extra);
+#else
+void ClientActivate();
+void ClientBack();
+void ClientConfigure();
+void ClientDefaultWindowState();
+void ClientDistributeProperty();
+void ClientFlashOwner();
+void ClientFocusTopmost();
+void ClientFront();
+void ClientFullRestoreSizeToggle();
+Client *ClientGetLastCurrent();
+void ClientGetWindowState();
+void *ClientInBox();
+void ClientInhibitFocus();
+void *ClientKill();
+void ClientLowerTransients();
+void ClientMove();
+void ClientOpenCloseToggle();
+void ClientProcessDragDropInterest();
+Client *ClientRaiseTransients();
+void ClientRefresh();
+void ClientResize();
+void ClientSetCurrent();
+void ClientSetFocus();
+void ClientSetInstanceVars();
+void ClientSetWindowState();
+void ClientSetWMState();
+void ClientStickUnstickToggle();
+Bool ClientTogglePin();
+void ClientToggleStacking();
+void ClientUpdateBusy();
+void ClientUpdateDragDropInterest();
+void DestroyClient();
+void DestroyPinnedMenuClients();
+void InitClients();
+void VisitPinnedMenuClients();
+#endif
+
+#endif
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/evbind.c xview-3.2p1.4/clients/olvwm-4.5/evbind.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/evbind.c	2003-09-22 23:48:36.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/evbind.c	2013-01-07 12:55:40.148345000 +0100
@@ -38,6 +38,8 @@
 #include "kbdfuncs.h"
 #include "resources.h"
 #include "error.h"
+#include "virtual.h"
+#include "evbind.h"
 
 
 /* ===== externs ========================================================== */
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/evbind.h xview-3.2p1.4/clients/olvwm-4.5/evbind.h
--- xview-3.2p1.4.orig/clients/olvwm-4.5/evbind.h	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.5/evbind.h	2013-01-07 12:55:40.194265000 +0100
@@ -0,0 +1,22 @@
+#ifndef _OLWM_EVBIND_H
+#define _OLWM_EVBIND_H
+
+#ifdef __STDC__
+#include <X11/Intrinsic.h>
+#endif
+
+#ifdef __STDC__
+void SetProgKeys(Display *dpy, KeySym start_sym, KeySym end_sym, unsigned long modstate, Boolean off);
+void GrabVKeys(Display *dpy, Bool grab, Bool virtual_only);
+SemanticAction FindKeyboardAction(Display *dpy, XEvent *event);
+void RefreshKeyGrabsFile(Display *dpy, XrmDatabase rdb, char *file);
+SemanticAction ResolveMouseBinding(Display *dpy, XEvent *pevent, unsigned long ignoremask);
+#else
+void SetProgKeys();
+void GrabVKeys();
+SemanticAction FindKeyboardAction();
+void RefreshKeyGrabsFile();
+SemanticAction ResolveMouseBinding();
+#endif
+
+#endif
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/gif.c xview-3.2p1.4/clients/olvwm-4.5/gif.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/gif.c	2003-09-22 23:48:37.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/gif.c	2013-01-07 12:55:40.238678000 +0100
@@ -10,6 +10,7 @@
 
 
 #include <stdio.h>
+#include <string.h>		/* strncmp() */
 #include <X11/X.h>
 #include <X11/Xatom.h>
 #include <X11/Xlib.h>
@@ -17,7 +18,14 @@
 #include <X11/keysym.h>
 #include <X11/keysymdef.h>
 #include <X11/XWDFile.h>
+#include "i18n.h"
+#include <olgx/olgx.h>
 #include "mem.h"
+#include "olwm.h"
+#include "ollocale.h"
+#include "globals.h"
+#include "screen.h"
+#include "pixmap.h"
 
 
 #define MAXCOLORMAPSIZE         256
@@ -56,7 +64,17 @@
 	int     disposal;
 } Gif89 = { -1, -1, -1, 0 };
 
-extern XImage* ReadImage();
+#ifdef __STDC__
+static int DoExtension(FILE *fd, int label);
+static XImage* ReadImage(Display *dpy, FILE *fd, int len, int height, XColor *cmap, int interlace, int ignore);
+static int ReadColorMap(FILE *fd, int number, XColor *buffer);
+static int GetDataBlock(FILE *fd, unsigned char  *buf);
+#else
+static int DoExtension();
+static XImage* ReadImage();
+static int ReadColorMap();
+static int GetDataBlock();
+#endif
 
 XImage *ReadGIF(dpy, fd, pNcolors, pColors)
 Display *dpy;
@@ -81,12 +99,12 @@
 		return NULL;
 	}
 
-	if (strncmp(buf,"GIF",3) != 0)
+	if (strncmp((char *)buf,"GIF",3) != 0)
 	{
 		return NULL;
 	}
 
-	strncpy(version, buf + 3, 3);
+	strncpy(version, (char *)buf + 3, 3);
 	version[3] = '\0';
 
 	if ((strcmp(version, "87a") != 0) && (strcmp(version, "89a") != 0))
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/info.c xview-3.2p1.4/clients/olvwm-4.5/info.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/info.c	2003-09-22 23:48:37.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/info.c	2013-01-07 12:55:40.323028000 +0100
@@ -26,6 +26,7 @@
 #include "st.h"
 #include "mem.h"
 #include "error.h"
+#include "info.h"
 
 
 st_table	*wiHashTable;
@@ -72,7 +73,7 @@
 		ErrorGeneral(
 		  GetString("Tried to duplicate-register a window -- bailing"));
 	}
-	st_insert(wiHashTable, (int)info->core.self, (char *)info);
+	st_insert(wiHashTable, (char *)info->core.self, (char *)info);
 }
 
 /*
@@ -89,7 +90,7 @@
 	Window  *tmpWinPtr = &tmpWin;
 	Bool	ret;
 
-	ret = st_delete(wiHashTable, (char *)tmpWinPtr, (char *)&oldInfo);
+	ret = st_delete(wiHashTable, (char **)tmpWinPtr, (char **)&oldInfo);
 	if (oldInfo)
 	    VUninstallInfo(oldInfo->core.virtual);
 	return ret;
@@ -106,7 +107,7 @@
 {
 	WinGeneric *winInfo = NULL;
 
-	st_lookup(wiHashTable, win, &winInfo);
+	st_lookup(wiHashTable, (char *)win, (char **)&winInfo);
 	return winInfo;
 }
 
@@ -127,7 +128,7 @@
 {
 	if (VGetInfo(info->core.virtual) != NULL)
 	    ErrorGeneral(gettext("Tried to duplicate register a virtual window"));
-	st_insert(vHashTable, (int) info->core.virtual, (char *) info);
+	st_insert(vHashTable, (char *)info->core.virtual, (char *) info);
 }
 
 /*
@@ -143,7 +144,7 @@
 	Window	tmpWin = win;
 	Window  *tmpWinPtr = &tmpWin;
 
-	return st_delete(vHashTable, (char *)tmpWinPtr, (char *)&oldInfo);
+	return st_delete(vHashTable, (char **)tmpWinPtr, (char **)&oldInfo);
 }
 
 WinGeneric *
@@ -152,6 +153,6 @@
 {
     WinGeneric	*winInfo = NULL;
 
-    st_lookup(vHashTable, win, &winInfo);
+    st_lookup(vHashTable, (char *)win, (char **)&winInfo);
     return winInfo;
 }
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/info.h xview-3.2p1.4/clients/olvwm-4.5/info.h
--- xview-3.2p1.4.orig/clients/olvwm-4.5/info.h	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.5/info.h	2013-01-07 12:55:40.341109000 +0100
@@ -0,0 +1,10 @@
+#ifndef _OLWM_INFO_H
+#define _OLWM_INFO_H
+
+#ifdef __STDC__
+Bool VUninstallInfo(Window win);
+#else
+Bool VUninstallInfo();
+#endif
+
+#endif
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/kbdfuncs.c xview-3.2p1.4/clients/olvwm-4.5/kbdfuncs.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/kbdfuncs.c	2003-09-22 23:48:37.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/kbdfuncs.c	2013-01-07 12:55:40.410864000 +0100
@@ -32,6 +32,11 @@
 #include "globals.h"
 #include "group.h"
 #include "resources.h"
+#include "client.h"
+#include "virtual.h"
+#include "usermenu.h"
+#include "states.h"
+#include "services.h"
 
 /*
  * Externals
@@ -42,6 +47,8 @@
 extern Client *ClientRaiseTransients();
 extern void ClientSetCurrent();
 
+WinGeneric * lookupWindow();
+
 /* ===== private functions ================================================ */
 
 
@@ -524,7 +531,7 @@
 		(owner = WIGetInfo(cli->transientFor)) != NULL &&
 		owner->core.kind == WIN_PANE &&
 		owner->core.client != NULL) {
-	    LowerWindow(owner->core.client->framewin);
+	    LowerWindow((WinGeneric *)owner->core.client->framewin);
 	    ClientLowerTransients(owner->core.client);
 	} else {
 	    transient = ClientRaiseTransients(cli);
@@ -820,7 +827,7 @@
 
     if (CurrentClient->framewin != NULL &&
 		!(CurrentClient->wmDecors->flags & WMNoDecor))
-	ClientMove(CurrentClient,ke);
+	ClientMove(CurrentClient, (XEvent *)ke);
 }
 
 
@@ -838,7 +845,7 @@
 
     if (CurrentClient->framewin != NULL &&
 		!(CurrentClient->wmDecors->flags & WMNoDecor))
-	ClientResize(CurrentClient, ke, keyevent, NULL, NULL);
+	ClientResize(CurrentClient, (XEvent *)ke, keyevent, NULL, NULL);
 }
 
 
@@ -864,7 +871,7 @@
     XKeyEvent *ke;
 {
     if (ke->type == KeyPress)
-	RootMenuShow(dpy, WIGetInfo(ke->root), ke);
+	RootMenuShow(dpy, WIGetInfo(ke->root), (XEvent *)ke);
 }
 
 
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/kbdfuncs.h xview-3.2p1.4/clients/olvwm-4.5/kbdfuncs.h
--- xview-3.2p1.4.orig/clients/olvwm-4.5/kbdfuncs.h	2003-09-22 23:48:37.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/kbdfuncs.h	2013-01-07 12:55:40.449291000 +0100
@@ -17,8 +17,12 @@
  *
  */
 
-extern void KeyBackFocus();
+#ifdef __STDC__
+extern void KeyBeep(Display *dpy, XKeyEvent *ke);
+#else
 extern void KeyBeep();
+#endif
+extern void KeyBackFocus();
 extern void KeyFocusToPointer();
 extern void KeyRaiseLowerPointer();
 extern void KeyFrontFocus();
@@ -50,7 +54,7 @@
 extern void KeyToggleSticky();         /* Toggle Sticky State */
 extern void KeySaveWorkspace();
 
-extern void KeyMoveVDM();
+extern int KeyMoveVDM();
 extern void AddKeyBinding();
 
 #endif /* _OLWM_KBDFUNCS_H */
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/olvwmrc.y xview-3.2p1.4/clients/olvwm-4.5/olvwmrc.y
--- xview-3.2p1.4.orig/clients/olvwm-4.5/olvwmrc.y	2003-09-22 23:48:38.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/olvwmrc.y	2013-01-07 12:55:40.513988000 +0100
@@ -30,6 +30,11 @@
 #include "kbdfuncs.h"
 #include "globals.h"
 #include "virtual.h"
+#include "client.h"
+#include "error.h"
+#include "resources.h"
+#include "states.h"
+#include "evbind.h"
 
 #define OLVWM_USE_SELECTION	"OLVWM_USE_SELECTION"
 
@@ -37,7 +42,7 @@
 char	*LookupToken();
 char	*FindOlvwmRC();
 void	resetKeys();
-char	*strexpand();
+static char *strexpand();
 
 typedef struct progscreen {
     char        *target;
@@ -890,9 +895,9 @@
 		if (!strcmp(t, OLVWM_USE_SELECTION)) {
 		    if (cli && cli->framewin) {
 		        if (cli->wmState == IconicState)
-			    RaiseWindow(cli->iconwin);
+			    RaiseWindow((WinGeneric *)cli->iconwin);
 		        else if (cli->wmState == NormalState)
-			    RaiseWindow(cli->framewin);
+			    RaiseWindow((WinGeneric *)cli->framewin);
 		    }
 		}
 		else {
@@ -900,9 +905,9 @@
 		    for (c = ListEnum(&l); c != NULL; c = ListEnum(&l))
 			if (findClient(c, t))
 			    if (c->wmState == IconicState)
-			        RaiseWindow(c->iconwin);
+			        RaiseWindow((WinGeneric *)c->iconwin);
 			    else if (c->wmState == NormalState)
-				RaiseWindow(c->framewin);
+				RaiseWindow((WinGeneric *)c->framewin);
 		}
 		t = LookupToken(NULL, ",");
 	    }
@@ -935,9 +940,9 @@
 		if (!strcmp(t, OLVWM_USE_SELECTION)) {
 		    if (cli && cli->framewin) {
 		        if (cli->wmState == IconicState)
-			    LowerWindow(cli->iconwin);
+			    LowerWindow((WinGeneric *)cli->iconwin);
 		        else if (cli->wmState == NormalState)
-			    LowerWindow(cli->framewin);
+			    LowerWindow((WinGeneric *)cli->framewin);
 		    }
 		}
 		else {
@@ -945,9 +950,9 @@
 		    for (c = ListEnum(&l); c != NULL; c = ListEnum(&l))
 			if (findClient(c, t))
 			    if (c->wmState == IconicState)
-			        LowerWindow(c->iconwin);
+			        LowerWindow((WinGeneric *)c->iconwin);
 			    else if (c->wmState == NormalState)
-				LowerWindow(c->framewin);
+				LowerWindow((WinGeneric *)c->framewin);
 		}
 		t = LookupToken(NULL, ",");
 	    }
@@ -1251,6 +1256,7 @@
 static struct stat olvwmBuf;
 static struct stat olvwmOldBuf;
 
+void
 InitOlvwmRC(ldpy, path)
     Display	*ldpy;
     char	*path;
@@ -1276,6 +1282,7 @@
 /*
  * Check to see if olvwmrc has been changed since we last read it
  */
+void
 CheckOlvwmRC(dpy)
     Display *dpy;
 {
@@ -1339,6 +1346,7 @@
     return False;
 }
 
+void
 ReInitOlvwmRC(ldpy, path)
     Display	*ldpy;
     char	*path;
@@ -1359,6 +1367,7 @@
     InitOlvwmRC(ldpy, path);
 }
 
+void
 SearchProgString(dpy, scrInfo, name, inst, wm_class,
 		 frame_x, frame_y, icon_x, icon_y)
     Display	*dpy;
@@ -1389,6 +1398,7 @@
 }
 
 /* ARGSUSED */
+int
 CheckForKeyProg(dpy, ev)
     Display	*dpy;
     XEvent	*ev;
@@ -1524,7 +1534,7 @@
 	if (cli && cli->wmState != NormalState)
 	    StateNormal(cli, TimeFresh());
 	/* Raise */
-	RaiseWindow(cli->framewin);
+	RaiseWindow((WinGeneric *)cli->framewin);
     }
 }
 
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/olwm.h xview-3.2p1.4/clients/olvwm-4.5/olwm.h
--- xview-3.2p1.4.orig/clients/olvwm-4.5/olwm.h	2003-09-22 23:48:38.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/olwm.h	2013-01-07 12:55:40.573309000 +0100
@@ -85,10 +85,21 @@
 
 /* miscellaneous functions */
 extern int ExitOLWM();
+#ifdef __STDC__
+extern void CheckOlvwmRC(Display *dpy);
+extern void *GetWindowProperty(Display *dpy, Window w, Atom property, long long_offset, long long_length, Atom req_type, int req_fmt, unsigned long *nitems, unsigned long *bytes_after);
+extern void InitOlvwmRC(Display *ldpy, char *path);
+extern void ReInitOlvwmRC(Display *ldpy, char *path);
+#else
+extern void CheckOlvwmRC();
 extern void *GetWindowProperty();
+extern void InitOlvwmRC();
+extern void ReInitOlvwmRC();
+#endif
 #ifdef OW_I18N_L4
 extern void parseApplicationLocaleDefaults();
 #endif
+extern void SearchProgString();
 
 /* state functions */
 extern struct _client *StateNew();
@@ -187,7 +198,6 @@
 extern Bool IsSelected();
 extern struct _client *EnumSelections();
 extern Time TimeFresh();
-extern int AddSelection();
 extern Bool RemoveSelection();
 extern Bool ToggleSelection();
 extern void ClearSelections();
@@ -217,4 +227,10 @@
 /* busy windows */
 extern struct _winbusy *MakeBusy();
 
+#ifdef __STDC__
+int CheckForKeyProg(Display *dpy, XEvent *ev);
+#else
+int CheckForKeyProg();
+#endif
+
 #endif /* _OLWM_OLWM_H */
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/pixmap.c xview-3.2p1.4/clients/olvwm-4.5/pixmap.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/pixmap.c	2003-09-22 23:48:38.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/pixmap.c	2013-01-07 12:55:40.625737000 +0100
@@ -43,7 +43,10 @@
 #include "globals.h"
 #include "screen.h"
 #include "mem.h"
+#include "error.h"
+#include "pixmap.h"
 
+void
 _swaplong (bp, n)
     register char *bp;
     register unsigned n;
@@ -174,6 +177,7 @@
       return ret;
 }
 
+void
 FreePixmapColors(dpy, ncolors, colors, colormap)
     Display *dpy;
     int ncolors;
@@ -192,6 +196,7 @@
     }
 }
 
+void
 doPseudo8(dpy, colormap, ncolors, colors, in_image, out_image)
 Display *dpy;
 Colormap *colormap;
@@ -288,6 +293,7 @@
     }
 }
 
+void
 doPseudo24(dpy, colormap, ncolors, colors, in_image, out_image)
 Display *dpy;
 Colormap *colormap;
@@ -309,6 +315,7 @@
     }
 }
 
+void
 doPseudo(dpy, colormap, ncolors, colors, in_image, out_image)
 Display *dpy;
 Colormap *colormap;
@@ -696,7 +703,7 @@
         }
         rval = True;
 FAILURE:
-        if (freeFilename != NULL)
+        if (freeFilename != False)
             MemFree(newname);
         return rval;
 }
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/pixmap.h xview-3.2p1.4/clients/olvwm-4.5/pixmap.h
--- xview-3.2p1.4.orig/clients/olvwm-4.5/pixmap.h	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.5/pixmap.h	2013-01-07 12:55:40.681454000 +0100
@@ -0,0 +1,22 @@
+#ifndef _OLWM_PIXMAP_H
+#define _OLWM_PIXMAP_H
+
+#ifdef __STDC__
+void FreePixmapColors(Display *dpy, int ncolors, XColor *colors, Colormap *colormap);
+unsigned ImageSize(XImage *image);
+Bool MakePixmap(Display *dpy, ScreenInfo *scrInfo, char *filename, PixInfo *pixinfo);
+void doPseudo8(Display *dpy, Colormap *colormap, int ncolors, XColor *colors, XImage *in_image, XImage *out_image);
+void doPseudo24(Display *dpy, Colormap *colormap, int ncolors, XColor *colors, XImage *in_image, XImage *out_image);
+void doPseudo(Display *dpy, Colormap *colormap, int ncolors, XColor *colors, XImage *in_image, XImage *out_image);
+void _swaplong(char *bp, unsigned n);
+#else
+void FreePixmapColors();
+unsigned ImageSize();
+Bool MakePixmap();
+void doPseudo8();
+void doPseudo24();
+void doPseudo();
+void _swaplong();
+#endif
+
+#endif
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/screen.c xview-3.2p1.4/clients/olvwm-4.5/screen.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/screen.c	2003-09-22 23:48:39.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/screen.c	2013-01-07 17:41:38.107055000 +0100
@@ -5,7 +5,7 @@
  */
 
 #ifdef IDENT
-#ident	"@(#)screen.c	1.1 olvwm version 09/22/03"
+#ident	"@(#)screen.c	1.8 olvwm version 04/28/99"
 #endif
 
 /*
@@ -47,6 +47,11 @@
 #include "iconimage.h"
 #include "iconmask.h"
 
+#include "client.h"
+#include "pixmap.h"
+#include "usermenu.h"
+#include "screen.h"
+
 /*-------------------------------------------------------------------------
  *      Default Constants
  *-------------------------------------------------------------------------*/
@@ -65,7 +70,6 @@
  *	Global Data
  *-------------------------------------------------------------------------*/
 List	*ScreenInfoList;			/* List of managed screens */
-extern	Bool BoolString();
 
 /*-------------------------------------------------------------------------
  *	Local Data
@@ -153,6 +157,32 @@
 static XrmQuark virtualPixmapColorCQ;
 static XrmQuark virtualPixmapColorIQ;
 
+#ifdef __STDC__
+static void updateScreenBackgroundColor(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenBorderColor(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenForegroundColor(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenInputFocusColor(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenTitleFont(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenTextFont(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenButtonFont(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenIconFont(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenGlyphFont(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenWindowColor(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenWorkspaceColor(Display *dpy, ScreenInfo *scrInfo);
+#else
+static void updateScreenBackgroundColor();
+static void updateScreenBorderColor();
+static void updateScreenForegroundColor();
+static void updateScreenInputFocusColor();
+static void updateScreenTitleFont();
+static void updateScreenTextFont();
+static void updateScreenButtonFont();
+static void updateScreenIconFont();
+static void updateScreenGlyphFont();
+static void updateScreenWindowColor();
+static void updateScreenWorkspaceColor();
+#endif
+
 /*-------------------------------------------------------------------------
  *	Local Functions
  *-------------------------------------------------------------------------*/
@@ -282,7 +312,7 @@
 		     	case PseudoColor:
 			case GrayScale:
 		     	case DirectColor:
-			case TrueColor:
+		    	case TrueColor:
 		    		return True;
 				/*NOTREACHED*/
 		    		break;
@@ -402,7 +432,7 @@
 	 * Note: %i converts from hex (if leading "0x"), from octal (if
 	 * leading "0"), otherwise from decimal.
 	 */
-	if (1 == sscanf(buf, "%i", &vtemplate.visualid))
+	if (1 == sscanf(buf, "%li", &vtemplate.visualid))
 	    vinfomask |= VisualIDMask;
     }
 
@@ -513,6 +543,7 @@
 	    (Window *) MemCalloc(GRV.WindowCacheSize, sizeof(Window));
 }
 
+#if 0
 /*
  * Bitmap Search Path
  */
@@ -537,7 +568,12 @@
 	int     i = 0;;
 
 	if ((owHome = getenv("OPENWINHOME")) == NULL)
+#ifdef OPENWINHOME_DEFAULT
+		/* martin-2.buck@student.uni-ulm.de */
+		owHome = OPENWINHOME_DEFAULT;
+#else
 		owHome = "/usr/openwin";
+#endif
 
 	bitmapSearchPath = (char **)MemAlloc(4 * sizeof(char *));
 
@@ -586,6 +622,7 @@
 
 	return (char *)NULL;
 }
+#endif
 
 /*
  *	makeColor	- alloc a color using colorname or defaultcolor
@@ -1541,7 +1578,7 @@
 	setScreenWindowColor(dpy,scrInfo);
 
 	scrInfo->pixInfo.colors = 0;
-	scrInfo->pixInfo.ncolors = NULL;
+	scrInfo->pixInfo.ncolors = 0;
 	setScreenWorkspaceBackground(dpy,scrInfo);
 
 	SetScreenVirtualForegroundColor(dpy,scrInfo);
@@ -1968,7 +2005,7 @@
 /*
  * updateScreenWorkspaceColor -- change all GC/Ginfo's that use WorkspaceColor
  */
-static
+static void
 updateScreenWorkspaceColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -1990,7 +2027,7 @@
 /*
  * updateScreenWindowColor -- change all GC/Ginfo's that use WindowColor
  */
-static
+static void
 updateScreenWindowColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2047,7 +2084,7 @@
 /*
  * updateScreenForegroundColor -- change all GC/Ginfo's that use Foreground
  */
-static
+static void
 updateScreenForegroundColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2080,7 +2117,7 @@
 /*
  * updateScreenBackgroundColor -- change all GC/Ginfo's that use Background
  */
-static
+static void
 updateScreenBackgroundColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2095,7 +2132,7 @@
 /*
  * updateScreenBorderColor -- change all GC/Ginfo's that use Border
  */
-static
+static void
 updateScreenBorderColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2114,6 +2151,7 @@
 /*
  * UpdateScreenVirtualForegroundColor -- change all GC/Ginfo's that use vfg
  */
+void
 UpdateScreenVirtualForegroundColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2132,6 +2170,7 @@
 /*
  * UpdateScreenVirtualBackgroundColor -- change all GC/Ginfo's that use vfg
  */
+void
 UpdateScreenVirtualBackgroundColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2148,6 +2187,7 @@
 /*
  * UpdateScreenVirtualFontColor -- change all GC/Ginfo's that use vfg
  */
+void
 UpdateScreenVirtualFontColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2166,6 +2206,7 @@
 /*
  * UpdateScreenVirtualGridColor -- change all GC/Ginfo's that use vfg
  */
+void
 /* ARGSUSED */
 UpdateScreenVirtualGridColor(dpy,scrInfo)
 	Display		*dpy;
@@ -2180,7 +2221,7 @@
  * updateScreenInputFocusColor -- change all GC/Ginfo's that use vfg
  */
 /* ARGSUSED */
-static
+static void
 updateScreenInputFocusColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2197,6 +2238,7 @@
 			     scrInfo->colorInfo.inputBg0Color, OLGX_SPECIAL);
 }
 
+void
 /* ARGSUSED */
 UpdateScreenVirtualDesktop(dpy,scrInfo)
     Display		*dpy;
@@ -2211,6 +2253,7 @@
     ResizeVDM(scrInfo->vdm, size);
 }
 
+void
 /* ARGSUSED */
 UpdateScreenVirtualIconGeometry(dpy,scrInfo)
     Display		*dpy;
@@ -2225,9 +2268,10 @@
     if (scrInfo->vdm->resources->iconGeometry)
 	free(scrInfo->vdm->resources->iconGeometry);
     scrInfo->vdm->resources->iconGeometry = strdup(geometry);
-    VirtualSetGeometry(scrInfo->vdm->client->iconwin, geometry);
+    VirtualSetGeometry((WinGeneric *)scrInfo->vdm->client->iconwin, geometry);
 }
 
+void
 /* ARGSUSED */
 UpdateScreenVirtualDrawSticky(dpy,scrInfo)
     Display		*dpy;
@@ -2237,6 +2281,7 @@
     VirtualUpdateDrawSticky(scrInfo->vdm->client);
 }
 
+void
 /* ARGSUSED */
 UpdateScreenVirtualScale(dpy,scrInfo)
     Display		*dpy;
@@ -2269,7 +2314,7 @@
 /*
  * updateScreenTitleFont -- change all GC/Ginfo's that use TitleFont
  */
-static
+static void
 updateScreenTitleFont(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2304,7 +2349,7 @@
 /*
  * updateScreenTextFont -- change all GC/Ginfo's that use TextFont
  */
-static
+static void
 /* ARGSUSED */
 updateScreenTextFont(dpy,scrInfo)
 	Display		*dpy;
@@ -2324,7 +2369,7 @@
 /*
  * updateScreenButtonFont -- change all GC/Ginfo's that use ButtonFont
  */
-static
+static void
 /* ARGSUSED */
 updateScreenButtonFont(dpy,scrInfo)
 	Display		*dpy;
@@ -2344,7 +2389,7 @@
 /*
  * updateScreenIconFont -- change all GC/Ginfo's that use IconFont
  */
-static
+static void
 updateScreenIconFont(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2361,7 +2406,7 @@
 /*
  * updateScreenGlyphFont -- change all GC/Ginfo's that use GlyphFont
  */
-static
+static void
 /* ARGSUSED */
 updateScreenGlyphFont(dpy,scrInfo)
 	Display		*dpy;
@@ -2394,6 +2439,7 @@
 /*
  * UpdateScreenVirtualFont -- change all GC/Ginfo's that use VirtualFont
  */
+void
 UpdateScreenVirtualFont(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2421,6 +2467,7 @@
 
 /*
  */
+void
 /* ARGSUSED */
 UpdateScreenVirtualGeometry(dpy,scrInfo)
 	Display		*dpy;
@@ -2436,15 +2483,16 @@
 	if (scrInfo->vdm->resources->geometry)
 	    free(scrInfo->vdm->resources->geometry);
 	scrInfo->vdm->resources->geometry = strdup(geom);
-	VirtualSetGeometry(scrInfo->vdm->client->framewin, geom);
+	VirtualSetGeometry((WinGeneric *)scrInfo->vdm->client->framewin, geom);
 }
 
+void
 UpdateScreenVirtualMap(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
 {
 char		*name;
-XSizeHints	*sizeHints;
+XSizeHints	*sizeHints = NULL;
 PixInfo		*pm;
 long		sizeSet;
 	
@@ -2475,6 +2523,7 @@
 	}
 }
 
+void
 UpdateScreenVirtualPixmapColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2598,7 +2647,7 @@
 	/*
  	 *	Initalize the colormap focus for screen/root
 	 */
-	ColorFocusInit(dpy,scrInfo->rootwin);
+	ColorFocusInit(dpy, (WinGeneric *)scrInfo->rootwin);
 
 	initVDM(dpy, scrInfo, client);
 
@@ -2736,7 +2785,7 @@
 GetFirstScrInfo()
 {
 	ScreenInfo	*si;
-	ScreenInfo	*lowestScrInfo;
+	ScreenInfo	*lowestScrInfo = NULL;
 	List		*l = ScreenInfoList;
 	int		lowestScreen = 99999;	/* REMIND */
 
@@ -2927,7 +2976,7 @@
 /*
  * ReparentScreens - reparents each of the screens window trees
  */
-int
+void
 ReparentScreens(dpy)
 	Display		*dpy;
 {
@@ -2939,7 +2988,7 @@
 	}
 }
 
-int
+void
 CreateScreenWindowMenuInfo(dpy)
 	Display		*dpy;
 {
@@ -2951,7 +3000,7 @@
 	}
 }
 
-int
+void
 DestroyScreenWindowMenuInfo(dpy)
 	Display		*dpy;
 {
@@ -2963,7 +3012,7 @@
 	}
 }
 
-int
+void
 CreateScreenUserMenuInfo(dpy)
 	Display		*dpy;
 {
@@ -2975,7 +3024,7 @@
 	}
 }
 
-int
+void
 DestroyScreenUserMenuInfo(dpy)
 	Display		*dpy;
 {
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/screen.h xview-3.2p1.4/clients/olvwm-4.5/screen.h
--- xview-3.2p1.4.orig/clients/olvwm-4.5/screen.h	2003-09-22 23:48:39.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/screen.h	2013-01-07 12:55:40.849154000 +0100
@@ -170,11 +170,18 @@
 
 #if defined(__STDC__)
 
-extern  void            InitScreens(Display *dpy);
+extern	void		CreateAutoRootMenu(Display *dpy);
+extern	void		CreateAutoRootMenuScreen(Display *dpy, ScreenInfo *si);
+extern	void		CreateScreenUserMenuInfo(Display *dpy);
+extern	void		CreateScreenWindowMenuInfo(Display *dpy);
 extern  void            DestroyScreens(Display *dpy);
+extern	void		DestroyScreenUserMenuInfo(Display *dpy);
+extern	void		DestroyScreenWindowMenuInfo(Display *dpy);
 extern  ScreenInfo      *GetFirstScrInfo(void);
 extern  ScreenInfo      *GetScrInfoOfScreen(int screen);
 extern  ScreenInfo      *GetScrInfoOfRoot(Window root);
+extern  void            InitScreens(Display *dpy);
+extern	void		ReparentScreens(Display *dpy);
 extern  void            SetWorkspaceBackground(Display *dpy);
 extern  void            SetWindowColor(Display *dpy);
 extern  void            SetForegroundColor(Display *dpy);
@@ -191,14 +198,40 @@
 					   XSetWindowAttributes*);
 extern  void            ScreenDestroyWindow(ScreenInfo*, Window);
 extern  void            ScreenUpdateWinCacheSize(Display *dpy);
+extern	void		SetScreenInputFocusColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		SetScreenVirtualBackgroundColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		SetScreenVirtualFontColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		SetScreenVirtualForegroundColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		SetScreenVirtualGridColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		SetScreenVirtualIconColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		SetScreenVirtualPixmapColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualBackgroundColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualDesktop(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualDrawSticky(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualFontColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualForegroundColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualGridColor(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualIconGeometry(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualScale(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualFont(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualGeometry(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualMap(Display *dpy, ScreenInfo *scrInfo);
+extern	void		UpdateScreenVirtualPixmapColor(Display *dpy, ScreenInfo *scrInfo);
 
 #else
 
-extern  void            InitScreens();
+extern	void		CreateAutoRootMenu();
+extern	void		CreateAutoRootMenuScreen();
+extern	void		CreateScreenUserMenuInfo();
+extern	void		CreateScreenWindowMenuInfo();
 extern  void            DestroyScreens();
+extern	void		DestroyScreenUserMenuInfo();
+extern	void		DestroyScreenWindowMenuInfo();
 extern  ScreenInfo      *GetFirstScrInfo();
 extern  ScreenInfo      *GetScrInfoOfScreen();
 extern  ScreenInfo      *GetScrInfoOfRoot();
+extern  void            InitScreens();
+extern	void		ReparentScreens();
 extern  void            SetWorkspaceBackground();
 extern  void            SetWindowColor();
 extern  void            SetForegroundColor();
@@ -213,6 +246,25 @@
 extern  Window          ScreenCreateWindow();
 extern  void            ScreenDestroyWindow();
 extern  void            ScreenUpdateWinCacheSize();
+extern	void		SetScreenInputFocusColor();
+extern	void		SetScreenVirtualBackgroundColor();
+extern	void		SetScreenVirtualFontColor();
+extern	void		SetScreenVirtualForegroundColor();
+extern	void		SetScreenVirtualGridColor();
+extern	void		SetScreenVirtualIconColor();
+extern	void		SetScreenVirtualPixmapColor();
+extern	void		UpdateScreenVirtualBackgroundColor();
+extern	void		UpdateScreenVirtualDesktop();
+extern	void		UpdateScreenVirtualDrawSticky();
+extern	void		UpdateScreenVirtualFontColor();
+extern	void		UpdateScreenVirtualForegroundColor();
+extern	void		UpdateScreenVirtualGridColor();
+extern	void		UpdateScreenVirtualIconGeometry();
+extern	void		UpdateScreenVirtualScale();
+extern	void		UpdateScreenVirtualFont();
+extern	void		UpdateScreenVirtualGeometry();
+extern	void		UpdateScreenVirtualMap();
+extern	void		UpdateScreenVirtualPixmapColor();
 #endif /* STDC */
  
 #endif  /* _OLWM_SCREEN_H */
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/services.c xview-3.2p1.4/clients/olvwm-4.5/services.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/services.c	2003-09-22 23:48:39.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/services.c	2013-01-07 12:55:40.874876000 +0100
@@ -17,6 +17,7 @@
 #include <stdio.h>
 #include <string.h>
 #include <errno.h>
+#include <stdlib.h>		/* exit() */
 #include <sys/time.h>
 #include <sys/types.h>
 #include <sys/stat.h>
@@ -42,6 +43,8 @@
 #include "resources.h"
 #include "error.h"
 #include "dsdm.h"
+#include "client.h"
+#include "services.h"
 
 extern	char		*getenv();
 extern	unsigned int	FindModifierMask();
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/services.h xview-3.2p1.4/clients/olvwm-4.5/services.h
--- xview-3.2p1.4.orig/clients/olvwm-4.5/services.h	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.5/services.h	2013-01-07 12:55:40.897535000 +0100
@@ -0,0 +1,10 @@
+#ifndef _OLWM_SERVICES_H
+#define _OLWM_SERVICES_H
+
+#ifdef __STDC__
+int SaveWorkspaceFunc(Display *dpy, WinGeneric *winInfo, MenuInfo *menuInfo, int idx);
+#else
+int SaveWorkspaceFunc();
+#endif
+
+#endif
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/st.c xview-3.2p1.4/clients/olvwm-4.5/st.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/st.c	2003-09-22 23:48:39.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/st.c	2013-01-07 17:24:53.732964000 +0100
@@ -11,6 +11,7 @@
  */
 
 #include <stdio.h>
+#include <stdlib.h>			/* free() */
 #include "st.h"
 #include "mem.h"
 
@@ -44,6 +45,12 @@
 	(table->hash == ST_NUMHASH) ? ((int) (key) % table->num_bins) :\
 	(*table->hash)((key), table->num_bins))*/
 
+#ifdef __STDC__
+static void rehash(st_table *table);
+#else
+static void rehash();
+#endif
+
 st_table *st_init_table_with_params(compare, hash, size, density, grow_factor,
 				    reorder_flag)
 int (*compare)();
@@ -78,6 +85,7 @@
 				     ST_DEFAULT_REORDER_FLAG);
 }
 			    
+void
 st_free_table(table)
 st_table *table;
 {
@@ -116,6 +124,7 @@
     }\
 }
 	
+int
 st_lookup(table, key, value)
 st_table *table;
 register char *key;
@@ -152,6 +161,7 @@
     table->num_entries++;\
 }
 
+int
 st_insert(table, key, value)
 register st_table *table;
 register char *key;
@@ -174,6 +184,7 @@
     }
 }
 
+void
 st_add_direct(table, key, value)
 st_table *table;
 char *key;
@@ -186,6 +197,7 @@
     ADD_DIRECT(table, key, value, hash_val, new);
 }
 
+int
 st_find_or_add(table, key, slot)
 st_table *table;
 char *key;
@@ -208,7 +220,7 @@
     }
 }
 
-static rehash(table)
+static void rehash(table)
 register st_table *table;
 {
     register st_table_entry *ptr, *next, **old_bins = table->bins;
@@ -279,6 +291,7 @@
     return new_table;
 }
 
+int
 st_delete(table, key, value)
 register st_table *table;
 register char **key;
@@ -320,6 +333,7 @@
     return 0;
 }
 
+void
 st_foreach(table, func, arg)
 st_table *table;
 enum st_retval (*func)();
@@ -354,6 +368,7 @@
     }
 }
 
+int
 st_strhash(string, modulus)
 register char *string;
 int modulus;
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/st.h xview-3.2p1.4/clients/olvwm-4.5/st.h
--- xview-3.2p1.4.orig/clients/olvwm-4.5/st.h	2003-09-22 23:48:39.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/st.h	2013-01-07 12:57:25.146082000 +0100
@@ -40,9 +40,29 @@
 
 enum st_retval {ST_CONTINUE, ST_STOP, ST_DELETE};
 
-int st_delete(), st_insert(), st_foreach(), st_free_table();
-int st_lookup(), st_find_or_add(), st_add_direct();
-st_table *st_init_table(), *st_init_table_with_params();
+#ifdef __STDC__
+int st_delete(st_table *table, char **key, char **value);
+int st_find_or_add(st_table *table, char *key, char ***slot);
+st_table *st_init_table(int (*compare)(), int (*hash)());
+st_table *st_init_table_with_params(int (*compare)(), int (*hash)(), int size, int density, double grow_factor, int reorder_flag);
+void st_free_table(st_table *table);
+int st_insert(st_table *table, char *key, char *value);
+int st_lookup(st_table *table, char *key, char **value);
+void st_add_direct(st_table *table, char *key, char *value);
+void st_foreach(st_table *table, enum st_retval (*func)(), char *arg);
+int st_strhash(char *string, int modulus);
+#else
+int st_delete();
+int st_find_or_add();
+st_table *st_init_table();
+st_table *st_init_table_with_params();
+void st_free_table();
+int st_insert();
+int st_lookup();
+void st_add_direct();
+void st_foreach();
+int st_strhash();
+#endif
 
 #ifdef NOT
 #define ST_NUMCMP	((int (*)()) 0)
@@ -62,6 +82,4 @@
 #define ST_DEFAULT_GROW_FACTOR 2.0
 #define ST_DEFAULT_REORDER_FLAG 0
 
-int st_strhash();
-
 #endif ST_INCLUDED
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/states.c xview-3.2p1.4/clients/olvwm-4.5/states.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/states.c	2003-09-22 23:48:39.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/states.c	2013-01-07 12:55:40.990354000 +0100
@@ -37,6 +37,10 @@
 #include "globals.h"
 #include "properties.h"
 #include "virtual.h"
+#include "client.h"
+#include "slots.h"
+#include "states.h"
+#include "evbind.h"
 
 /***************************************************************************
 * global data
@@ -74,7 +78,6 @@
 extern	void	IconPaneSetPixmap();
 extern	void	IconPaneSetMask();
 
-static void	checkGroupBinding();
 
 /***************************************************************************
 * private data
@@ -156,6 +159,30 @@
 } minimalclosure;
 
 
+/*
+ * Check to see if a given focus action requires any change to the
+ * key bindings
+ */
+
+typedef struct {
+    List **list;
+    KeySym start_sym;
+    KeySym end_sym;
+    unsigned int modstate;
+    Boolean  state;
+    char *desc;
+} FocusClosure;
+
+
+#ifdef __STDC__
+static void	checkGroupBinding(Display *dpy, minimalclosure *mc, Boolean focus, FocusClosure *fcl);
+static void	promoteDependentFollowers(Window window, Window groupid);
+#else
+static void	checkGroupBinding();
+static void	promoteDependentFollowers();
+#endif
+
+
 /***************************************************************************
 * private functions
 ***************************************************************************/
@@ -424,6 +451,7 @@
 	    !(GRV.PPositionCompat && paneAttr->x <= 1 && paneAttr->y <= 1));
 }
 
+#if 0
 /*
  * Return an indication of whether this frame would be visible on the screen
  * if it were mapped at the given location.  Visibility is defined as having
@@ -452,6 +480,7 @@
 	    x + (int) winFrame->core.width >= Resize_width &&
 	    y + (int) winFrame->core.height >= Resize_height);
 }
+#endif
 
 
 /*
@@ -514,7 +543,7 @@
 	else
 	    DrawIconToWindowLines(cli->dpy, winIcon, cli->framewin);
 
-	UnmapWindow(cli->framewin);
+	UnmapWindow((WinGeneric *)cli->framewin);
 	XUnmapWindow(cli->dpy, PANEWINOFCLIENT(cli));
 	cli->framewin->fcore.panewin->pcore.pendingUnmaps++;
 
@@ -534,9 +563,9 @@
 	    DrawIconToWindowLines(cli->dpy, winIcon, cli->framewin);
 
 	if (raise)
-	    RaiseWindow(cli->framewin);
+	    RaiseWindow((WinGeneric *)cli->framewin);
 
-	MapWindow(cli->framewin);
+	MapWindow((WinGeneric *)cli->framewin);
 	XMapRaised(cli->dpy, PANEWINOFCLIENT(cli));
 
 	ClientSetWMState(cli,NormalState);
@@ -679,7 +708,7 @@
  * REMIND we don't update the group data structures while the GroupApply is in
  * progress.  Doing so will corrupt the group data structure.
  */  
-static void *
+static void
 promoteDependentFollowers(window, groupid)
     Window window;
     Window groupid;
@@ -1125,7 +1154,7 @@
 	 * Size and generally configure the frame window tree
 	 */
 	FrameSetPosFromPane(winFrame,paneAttr.x,paneAttr.y);
-	WinCallConfig(dpy, winPane, NULL);
+	WinCallConfig(dpy, (WinGeneric *)winPane, NULL);
 
 	/* 
 	 * Size and generally configure the icon window tree
@@ -1136,12 +1165,12 @@
 	    cli->wmHints->icon_x += cli->scrInfo->vdm->offsetX;
 	    cli->wmHints->icon_y += cli->scrInfo->vdm->offsetY;
 	}
-	WinCallConfig(dpy, winIconPane, NULL);
+	WinCallConfig(dpy, (WinGeneric *)winIconPane, NULL);
 	if (cli->wmHints != NULL && (cli->wmHints->flags & IconPositionHint))
 	    IconSetPos(winIcon,cli->wmHints->icon_x,cli->wmHints->icon_y);
 	else
 	    IconSetPos(winIcon,icon_x,icon_y);
-	WinCallConfig(dpy, winIcon, NULL);
+	WinCallConfig(dpy, (WinGeneric *)winIcon, NULL);
 
         /*
 	 * We manually move the icon pane window, since all the configuration
@@ -1224,14 +1253,14 @@
 	cli->restoreSticky = STICKY_NO_RESTORE;
 	switch ( initstate ) {
 	case NormalState:
-	    MapRaised(winFrame);
+	    MapRaised((WinGeneric *)winFrame);
 	    XMapRaised(dpy, winPane->core.self);
 	    if (!fexisting) {
 		FrameWarpPointer(cli);
 		if (GRV.AutoInputFocus)
 		    ClientSetFocus(cli, True, CurrentTime);
 		if (GRV.AutoColorFocus)
-		    LockColormap(dpy, cli, winPane);
+		    LockColormap(dpy, cli, (WinGeneric *)winPane);
 	    }
 	    break;
 	case IconicState:
@@ -1497,7 +1526,7 @@
  
         case NormalState:
                 /* Unmap the frame and pane. */
-                UnmapWindow(frameInfo);
+                UnmapWindow((WinGeneric *)frameInfo);
                 XUnmapWindow(dpy, PANEWINOFCLIENT(cli));
                 break;
  
@@ -1510,7 +1539,7 @@
         FrameUnwarpPointer(cli);
 
 	/* move the pane and unparent it */
-	FrameUnparentPane(cli, frameInfo, frameInfo->fcore.panewin);
+	FrameUnparentPane(cli, frameInfo, (WinPane *)frameInfo->fcore.panewin);
 
         DestroyClient(cli);
 }
@@ -1543,7 +1572,7 @@
  
         case NormalState:
                 /* Unmap the frame and pane */
-                UnmapWindow(frameInfo);
+                UnmapWindow((WinGeneric *)frameInfo);
                 XUnmapWindow(dpy, PANEWINOFCLIENT(cli));
                 frameInfo->fcore.panewin->pcore.pendingUnmaps++;
                 break;
@@ -1704,20 +1733,6 @@
 }
 
 /*
- * Check to see if a given focus action requires any change to the
- * key bindings
- */
-
-typedef struct {
-    List **list;
-    KeySym start_sym;
-    KeySym end_sym;
-    unsigned int modstate;
-    Boolean  state;
-    char *desc;
-} FocusClosure;
-
-/*
  * Check the binding state for a given key group
  */
 static void
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/states.h xview-3.2p1.4/clients/olvwm-4.5/states.h
--- xview-3.2p1.4.orig/clients/olvwm-4.5/states.h	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.5/states.h	2013-01-07 12:55:41.021009000 +0100
@@ -0,0 +1,26 @@
+#ifndef _OLWM_STATES_H
+#define _OLWM_STATES_H
+
+#ifdef __STDC__
+#include <X11/Intrinsic.h>
+#endif
+
+#ifdef __STDC__
+void CheckBindingState(WinGenericFrame *win, Boolean focus);
+void StateIconic(Client *cli, Time timestamp);
+void StateInvisible(Client *cli, Time timestamp);
+void StateNormal(Client *cli, Time timestamp);
+void StateUpdateWMHints(Client *cli, XPropertyEvent *event);
+void StateUpdateWMNormalHints(Client *cli, XPropertyEvent *event);
+void StateUpdateWMProtocols(Client *cli, XPropertyEvent *event);
+#else
+void CheckBindingState();
+void StateIconic();
+void StateInvisible();
+void StateNormal();
+void StateUpdateWMHints();
+void StateUpdateWMNormalHints();
+void StateUpdateWMProtocols();
+#endif
+
+#endif
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/usermenu.c xview-3.2p1.4/clients/olvwm-4.5/usermenu.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/usermenu.c	2003-09-22 23:48:39.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/usermenu.c	2013-01-07 12:55:41.059426000 +0100
@@ -96,7 +96,7 @@
 #include <errno.h>
 #include <stdio.h>
 #include <ctype.h>
-#ifdef SYSV
+#if defined(SYSV) || defined(__linux__)
 #include <string.h>
 #else
 #include <strings.h>
@@ -108,6 +108,7 @@
 #include <X11/Xlib.h>
 #include <X11/Xutil.h>
 #include <X11/Xatom.h>
+#include <stdlib.h>		/* atoi() */
 
 #ifdef XPM
 #ifndef	NO_PIXEL_FIX
@@ -137,6 +138,10 @@
 #include "mem.h"
 #include "win.h"
 #include "menu.h"
+#include "pixmap.h"
+#include "usermenu.h"
+#include "client.h"
+#include "services.h"
 
 static char *menuFileName	= "openwin-menu";
 static char *workspaceHelpStub	= "workspace";
@@ -727,7 +732,7 @@
 
     orig = pin;
 
-    *pathname = NULL;
+    *pathname = '\0';
 
     len = strlen(pin);
 
@@ -753,7 +758,7 @@
 		}
 		tmp = pend - pin;
 		memcpy(envbuff, pin, tmp);
-		envbuff[tmp] = NULL;
+		envbuff[tmp] = '\0';
 		pin = pend;
 		len -= tmp;
 		ppw = getpwnam(envbuff);
@@ -803,7 +808,7 @@
 		}
 		tmp = pend - pin;
 		memcpy(envbuff, pin, tmp);
-		envbuff[tmp] = NULL;
+		envbuff[tmp] = '\0';
 		len -= (2 + tmp + 1);
 		pin = pend+1;
 	    } else {
@@ -812,12 +817,12 @@
 		if (pend) {
 		    int tmp = pend - pin;
 		    memcpy(envbuff, pin, tmp);
-		    envbuff[tmp] = NULL;
+		    envbuff[tmp] = '\0';
 		    len -= tmp;
 		    pin = pend;
 		} else {
 		    memcpy(envbuff, pin, len);
-		    envbuff[len] = NULL;
+		    envbuff[len] = '\0';
 		    len = 0;
 		}
 	    }
@@ -856,9 +861,9 @@
 	    --len;
 	}
     }
-    *p = NULL;
+    *p = '\0';
     if (haveslash)
-	pathname[strlen(pathname)-1] = NULL;
+	pathname[strlen(pathname)-1] = '\0';
 
     return MemNewString(pathname);
 }
@@ -2003,6 +2008,7 @@
 	moveHomeButton.label[0].string = GetText("Move Home");
 }
 
+void
 SetWindowMenuTitle(scrInfo)
     ScreenInfo *scrInfo;
 {
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/usermenu.h xview-3.2p1.4/clients/olvwm-4.5/usermenu.h
--- xview-3.2p1.4.orig/clients/olvwm-4.5/usermenu.h	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/clients/olvwm-4.5/usermenu.h	2013-01-07 12:55:41.092416000 +0100
@@ -0,0 +1,24 @@
+#ifndef _OLWM_USERMENU_H
+#define _OLWM_USERMENU_H
+
+#ifdef __STDC__
+void CreateWindowMenuInfo(Display *dpy, ScreenInfo *scrInfo);
+Menu *GetEnabledMenu(Client *cli, Bool flfull, Bool flnotitle, Bool flsticky);
+void RootMenuShow(Display *dpy, WinGeneric *winInfo, XEvent *pEvent);
+void ReInitUserMenu(Display *dpy, ScreenInfo  *scrInfo, Bool forceReRead);
+void SetWindowMenuTitle(ScreenInfo *scrInfo);
+void ShowStandardMenu(WinGenericFrame *win, XEvent *eve, Bool flbutton);
+void ShowStandardMenuSync(WinGenericFrame *win, XEvent *eve, Bool flbutton, void (*proc)(), void *data);
+void WindowMenuCreate(Display *dpy, ScreenInfo *scrInfo);
+#else
+void CreateWindowMenuInfo();
+Menu *GetEnabledMenu();
+void RootMenuShow();
+void ReInitUserMenu();
+void SetWindowMenuTitle();
+void ShowStandardMenu();
+void ShowStandardMenuSync();
+void WindowMenuCreate();
+#endif
+
+#endif
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/virtual.c xview-3.2p1.4/clients/olvwm-4.5/virtual.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/virtual.c	2003-09-22 23:48:40.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/virtual.c	2013-01-07 17:50:02.787736000 +0100
@@ -7,6 +7,7 @@
 #include <stdio.h>
 #include <string.h>
 #include <dirent.h>
+#include <math.h>
 #include <sys/param.h>
 #include <X11/Xos.h>
 #include <X11/Xlib.h>
@@ -23,29 +24,60 @@
 #include "globals.h"
 #include "win.h"
 #include "menu.h"
-#include "math.h"
 #include "virtual.h"
 #include "patchlevel.h"
 
 #include "vdm.icon"
 #include "vdm.mask"
 
+#include "error.h"
+#include "client.h"
+#include "pixmap.h"
+#include "states.h"
+#include "evbind.h"
+#include "info.h"
+
+#if defined(__linux__) && defined(__GLIBC__) && 0
+/* GNU libc doesn't use INIT, so we have to define sp ourselves. We have to
+ * initialize it as well before we call compile(). Maybe this is a bug in
+ * GNU libc, but I couldn't care less...
+ *
+ * NEWS: As of glibc 2.0.5c, GNU libc does use INIT, but it calls the first
+ * argument of compile __instring instead of instring. Sigh. Whoever designed
+ * this regexp API deserves to be shot immediately, if you ask me.
+ *
+ * MORE NEWS: glibc 2.0.6 seems to do this right, so I added a && 0
+ * above to disable my patches. Remove it if you have an older glibc.
+ *
+ * martin.buck@bigfoot.com
+ */
+/*char *sp;*/
+#define INIT   register char *sp = __instring;
+#else
 #define INIT   register char *sp = instring;
+#endif
 #define GETC() (*sp++)
 #define PEEKC()     (*sp)
 #define UNGETC(c)   (--sp)
 #define RETURN(c)   return;
-#define ERROR(val)  regerr(val)
+static regexp_err(int val);
+#define ERROR(val)  regexp_err(val)
 #define TRUE 1
 #define FALSE 0
 
+#ifdef __STDC__
+static void regerr(int val);
+#else
+static void regerr(int val);
+#endif
+
 #include <regexp.h>
 #ifdef REGEXP
 regexp *expbuf;
 #endif
 
 #ifdef IDENT
-#ident "@(#)virtual.c	1.1 olvwm version 09/22/03"
+#ident "@(#)virtual.c	1.6 olvwm version 07 Jan 1994"
 #endif
 
 /* Class Function Vector; a virtual pane is the VDM window in which all
@@ -94,6 +126,15 @@
 
 #define CEIL(a,b)	(((a)+(b)-1)/(b))
 
+#ifdef __STDC__
+static int rexMatch(char *string);
+static void rexInit(char *pattern);
+#else
+static int rexMatch();
+static void rexInit();
+#endif
+
+
 /*
  * ==========================================================================
  *
@@ -639,7 +680,7 @@
  *
  * Event functions for the VDM
  */
-static
+static int
 vdmExpose(dpy, event, winInfo)
     Display	*dpy;
     XEvent	*event;
@@ -654,7 +695,7 @@
 	;	/* empty */
 }
 
-static
+static void
 vdmKeyPress(dpy, ev, winInfo)
     Display	*dpy;
     XEvent	*ev;
@@ -665,7 +706,7 @@
 	    NoFocusEventBeep(dpy, ev, winInfo);
 }
 
-static
+static void
 vdmConfigure(dpy, event, winInfo)
     Display		*dpy;
     XConfigureEvent	*event;
@@ -718,7 +759,7 @@
     }
 }
 
-static
+static int
 vdmNewConfigure(winInfo, pxcre)
     WinVirtual			*winInfo;
     XConfigureRequestEvent	*pxcre;
@@ -752,7 +793,7 @@
     return winInfo->core.dirtyconfig;
 }
 	
-static
+static void
 vdmButtonPress(dpy, event, winInfo)
     Display	*dpy;
     XEvent	*event;
@@ -784,10 +825,12 @@
 	    MenuShowSync(dpy, winInfo, scrInfo->menuTable[MENU_VDM],
 			 event, NULL, NULL, False, False);
 	    break;
+	default:
+	    break;
     }
 }
 
-static
+static void
 /* ARGSUSED */
 vdmRedraw(dpy, win)
     Display	*dpy;
@@ -796,13 +839,13 @@
     drawVDMGrid(win->core.client->dpy, win->core.client->scrInfo->vdm);
 }
 
-static
+static void
 vdmExit()
 {
     fprintf(stderr, "VDM destroy\n");
 }
 
-static
+static void
 vdmButtonRelease()
 {
 /*
@@ -810,7 +853,7 @@
  */
 }
 
-static
+static void
 vdmSetConfigure(dpy, winInfo)
     Display	*dpy;
     WinVirtual	*winInfo;
@@ -823,7 +866,7 @@
 	xwc.y = winInfo->core.y;
 	xwc.width = winInfo->core.width;
 	xwc.height = winInfo->core.height;
-	ConfigureWindow(dpy, winInfo,
+	ConfigureWindow(dpy, (WinGeneric *)winInfo,
 			 winInfo->core.dirtyconfig, &xwc);
 	winInfo->core.dirtyconfig &= ~(CWX|CWY|CWWidth|CWHeight);
     }
@@ -844,7 +887,7 @@
     vdmConfigure(dpy, &ce, winInfo);
 }
 
-static
+static void
 vdmButtonMotion()
 {
 /*
@@ -852,7 +895,7 @@
  */
 }
 
-static
+static int
 vdmNewpos(win, x, y)
     WinVirtual	*win;
     int		x, y;
@@ -868,7 +911,7 @@
     return win->core.dirtyconfig;
 }
 
-static
+static void
 vdmSelect()
 {
 }
@@ -895,7 +938,7 @@
 /*
  * Callback function when VDM frame is mapped
  */
-static
+static void
 vdmSetupFrame(win, cli, frame)
     WinGeneric		*win;
     Client		*cli;
@@ -917,7 +960,7 @@
 				vdmmask_width, vdmmask_height);
 }
 
-static
+static void
 /* ARGSUSED */
 vdmComputeWidth(dpy, event, winInfo)
     Display	*dpy;
@@ -926,7 +969,7 @@
 {
 }
 
-static
+static void
 /* ARGSUSED */
 vdmComputeHeight(dpy, event, winInfo)
     Display	*dpy;
@@ -935,7 +978,7 @@
 {
 }
 
-static
+static void
 vdmProperty(dpy, event, winInfo)
 Display *dpy;
 XPropertyEvent *event;
@@ -1076,7 +1119,7 @@
 
     wmHints->icon_window = XCreateSimpleWindow(dpy,
 				RootWindow(dpy, scrInfo->screen),
-				0, 0, vdm_width, vdm_height, 0, 0,
+				0, 0, vdm_width, vdm_height, 0, 0L,
 				scrInfo->colorInfo.workspaceRootPixel);
 
     classHints = XAllocClassHint();
@@ -1131,7 +1174,7 @@
     w->core.dirtyconfig = CWX | CWY | CWWidth | CWHeight;
     w->core.exposures = NULL;
     w->core.helpstring = "olvwm:VDM";
-    w->core.colormap = NULL;		/* initialized in callback */
+    w->core.colormap = 0;		/* initialized in callback */
 
     w->core.self = XCreateWindow(dpy, RootWindow(dpy, scrInfo->screen),
 	    			sizeHints->x, sizeHints->y,
@@ -1161,10 +1204,27 @@
 					v->client->wmHints->icon_pixmap;
     ((WinIconPane *) v->client->iconwin->fcore.panewin)->iconMask =
 					v->client->wmHints->icon_mask;
-    VirtualSetGeometry(v->client->framewin,
+    VirtualSetGeometry((WinGeneric *)v->client->framewin,
 		       v->client->scrInfo->vdm->resources->geometry);
-    VirtualSetGeometry(v->client->iconwin,
+    VirtualSetGeometry((WinGeneric *)v->client->iconwin,
 		       v->client->scrInfo->vdm->resources->iconGeometry);
+#if 1
+/* If a geometry for the virtual desktop icon was specified, treat the icon as
+ * if it was positioned manually. This ensures that it never gets placed
+ * automatically, even if FreeIconSlots is set. Unfortunately,
+ * VirtualSetGeometry() doesn't tell us whether the geometry spec was valid,
+ * so we have to check ourselves...
+ *
+ * <mbuck@debian.org>
+ */
+{
+    int changed, dummy;
+    changed = XParseGeometry(v->client->scrInfo->vdm->resources->iconGeometry, &dummy, &dummy, &dummy, &dummy);
+    if (changed & (XValue | YValue)) {
+	v->client->iconwin->fManuallyPositioned = True;
+    }
+}
+#endif
 
     XFree((char *) sizeHints);
     XFree((char *) wmHints);
@@ -1249,6 +1309,7 @@
     MakeVirtualIcon(cli);
 }
 
+void
 MakeVirtualIcon(cli)
     Client	*cli;
 
@@ -1340,6 +1401,7 @@
 /*
  * Dispatch the event to its virtual window if it belongs to a virtual window
  */
+int
 DispatchVirtual(dpy, event)
     Display	*dpy;
     XEvent	*event;
@@ -1430,6 +1492,7 @@
     return True;
 }
 
+int
 MakeSticky(cli, sticky)
     Client	*cli;
     Bool	sticky;
@@ -1443,7 +1506,7 @@
     if (cli->groupid == PANEWINOFCLIENT(cli->scrInfo->vdm->client) && !sticky) {
 	if (GRV.Beep == BeepAlways)
 	    XBell(cli->dpy, 100);
-	return !NULL;
+	return -1;
     }
     cli->sticky = sticky;
     if (sticky && !GRV.VirtualDrawSticky)
@@ -1464,14 +1527,15 @@
 	y = cli->iconwin->core.y;
 	cli->iconwin->core.dirtyconfig |= CWX;
 	IconSetPos(cli->iconwin, x + ICON_HORZBORDER, y + ICON_VERTBORDER);
-	WinCallConfig(cli->dpy, cli->iconwin, NULL);
+	WinCallConfig(cli->dpy, (WinGeneric *)cli->iconwin, NULL);
     }
-    return NULL;
+    return 0;
 }
 
 /*
  * Return true if the given key action should affect the VDM
  */
+int
 KeyMoveVDM(dpy, ev)
     Display *dpy;
     XEvent  *ev;
@@ -1509,6 +1573,7 @@
 /*
  * Update the selection state of the given window's virtual representation
  */
+void
 VirtualSelect(win, sel)
     WinGeneric	*win;
     Bool	sel;
@@ -1524,6 +1589,7 @@
  * is called so that all the coordinates will be correct for startup
  * position
  */
+void
 VirtualSaveDesktops(dpy, x, y)
     Display	*dpy;
     int		x, y;
@@ -1541,6 +1607,7 @@
     }
 }
 
+void
 VirtualRestoreDesktops(dpy)
     Display	*dpy;
 {
@@ -1555,6 +1622,7 @@
     }
 }
 
+void
 VirtualCleanup(dpy)
     Display	*dpy;
 
@@ -1562,6 +1630,7 @@
     VirtualSaveDesktops(dpy, 0, 0);
 }
 
+void
 ResizeVDM(vdm, size)
     VirtualDesktop	*vdm;
     char		*size;
@@ -1640,6 +1709,7 @@
 /*
  * Resize the VDM with the new scale
  */
+void
 RescaleVDM(vdm, scale)
     VirtualDesktop	*vdm;
     int			scale;
@@ -1664,6 +1734,7 @@
     ListApply(ActiveClientList, remakeVirtual, 0);
 }
 
+void
 VirtualUpdateVirtualWindows(cli)
     Client	*cli;
 {
@@ -1671,6 +1742,7 @@
     ClientRefresh(cli);
 }
 
+void
 VirtualUpdateDrawSticky(cli)
     Client	*cli;
 {
@@ -1681,6 +1753,7 @@
 /*
  * Size the VDM with the new geometry
  */
+void
 VirtualSetGeometry(win, geom)
     WinGeneric	*win;
     char	*geom;
@@ -1737,6 +1810,7 @@
  * This move is constrained to a logical screen, even if the grid is
  * off.
  */
+void
 VDMMoveTo(dpy, client, x, y)
     Display	*dpy;
     Client	*client;
@@ -1759,6 +1833,7 @@
  * Goto logical screen passed 
  */
 
+void
 VDMGoto(dpy, client, screen)
     Display	*dpy;
     Client	*client;
@@ -1775,6 +1850,7 @@
 					client->scrInfo->vdm->offsetY);
 }
 
+void
 MoveDesktopFunc(dpy, wininfo, menuinfo, btn)
     Display	*dpy;
     WinGeneric	*wininfo;
@@ -1805,6 +1881,7 @@
  * X window and its virtual representation.
  */
 
+void
 MapWindow(win)
     WinGeneric	*win;
 {
@@ -1814,9 +1891,10 @@
     if (GRV.VirtualDrawSticky || !win->core.client->sticky)
         XMapWindow(win->core.client->dpy, win->core.virtual);
     if (GRV.VirtualRaiseVDM && win->core.client->scrInfo->vdm->client)
-	RaiseWindow(win->core.client->scrInfo->vdm->client->framewin);
+	RaiseWindow((WinGeneric *)win->core.client->scrInfo->vdm->client->framewin);
 }
 
+void
 UnmapWindow(win)
     WinGeneric	*win;
 {
@@ -1825,6 +1903,7 @@
         XUnmapWindow(win->core.client->dpy, win->core.virtual);
 }
 
+void
 MapRaised(win)
     WinGeneric	*win;
 {
@@ -1834,9 +1913,10 @@
     if (GRV.VirtualDrawSticky || !win->core.client->sticky)
         XMapRaised(win->core.client->dpy, win->core.virtual);
     if (GRV.VirtualRaiseVDM && win->core.client->scrInfo->vdm->client)
-	RaiseWindow(win->core.client->scrInfo->vdm->client->framewin);
+	RaiseWindow((WinGeneric *)win->core.client->scrInfo->vdm->client->framewin);
 }
 
+void
 RaiseWindow(win)
     WinGeneric	*win;
 {
@@ -1846,18 +1926,20 @@
 	win->core.client->scrInfo->vdm->client &&
 	win->core.client->scrInfo->vdm->client &&
   win->core.self != win->core.client->scrInfo->vdm->client->framewin->core.self)
-	RaiseWindow(win->core.client->scrInfo->vdm->client->framewin);
+	RaiseWindow((WinGeneric *)win->core.client->scrInfo->vdm->client->framewin);
 }
 
+void
 LowerWindow(win)
     WinGeneric	*win;
 {
     XLowerWindow(win->core.client->dpy, win->core.self);
     XLowerWindow(win->core.client->dpy, win->core.virtual);
     if (GRV.VirtualRaiseVDM)
-	RaiseWindow(win->core.client->scrInfo->vdm->client->framewin);
+	RaiseWindow((WinGeneric *)win->core.client->scrInfo->vdm->client->framewin);
 }
 
+void
 DestroyWindow(win)
     WinGeneric	*win;
 {
@@ -1867,6 +1949,7 @@
 	XDestroyWindow(win->core.client->dpy, win->core.virtual);
 }
 
+void
 DeleteProperty(dpy, win, atom)
     Display		*dpy;
     WinGenericFrame	*win;
@@ -1878,6 +1961,7 @@
 	XDeleteProperty(dpy, win->core.virtual, atom);
 }
 
+void
 ChangeProperty(dpy, win, property, type, format, mode, data, nelements)
    Display		*dpy;
    WinGenericFrame	*win;
@@ -1894,6 +1978,7 @@
 		    mode, data, nelements);
 }
 
+void
 ConfigureWindow(dpy, win, mask, values)
     Display	*dpy;
     WinGeneric	*win;
@@ -1947,7 +2032,7 @@
     }
     XConfigureWindow(dpy, win->core.virtual, mask, values);
     if (GRV.VirtualRaiseVDM)
-	RaiseWindow(vdm->client->framewin);
+	RaiseWindow((WinGeneric *)vdm->client->framewin);
 }
 
 /*
@@ -1968,6 +2053,7 @@
  * Menu generation function for DIRMENU
  *
  */
+void
 /* ARGSUSED */
 GenDirMenuFunc(dpy, menuInfo, bindex, cache, winInfo, depth)
     Display	*dpy;
@@ -2060,8 +2146,7 @@
 				MenuInfoCreate(cache, winInfo, menu, depth, slot);
 }
 
-static
-regerr(val)
+static regexp_err(val)
 int val;
 {
     switch(val) {
@@ -2110,7 +2195,7 @@
 
 static char expbuf[256];
 
-static
+static int
 rexMatch(string)
     char *string;
 {
@@ -2121,7 +2206,7 @@
 #endif
 }
 
-static
+static void
 rexInit(pattern)
     char *pattern;
 {
@@ -2154,6 +2239,13 @@
 #ifdef REGEXP
     expbuf = regcomp(newPattern);
 #else
+#if defined(__linux__) && defined(__GLIBC__)
+    /* See comment above.
+     *
+     * martin.buck@bigfoot.com
+     */
+/*    sp = newPattern;*/
+#endif
     compile(newPattern, expbuf, &expbuf[256], '\0');
 #endif
 }
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/virtual.h xview-3.2p1.4/clients/olvwm-4.5/virtual.h
--- xview-3.2p1.4.orig/clients/olvwm-4.5/virtual.h	2003-09-22 23:48:40.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/virtual.h	2013-01-07 12:55:41.209970000 +0100
@@ -110,4 +110,60 @@
     double	delta_x, delta_y;
 };
 
+#ifdef __STDC__
+void ChangeProperty(Display *dpy, WinGenericFrame *win, Atom property, Atom type, int format, int mode, unsigned char *data, int nelements);
+void ConfigureWindow(Display *dpy, WinGeneric *win, int mask, XWindowChanges *values);
+void DeleteProperty(Display *dpy, WinGenericFrame *win, Atom atom);
+void DestroyVDM(Display *dpy, VirtualDesktop *vdm, Colormap *cm);
+int DispatchVirtual(Display *dpy, XEvent *event);
+int KeyMoveVDM(Display *dpy, XEvent *ev);
+void LowerWindow(WinGeneric *win);
+void MakeVDM(Display *dpy, ScreenInfo *scrInfo, Client *client, VirtualResources *rsc);
+void MakeVirtualIcon(Client *cli);
+void MakeVirtual(Client *cli);
+int MakeSticky(Client *cli, Bool sticky);
+void MapWindow(WinGeneric *win);
+void UnmapWindow(WinGeneric *win);
+void MapRaised(WinGeneric *win);
+void RaiseWindow(WinGeneric *win);
+void RedrawVDM(VirtualDesktop *vdm);
+void RescaleVDM(VirtualDesktop *vdm, int scale);
+void ResizeVDM(VirtualDesktop *vdm, char *size);
+void SetWName(Display *dpy, VirtualDesktop *vdm);
+void VDMGoto(Display *dpy, Client *client, int screen);
+void VDMMoveTo(Display *dpy, Client *client, int x, int y);
+void VirtualCleanup(Display *dpy);
+void VirtualSelect(WinGeneric *win, Bool sel);
+void VirtualSetGeometry(WinGeneric *win, char *geom);
+void VirtualUpdateDrawSticky(Client *cli);
+void VirtualUpdateVirtualWindows(Client *cli);
+#else
+void ChangeProperty();
+void ConfigureWindow();
+void DeleteProperty();
+void DestroyVDM();
+int DispatchVirtual();
+int KeyMoveVDM();
+void LowerWindow();
+void MakeVDM();
+void MakeVirtualIcon();
+void MakeVirtual();
+int MakeSticky();
+void MapWindow();
+void UnmapWindow();
+void MapRaised();
+void RaiseWindow();
+void RedrawVDM();
+void RescaleVDM();
+void ResizeVDM();
+void SetWName();
+void VDMGoto();
+void VDMMoveTo();
+void VirtualCleanup();
+void VirtualSelect();
+void VirtualSetGeometry();
+void VirtualUpdateDrawSticky();
+void VirtualUpdateVirtualWindows();
+#endif
+
 #endif	/* _OLWM_VIRTUAL_H */
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/win.h xview-3.2p1.4/clients/olvwm-4.5/win.h
--- xview-3.2p1.4.orig/clients/olvwm-4.5/win.h	2003-09-22 23:48:40.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/win.h	2013-01-07 12:55:41.250793000 +0100
@@ -556,10 +556,6 @@
 extern WinGeneric *VGetInfo();
 extern void WIApply();
 
-/* window functions */
-extern void WinAddChild();
-extern void WinRemoveChild();
-
 /* Useful client macros */
 #define PANEOFCLIENT(cli) ((cli)->framewin->fcore.panewin)
 #define PANEWINOFCLIENT(cli) (PANEOFCLIENT(cli)->core.self)
@@ -573,4 +569,57 @@
 
 extern Client *CurrentClient;
 
+#ifdef __STDC__
+void ColorFocusInit(Display *dpy, WinGeneric *root);
+void FrameFlashTitleBar(WinPaneFrame *winInfo);
+void FrameMinSize(WinPaneFrame *frame, int *width, int *height);
+void FrameSetupGrabs(Client *cli, Window win, Bool activate);
+void FrameUnparentPane(Client *cli, WinPaneFrame *winFrame, WinPane *winPane);
+void FrameUpdateShape(Client *cli, WinPaneFrame *winInfo);
+void FrameFlashTitleBar(WinPaneFrame *winInfo);
+void HandleHelpKey(Display *dpy, XEvent *pEvent);
+void IconUpdateName(Client *cli, XPropertyEvent *event);
+void LockColormap(Display *dpy, Client *cli, WinGeneric *winInfo);
+/*WinPinMenu *MakePinMenu(Display *dpy, WinGeneric *winInfo, MenuInfo *origMenuInfo);*/
+void MenuInit(Display *dpy);
+int PinMenuInit(Display *dpy);
+void PushPinInit(Display *dpy);
+void PushPinSetPinState(Display *dpy, WinPushPin *winInfo, int newState, Bool sendDelete);
+void PushPinTogglePinState(Display *dpy, WinPushPin *winInfo, Bool sendDelete);
+void ResizeInit(Display *dpy);
+void RootInit(Display *dpy);
+void WinAddChild(WinGeneric *parent, WinGeneric *child);
+void WinCallConfig(Display *dpy, WinGeneric *win, XConfigureRequestEvent *pxcre);
+void WinCallDestroy(Client *cli);
+void WinCallDraw(WinGeneric *win);
+void WinRemoveChild(WinGeneric *parent, WinGeneric *child);
+void WinRootPos(WinGeneric *win, int *px, int *py);
+void WinCallSelect(Client *cli, Bool sel);
+#else
+void ColorFocusInit();
+void FrameFlashTitleBar();
+void FrameMinSize();
+void FrameSetupGrabs();
+void FrameUnparentPane();
+void FrameUpdateShape();
+void HandleHelpKey();
+void IconUpdateName();
+void LockColormap();
+/*WinPinMenu *MakePinMenu();*/
+void MenuInit();
+int PinMenuInit();
+void PushPinInit();
+void PushPinSetPinState();
+void PushPinTogglePinState();
+void ResizeInit();
+void RootInit();
+void WinAddChild();
+void WinCallConfig();
+void WinCallDestroy();
+void WinCallDraw();
+void WinRemoveChild();
+void WinRootPos();
+void WinCallSelect();
+#endif
+
 #endif /* _OLWM_WIN_H */
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/winframe.c xview-3.2p1.4/clients/olvwm-4.5/winframe.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/winframe.c	2003-09-22 23:48:40.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/winframe.c	2013-01-07 12:55:41.289741000 +0100
@@ -34,6 +34,9 @@
 #include "globals.h"
 #include "error.h"
 
+#include "client.h"
+#include "states.h"
+
 /***************************************************************************
 * global data
 ***************************************************************************/
@@ -84,6 +87,11 @@
 static void setIMStatusText();
 #endif
 static void updateResizePositions();
+#ifdef __STDC__
+static int headerHeight(Client *cli, Graphics_info *gis);
+#else
+static int headerHeight();
+#endif
 
 /***************************************************************************
 * sizing and decoration positioning functions
@@ -354,7 +362,7 @@
 	Client *cli = frameInfo->core.client;
 	WinPane		*winPane = (WinPane*)frameInfo->fcore.panewin;
 
-	ClientConfigure(cli,winPane,event);
+	ClientConfigure(cli, (WinGeneric *)winPane, (XConfigureRequestEvent *)event);
 }
 
 /*
@@ -403,7 +411,7 @@
 WinPaneFrame *frameInfo;
 XButtonEvent *lastpress;
 {
-	ClientMove(frameInfo->core.client,lastpress);
+	ClientMove(frameInfo->core.client, (XEvent *)lastpress);
 }
 
 /*
@@ -1746,7 +1754,7 @@
 
 	/* Set the new pos/height */
 	(WinFunc(paneInfo,pcore.setsizefunc))(paneInfo,width,height);
-	WinCallConfig(client->dpy,paneInfo,NULL);
+	WinCallConfig(client->dpy, (WinGeneric *)paneInfo, NULL);
 
 	frameInfo->fcore.fullsize = !frameInfo->fcore.fullsize;
 
@@ -1809,15 +1817,15 @@
  * devices.
  */
 void
-FrameAllowEvents(cli, time)
+FrameAllowEvents(cli, timestamp)
     Client *cli;
-    Time time;
+    Time timestamp;
 {
     if (!GRV.FocusFollowsMouse) {
 	switch (cli->focusMode) {
 	case Passive:
 	case LocallyActive:
-	    XAllowEvents(cli->dpy, AsyncBoth, time);
+	    XAllowEvents(cli->dpy, AsyncBoth, timestamp);
 	    break;
 	}
     }
@@ -2250,7 +2258,7 @@
 	{
 	    (WinFunc(win->winBusy,core.destroyfunc))(win->core.client->dpy, win->winBusy);
 	}
-	WinCallDraw(win);
+	WinCallDraw((WinGeneric *)win);
 }
 
 /*
@@ -2300,7 +2308,7 @@
 
 	if (warpParam == NULL) {
 
-	    WinRootPos(frameInfo, &offsetX, &offsetY);
+	    WinRootPos((WinGeneric *)frameInfo, &offsetX, &offsetY);
 
 	    /* warp to the pushpin */
 	    cli->warpInfo.dflButtonX = xposPushPin(gis);
@@ -2317,7 +2325,7 @@
 
 	} else {
 
-	    WinRootPos(paneInfo, &offsetX, &offsetY);
+	    WinRootPos((WinGeneric *)paneInfo, &offsetX, &offsetY);
 
 	    /* save warp destination information */
 	    cli->warpInfo.warpToX = warpParam[0];
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/wingframe.c xview-3.2p1.4/clients/olvwm-4.5/wingframe.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/wingframe.c	2003-09-22 23:48:40.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/wingframe.c	2013-01-07 12:55:41.438791000 +0100
@@ -37,6 +37,9 @@
 #include "globals.h"
 #include "events.h"
 #include "virtual.h"
+#include "client.h"
+#include "selection.h"
+#include "evbind.h"
 
 /***************************************************************************
 * private data
@@ -207,7 +210,7 @@
 		    !(win->core.dirtyconfig &CWStackMode))
 			win->core.dirtyconfig &= ~CWSibling;
 
-                ConfigureWindow(dpy,win,win->core.dirtyconfig,&xwc);
+                ConfigureWindow(dpy, (WinGeneric *)win, win->core.dirtyconfig, &xwc);
 		win->core.dirtyconfig &= ~(CWX|CWY|CWWidth|CWHeight|CWSibling|CWStackMode);
         }
 }
@@ -258,11 +261,11 @@
                 (WinFunc(pane,pcore.setsizefunc))(pane,
                     w-(WinFunc(win,fcore.widthleft))(win)-(WinFunc(win,fcore.widthright))(win),
                     h-(WinFunc(win,fcore.heighttop))(win)-(WinFunc(win,fcore.heightbottom))(win));
-            WinCallConfig(win->core.client->dpy, pane, NULL);
+            WinCallConfig(win->core.client->dpy, (WinGeneric *)pane, NULL);
 	}
 	else
 	{
-            WinCallConfig(win->core.client->dpy, win, NULL);
+            WinCallConfig(win->core.client->dpy, (WinGeneric *)win, NULL);
 	}
 }
 
@@ -337,6 +340,8 @@
                 }
 		currentAction = ACTION_NONE;
 		break;
+	default:
+		break;
 
         }
 }
@@ -456,6 +461,8 @@
 	    if (WinFunc(frameInfo,fcore.menuPress) != NULL)
 		(WinFunc(frameInfo,fcore.menuPress))(dpy, event, frameInfo);
             break;
+	default:
+	    break;
 
         }  /*  End switch on button pressed */
 }
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/winicon.c xview-3.2p1.4/clients/olvwm-4.5/winicon.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/winicon.c	2003-09-22 23:48:40.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/winicon.c	2013-01-07 12:55:41.465875000 +0100
@@ -33,6 +33,10 @@
 #include "globals.h"
 #include "slots.h"
 #include "group.h"
+#include "client.h"
+#include "virtual.h"
+#include "selection.h"
+#include "states.h"
 
 extern 	Bool	PropGetWMName();
 extern 	Bool	PropGetWMIconName();
@@ -52,6 +56,16 @@
 * forward-declared functions
 ***************************************************************************/
 
+#ifdef __STDC__
+static int heightBottomIcon(WinIconFrame *win);
+static int heightTopIcon(WinIconFrame *win);
+static int widthBothIcon(WinIconFrame *win);
+#else
+static int heightBottomIcon();
+static int heightTopIcon();
+static int widthBothIcon();
+#endif
+
 /***************************************************************************
 * private event functions
 ***************************************************************************/
@@ -150,7 +164,7 @@
 {
 	SlotFree(iframe);
 	iframe->fManuallyPositioned = True;
-	ClientMove(iframe->core.client,lastpress);
+	ClientMove(iframe->core.client, (XEvent *)lastpress);
 }
 
 
@@ -250,10 +264,10 @@
  * drawIconBorder -- based on the value of select, draw the border for an icon
  */
 static void
-drawIconBorder(dpy, winInfo, select)
+drawIconBorder(dpy, winInfo, bselect)
 Display *dpy;
 WinIconFrame *winInfo;
-Bool    select;
+Bool    bselect;
 {
 	int 	x, y;           /* values for use with */
 	unsigned int width, height;  /* rectangle drawn for border */
@@ -269,7 +283,7 @@
 	 * If 3D is used, give "borderless" icons.  Otherwise, give black and 
 	 * white borders.
 	 */
-	if (select) {
+	if (bselect) {
 	    XDrawRectangle(dpy, w, borderGC,
 			   x, y, width, height );
 	    XDrawRectangle(dpy, w, borderGC,
@@ -315,7 +329,7 @@
               case 0:         /* outermost rectangle */
                       if (Win3D(winInfo))
                       {
-                              if ( select )
+                              if ( bselect )
                                       olgxState = OLGX_INVOKED;
                               else
                                       olgxState = OLGX_NORMAL;
@@ -328,14 +342,14 @@
                       }
                       else
                       {
-                              highlightGC = select
+                              highlightGC = bselect
                                               ? DrawSelectedGC
                                               : DrawBackgroundGC;
                               drawRectangle = True;
                       }
                       break;
               case 1:         /* middle rectangle */
-                      if ( select )
+                      if ( bselect )
                                       highlightGC = DrawSelectedGC;
                       else if (Win3D(winInfo))
                               highlightGC = DrawBackgroundGC;
@@ -347,7 +361,7 @@
                       break;
               case 2:         /* innermost rectangle */
               default:
-                      highlightGC = select ? DrawSelectedGC
+                      highlightGC = bselect ? DrawSelectedGC
                                            : DrawBackgroundGC;
                       drawRectangle = True;
                       break;
@@ -819,7 +833,7 @@
         XChangeSaveSet(cli->dpy, pane->core.self, SetModeInsert);
 #endif
     XMapWindow(cli->dpy, pane->core.self);
-    MapWindow(winIcon);
+    MapWindow((WinGeneric *)winIcon);
 }
 
 
@@ -834,7 +848,7 @@
 {
     WinIconPane *pane = (WinIconPane *)winIcon->fcore.panewin;
 
-    UnmapWindow(winIcon);
+    UnmapWindow((WinGeneric *)winIcon);
     XUnmapWindow(cli->dpy, pane->core.self);
 #ifdef notdef
     /* see winipane.c */
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/winnofoc.c xview-3.2p1.4/clients/olvwm-4.5/winnofoc.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/winnofoc.c	2003-09-22 23:48:40.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/winnofoc.c	2013-01-07 12:55:41.497237000 +0100
@@ -30,6 +30,8 @@
 #include "win.h"
 #include "globals.h"
 #include "selection.h"
+#include "client.h"
+#include "kbdfuncs.h"
 
 extern unsigned int FindModifierMask();
 extern Atom AtomOlwmNoFocusWin;
@@ -262,7 +264,7 @@
                                       ButtonRelease,&dummy))
 	    /*EMPTY*/
             ;
-	KeyBeep(dpy,event);
+	KeyBeep(dpy, (XKeyEvent *)event);
 }
 
 /*
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/winpane.c xview-3.2p1.4/clients/olvwm-4.5/winpane.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/winpane.c	2003-09-22 23:48:40.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/winpane.c	2013-01-07 12:55:41.525074000 +0100
@@ -29,6 +29,9 @@
 #include "olwm.h"
 #include "win.h"
 #include "globals.h"
+#include "virtual.h"
+#include "client.h"
+#include "states.h"
 
 /***************************************************************************
 * global data
@@ -130,7 +133,7 @@
 XEvent	*event;
 WinPane	*winInfo;
 {
-	ClientDistributeProperty(winInfo->core.client,event);
+	ClientDistributeProperty(winInfo->core.client, (XPropertyEvent *)event);
 }
 
 /* 
@@ -238,7 +241,7 @@
 		xwc.y = winInfo->core.y;
 		xwc.width = winInfo->core.width;
 		xwc.height = winInfo->core.height;
-		ConfigureWindow(dpy, winInfo,
+		ConfigureWindow(dpy, (WinGeneric *)winInfo,
 			winInfo->core.dirtyconfig, &xwc);
 		winInfo->core.dirtyconfig &= ~(CWX|CWY|CWWidth|CWHeight);
 	}
@@ -248,7 +251,7 @@
 	ce.serial = 0L;
 	ce.event = winInfo->core.self;
 	ce.window = winInfo->core.self;
-	WinRootPos(winInfo,&ce.x,&ce.y);
+	WinRootPos((WinGeneric *)winInfo, &ce.x, &ce.y);
 	ce.x -= winInfo->pcore.oldBorderWidth;
 	ce.y -= winInfo->pcore.oldBorderWidth;
 	ce.width = winInfo->core.width;
@@ -283,7 +286,7 @@
     if (pxcre == NULL)
 	return win->core.dirtyconfig;
 
-    WinRootPos(winFrame, &oldX, &oldY);
+    WinRootPos((WinGeneric *)winFrame, &oldX, &oldY);
     FrameGetGravityOffset(winFrame, &dx, &dy);
     oldX += dx;
     oldY += dy;
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/winpinmenu.c xview-3.2p1.4/clients/olvwm-4.5/winpinmenu.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/winpinmenu.c	2003-09-22 23:48:40.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/winpinmenu.c	2013-01-07 12:55:41.561702000 +0100
@@ -30,6 +30,7 @@
 #include "win.h"
 #include "menu.h"
 #include "globals.h"
+#include "client.h"
 
 /***************************************************************************
 * global data
@@ -90,12 +91,12 @@
     XEvent		*event;
     WinPinMenu		*winInfo;
 {
-    if (! StartMenuGrabs(dpy, winInfo))
+    if (! StartMenuGrabs(dpy, (WinGeneric *)winInfo))
 	return;
 
     MenuMakeFirst(winInfo->menuInfo, afterMenuShow, winInfo);
 
-    MenuTrack(dpy, event, winInfo, winInfo);
+    MenuTrack(dpy, event, (WinGeneric *)winInfo, (WinGeneric *)winInfo);
 }
 
 
@@ -107,8 +108,8 @@
 {
     MenuMakeFirst(winInfo->menuInfo, afterMenuShow, winInfo);
 
-    if (MenuHandleKeyEvent(dpy, event, winInfo, winInfo)) {
-	if (! StartMenuGrabs(dpy, winInfo))
+    if (MenuHandleKeyEvent(dpy, event, (WinGeneric *)winInfo, (WinGeneric *)winInfo)) {
+	if (! StartMenuGrabs(dpy, (WinGeneric *)winInfo))
 	    return;
     }
 }
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/winpush.c xview-3.2p1.4/clients/olvwm-4.5/winpush.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/winpush.c	2003-09-22 23:48:40.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/winpush.c	2013-01-07 12:55:41.589459000 +0100
@@ -29,6 +29,9 @@
 #include "olwm.h"
 #include "win.h"
 #include "globals.h"
+#include "virtual.h"
+#include "client.h"
+#include "evbind.h"
 
 /***************************************************************************
 * global data
@@ -89,6 +92,8 @@
             pushpinStateAfterPress = winInfo->pushpinin;
 	    currentAction = a;
 	    break;
+	default:
+	    break;
 	}
 }
 
@@ -302,7 +307,7 @@
 	w->core.self = win;
 	w->class = &classPushPin;
 	w->core.kind = WIN_PUSHPIN;
-	WinAddChild(par,w);
+	WinAddChild(par, (WinGeneric *)w);
 	w->core.children = NULL;
 	w->core.client = par->core.client;
 	w->core.x = x;	
@@ -327,7 +332,7 @@
 	/* register the window */
 	WIInstallInfo(w);
 
-        MapRaised(w);
+        MapRaised((WinGeneric *)w);
 
 	return w;
 }
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/winresize.c xview-3.2p1.4/clients/olvwm-4.5/winresize.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/winresize.c	2003-09-22 23:48:40.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/winresize.c	2013-01-07 12:55:41.614764000 +0100
@@ -31,6 +31,9 @@
 #include "win.h"
 #include "globals.h"
 #include "events.h"
+#include "client.h"
+#include "virtual.h"
+#include "evbind.h"
 
 /***************************************************************************
 * global data
@@ -283,7 +286,7 @@
 	w->core.self = win;
 	w->class = &classResize;
 	w->core.kind = WIN_RESIZE;
-	WinAddChild(par,w);
+	WinAddChild(par, (WinGeneric *)w);
 	w->core.children = NULL;
 	w->core.client = par->core.client;
 	w->core.x = x;	
@@ -298,7 +301,7 @@
 	/* register the window */
 	WIInstallInfo(w);
 
-        MapRaised(w);
+        MapRaised((WinGeneric *)w);
 
 	return w;
 }
diff -Naur xview-3.2p1.4.orig/clients/olvwm-4.5/winroot.c xview-3.2p1.4/clients/olvwm-4.5/winroot.c
--- xview-3.2p1.4.orig/clients/olvwm-4.5/winroot.c	2003-09-22 23:48:40.000000000 +0200
+++ xview-3.2p1.4/clients/olvwm-4.5/winroot.c	2013-01-07 12:55:41.646718000 +0100
@@ -34,6 +34,13 @@
 #include "events.h"
 #include "virtual.h"
 #include "error.h"
+#include "resources.h"
+#include "kbdfuncs.h"
+#include "usermenu.h"
+#include "client.h"
+#include "usermenu.h"
+#include "selection.h"
+#include "evbind.h"
 
 /***************************************************************************
 * global data
@@ -170,6 +177,7 @@
     	}
 }
 
+#if 0
 static Bool
 matchKeystrokeToSpec(event,spec)
 	XEvent *event;
@@ -179,6 +187,7 @@
 	        (spec->modmask == AnyModifier ||
 	         spec->modmask == event->xkey.state));
 }
+#endif
 
 /***************************************************************************
 * event functions
@@ -197,13 +206,16 @@
 	WinRoot		*winInfo;
 {
         if (pEvent->xcrossing.detail == NotifyNonlinearVirtual)
-            return;
+	    /* FIXME: return value? */
+            return True;
 
 	ColorWindowCrossing(dpy, pEvent, winInfo);
 
 	if (GRV.FocusFollowsMouse)
 	    NoFocusTakeFocus(dpy, pEvent->xcrossing.time,
 			     winInfo->core.client->scrInfo);
+	/* FIXME: return value? */
+	return (int)True;
 }
 
 /* 
@@ -222,14 +234,16 @@
 	if ((clientInfo = WIGetInfo(ConfEvent.window)) == NULL)
 	{
 		/* we don't know about this window, so let it go */
-		ClientConfigure(NULL,NULL,pEvent);
+		ClientConfigure(NULL, NULL, (XConfigureRequestEvent *)pEvent);
 	}
 	else /* OBSOLETE: if (ConfEvent.value_mask & (CWX | CWY | CWWidth | CWHeight)) */
 	{
 		/* configure the window and its frame */
-		ClientConfigure(clientInfo->core.client,clientInfo,pEvent);
+		ClientConfigure(clientInfo->core.client, clientInfo, (XConfigureRequestEvent *)pEvent);
 	}
 	/* REMIND doesn't handle stacking or border width yet */
+	/* FIXME: return value? */
+	return (int)True;
 }
 
 /* 
@@ -248,6 +262,8 @@
 #ifdef GPROF_HOOKS
 	moncontrol(0);
 #endif /* GPROF_HOOKS */
+	/* FIXME: return value? */
+	return (int)True;
 }
 
 
@@ -291,7 +307,8 @@
 	int			(*selectFunc)();
 
 	if (!pEvent->xmotion.same_screen)
-	    return;
+	    /* FIXME: return value? */
+	    return True;
 
 	/* If the user hasn't moved more than the threshold
 	 * amount, break out of here.  REMIND  Also, if we get a 
@@ -304,9 +321,11 @@
 	     GRV.MoveThreshold) &&
 	    (ABS(pEvent->xmotion.y - winInfo->buttonPressEvent.xbutton.y) < 
 	     GRV.MoveThreshold))
-	    return;
+	    /* FIXME: return value? */
+	    return True;
 	if (pEvent->xmotion.state == 0)
-	   return;
+	   /* FIXME: return value? */
+	   return True;
 	
 	/*
 	 * On Select: Clear existing selected clients and add new ones
@@ -328,6 +347,8 @@
 	if (selectFunc)
 	    TraceRootBox(dpy, winInfo, &(winInfo->buttonPressEvent),
 			     selectInBox, selectFunc);
+	/* FIXME: return value? */
+	return (int)True;
 }
 
 /* 
@@ -343,7 +364,8 @@
 	WinRoot		*winInfo;
 {
 	if (!AllButtonsUp(pEvent))
-	    return;
+	    /* FIXME: return value? */
+	    return True;
 
 	/*
 	 * This only happens if we did NOT get a motion notify
@@ -358,6 +380,8 @@
 	    SelectionTime = pEvent->xbutton.time;
 	}
 	winInfo->currentAction = ACTION_NONE;
+	/* FIXME: return value? */
+	return (int)True;
 }
 		
 /* 
@@ -379,7 +403,7 @@
 
 	if (pEvent->xbutton.state & ModMaskMap[MOD_WMGRAB]) {
 	    /* redistribute to child */
-	    if (pEvent->xbutton.subwindow != NULL &&
+	    if (pEvent->xbutton.subwindow != 0 &&
 		(child = WIGetInfo(pEvent->xbutton.subwindow)) != NULL &&
 		(child->core.kind == WIN_FRAME ||
 		 child->core.kind == WIN_ICON) &&
@@ -389,7 +413,8 @@
 		    pEvent->xbutton.time)))
 	    {
 		PropagatePressEventToChild(dpy, pEvent, child);
-		return;
+		/* FIXME: return value? */
+		return True;
 	    }
 
 	    /*
@@ -406,13 +431,17 @@
 
 	switch (a) {
 	case ACTION_MENU:
-	    	RootMenuShow(dpy, winInfo, pEvent);
+	    	RootMenuShow(dpy, (WinGeneric *)winInfo, pEvent);
 	    	/* FALL THRU */
 	case ACTION_SELECT:
 	case ACTION_ADJUST:
 	    	winInfo->currentAction = a;
 	    	break;
+	default:
+		break;
 	}
+	/* FIXME: return value? */
+	return (int)True;
 }
 
 
@@ -436,7 +465,9 @@
 	    isbound = KeyMoveVDM(dpy, pEvent);
 
 	if (!isbound && pEvent->type == KeyPress)
-	    KeyBeep(dpy,pEvent);
+	    KeyBeep(dpy, (XKeyEvent *)pEvent);
+	/* FIXME: return value? */
+	return (int)True;
 }
 
 /* 
@@ -449,17 +480,20 @@
 	XEvent		*pEvent;
 	WinRoot		*winInfo;
 {
-	unsigned long	nitems, remain;
-	char		*resourceString;
+	/*unsigned long	nitems, remain;*/
+	/*char		*resourceString;*/
 
 	/* make sure that the property was the one we care about and
 	 * changed (as opposed to deleted)
 	 */
 	if ((pEvent->xproperty.atom != XA_RESOURCE_MANAGER) 
 	     || (pEvent->xproperty.state != PropertyNewValue))
-		return;
+		/* FIXME: return value? */
+		return True;
 
 	UpdateGlobals(dpy);
+	/* FIXME: return value? */
+	return True;
 }
 
 /*
@@ -474,6 +508,8 @@
     if (pEvent->xclient.message_type == AtomSunReReadMenuFile) {
 	ReInitAllUserMenus(dpy);
     }
+	/* FIXME: return value? */
+	return True;
 }
 /* 
  * eventUnmapNotify - an unreparented pane is going away
@@ -492,6 +528,8 @@
 	if (wg != NULL) {
 		StateWithdrawn(wg->core.client, TimeFresh());
 	}
+	/* FIXME: return value? */
+	return True;
 }
 
 /*
@@ -512,6 +550,8 @@
 	/* free our data and throw away window */
 	WIUninstallInfo(winInfo->core.self);
 	MemFree(winInfo);
+	/* FIXME: return value? */
+	return True;
 }
 
 /*
diff -Naur xview-3.2p1.4.orig/clients/olwm/Imakefile xview-3.2p1.4/clients/olwm/Imakefile
--- xview-3.2p1.4.orig/clients/olwm/Imakefile	2013-01-07 12:36:37.112171000 +0100
+++ xview-3.2p1.4/clients/olwm/Imakefile	2013-01-07 12:50:35.112030000 +0100
@@ -29,7 +29,7 @@
 
 GETTEXT.O		= ${GETTEXT.C:%.c=%.o}
 
-HEADERS = cmdstream.h debug.h defaults.h dsdm.h environ.h   \
+HEADERS = client.h cmdstream.h debug.h defaults.h dsdm.h environ.h   \
 	  error.h events.h globals.h group.h helpcmd.h i18n.h iconimage.h \
 	  iconmask.h kbdfuncs.h list.h mem.h menu.h notice.h olcursor.h \
 	  ollocale.h olwm.h properties.h resources.h \
diff -Naur xview-3.2p1.4.orig/clients/olwm/Makefile.simple xview-3.2p1.4/clients/olwm/Makefile.simple
--- xview-3.2p1.4.orig/clients/olwm/Makefile.simple	1993-06-29 07:11:41.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/Makefile.simple	2013-01-07 12:50:35.151110000 +0100
@@ -16,7 +16,7 @@
 
 OBJECTS                 = ${SOURCES:.c=.o}
 
-HEADERS                 = cmdstream.h debug.h defaults.h dsdm.h environ.h \
+HEADERS                 = client.h cmdstream.h debug.h defaults.h dsdm.h environ.h \
 			  error.h events.h globals.h group.h helpcmd.h \
 			  i18n.h kbdfuncs.h list.h mem.h menu.h notice.h \
 			  olcursor.h ollocale.h olwm.h resources.h \
diff -Naur xview-3.2p1.4.orig/clients/olwm/atom.c xview-3.2p1.4/clients/olwm/atom.c
--- xview-3.2p1.4.orig/clients/olwm/atom.c	1993-06-29 07:11:42.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/atom.c	2013-01-07 12:50:35.181841000 +0100
@@ -87,6 +87,7 @@
  * InitAtoms -- initialize the atoms needed to communicate with Open
  *	Look clients
  */
+void
 InitAtoms(dpy)
 Display	*dpy;
 {
diff -Naur xview-3.2p1.4.orig/clients/olwm/client.c xview-3.2p1.4/clients/olwm/client.c
--- xview-3.2p1.4.orig/clients/olwm/client.c	1993-06-29 07:11:42.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/client.c	2013-01-07 12:50:35.213634000 +0100
@@ -32,6 +32,7 @@
 #include "globals.h"
 #include "dsdm.h"
 #include "resources.h"
+#include "client.h"
 
 /***************************************************************************
 * global data
@@ -175,7 +176,7 @@
 {
 	int	*ledMap;
 	int	i,numLeds,led;
-	unsigned int nitems,nremain;
+	unsigned long nitems,nremain;
 	XKeyboardControl  kbdvalue;
 
 	DoingWindowState = False;
@@ -237,6 +238,7 @@
 /*
  * ClientDefaultWindowState - applies the default window state
  */
+void
 ClientDefaultWindowState(dpy)
 	Display	*dpy;
 {
@@ -246,6 +248,7 @@
 /*
  * ClientSetWindowState - applies the client's window state
  */
+void
 ClientSetWindowState(cli)
 	Client	*cli;
 {
@@ -274,6 +277,7 @@
  * ClientGetWindowState - gets the _SUN_WINDOW_STATE property and if the
  *			  client has the focus then apply that new state.
  */
+void
 ClientGetWindowState(cli)
 	Client	*cli;
 {
@@ -774,7 +778,8 @@
     int state;		/* PropertyNewValue or PropertyDelete */
 {
     unsigned long *data;
-    int nitems, remain, nsites, i, areatype, nelts;
+    unsigned long nitems, remain;
+    int nsites, i, areatype, nelts;
     int cur = 0;
     Window wid;
     unsigned long sid, flags;
@@ -876,9 +881,9 @@
 	WinPane *wp;
 
 	if ((wf = cli->framewin) == NULL)
-		return NULL;
+		return (Window)0;
 	if ((wp = (WinPane *)(wf->fcore.panewin)) == NULL)
-		return NULL;
+		return (Window)0;
 	return wp->core.self;
 }
 
diff -Naur xview-3.2p1.4.orig/clients/olwm/client.h xview-3.2p1.4/clients/olwm/client.h
--- xview-3.2p1.4.orig/clients/olwm/client.h	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/clients/olwm/client.h	2013-01-07 12:50:35.252178000 +0100
@@ -0,0 +1,64 @@
+#ifndef _OLWM_CLIENT_H
+#define _OLWM_CLIENT_H
+
+#ifdef __STDC__
+void ClientActivate(Display *dpy, Client *cli, Time time);
+void ClientBack(Client *cli);
+void ClientConfigure(Client *cli, WinGeneric *win, XConfigureRequestEvent *pxcre);
+void ClientDefaultWindowState(Display *dpy);
+void ClientDistributeProperty(Client *cli, XPropertyEvent *event);
+void ClientFlashOwner(Client *cli);
+void ClientFocusTopmost(Display *dpy, ScreenInfo *scrinfo, Time time);
+void ClientFront(Client *cli);
+void ClientFullRestoreSizeToggle(Client *cli, Time timestamp);
+Client *ClientGetLastCurrent(void);
+void ClientGetWindowState(Client *cli);
+void ClientInhibitFocus(Bool inhibit);
+void *ClientKill(Client *cli, Bool pforce);
+void ClientLowerTransients(Client *cli);
+void ClientMove(Client *cli, XEvent *trigger);
+void ClientOpenCloseToggle(Client *cli, Time timestamp);
+void ClientProcessDragDropInterest(Client *cli, int state);
+Client *ClientRaiseTransients(Client *cli);
+void ClientRefresh(Client *cli);
+void ClientResize(Client *cli, XEvent *trigger, WhichResize which, void (*callback)(), void *cbarg);
+void ClientSetCurrent(Client *cli);
+void ClientSetFocus(Client *cli, Bool sendTF, Time evtime);
+void ClientSetInstanceVars(Client *cli);
+void ClientSetWindowState(Client *cli);
+void ClientSetWMState(Client *cli, WMState wmState);
+Bool ClientTogglePin(Client *cli);
+void DestroyClient(Client *cli);
+void InitClients(Display *dpy);
+#else
+void ClientActivate();
+void ClientBack();
+void ClientConfigure();
+void ClientDefaultWindowState();
+void ClientDistributeProperty();
+void ClientFlashOwner();
+void ClientFocusTopmost();
+void ClientFront();
+void ClientFullRestoreSizeToggle();
+Client *ClientGetLastCurrent();
+void ClientGetWindowState();
+void ClientInhibitFocus();
+void *ClientKill();
+void ClientLowerTransients();
+void ClientMove();
+void ClientOpenCloseToggle();
+void ClientProcessDragDropInterest();
+Client *ClientRaiseTransients();
+void ClientRefresh();
+void ClientResize();
+void ClientSetCurrent();
+void ClientSetFocus();
+void ClientSetInstanceVars();
+void ClientSetWindowState();
+void ClientSetWMState();
+Bool ClientTogglePin();
+void DestroyClient();
+void InitClients();
+#endif
+
+#endif
diff -Naur xview-3.2p1.4.orig/clients/olwm/cmdstream.c xview-3.2p1.4/clients/olwm/cmdstream.c
--- xview-3.2p1.4.orig/clients/olwm/cmdstream.c	2013-01-07 12:36:37.882696000 +0100
+++ xview-3.2p1.4/clients/olwm/cmdstream.c	2013-01-07 12:59:37.046855000 +0100
@@ -14,11 +14,14 @@
  * ---------------------------------------------------------------------*/
 
 #include <stdio.h>
-#ifdef SYSV
+#if defined(SYSV) || defined(__linux__)
 #include <string.h>
 #else
 #include <strings.h>
 #endif
+#ifdef __linux__
+#include <stdlib.h>		/* strtol() */
+#endif
 #include "cmdstream.h"
 #include "mem.h"
 
@@ -51,10 +54,17 @@
  *      Local Forward Declarations
  * ---------------------------------------------------------------------*/
 
-static Command		*MatchCommand();
-static CmdAttr		*MatchAttr();
-static int		EncodeAttrValue();
-static int		DecodeAttrValue();
+#ifdef __STDC__
+static	Command *MatchCommand(char *keyword);
+static	CmdAttr *MatchAttr(Command *cmd, char *name);
+static	int EncodeAttrValue(CmdAttr *attr, FILE *stream);
+static	int DecodeAttrValue(CmdAttr *attr, char *valuestr);
+#else
+static	Command *MatchCommand();
+static	CmdAttr *MatchAttr();
+static	int EncodeAttrValue();
+static	int DecodeAttrValue();
+#endif
 
 /* ----------------------------------------------------------------------
  *      SetCmdStream
@@ -186,7 +196,6 @@
 {
 	int		i,equalindex;
 	char		*equalpos;
-	char		*strchr();
 
 	equalpos = strchr(name,'=');
 
diff -Naur xview-3.2p1.4.orig/clients/olwm/dsdm.c xview-3.2p1.4/clients/olwm/dsdm.c
--- xview-3.2p1.4.orig/clients/olwm/dsdm.c	1993-06-29 07:11:44.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/dsdm.c	2013-01-07 12:50:35.320408000 +0100
@@ -25,6 +25,7 @@
 
 #include <stdio.h>
 #include <string.h>
+#include <stdlib.h>		/* free() */
 
 #include <X11/Xlib.h>
 #include <X11/Xutil.h>
@@ -38,6 +39,7 @@
 #include "win.h"
 #include "error.h"
 #include "dsdm.h"
+#include "selection.h"
 
 /*
  * Round-trip metering.  Meter the XGetGeometry, XGetWindowAttributes, 
@@ -475,7 +477,7 @@
 		paneInfo = (WinPane *) PANEOFCLIENT(winInfo->core.client);
 		sitedata = GetInterestProperty(dpy, paneInfo->core.self,
 		    &datalen);
-		WinRootPos(paneInfo, &xoff, &yoff);
+		WinRootPos((WinGeneric *)paneInfo, &xoff, &yoff);
 		if (sitedata != NULL) {
 		    ProcessInterestProperty(dpy, paneInfo, s, sitedata,
 					    datalen, visrgn, xoff, yoff);
diff -Naur xview-3.2p1.4.orig/clients/olwm/evbind.c xview-3.2p1.4/clients/olwm/evbind.c
--- xview-3.2p1.4.orig/clients/olwm/evbind.c	1993-06-29 07:11:45.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/evbind.c	2013-01-07 12:50:35.351416000 +0100
@@ -370,8 +370,6 @@
 
 #define NULLFUNC ((void (*)())0)
 
-extern void HandleHelpKey();
-
 static void keySuspend();
 static void keyResume();
 static void keyQuoteNext();
diff -Naur xview-3.2p1.4.orig/clients/olwm/events.c xview-3.2p1.4/clients/olwm/events.c
--- xview-3.2p1.4.orig/clients/olwm/events.c	2013-01-07 12:36:37.529835000 +0100
+++ xview-3.2p1.4/clients/olwm/events.c	2013-01-07 12:50:35.386464000 +0100
@@ -31,6 +31,7 @@
 #include "list.h"
 #include "mem.h"
 #include "error.h"
+#include "client.h"
 
 
 /* ===== externs ========================================================== */
@@ -61,7 +62,7 @@
 
 static XModifierKeymap *ModMap = NULL;
 
-static explicitPointerGrab = False;
+static Bool explicitPointerGrab = False;
 
 
 /* ===== private functions ================================================ */
@@ -186,7 +187,7 @@
 		if (event->xany.type == MapRequest) {
 		    StateNew(dpy,None,event->xmaprequest.window,False,NULL);
 		} else if (event->xany.type == ConfigureRequest) {
-		    ClientConfigure(NULL, NULL, event);
+		    ClientConfigure(NULL, NULL, (XConfigureRequestEvent *)event);
 		}
 
 		return;
diff -Naur xview-3.2p1.4.orig/clients/olwm/gettext.c xview-3.2p1.4/clients/olwm/gettext.c
--- xview-3.2p1.4.orig/clients/olwm/gettext.c	2013-01-07 12:36:37.588943000 +0100
+++ xview-3.2p1.4/clients/olwm/gettext.c	2013-01-07 12:50:35.416025000 +0100
@@ -29,6 +29,11 @@
 #if !defined(__linux__) || !defined(__GLIBC__)
 caddr_t mmap(), calloc();
 #endif
+#ifdef __linux__
+#include <stdlib.h>
+#include <string.h>
+#include <unistd.h>
+#endif
 
 static struct domain_binding *firstbind=0, *lastbind=0;
 
diff -Naur xview-3.2p1.4.orig/clients/olwm/group.c xview-3.2p1.4/clients/olwm/group.c
--- xview-3.2p1.4.orig/clients/olwm/group.c	1993-06-29 07:11:47.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/group.c	2013-01-07 12:50:35.442931000 +0100
@@ -188,7 +188,7 @@
 {
 	Group *tmp = NULL;
 
-	st_lookup(groupHashTable, group, &tmp);
+	st_lookup(groupHashTable, (char *)group, (char **)&tmp);
 	return tmp;
 }
 
diff -Naur xview-3.2p1.4.orig/clients/olwm/helpcmd.h xview-3.2p1.4/clients/olwm/helpcmd.h
--- xview-3.2p1.4.orig/clients/olwm/helpcmd.h	1993-06-29 07:11:47.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/helpcmd.h	2013-01-07 12:50:35.466648000 +0100
@@ -35,4 +35,10 @@
 	"SHOWHELP", 0, HW_ATTR_COUNT, helpCmdAttr
 };
 
+#ifdef __STDC__
+int ShowHelpWindow(int nscreen, int mousex, int mousey, char *helpkey);
+#else
+int ShowHelpWindow();
+#endif
+
 #endif /* _OLWM_HELPCMD_H */
diff -Naur xview-3.2p1.4.orig/clients/olwm/info.c xview-3.2p1.4/clients/olwm/info.c
--- xview-3.2p1.4.orig/clients/olwm/info.c	1993-06-29 07:11:48.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/info.c	2013-01-07 12:50:35.494670000 +0100
@@ -49,6 +49,7 @@
  *	    False	- failure
  */
 /*ARGSUSED*/	/* dpy arg will be used when multiple Displays supported */
+void
 WIInit( dpy )
 Display	*dpy;
 {
@@ -97,7 +98,7 @@
 {
 	WinGeneric *winInfo = NULL;
 
-	st_lookup(wiHashTable, win, &winInfo);
+	st_lookup(wiHashTable, (char *)win, (char **)&winInfo);
 	return winInfo;
 }
 
diff -Naur xview-3.2p1.4.orig/clients/olwm/kbdfuncs.c xview-3.2p1.4/clients/olwm/kbdfuncs.c
--- xview-3.2p1.4.orig/clients/olwm/kbdfuncs.c	1993-06-29 07:11:48.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/kbdfuncs.c	2013-01-07 12:50:35.522187000 +0100
@@ -27,16 +27,9 @@
 #include "globals.h"
 #include "group.h"
 #include "resources.h"
+#include "client.h"
+#include "kbdfuncs.h"
 
-/*
- * Externals
- */
-
-extern void ClientActivate();
-extern Client *ClientGetLastCurrent();
-extern void ClientLowerTransients();
-extern Client *ClientRaiseTransients();
-extern void ClientSetCurrent();
 
 /* ===== private functions ================================================ */
 
@@ -794,7 +787,7 @@
 	return;
 
     if (CurrentClient->framewin != NULL)
-	ClientMove(CurrentClient,ke);
+	ClientMove(CurrentClient, (XEvent *)ke);
 }
 
 
@@ -810,7 +803,7 @@
 	return;
 
     if (CurrentClient->framewin != NULL)
-	ClientResize(CurrentClient, ke, keyevent, NULL, NULL);
+	ClientResize(CurrentClient, (XEvent *)ke, keyevent, NULL, NULL);
 }
 
 
diff -Naur xview-3.2p1.4.orig/clients/olwm/kbdfuncs.h xview-3.2p1.4/clients/olwm/kbdfuncs.h
--- xview-3.2p1.4.orig/clients/olwm/kbdfuncs.h	1993-06-29 07:11:48.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/kbdfuncs.h	2013-01-07 12:50:35.562739000 +0100
@@ -12,13 +12,23 @@
 #ifndef _OLWM_KBDFUNCS_H
 #define _OLWM_KBDFUNCS_H
 
-extern void KeyBackFocus();
+#ifdef __STDC__
+extern void KeyBeep(Display *dpy, XKeyEvent *ke);
+extern void KeyFocusToPointer(Display *dpy, XKeyEvent *ke);
+extern void KeyFrontFocus(Display *dpy, XKeyEvent *ke);
+extern void KeyLockColormap(Display *dpy, XKeyEvent *ke);
+extern void KeyUnlockColormap(Display *dpy, XKeyEvent *ke);
+#else
 extern void KeyBeep();
 extern void KeyFocusToPointer();
-extern void KeyRaiseLowerPointer();
 extern void KeyFrontFocus();
-extern void KeyFullRestore();
 extern void KeyLockColormap();
+extern void KeyUnlockColormap();
+#endif
+
+extern void KeyBackFocus();
+extern void KeyRaiseLowerPointer();
+extern void KeyFullRestore();
 extern void KeyMove();
 extern void KeyNextApp();
 extern void KeyNextWindow();
@@ -33,7 +43,6 @@
 extern void KeyResize();
 extern void KeyToggleInput();
 extern void KeyTogglePin();
-extern void KeyUnlockColormap();
 extern void KeyWindowMenu();
 extern void KeyWorkspaceMenu();
 extern void KeyMakeInvisiblePointer();
diff -Naur xview-3.2p1.4.orig/clients/olwm/menu.c xview-3.2p1.4/clients/olwm/menu.c
--- xview-3.2p1.4.orig/clients/olwm/menu.c	2013-01-07 12:36:37.226514000 +0100
+++ xview-3.2p1.4/clients/olwm/menu.c	2013-01-07 12:50:35.599184000 +0100
@@ -43,6 +43,9 @@
 #include "menu.h"
 #include "globals.h"
 #include "error.h"
+#include "helpcmd.h"
+#include "kbdfuncs.h"
+#include "client.h"
 
 extern unsigned int FindModifierMask();
 
@@ -105,6 +108,11 @@
 static void drawButton();
 static void drawRevButton();
 static Bool isClick();
+#ifdef __STDC__
+static Bool isEnabled(MenuInfo *mInfo, int item);
+#else
+static Bool isEnabled();
+#endif
 
 int MenuTrack();
 void DrawLocCursor();
@@ -1826,7 +1834,7 @@
 	break;
       case ACTION_NONE:
 	if (! keyEventToItem(dpy, pevent))
-	    KeyBeep(dpy, pevent);
+	    KeyBeep(dpy, (XKeyEvent *)pevent);
 	break;
       case ACTION_HELP:
 	menuHelpCommand(dpy, pevent, closure);
diff -Naur xview-3.2p1.4.orig/clients/olwm/moveresize.c xview-3.2p1.4/clients/olwm/moveresize.c
--- xview-3.2p1.4.orig/clients/olwm/moveresize.c	1993-06-29 07:11:51.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/moveresize.c	2013-01-07 12:50:35.659196000 +0100
@@ -27,6 +27,7 @@
 #include "list.h"
 #include "globals.h"
 #include "error.h"
+#include "kbdfuncs.h"
 
 
 /* REMIND - find out how to get rid of this */
@@ -530,7 +531,7 @@
 		    moveUpdate(mstuff);
 		}
 	    } else {
-		KeyBeep(dpy, event);
+		KeyBeep(dpy, (XKeyEvent *)event);
 	    }
 	    break;
 	}
@@ -1224,7 +1225,7 @@
 	    } else if (mask == ModMaskMap[MOD_INVERT]) {
 		rstuff->moving = True;
 	    } else {
-		KeyBeep(dpy, e);
+		KeyBeep(dpy, (XKeyEvent *)e);
 	    }
 	    break;
 	}
@@ -1502,7 +1503,7 @@
 
     case KeyPress:
 	if (FindKeyboardAction(dpy, event) != ACTION_STOP) {
-	    KeyBeep(dpy,event);
+	    KeyBeep(dpy, (XKeyEvent *)event);
 	    return DISPOSE_USED;
 	}
 	break;
diff -Naur xview-3.2p1.4.orig/clients/olwm/notice.c xview-3.2p1.4/clients/olwm/notice.c
--- xview-3.2p1.4.orig/clients/olwm/notice.c	1993-06-29 07:11:51.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/notice.c	2013-01-07 12:50:35.694591000 +0100
@@ -27,6 +27,7 @@
 #include "mem.h"
 #include "events.h"
 #include "error.h"
+#include "kbdfuncs.h"
 
 
 extern int		PointInRect();
@@ -533,7 +534,7 @@
 
 		/* If not in full mouseless, then only process default action */
 		if (GRV.Mouseless != KbdFull && action != ACTION_EXEC_DEFAULT) {
-			KeyBeep(dpy,event);
+			KeyBeep(dpy, (XKeyEvent *)event);
 			return DISPOSE_USED;
 		}
 			
@@ -569,7 +570,7 @@
 			if (keyAccelerator(event,details,&button))
 				setButtonFocus(details,button);
 			else
-				KeyBeep(dpy,event);
+				KeyBeep(dpy, (XKeyEvent *)event);
 			break;
 		}
 	case KeyRelease:
diff -Naur xview-3.2p1.4.orig/clients/olwm/olwm.c xview-3.2p1.4/clients/olwm/olwm.c
--- xview-3.2p1.4.orig/clients/olwm/olwm.c	2013-01-07 12:36:37.046856000 +0100
+++ xview-3.2p1.4/clients/olwm/olwm.c	2013-01-07 12:50:35.728806000 +0100
@@ -14,6 +14,7 @@
 #include <signal.h>
 #include <stdio.h>
 #include <string.h>
+#include <stdlib.h>		/* exit() */
 
 #include <sys/time.h>
 #include <sys/types.h>
@@ -44,6 +45,7 @@
 #include "slots.h"
 #include "error.h"
 #include "dsdm.h"
+#include "client.h"
 
 #if defined(__linux__) && !defined(MAXPID)
 #define MAXPID 32767
@@ -534,6 +536,7 @@
 /*
  * Exit -- kill the slave process, kill all running applications, then exit.
  */
+void
 Exit(dpy)
 Display	*dpy;
 {
diff -Naur xview-3.2p1.4.orig/clients/olwm/olwm.h xview-3.2p1.4/clients/olwm/olwm.h
--- xview-3.2p1.4.orig/clients/olwm/olwm.h	1993-06-29 07:11:53.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/olwm.h	2013-01-07 12:50:35.766623000 +0100
@@ -80,7 +80,11 @@
 
 /* miscellaneous functions */
 extern int ExitOLWM();
+#ifdef __STDC__
+extern void *GetWindowProperty(Display *dpy, Window w, Atom property, long long_offset, long long_length, Atom req_type, int req_fmt, unsigned long *nitems, unsigned long *bytes_after);
+#else
 extern void *GetWindowProperty();
+#endif
 #ifdef OW_I18N_L4
 extern void parseApplicationLocaleDefaults();
 #endif
@@ -117,12 +121,6 @@
 	Time 	timestamp;
 } ClientInBoxClosure;
 extern void *ClientInBox();
-extern void ClientInhibitFocus();
-extern void ClientSetFocus();
-extern void ClientSetCurrent();
-extern struct _client *ClientGetLastCurrent();
-extern void ClientActivate();
-extern void ClientFocusTopmost();
 
 /* frame functions */
 extern struct _winpaneframe *MakeFrame();
diff -Naur xview-3.2p1.4.orig/clients/olwm/resources.c xview-3.2p1.4/clients/olwm/resources.c
--- xview-3.2p1.4.orig/clients/olwm/resources.c	2013-01-07 12:36:38.475962000 +0100
+++ xview-3.2p1.4/clients/olwm/resources.c	2013-01-07 12:50:35.793053000 +0100
@@ -971,7 +971,7 @@
      * thing.
      */
 
-    if (cursorFont == NULL)
+    if (cursorFont == (Font)0)
 	return False;
 
     /*
diff -Naur xview-3.2p1.4.orig/clients/olwm/screen.c xview-3.2p1.4/clients/olwm/screen.c
--- xview-3.2p1.4.orig/clients/olwm/screen.c	2013-01-07 12:36:37.801654000 +0100
+++ xview-3.2p1.4/clients/olwm/screen.c	2013-01-07 17:11:37.157314000 +0100
@@ -111,12 +111,22 @@
 static XrmQuark stippledRubberBandsCQ;
 static XrmQuark stippledRubberBandsIQ;
 
-static updateScreenWorkspaceColor(Display *dpy, ScreenInfo *scrInfo);
-static updateScreenWindowColor(Display *dpy, ScreenInfo*scrInfo);
-static updateScreenForegroundColor(Display *dpy, ScreenInfo *scrInfo);
-static updateScreenBackgroundColor(Display *dpy, ScreenInfo *scrInfo);
-static updateScreenBorderColor(Display *dpy, ScreenInfo *scrInfo);
-static updateScreenGlyphFont(Display *dpy, ScreenInfo *scrInfo);
+#ifdef __STDC__
+static void updateScreenWorkspaceColor(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenWindowColor(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenForegroundColor(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenBackgroundColor(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenBorderColor(Display *dpy, ScreenInfo *scrInfo);
+static void updateScreenGlyphFont(Display *dpy, ScreenInfo *scrInfo);
+#else
+static void updateScreenWorkspaceColor();
+static void updateScreenWindowColor();
+static void updateScreenForegroundColor();
+static void updateScreenBackgroundColor();
+static void updateScreenBorderColor();
+static void updateScreenGlyphFont();
+#endif
+
 
 /*-------------------------------------------------------------------------
  *	Local Functions
@@ -273,7 +283,6 @@
 	return result;
 }
 
-
 /*
  * initBasic
  *	Sets root/depth/visual/colormap basics.
@@ -1524,7 +1533,7 @@
 /*
  * updateScreenWorkspaceColor -- change all GC/Ginfo's that use WorkspaceColor
  */
-static
+static void
 updateScreenWorkspaceColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -1546,7 +1555,7 @@
 /*
  * updateScreenWindowColor -- change all GC/Ginfo's that use WindowColor
  */
-static
+static void
 updateScreenWindowColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -1603,7 +1612,7 @@
 /*
  * updateScreenForegroundColor -- change all GC/Ginfo's that use Foreground
  */
-static
+static void
 updateScreenForegroundColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -1636,7 +1645,7 @@
 /*
  * updateScreenBackgroundColor -- change all GC/Ginfo's that use Background
  */
-static
+static void
 updateScreenBackgroundColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -1651,7 +1660,7 @@
 /*
  * updateScreenBorderColor -- change all GC/Ginfo's that use Border
  */
-static
+static void
 updateScreenBorderColor(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -1682,7 +1691,7 @@
 /*
  * updateScreenTitleFont -- change all GC/Ginfo's that use TitleFont
  */
-static
+static void
 updateScreenTitleFont(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -1712,7 +1721,7 @@
 /*
  * updateScreenTextFont -- change all GC/Ginfo's that use TextFont
  */
-static
+static void
 updateScreenTextFont(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -1731,7 +1740,7 @@
 /*
  * updateScreenButtonFont -- change all GC/Ginfo's that use ButtonFont
  */
-static
+static void
 updateScreenButtonFont(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -1750,7 +1759,7 @@
 /*
  * updateScreenIconFont -- change all GC/Ginfo's that use IconFont
  */
-static
+static void
 updateScreenIconFont(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -1767,7 +1776,7 @@
 /*
  * updateScreenGlyphFont -- change all GC/Ginfo's that use GlyphFont
  */
-static
+static void
 updateScreenGlyphFont(dpy,scrInfo)
 	Display		*dpy;
 	ScreenInfo	*scrInfo;
@@ -2178,7 +2187,7 @@
 /*
  * ReparentScreens - reparents each of the screens window trees
  */
-int
+void
 ReparentScreens(dpy)
 	Display		*dpy;
 {
diff -Naur xview-3.2p1.4.orig/clients/olwm/screen.h xview-3.2p1.4/clients/olwm/screen.h
--- xview-3.2p1.4.orig/clients/olwm/screen.h	1993-06-29 07:11:56.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/screen.h	2013-01-07 12:50:35.928437000 +0100
@@ -145,6 +145,7 @@
 					   XSetWindowAttributes*);
 extern	void		ScreenDestroyWindow(ScreenInfo*, Window);
 extern	void		ScreenUpdateWinCacheSize(Display *dpy);
+extern	void		ReparentScreens(Display *dpy);
 
 #else
 
@@ -167,6 +168,7 @@
 extern	Window		ScreenCreateWindow();
 extern	void		ScreenDestroyWindow();
 extern	void		ScreenUpdateWinCacheSize();
+extern	void		ReparentScreens();
 #endif /* STDC */
 
 #endif	/* _OLWM_SCREEN_H */
diff -Naur xview-3.2p1.4.orig/clients/olwm/selection.c xview-3.2p1.4/clients/olwm/selection.c
--- xview-3.2p1.4.orig/clients/olwm/selection.c	1993-06-29 07:11:56.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/selection.c	2013-01-07 12:50:35.969281000 +0100
@@ -22,6 +22,7 @@
 #include "win.h"
 #include "list.h"
 #include "mem.h"
+#include "selection.h"
 
 
 /* ===== global data ====================================================== */
diff -Naur xview-3.2p1.4.orig/clients/olwm/selection.h xview-3.2p1.4/clients/olwm/selection.h
--- xview-3.2p1.4.orig/clients/olwm/selection.h	1993-06-29 07:11:56.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/selection.h	2013-01-07 12:50:35.996149000 +0100
@@ -22,7 +22,11 @@
 extern	Client* EnumSelections(/*  void*  */);
 
 extern	void	SelectionInit();
+#ifdef __STDC__
+extern	void	SelectionRegister(Atom selection, Bool (*handler)());
+#else
 extern	void	SelectionRegister(/*  seln, handler  */);
+#endif
 extern	void	SelectionResponse(/*  event  */);
 
 #endif /* _OLWM_SELECTION_H */
diff -Naur xview-3.2p1.4.orig/clients/olwm/services.c xview-3.2p1.4/clients/olwm/services.c
--- xview-3.2p1.4.orig/clients/olwm/services.c	2013-01-07 12:36:37.714698000 +0100
+++ xview-3.2p1.4/clients/olwm/services.c	2013-01-07 12:50:36.024252000 +0100
@@ -16,6 +16,7 @@
 #include <sys/time.h>
 #include <sys/types.h>
 #include <sys/stat.h>
+#include <stdlib.h>		/* exit(), system() */
 
 #include <X11/Xos.h>
 #include <X11/Xlib.h>
@@ -38,12 +39,12 @@
 #include "resources.h"
 #include "error.h"
 #include "dsdm.h"
+#include "client.h"
 
 
 extern	char		*getenv();
 extern	unsigned int	FindModifierMask();
 extern	void		ReInitUserMenu();
-extern	void		*ClientKill();
 
 /*
  * Externals
diff -Naur xview-3.2p1.4.orig/clients/olwm/slave.c xview-3.2p1.4/clients/olwm/slave.c
--- xview-3.2p1.4.orig/clients/olwm/slave.c	2013-01-07 12:36:37.655064000 +0100
+++ xview-3.2p1.4/clients/olwm/slave.c	2013-01-07 13:01:30.692845000 +0100
@@ -21,6 +21,7 @@
 #include <X11/Xlib.h>
 #include <signal.h>
 #include <stdio.h>
+#include <stdlib.h>		/* exit() */
 
 #include "cmdstream.h"
 #include "error.h"
@@ -44,7 +45,11 @@
  *	Local Forward Declarations
  * ---------------------------------------------------------------------*/
 
+#ifdef __STDC__
+static void	SlaveFailure(void);
+#else
 static void	SlaveFailure();
+#endif
 
 
 /* ----------------------------------------------------------------------
diff -Naur xview-3.2p1.4.orig/clients/olwm/st.c xview-3.2p1.4/clients/olwm/st.c
--- xview-3.2p1.4.orig/clients/olwm/st.c	2013-01-07 12:36:36.993513000 +0100
+++ xview-3.2p1.4/clients/olwm/st.c	2013-01-07 17:23:29.588370000 +0100
@@ -3,9 +3,15 @@
 /* This is a general purpose hash table package written by Peter Moore @ UCB. */
 
 #include <stdio.h>
+#include <stdlib.h>			/* free() */
 #include "st.h"
 #include "mem.h"
 
+#ifdef __STDC__
+static void rehash(st_table *table);
+#else
+static void rehash();
+#endif
 
 #define max(a,b) ((a) > (b) ? (a) : (b))
 #define nil(type) ((type *) 0)
@@ -29,12 +35,17 @@
 
 /*#define do_hash(key, table) (*table->hash)(key, table->num_bins)*/
 
+#if defined(_XV_API_BROKEN_64BIT)
+#define do_hash(key, table)\
+    ((table->hash == ST_PTRHASH) ? (((long) (key) >> 2) % table->num_bins) :\
+	(table->hash == ST_NUMHASH) ? ((long) (key) % table->num_bins) :\
+	(*table->hash)((key), table->num_bins))
+#else
 #define do_hash(key, table)\
     ((table->hash == ST_PTRHASH) ? (((int) (key) >> 2) % table->num_bins) :\
 	(table->hash == ST_NUMHASH) ? ((int) (key) % table->num_bins) :\
 	(*table->hash)((key), table->num_bins))
-
-static rehash(st_table *table);
+#endif
 
 st_table *st_init_table_with_params(compare, hash, size, density, grow_factor,
 				    reorder_flag)
@@ -70,6 +81,7 @@
 				     ST_DEFAULT_REORDER_FLAG);
 }
 			    
+void
 st_free_table(table)
 st_table *table;
 {
@@ -108,6 +120,7 @@
     }\
 }
 	
+int
 st_lookup(table, key, value)
 st_table *table;
 register char *key;
@@ -144,6 +157,7 @@
     table->num_entries++;\
 }
 
+int
 st_insert(table, key, value)
 register st_table *table;
 register char *key;
@@ -166,6 +180,7 @@
     }
 }
 
+void
 st_add_direct(table, key, value)
 st_table *table;
 char *key;
@@ -178,6 +193,7 @@
     ADD_DIRECT(table, key, value, hash_val, new);
 }
 
+int
 st_find_or_add(table, key, slot)
 st_table *table;
 char *key;
@@ -200,7 +216,8 @@
     }
 }
 
-static rehash(table)
+static void
+rehash(table)
 register st_table *table;
 {
     register st_table_entry *ptr, *next, **old_bins = table->bins;
@@ -271,6 +288,7 @@
     return new_table;
 }
 
+int
 st_delete(table, key, value)
 register st_table *table;
 register char **key;
@@ -312,6 +330,7 @@
     return 0;
 }
 
+void
 st_foreach(table, func, arg)
 st_table *table;
 enum st_retval (*func)();
@@ -346,6 +365,7 @@
     }
 }
 
+int
 st_strhash(string, modulus)
 register char *string;
 int modulus;
diff -Naur xview-3.2p1.4.orig/clients/olwm/st.h xview-3.2p1.4/clients/olwm/st.h
--- xview-3.2p1.4.orig/clients/olwm/st.h	1993-06-29 07:11:58.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/st.h	2013-01-07 12:50:36.161581000 +0100
@@ -30,9 +30,22 @@
 
 enum st_retval {ST_CONTINUE, ST_STOP, ST_DELETE};
 
-int st_delete(), st_insert(), st_foreach(), st_free_table();
-int st_lookup(), st_find_or_add(), st_add_direct();
-st_table *st_init_table(), *st_init_table_with_params();
+int st_delete(), st_insert();
+void st_foreach(), st_add_direct();
+int st_lookup(), st_find_or_add();
+
+#ifdef __STDC__
+st_table *st_init_table(int (*compare)(), int (*hash)());
+st_table *st_init_table_with_params(int (*compare)(), int (*hash)(), int size, int density, double grow_factor, int reorder_flag);
+void st_free_table(st_table *table);
+int st_lookup(st_table *table, char *key, char **value);
+#else
+st_table *st_init_table();
+st_table *st_init_table_with_params();
+void st_free_table();
+int st_lookup();
+#endif
+
 
 #define ST_NUMCMP	((int (*)()) 0)
 #define ST_NUMHASH	((int (*)()) -2)
diff -Naur xview-3.2p1.4.orig/clients/olwm/states.c xview-3.2p1.4/clients/olwm/states.c
--- xview-3.2p1.4.orig/clients/olwm/states.c	1993-06-29 07:11:58.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/states.c	2013-01-07 12:50:36.186502000 +0100
@@ -28,6 +28,7 @@
 #include "group.h"
 #include "globals.h"
 #include "properties.h"
+#include "client.h"
 
 /***************************************************************************
 * global data
@@ -1024,23 +1025,23 @@
 	 * Size and generally configure the frame window tree
 	 */
 	FrameSetPosFromPane(winFrame,paneAttr.x,paneAttr.y);
-	WinCallConfig(dpy, winPane, NULL);
+	WinCallConfig(dpy, (WinGeneric *)winPane, NULL);
 
 	/* 
 	 * Size and generally configure the icon window tree
 	 */
-	WinCallConfig(dpy, winIconPane, NULL);
+	WinCallConfig(dpy, (WinGeneric *)winIconPane, NULL);
 	if (cli->wmHints != NULL)
 	    IconSetPos(winIcon,cli->wmHints->icon_x,cli->wmHints->icon_y);
 	else
 	    IconSetPos(winIcon,0,0);
-	WinCallConfig(dpy, winIcon, NULL);
+	WinCallConfig(dpy, (WinGeneric *)winIcon, NULL);
 
         /*
 	 * We manually move the icon pane window, since all the configuration
 	 * has been done with the icon pane parented to root.
 	 */
-        WinRootPos(winIconPane, &tmpx, &tmpy);
+        WinRootPos((WinGeneric *)winIconPane, &tmpx, &tmpy);
         XMoveWindow(dpy, winIconPane->core.self, tmpx, tmpy);
 
 	/* 
@@ -1100,7 +1101,7 @@
 		if (GRV.AutoInputFocus)
 		    ClientSetFocus(cli, True, CurrentTime);
 		if (GRV.AutoColorFocus)
-		    LockColormap(dpy, cli, winPane);
+		    LockColormap(dpy, cli, (WinGeneric *)winPane);
 	    }
 	    break;
 	case IconicState:
@@ -1344,7 +1345,7 @@
 	FrameUnwarpPointer(cli);
 
 	/* Move the pane and unparent it */
-	FrameUnparentPane(cli, frameInfo, frameInfo->fcore.panewin);
+	FrameUnparentPane(cli, frameInfo, (WinPane *)frameInfo->fcore.panewin);
 
 	DestroyClient(cli);
 }
diff -Naur xview-3.2p1.4.orig/clients/olwm/usermenu.c xview-3.2p1.4/clients/olwm/usermenu.c
--- xview-3.2p1.4.orig/clients/olwm/usermenu.c	2013-01-07 12:36:38.343918000 +0100
+++ xview-3.2p1.4/clients/olwm/usermenu.c	2013-01-07 12:50:36.300429000 +0100
@@ -196,6 +196,11 @@
 static void addToMenuInfo();
 static void freeFileInfoList();
 static int firstEnabledItem();
+#ifdef __STDC__
+static void SetWindowMenuTitle(void);
+#else
+static void SetWindowMenuTitle();
+#endif
 
 /*
  *****************************************************************************
@@ -575,7 +580,7 @@
 
     orig = pin;
 
-    *pathname = NULL;
+    *pathname = '\0';
 
     len = strlen(pin);
 
@@ -601,7 +606,7 @@
 		}
 		tmp = pend - pin;
 		memcpy(envbuff, pin, tmp);
-		envbuff[tmp] = NULL;
+		envbuff[tmp] = '\0';
 		pin = pend;
 		len -= tmp;
 		ppw = getpwnam(envbuff);
@@ -651,7 +656,7 @@
 		}
 		tmp = pend - pin;
 		memcpy(envbuff, pin, tmp);
-		envbuff[tmp] = NULL;
+		envbuff[tmp] = '\0';
 		len -= (2 + tmp + 1);
 		pin = pend+1;
 	    } else {
@@ -660,12 +665,12 @@
 		if (pend) {
 		    int tmp = pend - pin;
 		    memcpy(envbuff, pin, tmp);
-		    envbuff[tmp] = NULL;
+		    envbuff[tmp] = '\0';
 		    len -= tmp;
 		    pin = pend;
 		} else {
 		    memcpy(envbuff, pin, len);
-		    envbuff[len] = NULL;
+		    envbuff[len] = '\0';
 		    len = 0;
 		}
 	    }
@@ -709,9 +714,9 @@
 	    --len;
 	}
     }
-    *p = NULL;
+    *p = '\0';
     if (haveslash)
-	pathname[strlen(pathname)-1] = NULL;
+	pathname[strlen(pathname)-1] = '\0';
 
     return MemNewString(pathname);
 }
@@ -1924,6 +1929,7 @@
 }
 
 
+void
 SetWindowMenuTitle()
 {
     MenuTable[MENU_FULL]->title = windowTitle;
diff -Naur xview-3.2p1.4.orig/clients/olwm/win.c xview-3.2p1.4/clients/olwm/win.c
--- xview-3.2p1.4.orig/clients/olwm/win.c	1993-06-29 07:12:00.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/win.c	2013-01-07 12:50:36.339969000 +0100
@@ -22,6 +22,7 @@
 #include "mem.h"
 #include "st.h"
 #include "notice.h"
+#include "helpcmd.h"
 
 /***************************************************************************
 * local functions
diff -Naur xview-3.2p1.4.orig/clients/olwm/win.h xview-3.2p1.4/clients/olwm/win.h
--- xview-3.2p1.4.orig/clients/olwm/win.h	1993-06-29 07:12:00.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/win.h	2013-01-07 12:50:36.366958000 +0100
@@ -533,4 +533,28 @@
 
 extern Client *CurrentClient;
 
+#ifdef __STDC__
+void WinCallConfig(Display *dpy, WinGeneric *win, XConfigureRequestEvent *pxcre);
+void WinCallDestroy(Client *cli);
+void WinCallDraw(WinGeneric *win);
+void WinCallSelect(Client *cli, Bool sel);
+void WinRootPos(WinGeneric *win, int *px, int *py);
+void LockColormap(Display *dpy, Client *cli, WinGeneric *winInfo);
+void FrameInit(Display *dpy);
+void FrameUnparentPane(Client *cli, WinPaneFrame *winFrame, WinPane *winPane);
+void HandleHelpKey(Display *dpy, XEvent *pEvent);
+void PushPinSetPinState(Display *dpy, WinPushPin *winInfo, int newState, Bool sendDelete);
+#else
+void WinCallConfig();
+void WinCallDestroy();
+void WinCallDraw();
+void WinCallSelect();
+void WinRootPos();
+void LockColormap();
+void FrameInit();
+void FrameUnparentPane();
+void HandleHelpKey();
+void PushPinSetPinState();
+#endif
+
 #endif /* _OLWM_WIN_H */
diff -Naur xview-3.2p1.4.orig/clients/olwm/winframe.c xview-3.2p1.4/clients/olwm/winframe.c
--- xview-3.2p1.4.orig/clients/olwm/winframe.c	2013-01-07 12:36:37.397260000 +0100
+++ xview-3.2p1.4/clients/olwm/winframe.c	2013-01-07 13:07:50.590440000 +0100
@@ -28,6 +28,7 @@
 #include "group.h"
 #include "globals.h"
 #include "error.h"
+#include "client.h"
 
 
 /***************************************************************************
@@ -72,7 +73,12 @@
 static void setIMStatusText();
 #endif
 static void updateResizePositions();
+
+#ifdef __STDC__
 static int headerHeight(Client *cli, Graphics_info *gis);
+#else
+static int headerHeight();
+#endif
 
 /***************************************************************************
 * sizing and decoration positioning functions
@@ -330,7 +336,7 @@
 	Client *cli = frameInfo->core.client;
 	WinPane		*winPane = (WinPane*)frameInfo->fcore.panewin;
 
-	ClientConfigure(cli,winPane,event);
+	ClientConfigure(cli, (WinGeneric *)winPane, (XConfigureRequestEvent *)event);
 }
 
 /*
@@ -376,7 +382,7 @@
 WinPaneFrame *frameInfo;
 XButtonEvent *lastpress;
 {
-	ClientMove(frameInfo->core.client,lastpress);
+	ClientMove(frameInfo->core.client, (XEvent *)lastpress);
 }
 
 /*
@@ -1578,7 +1584,7 @@
 
 	/* Set the new pos/height */
 	(WinFunc(paneInfo,pcore.setsizefunc))(paneInfo,width,height);
-	WinCallConfig(client->dpy,paneInfo,NULL);
+	WinCallConfig(client->dpy, (WinGeneric *)paneInfo, NULL);
 
 	frameInfo->fcore.fullsize = !frameInfo->fcore.fullsize;
 
@@ -2111,7 +2117,7 @@
 	{
 	    (WinFunc(win->winBusy,core.destroyfunc))(win->core.client->dpy, win->winBusy);
 	}
-	WinCallDraw(win);
+	WinCallDraw((WinGeneric *)win);
 }
 
 /*
@@ -2159,7 +2165,7 @@
 
 	if (warpParam == NULL) {
 
-	    WinRootPos(frameInfo, &offsetX, &offsetY);
+	    WinRootPos((WinGeneric *)frameInfo, &offsetX, &offsetY);
 
 	    /* warp to the pushpin */
 	    cli->warpInfo.dflButtonX = xposPushPin(gis);
@@ -2176,7 +2182,7 @@
 
 	} else {
 
-	    WinRootPos(paneInfo, &offsetX, &offsetY);
+	    WinRootPos((WinGeneric *)paneInfo, &offsetX, &offsetY);
 
 	    /* save warp destination information */
 	    cli->warpInfo.warpToX = warpParam[0];
diff -Naur xview-3.2p1.4.orig/clients/olwm/wingframe.c xview-3.2p1.4/clients/olwm/wingframe.c
--- xview-3.2p1.4.orig/clients/olwm/wingframe.c	1993-06-29 07:12:03.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/wingframe.c	2013-01-07 12:50:36.480943000 +0100
@@ -32,6 +32,7 @@
 #include "win.h"
 #include "globals.h"
 #include "events.h"
+#include "client.h"
 
 /***************************************************************************
 * private data
@@ -55,12 +56,6 @@
 static	SemanticAction	currentAction = ACTION_NONE;
 
 /***************************************************************************
-* forward-declared functions
-***************************************************************************/
-
-extern void ClientSetCurrent();
-
-/***************************************************************************
 * static functions
 ***************************************************************************/
 
@@ -243,11 +238,11 @@
                 (WinFunc(pane,pcore.setsizefunc))(pane,
                     w-(WinFunc(win,fcore.widthleft))(win)-(WinFunc(win,fcore.widthright))(win),
                     h-(WinFunc(win,fcore.heighttop))(win)-(WinFunc(win,fcore.heightbottom))(win));
-            WinCallConfig(win->core.client->dpy, pane, NULL);
+            WinCallConfig(win->core.client->dpy, (WinGeneric *)pane, NULL);
 	}
 	else
 	{
-            WinCallConfig(win->core.client->dpy, win, NULL);
+            WinCallConfig(win->core.client->dpy, (WinGeneric *)win, NULL);
 	}
 }
 
diff -Naur xview-3.2p1.4.orig/clients/olwm/winicon.c xview-3.2p1.4/clients/olwm/winicon.c
--- xview-3.2p1.4.orig/clients/olwm/winicon.c	2013-01-07 12:36:37.470530000 +0100
+++ xview-3.2p1.4/clients/olwm/winicon.c	2013-01-07 12:50:36.519535000 +0100
@@ -28,6 +28,7 @@
 #include "globals.h"
 #include "slots.h"
 #include "group.h"
+#include "client.h"
 
 extern 	Bool	PropGetWMName();
 extern 	Bool	PropGetWMIconName();
@@ -48,6 +49,20 @@
 static int widthBothIcon(WinIconFrame *win);
 
 /***************************************************************************
+* forward declarations
+***************************************************************************/
+
+#ifdef __STDC__
+static int heightTopIcon(WinIconFrame *win);
+static int heightBottomIcon(WinIconFrame *win);
+static int widthBothIcon(WinIconFrame *win);
+#else
+static int heightTopIcon();
+static int heightBottomIcon();
+static int widthBothIcon();
+#endif
+
+/***************************************************************************
 * private event functions
 ***************************************************************************/
 
@@ -142,7 +157,7 @@
 {
 	SlotFree(iframe);
 	iframe->fManuallyPositioned = True;
-	ClientMove(iframe->core.client,lastpress);
+	ClientMove(iframe->core.client, (XEvent *)lastpress);
 }
 
 
diff -Naur xview-3.2p1.4.orig/clients/olwm/winnofoc.c xview-3.2p1.4/clients/olwm/winnofoc.c
--- xview-3.2p1.4.orig/clients/olwm/winnofoc.c	1993-06-29 07:12:04.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/winnofoc.c	2013-01-07 12:50:36.556584000 +0100
@@ -25,18 +25,19 @@
 #include "win.h"
 #include "globals.h"
 #include "selection.h"
+#include "kbdfuncs.h"
+#include "client.h"
 
 extern unsigned int FindModifierMask();
 extern Atom AtomProtocols;
 extern Atom AtomOlwmNoFocusWin;
 extern Atom AtomTakeFocus;
-extern void ClientSetCurrent();
 
 /***************************************************************************
 * global data
 ***************************************************************************/
 
-Window NoFocusWin = NULL;
+Window NoFocusWin = (Window)0;
 WinNoFocus *NoFocusWinInfo;
 
 /***************************************************************************
@@ -242,7 +243,7 @@
                                       ButtonRelease,&dummy))
 	    /*EMPTY*/
             ;
-	KeyBeep(dpy,event);
+	KeyBeep(dpy, (XKeyEvent *)event);
 }
 
 
diff -Naur xview-3.2p1.4.orig/clients/olwm/winpane.c xview-3.2p1.4/clients/olwm/winpane.c
--- xview-3.2p1.4.orig/clients/olwm/winpane.c	1993-06-29 07:12:05.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/winpane.c	2013-01-07 12:50:36.586333000 +0100
@@ -24,6 +24,7 @@
 #include "olwm.h"
 #include "win.h"
 #include "globals.h"
+#include "client.h"
 
 extern	Time	TimeFresh();
 
@@ -123,7 +124,7 @@
 XEvent	*event;
 WinPane	*winInfo;
 {
-	ClientDistributeProperty(winInfo->core.client,event);
+	ClientDistributeProperty(winInfo->core.client, (XPropertyEvent *)event);
 }
 
 /* 
@@ -237,7 +238,7 @@
 	ce.serial = 0L;
 	ce.event = winInfo->core.self;
 	ce.window = winInfo->core.self;
-	WinRootPos(winInfo,&ce.x,&ce.y);
+	WinRootPos((WinGeneric *)winInfo,&ce.x,&ce.y);
 	ce.x -= winInfo->pcore.oldBorderWidth;
 	ce.y -= winInfo->pcore.oldBorderWidth;
 	ce.width = winInfo->core.width;
@@ -272,7 +273,7 @@
     if (pxcre == NULL)
 	return win->core.dirtyconfig;
 
-    WinRootPos(winFrame, &oldX, &oldY);
+    WinRootPos((WinGeneric *)winFrame, &oldX, &oldY);
     FrameGetGravityOffset(winFrame, &dx, &dy);
     oldX += dx;
     oldY += dy;
diff -Naur xview-3.2p1.4.orig/clients/olwm/winpinmenu.c xview-3.2p1.4/clients/olwm/winpinmenu.c
--- xview-3.2p1.4.orig/clients/olwm/winpinmenu.c	1993-06-29 07:12:05.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/winpinmenu.c	2013-01-07 12:50:36.615026000 +0100
@@ -25,6 +25,7 @@
 #include "win.h"
 #include "menu.h"
 #include "globals.h"
+#include "client.h"
 
 /***************************************************************************
 * global data
diff -Naur xview-3.2p1.4.orig/clients/olwm/winpush.c xview-3.2p1.4/clients/olwm/winpush.c
--- xview-3.2p1.4.orig/clients/olwm/winpush.c	1993-06-29 07:12:05.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/winpush.c	2013-01-07 12:50:36.662275000 +0100
@@ -26,6 +26,7 @@
 #include "olwm.h"
 #include "win.h"
 #include "globals.h"
+#include "client.h"
 
 /***************************************************************************
 * global data
diff -Naur xview-3.2p1.4.orig/clients/olwm/winresize.c xview-3.2p1.4/clients/olwm/winresize.c
--- xview-3.2p1.4.orig/clients/olwm/winresize.c	1993-06-29 07:12:05.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/winresize.c	2013-01-07 12:50:36.688285000 +0100
@@ -28,6 +28,7 @@
 #include "win.h"
 #include "globals.h"
 #include "events.h"
+#include "client.h"
 
 /***************************************************************************
 * global data
diff -Naur xview-3.2p1.4.orig/clients/olwm/winroot.c xview-3.2p1.4/clients/olwm/winroot.c
--- xview-3.2p1.4.orig/clients/olwm/winroot.c	1993-06-29 07:12:06.000000000 +0200
+++ xview-3.2p1.4/clients/olwm/winroot.c	2013-01-07 12:50:36.716422000 +0100
@@ -29,6 +29,8 @@
 #include "group.h"
 #include "events.h"
 #include "error.h"
+#include "client.h"
+#include "kbdfuncs.h"
 
 
 /***************************************************************************
@@ -213,12 +215,12 @@
 	if ((clientInfo = WIGetInfo(ConfEvent.window)) == NULL)
 	{
 		/* we don't know about this window, so let it go */
-		ClientConfigure(NULL,NULL,pEvent);
+		ClientConfigure(NULL, NULL, (XConfigureRequestEvent *)pEvent);
 	}
 	else /* OBSOLETE: if (ConfEvent.value_mask & (CWX | CWY | CWWidth | CWHeight)) */
 	{
 		/* configure the window and its frame */
-		ClientConfigure(clientInfo->core.client,clientInfo,pEvent);
+		ClientConfigure(clientInfo->core.client, clientInfo, (XConfigureRequestEvent *)pEvent);
 	}
 	/* REMIND doesn't handle stacking or border width yet */
 }
@@ -432,7 +434,7 @@
 	isbound = ExecuteKeyboardFunction(dpy, pEvent);
 
 	if (!isbound && pEvent->type == KeyPress)
-	    KeyBeep(dpy,pEvent);
+	    KeyBeep(dpy, (XKeyEvent *)pEvent);
 }
 
 /* 
diff -Naur xview-3.2p1.4.orig/clients/olwmslave/cmdstream.c xview-3.2p1.4/clients/olwmslave/cmdstream.c
--- xview-3.2p1.4.orig/clients/olwmslave/cmdstream.c	2013-01-07 12:36:40.014635000 +0100
+++ xview-3.2p1.4/clients/olwmslave/cmdstream.c	2013-01-07 13:09:35.117708000 +0100
@@ -13,11 +13,14 @@
  * ---------------------------------------------------------------------*/
 
 #include <stdio.h>
-#ifdef SYSV
+#if defined(SYSV) || defined(__linux__)
 #include <string.h>
 #else
 #include <strings.h>
 #endif
+#ifdef __linux__
+#include <stdlib.h>		/* strtol() */
+#endif
 #include "cmdstream.h"
 #include "mem.h"
 
@@ -50,10 +53,17 @@
  *      Local Forward Declarations
  * ---------------------------------------------------------------------*/
 
+#ifdef __STDC__
+static Command		*MatchCommand(char *keyword);
+static CmdAttr		*MatchAttr(Command *cmd, char *name);
+static int		EncodeAttrValue(CmdAttr *attr, FILE *stream);
+static int		DecodeAttrValue(CmdAttr *attr, char *valuestr);
+#else
 static Command		*MatchCommand();
 static CmdAttr		*MatchAttr();
 static int		EncodeAttrValue();
 static int		DecodeAttrValue();
+#endif
 
 /* ----------------------------------------------------------------------
  *      SetCmdStream
@@ -185,7 +195,6 @@
 {
 	int		i,equalindex;
 	char		*equalpos;
-	char		*strchr();
 
 	equalpos = strchr(name,'=');
 
diff -Naur xview-3.2p1.4.orig/clients/olwmslave/helpcmd.h xview-3.2p1.4/clients/olwmslave/helpcmd.h
--- xview-3.2p1.4.orig/clients/olwmslave/helpcmd.h	1993-06-29 07:12:11.000000000 +0200
+++ xview-3.2p1.4/clients/olwmslave/helpcmd.h	2013-01-07 12:50:36.799782000 +0100
@@ -21,3 +21,8 @@
 	"SHOWHELP", 0, HW_ATTR_COUNT, helpCmdAttr
 };
 
+#ifdef __STDC__
+void RegisterHelpCmd(void);
+#else
+void RegisterHelpCmd();
+#endif
diff -Naur xview-3.2p1.4.orig/clients/olwmslave/helpwin.c xview-3.2p1.4/clients/olwmslave/helpwin.c
--- xview-3.2p1.4.orig/clients/olwmslave/helpwin.c	2013-01-07 12:36:40.302166000 +0100
+++ xview-3.2p1.4/clients/olwmslave/helpwin.c	2013-01-07 13:12:37.226752000 +0100
@@ -127,7 +127,19 @@
 /* ----------------------------------------------------------------------
  *	Local Forward Functions
  * ---------------------------------------------------------------------*/
-int		ShowHelpWindow();
+#ifdef __STDC__
+int			ShowHelpWindow(int nscreen, int mousex, int mousey, char *helpkey);
+static void		InitHelpWindow(void);
+static Bool		CreateHelpWindow(HelpWindow *hw, char *helpkey);
+static Notify_value	DestroyHelpWindow(Notify_client client, Destroy_status status);
+static void		ResetHelpWindow(HelpWindow *hw);
+static Bool		TextHelpWindow(HelpWindow *hw, char *helpkey);
+static Bool		ImageHelpWindow(HelpWindow *hw, int mousex, int mousey);
+static void		MoreHelp(Panel_item item, Event *event);
+static void		ErrorNotice(int nscreen, char *errmsg, char *helpkey);
+static int		ConstrainMousePos(int nscreen, int mousex, int mousey, int *imagex, int *imagey);
+#else
+int			ShowHelpWindow();
 static void		InitHelpWindow();
 static Bool		CreateHelpWindow();
 static Notify_value	DestroyHelpWindow();
@@ -137,6 +149,7 @@
 static void		MoreHelp();
 static void		ErrorNotice();
 static int		ConstrainMousePos();
+#endif
 
 /* ----------------------------------------------------------------------
  *	ShowHelpWindow
@@ -227,7 +240,7 @@
 	hw->hwFrame = (Frame)xv_create(XVRoot(hw->hwScreenNo),FRAME_HELP,
 		XV_X,			0,
 		XV_Y,			0,
-		XV_KEY_DATA,		HELPWIN_KEY, hw,
+		XV_KEY_DATA,		(Attr_attribute)HELPWIN_KEY, hw,
 		XV_SHOW,		FALSE,
 #ifdef OW_I18N_L4
 		WIN_USE_IM,		FALSE,
@@ -248,7 +261,7 @@
 		NULL);
 	hw->hwTextScroll = (Scrollbar)xv_get(hw->hwText,
 		OPENWIN_VERTICAL_SCROLLBAR,
-		xv_get(hw->hwText,OPENWIN_NTH_VIEW,0));
+		xv_get(hw->hwText,OPENWIN_NTH_VIEW,NULL));
 	xv_set(hw->hwTextScroll,SCROLLBAR_SPLITTABLE,FALSE,
 		NULL);
 
@@ -278,7 +291,7 @@
 		PANEL_LABEL_STRING,	helpStrings[HS_MORE],
 #endif
 		PANEL_NOTIFY_PROC,	MoreHelp,
-		XV_KEY_DATA,		HELPWIN_KEY, hw,
+		XV_KEY_DATA,		(Attr_attribute)HELPWIN_KEY, hw,
 		NULL);
 
 	window_fit_height(hw->hwMorePanel);
@@ -302,18 +315,18 @@
 	controlcms = (Cms)xv_get(hw->hwMGlassPanel,WIN_CMS);
 
 	gcv.function = GXclear;
-	gcv.background = (unsigned long)xv_get(controlcms,CMS_FOREGROUND_PIXEL);
-	gcv.foreground = (unsigned long)xv_get(controlcms,CMS_BACKGROUND_PIXEL);
+	gcv.background = (unsigned int)xv_get(controlcms,CMS_FOREGROUND_PIXEL);
+	gcv.foreground = (unsigned int)xv_get(controlcms,CMS_BACKGROUND_PIXEL);
 	hw->hwFillGC = XCreateGC(display,RootWin(hw->hwScreenNo),
 		GCFunction|GCForeground|GCBackground,&gcv);
 
-	gcv.foreground = (unsigned long)xv_get(controlcms,CMS_FOREGROUND_PIXEL);
-	gcv.background = (unsigned long)xv_get(controlcms,CMS_BACKGROUND_PIXEL);
+	gcv.foreground = (unsigned int)xv_get(controlcms,CMS_FOREGROUND_PIXEL);
+	gcv.background = (unsigned int)xv_get(controlcms,CMS_BACKGROUND_PIXEL);
 	hw->hwCopyGC = XCreateGC(display,RootWin(hw->hwScreenNo),
 		GCForeground|GCBackground,&gcv);
 
-	gcv.foreground = (unsigned long)xv_get(controlcms,CMS_FOREGROUND_PIXEL);
-	gcv.background = (unsigned long)xv_get(controlcms,CMS_BACKGROUND_PIXEL);
+	gcv.foreground = (unsigned int)xv_get(controlcms,CMS_FOREGROUND_PIXEL);
+	gcv.background = (unsigned int)xv_get(controlcms,CMS_BACKGROUND_PIXEL);
 	gcv.fill_style = FillOpaqueStippled;
 	gcv.stipple = (XID)xv_get(hw->hwMGlassImage,XV_XID);
 	gcv.clip_mask = (XID)xv_get(hw->hwMGlassMask,XV_XID);
@@ -344,7 +357,7 @@
 	HelpWindow	*hw;
 
 	if (status != DESTROY_CHECKING) {
-		hw = (HelpWindow *)xv_get(client,XV_KEY_DATA,HELPWIN_KEY);
+		hw = (HelpWindow *)xv_get(client,XV_KEY_DATA,(Attr_attribute)HELPWIN_KEY);
 		if (hw) {
 			xv_destroy(hw->hwMGlassRender);
 			hw->hwMGlassRender = (Server_image)NULL;
@@ -383,7 +396,7 @@
 	/*
 	 *	Update the frame label with the helpkey
 	 */
-	len = (int)strchr(helpkey,':') - (int)helpkey;
+	len = (int)(strchr(helpkey,':') - helpkey);
 	if (len > 80) len = 80;
 	strncpy(flabel,helpkey,len);
 	flabel[len++] = ':';
@@ -420,10 +433,10 @@
 
 	if (moreHelpCmd) {
 		hw->hwMoreHelpCmd = MemNewString(moreHelpCmd);
-		xv_set(hw->hwMoreHelp,XV_SHOW,TRUE,0);
+		xv_set(hw->hwMoreHelp,XV_SHOW,TRUE,NULL);
 	} else {
 		hw->hwMoreHelpCmd = (char *)NULL;
-		xv_set(hw->hwMoreHelp,XV_SHOW,FALSE,0);
+		xv_set(hw->hwMoreHelp,XV_SHOW,FALSE,NULL);
 	}
 
 	/*
@@ -464,6 +477,7 @@
 static	Bool
 ImageHelpWindow(hw,mousex,mousey)
 	HelpWindow	*hw;
+	int		mousex, mousey;
 {
 	XImage		*scrimage;
 	XID		renderxid;
@@ -536,7 +550,7 @@
 {
 	HelpWindow	*hw;
 
-	hw  = (HelpWindow *)xv_get(item,XV_KEY_DATA,HELPWIN_KEY);
+	hw  = (HelpWindow *)xv_get(item,XV_KEY_DATA,(Attr_attribute)HELPWIN_KEY);
 
 	if (hw->hwMoreHelpCmd) {
 		putenv(DpyEnvString(hw->hwScreenNo));
@@ -574,7 +588,7 @@
 		XV_WIDTH,	1,
 		XV_HEIGHT,	1,
 		XV_SHOW,	TRUE,
-		0);
+		NULL);
 	notice_prompt(notice_window,(Event *)NULL,
 #ifdef OW_I18N_L4
 		NOTICE_MESSAGE_STRING_WCS,
diff -Naur xview-3.2p1.4.orig/clients/olwmslave/mem.c xview-3.2p1.4/clients/olwmslave/mem.c
--- xview-3.2p1.4.orig/clients/olwmslave/mem.c	1993-06-29 07:12:12.000000000 +0200
+++ xview-3.2p1.4/clients/olwmslave/mem.c	2013-01-07 12:50:42.705254000 +0100
@@ -20,6 +20,16 @@
 #include <memory.h>
 #include <stdio.h>
 #include <sys/types.h>
+#ifdef __linux__
+#include <stdlib.h>		/* exit() */
+#endif
+
+#ifdef __STDC__
+static void ErrorGeneral(char *txt);
+#else
+static void ErrorGeneral();
+#endif
+
 
 void *
 MemAlloc(sz)
@@ -63,6 +73,7 @@
 		free(p);
 }
 
+static void
 ErrorGeneral(txt)
 char	*txt;
 {
diff -Naur xview-3.2p1.4.orig/clients/olwmslave/olwmslave.c xview-3.2p1.4/clients/olwmslave/olwmslave.c
--- xview-3.2p1.4.orig/clients/olwmslave/olwmslave.c	2013-01-07 12:36:39.859153000 +0100
+++ xview-3.2p1.4/clients/olwmslave/olwmslave.c	2013-01-07 13:13:58.751085000 +0100
@@ -19,6 +19,9 @@
 #include <strings.h>
 #endif
 #include <xview/xview.h>
+#ifdef __linux__
+#include <unistd.h>		/* read() */
+#endif
 
 #ifndef MAXPATHLEN
 #define MAXPATHLEN 256
@@ -26,6 +29,9 @@
 
 #include "olwmslave.h"
 #include "mem.h"
+#include "cmdstream.h"
+#include "propscmd.h"
+#include "helpcmd.h"
 
 /* ----------------------------------------------------------------------
  * 	External globals
@@ -44,15 +50,21 @@
 /* ----------------------------------------------------------------------
  *	Forward Definitions
  * ----------------------------------------------------------------------*/
+#ifdef __STDC__
+static void		InitScreenInfo(Xv_Server server);
+static void		ParseScreenArgs(int *argc, char **argv);
+static Notify_value	InputReader(Notify_client client, int fd);
+#else
 static void		InitScreenInfo();
 static void		ParseScreenArgs();
 static Notify_value	InputReader();
+#endif
 
 /* ----------------------------------------------------------------------
  * 	main
  * ----------------------------------------------------------------------*/
 /*ARGSUSED*/
-main(argc,argv)
+int main(argc,argv)
 	int	argc;
 	char	**argv;
 {
diff -Naur xview-3.2p1.4.orig/clients/olwmslave/propscmd.h xview-3.2p1.4/clients/olwmslave/propscmd.h
--- xview-3.2p1.4.orig/clients/olwmslave/propscmd.h	1993-06-29 07:12:13.000000000 +0200
+++ xview-3.2p1.4/clients/olwmslave/propscmd.h	2013-01-07 12:50:42.773993000 +0100
@@ -20,3 +20,11 @@
 static Command propsCommand = {
 	"SHOWPROPS", 0, PW_ATTR_COUNT, propsCmdAttr
 };
+
+#ifdef __STDC__
+void RegisterPropsCmd(void);
+void ReceivePropsCmd(Command *cmd);
+#else
+void RegisterPropsCmd();
+void ReceivePropsCmd();
+#endif
diff -Naur xview-3.2p1.4.orig/clients/olwmslave/propsrecv.c xview-3.2p1.4/clients/olwmslave/propsrecv.c
--- xview-3.2p1.4.orig/clients/olwmslave/propsrecv.c	2013-01-07 12:36:39.903886000 +0100
+++ xview-3.2p1.4/clients/olwmslave/propsrecv.c	2013-01-07 17:28:25.717912000 +0100
@@ -15,7 +15,6 @@
 #include "propscmd.h"
 
 extern	int	ShowWindowProps();
-static	void	ReceivePropsCmd();
 
 /* ----------------------------------------------------------------------
  *	RegisterPropsWindow
@@ -30,7 +29,7 @@
 /* ----------------------------------------------------------------------
  *	ReceivePropsCmd
  * ---------------------------------------------------------------------*/
-static void
+void
 ReceivePropsCmd(cmd)
 	Command		*cmd;
 {
diff -Naur xview-3.2p1.4.orig/clients/olwmslave/propswin.c xview-3.2p1.4/clients/olwmslave/propswin.c
--- xview-3.2p1.4.orig/clients/olwmslave/propswin.c	2013-01-07 12:36:40.160521000 +0100
+++ xview-3.2p1.4/clients/olwmslave/propswin.c	2013-01-07 13:15:48.755946000 +0100
@@ -37,12 +37,21 @@
 /* ----------------------------------------------------------------------
  *      Local Forward Declarations
  * ----------------------------------------------------------------------*/
-int		ShowWindowProps();
-static void	InitWindowProps();
-static Bool	CreateWindowProps();
+#ifdef __STDC__
+int ShowWindowProps(int nscreen);
+static void		InitWindowProps(void);
+static Bool		CreateWindowProps(WindowProps *wp);
+static Notify_value	DestroyWindowProps(Notify_client client, Destroy_status status);
+static void		ApplyProps(Panel_item item, Event *event);
+static void		ResetProps(Panel_item item, Event *event);
+#else
+int ShowWindowProps();
+static void		InitWindowProps();
+static Bool		CreateWindowProps();
 static Notify_value	DestroyWindowProps();
-void		ApplyProps();
-void		ResetProps();
+static void		ApplyProps();
+static void		ResetProps();
+#endif
 
 /* ----------------------------------------------------------------------
  *      ShowWindowProps
@@ -113,7 +122,7 @@
 #else
 		FRAME_LABEL,		LOCALIZE("Window Properties"),
 #endif
-		XV_KEY_DATA,		winPropsList, wp,
+		XV_KEY_DATA,		(Attr_attribute)winPropsList, wp,
 		XV_SHOW,		FALSE,
 		NULL);
 	notify_interpose_destroy_func(wp->wpFrame,DestroyWindowProps);
@@ -169,7 +178,7 @@
 	WindowProps	*wp;
 
 	if (status != DESTROY_CLEANUP) {
-		wp = (WindowProps *)xv_get(client,XV_KEY_DATA,winPropsList);
+		wp = (WindowProps *)xv_get(client,XV_KEY_DATA,(Attr_attribute)winPropsList);
 		if (wp) {
 			wp->wpFrame = (Frame)NULL;
 		}
diff -Naur xview-3.2p1.4.orig/clients/props/color_props.c xview-3.2p1.4/clients/props/color_props.c
--- xview-3.2p1.4.orig/clients/props/color_props.c	1995-04-19 08:53:39.000000000 +0200
+++ xview-3.2p1.4/clients/props/color_props.c	2013-01-07 12:50:42.868960000 +0100
@@ -178,20 +178,20 @@
 	    xact_slider = xact_work;
 	}
 	xv_set(h_slider,
-	       PANEL_VALUE, xact_slider.h,
+	       PANEL_VALUE, (Attr_attribute)xact_slider.h,
 	       NULL);
 	xv_set(s_slider,
-	       PANEL_VALUE, xact_slider.s,
+	       PANEL_VALUE, (Attr_attribute)xact_slider.s,
 	       NULL);
 	xv_set(v_slider,
-	       PANEL_VALUE, xact_slider.v,
+	       PANEL_VALUE, (Attr_attribute)xact_slider.v,
 	       NULL);
     } else {
 	int         the_index;
 
 	the_index = (windowmode) ? win_index : work_index;
 
-	xv_set(palette, PANEL_VALUE, the_index, NULL);
+	xv_set(palette, PANEL_VALUE, (Attr_attribute)the_index, NULL);
     }
 }
 
@@ -515,7 +515,7 @@
 		      PANEL_NOTIFY_PROC, which_notify,
 		      PANEL_NEXT_ROW, -1,
 		      PANEL_CHOICE_NCOLS, 1,
-		      PANEL_VALUE, 0,
+		      PANEL_VALUE, 0L,
 		      XV_HELP_DATA, "props:ColorChoiceInfo",
 		      NULL);
 
@@ -526,7 +526,7 @@
 		       PANEL_NOTIFY_PROC, custom_notify,
 		       PANEL_NEXT_ROW, -1,
 		       PANEL_CHOICE_NCOLS, 1,
-		       PANEL_VALUE, 0,
+		       PANEL_VALUE, 0L,
 		       XV_HELP_DATA, "props:CustomColorInfo",
 		       NULL);
 
@@ -567,7 +567,7 @@
 			 PANEL_NOTIFY_LEVEL, PANEL_ALL,
 			 PANEL_SHOW_RANGE, FALSE,
 			 PANEL_SHOW_VALUE, FALSE,
-			 PANEL_VALUE, 0,
+			 PANEL_VALUE, 0L,
 			 PANEL_MIN_VALUE, 0,
 			 PANEL_MAX_VALUE, SLIDER_MAX_H,
 			 PANEL_NOTIFY_PROC, slider_notify,
@@ -596,7 +596,7 @@
 			 PANEL_NOTIFY_LEVEL, PANEL_ALL,
 			 PANEL_SHOW_RANGE, FALSE,
 			 PANEL_SHOW_VALUE, FALSE,
-			 PANEL_VALUE, 0,
+			 PANEL_VALUE, 0L,
 			 PANEL_MIN_VALUE, 0,
 			 PANEL_MAX_VALUE, SLIDER_MAX,
 			 PANEL_NOTIFY_PROC, slider_notify,
@@ -625,7 +625,7 @@
 			 PANEL_NOTIFY_LEVEL, PANEL_ALL,
 			 PANEL_SHOW_RANGE, FALSE,
 			 PANEL_SHOW_VALUE, FALSE,
-			 PANEL_VALUE, 0,
+			 PANEL_VALUE, 0L,
 			 PANEL_MIN_VALUE, 0,
 			 PANEL_MAX_VALUE, SLIDER_MAX,
 			 PANEL_NOTIFY_PROC, slider_notify,
@@ -699,7 +699,7 @@
 	       PANEL_CHOICE_COLOR, i, CMS_CONTROL_COLORS + i,
 	       NULL);
 
-    xv_set(custom, PANEL_VALUE, slidermode, NULL);
+    xv_set(custom, PANEL_VALUE, (Attr_attribute)slidermode, NULL);
     update_colors();
     switch_modes();
     backup_colors();
diff -Naur xview-3.2p1.4.orig/clients/props/l10n_props.c xview-3.2p1.4/clients/props/l10n_props.c
--- xview-3.2p1.4.orig/clients/props/l10n_props.c	2013-01-07 12:36:39.410943000 +0100
+++ xview-3.2p1.4/clients/props/l10n_props.c	2013-01-07 12:50:42.903167000 +0100
@@ -214,19 +214,19 @@
 		count++;
 	}
 
-	xv_set(pi, PANEL_CHOICE_STRINGS, LOCALIZE("Choice"), 0, 0);
+	xv_set(pi, PANEL_CHOICE_STRINGS, LOCALIZE("Choice"), NULL, NULL);
 	for (i=0; i< count; i++)
-		xv_set(pi, PANEL_CHOICE_STRING, i, (char *)texts[i], NULL);
+		xv_set(pi, PANEL_CHOICE_STRING, (Attr_attribute)i, (char *)texts[i], NULL);
 	
 	if (xrdb_default)
 		xv_set(pi,
-	       		PANEL_VALUE,		list->current_value,
-	       		PANEL_DEFAULT_VALUE,	list->default_value,
+	       		PANEL_VALUE,		(Attr_attribute)list->current_value,
+	       		PANEL_DEFAULT_VALUE,	(Attr_attribute)list->default_value,
 	       		NULL);
 	else
 		xv_set(pi,
-	       		PANEL_VALUE,		list->default_value,
-	       		PANEL_DEFAULT_VALUE,	list->default_value,
+	       		PANEL_VALUE,		(Attr_attribute)list->default_value,
+	       		PANEL_DEFAULT_VALUE,	(Attr_attribute)list->default_value,
 	       		NULL);
 		
 }
@@ -260,7 +260,7 @@
  
                     free(options_copy);
  
-                    xv_set(id->panel_item, PANEL_VALUE, i, NULL);
+                    xv_set(id->panel_item, PANEL_VALUE, (Attr_attribute)i, NULL);
 	}
 
         l_item = l10n_config_slot2ptr(
@@ -450,7 +450,7 @@
 		PANEL_LAYOUT, PANEL_HORIZONTAL,
 		PANEL_CHOICE_NCOLS, 1,
 		PANEL_NOTIFY_PROC, l10n_bs_notify,
-		PANEL_CHOICE_STRING, 0, LOCALIZE("Choice"),
+		PANEL_CHOICE_STRING, (Attr_attribute)0, LOCALIZE("Choice"),
 		XV_HELP_DATA,	"props:BasicSetting",
 		NULL);
 
@@ -513,7 +513,7 @@
 		PANEL_CHOICE_NCOLS, 1,
 		PANEL_LABEL_STRING, LOCALIZE("Display Language:"),
 		PANEL_NOTIFY_PROC, add_change_bar,
-		PANEL_CHOICE_STRING, 0, LOCALIZE("Choice"),
+		PANEL_CHOICE_STRING, (Attr_attribute)0, LOCALIZE("Choice"),
 		XV_HELP_DATA, "props:DisplayLanguage",
 		NULL);
 
@@ -532,7 +532,7 @@
 		PANEL_LAYOUT, PANEL_HORIZONTAL,
 		PANEL_CHOICE_NCOLS, 1,
 		PANEL_NOTIFY_PROC, add_change_bar,
-		PANEL_CHOICE_STRING, 0, LOCALIZE("Choice"),
+		PANEL_CHOICE_STRING, (Attr_attribute)0, LOCALIZE("Choice"),
 		XV_HELP_DATA, "props:InputLanguage",
 		NULL);
 
@@ -566,7 +566,7 @@
 		PANEL_LAYOUT, PANEL_HORIZONTAL,
 		PANEL_CHOICE_NCOLS, 1,
 		PANEL_NOTIFY_PROC, add_change_bar,
-		PANEL_CHOICE_STRING, 0, LOCALIZE("Choice"),
+		PANEL_CHOICE_STRING, (Attr_attribute)0, LOCALIZE("Choice"),
 		XV_HELP_DATA, "props:TimeFormat",
 		NULL);
 
@@ -585,7 +585,7 @@
 		PANEL_LAYOUT, PANEL_HORIZONTAL,
 		PANEL_CHOICE_NCOLS, 1,
 		PANEL_NOTIFY_PROC, add_change_bar,
-		PANEL_CHOICE_STRING, 0, LOCALIZE("Choice"),
+		PANEL_CHOICE_STRING, (Attr_attribute)0, LOCALIZE("Choice"),
 		XV_HELP_DATA, "props:NumericFormat",
 		NULL);
 
diff -Naur xview-3.2p1.4.orig/clients/props/props.c xview-3.2p1.4/clients/props/props.c
--- xview-3.2p1.4.orig/clients/props/props.c	1997-04-29 20:39:05.000000000 +0200
+++ xview-3.2p1.4/clients/props/props.c	2013-01-07 12:50:42.944602000 +0100
@@ -228,13 +228,13 @@
 		    sprintf(number_string, "%d", tmp);
 		    xv_set(id->panel_item, PANEL_VALUE, number_string, NULL);
 		} else
-		    xv_set(id->panel_item, PANEL_VALUE, tmp, NULL);
+		    xv_set(id->panel_item, PANEL_VALUE, (Attr_attribute)tmp, NULL);
 		break;
 	    case D_string:
 		if ((Panel_item_type) xv_get(id->panel_item, PANEL_ITEM_CLASS)
 			== PANEL_TEXT_ITEM) {
 		    xv_set(id->panel_item, PANEL_VALUE,
-			   defaults_get_string(id->name, id->class,
+			   (Attr_attribute)defaults_get_string(id->name, id->class,
 					       id->default_value),
 			   NULL);
 		} else {
@@ -256,12 +256,12 @@
 
 		    free(options_copy);
 
-		    xv_set(id->panel_item, PANEL_VALUE, i, NULL);
+		    xv_set(id->panel_item, PANEL_VALUE, (Attr_attribute)i, NULL);
 		}
 		break;
 	    case D_boolean:
 		xv_set(id->panel_item, PANEL_VALUE,
-		       defaults_get_boolean(id->name, id->class,
+		       (Attr_attribute)defaults_get_boolean(id->name, id->class,
 					    id->default_value),
 		       NULL);
 		break;
@@ -380,7 +380,7 @@
     mp_item = xv_create(panel_group[MENU_PANEL + color], PANEL_CHOICE,
 		     PANEL_LABEL_STRING, LOCALIZE("SELECT Mouse Press:"),
 		     PANEL_CHOICE_STRINGS,
-		     LOCALIZE("Selects Default"), LOCALIZE("Displays Menu"), 0,
+		     LOCALIZE("Selects Default"), LOCALIZE("Displays Menu"), NULL,
 		     PANEL_NOTIFY_PROC, add_change_bar,
 		     XV_HELP_DATA, "props:SelectMousePressInfo",
 		     NULL);
@@ -393,10 +393,10 @@
 
     { int a,b;
 
-      a = xv_get(dr_item, PANEL_LABEL_WIDTH);
-      b = xv_get(mp_item, PANEL_LABEL_WIDTH);
+      a = (int)xv_get(dr_item, PANEL_LABEL_WIDTH);
+      b = (int)xv_get(mp_item, PANEL_LABEL_WIDTH);
 
-      i = MAX_VALUE(a,b) + xv_get(msg_item, PANEL_LABEL_WIDTH) + DEFAULT_X_GAP;
+      i = MAX_VALUE(a,b) + (int)xv_get(msg_item, PANEL_LABEL_WIDTH) + DEFAULT_X_GAP;
     }
     xv_set(dr_item, PANEL_VALUE_X, i, NULL);
     xv_set(mp_item, PANEL_VALUE_X, i, NULL);
@@ -426,7 +426,7 @@
 			 LOCALIZE("Always"),
 			 LOCALIZE("Notices Only"),
 			 LOCALIZE("Never"),
-			 0,
+			 NULL,
 			 PANEL_NOTIFY_PROC, add_change_bar,
 			 XV_HELP_DATA, "props:Beep",
 			 NULL);
@@ -450,7 +450,7 @@
 			 LOCALIZE("Medium"),
 			 LOCALIZE("Large"),
 			 LOCALIZE("Extra Large"),
-			 0,
+			 NULL,
 			 PANEL_NOTIFY_PROC, add_change_bar,
 			 XV_HELP_DATA, "props:InitialScaleInfo",
 			 NULL);
@@ -473,7 +473,7 @@
 			 PANEL_CHOICE_STRINGS,
 			 LOCALIZE("Click SELECT"),
 			 LOCALIZE("Move Pointer"),
-			 0,
+			 NULL,
 			 PANEL_NOTIFY_PROC, add_change_bar,
 			 XV_HELP_DATA, "props:InputFocusInfo",
 			 NULL);
@@ -494,7 +494,7 @@
 			 PANEL_CHOICE_STRINGS,
 			 LOCALIZE("Left"),
 			 LOCALIZE("Right"),
-			 0,
+			 NULL,
 			 PANEL_NOTIFY_PROC, add_change_bar,
 			 XV_HELP_DATA, "props:ScrollbarPlacementInfo",
 			 NULL);
@@ -524,17 +524,17 @@
 
     { int a,b,c,d;
 
-      a = xv_get(bp_item,  PANEL_LABEL_WIDTH);
+      a = (int)xv_get(bp_item,  PANEL_LABEL_WIDTH);
 #ifdef RESCALE_ENTRY
-      b = xv_get(scl_item, PANEL_LABEL_WIDTH);
+      b = (int)xv_get(scl_item, PANEL_LABEL_WIDTH);
 #endif
-      c = xv_get(ia_item,  PANEL_LABEL_WIDTH);
-      d = xv_get(sbp_item, PANEL_LABEL_WIDTH);
+      c = (int)xv_get(ia_item,  PANEL_LABEL_WIDTH);
+      d = (int)xv_get(sbp_item, PANEL_LABEL_WIDTH);
 
 #ifdef RESCALE_ENTRY
-      i = MAX_VALUE(a,MAX_VALUE(b,MAX_VALUE(c,d))) + xv_get(msg_item, PANEL_LABEL_WIDTH) + DEFAULT_X_GAP;
+      i = MAX_VALUE(a,MAX_VALUE(b,MAX_VALUE(c,d))) + (int)xv_get(msg_item, PANEL_LABEL_WIDTH) + DEFAULT_X_GAP;
 #else
-      i = MAX_VALUE(a,MAX_VALUE(c,d)) + xv_get(msg_item, PANEL_LABEL_WIDTH) + DEFAULT_X_GAP;
+      i = MAX_VALUE(a,MAX_VALUE(c,d)) + (int)xv_get(msg_item, PANEL_LABEL_WIDTH) + DEFAULT_X_GAP;
 #endif
     }
     xv_set(bp_item,  PANEL_VALUE_X, i, NULL);
@@ -616,11 +616,11 @@
 
     { int a,b,c,d;
 
-      a = xv_get(sbj_item, PANEL_LABEL_WIDTH);
-      b = xv_get(ppj_item, PANEL_LABEL_WIDTH);
-      c = xv_get(mct_item, PANEL_LABEL_WIDTH);
+      a = (int)xv_get(sbj_item, PANEL_LABEL_WIDTH);
+      b = (int)xv_get(ppj_item, PANEL_LABEL_WIDTH);
+      c = (int)xv_get(mct_item, PANEL_LABEL_WIDTH);
 
-      i = MAX_VALUE(a,MAX_VALUE(b,c)) + xv_get(msg_item, PANEL_LABEL_WIDTH) + DEFAULT_X_GAP;
+      i = MAX_VALUE(a,MAX_VALUE(b,c)) + (int)xv_get(msg_item, PANEL_LABEL_WIDTH) + DEFAULT_X_GAP;
     }
     xv_set(sbj_item,  PANEL_VALUE_X, i, NULL);
     xv_set(ppj_item,  PANEL_VALUE_X, i, NULL);
@@ -773,8 +773,8 @@
     xv_set(flavor_panel,
 	   XV_WIDTH, width,
 	   NULL);
-    height = (int) xv_get(flavor_panel, XV_HEIGHT) +
-	xv_get(current_panel, XV_HEIGHT) + 2 * BORDER_WIDTH;
+    height = (int)xv_get(flavor_panel, XV_HEIGHT) +
+	(int)xv_get(current_panel, XV_HEIGHT) + 2 * BORDER_WIDTH;
     xv_set(frame,
 	   XV_HEIGHT, height,
 	   XV_WIDTH, width,
@@ -862,7 +862,7 @@
      * Might not get the colors set up right, so don't use FRAME_CMD_PANEL.
      * We must create a new one.
      */
-    xv_set((Panel)xv_get(frame, FRAME_CMD_PANEL) , XV_SHOW, FALSE, 0);
+    xv_set((Panel)xv_get(frame, FRAME_CMD_PANEL) , XV_SHOW, FALSE, NULL);
 
     flavor_panel = xv_create(frame, PANEL, 
 			     XV_X, 0, 
@@ -899,7 +899,7 @@
     add_buttons();
 
     xv_set(flavor_panel,
-	   XV_WIDTH, xv_get(current_panel, XV_WIDTH) + 2 * BORDER_WIDTH,
+	   XV_WIDTH, (int)xv_get(current_panel, XV_WIDTH) + 2 * BORDER_WIDTH,
 	   NULL);
 
     window_fit(frame);
diff -Naur xview-3.2p1.4.orig/clients/props/props.h xview-3.2p1.4/clients/props/props.h
--- xview-3.2p1.4.orig/clients/props/props.h	1995-04-19 08:53:42.000000000 +0200
+++ xview-3.2p1.4/clients/props/props.h	2013-01-07 12:50:42.984315000 +0100
@@ -50,6 +50,8 @@
 extern Description *allocate_desc_struct();
 extern Panel_setting add_change_bar();
 
+extern char *dgettext();
+
 #define LOCALIZE(s)	dgettext("props",s)
 #define MAX_VALUE(x,y) 	(((x) > (y)) ? (x) : (y))
 #define DEFAULT_X_GAP   20
diff -Naur xview-3.2p1.4.orig/clients/textedit/textedit.c xview-3.2p1.4/clients/textedit/textedit.c
--- xview-3.2p1.4.orig/clients/textedit/textedit.c	2013-01-07 12:36:36.845338000 +0100
+++ xview-3.2p1.4/clients/textedit/textedit.c	2013-01-07 17:35:02.454757000 +0100
@@ -18,6 +18,7 @@
 #include <fcntl.h>
 #include <stdio.h>
 #include <strings.h>
+#include <string.h>
 #include <X11/X.h>
 #include <xview/defaults.h>
 #include <xview/font.h>
@@ -30,6 +31,17 @@
 #include <xview/selection.h>
 #include <xview/sel_svc.h>
 #include <xview/sel_attrs.h>
+#include <sys/types.h>
+#include <unistd.h>			/* getpid() */
+#include <stdlib.h>			/* calloc() */
+
+#ifdef __STDC__
+extern char *xv_getlogindir(void);
+Pkg_private long textsw_get_from_defaults(Textsw_attribute);
+#else
+extern char *xv_getlogindir();
+Pkg_private long textsw_get_from_defaults();
+#endif
 
 #ifdef ecd.help
 #include <suntool/help.h>
@@ -44,12 +56,6 @@
 #ifndef __linux__
 char *sprintf();
 #endif
-void	frame_cmdline_help();
-static int		off();
-static Notify_value	mysigproc();
-/*
-extern Notify_value	textedit_event_proc();
-*/
 
 static Frame		base_frame;
 static char		current_filename[MAXNAMLEN];
@@ -57,7 +63,7 @@
 static int		handling_signal;
 static Textsw		textsw;
 static char		*cmd_name;
-static int		user_label;
+static char		*user_label;
 static int		caps_lock_on;
 static int		edited;
 static int      	read_only;
@@ -117,7 +123,27 @@
 #define OPTION_EDIT_LOG_WRAPS_AT	(1<<15)
 #endif
 
-static die(char *msg1,char *msg2,char *msg3);
+#ifdef __STDC__
+static void textedit_main(int argc, char **argv);
+static void button_notify_proc(Panel_item item, Event *event);
+static void my_frame_help(char *name);
+static void set_name_frame(Textsw textsw_local, Attr_avlist attributes);
+static void textsw_split_proc(Xv_Window origview, Xv_Window newview, int pos);
+static int off(char *);
+static void die(char *msg1, char *msg2, char *msg3);
+static Notify_value mysigproc(Notify_client me, int sig, Notify_signal_mode when);
+Notify_value textedit_load_event_proc(Xv_opaque window, Event *event, Notify_arg arg, Notify_event_type type);
+#else
+static void textedit_main();
+static void button_notify_proc();
+static void my_frame_help();
+static void set_name_frame();
+static void textsw_split_proc();
+static int off();
+static void die();
+static Notify_value mysigproc();
+Notify_value textedit_load_event_proc();
+#endif
 
 #ifdef TEXTEDIT_HELP_STRING
 static char	*help_msg()
@@ -126,11 +152,10 @@
  *   compiler to accept as a single string token.
  */
 {
-	extern char	*calloc();
 	char		*result = calloc(1, 5000);
 	
 	(void)sprintf(result, "\n\t\tHelp for %s\n%s\n%s\n%s\n",
-		xv_get(base_frame, FRAME_LABEL),
+		(char *)xv_get(base_frame, FRAME_LABEL),
 "Mouse buttons: left is point, middle is adjust, right is menu.\n\
 	Multi-click is only implemented for point.\n\
 	Adjust-at-end-char is char-adjust.\n\
@@ -190,7 +215,6 @@
 Event                   *event;
 Notify_arg              arg;
 Notify_event_type       type;
-
 {
 	char	document_name[4096];
 	int	alert_result;
@@ -206,14 +230,16 @@
 	   	   then abort the load. */
 
 		if (edited)
-			alert_result = (int) notice_prompt(base_frame, &event,
+			/* FIXME: is this intended? */
+			/*alert_result = (int) notice_prompt(base_frame, &event,*/
+			alert_result = (int) notice_prompt(base_frame, event,
 				NOTICE_MESSAGE_STRINGS,
 				"Your file has been edited.",
 				"Do you wish to discard these edits?",
-				0,
+				NULL,
 				NOTICE_BUTTON_NO, "Cancel",
 				NOTICE_BUTTON_YES, "Confirm",
-				0);
+				NULL);
 
 		if (!edited || (alert_result == NOTICE_YES))
 		{
@@ -224,23 +250,23 @@
 			s_p = document_name;
 			while (*s_p && (*s_p != '\t'))
 				s_p++;
-			*s_p = NULL;
+			*s_p = '\0';
 	
                 	xv_set(textsw, 
 				TEXTSW_FILE, document_name, 
 				TEXTSW_FIRST,   0,
-                		TEXTSW_INSERTION_POINT, 0,
-				0);
+                		TEXTSW_INSERTION_POINT, (Textsw_index)0,
+				NULL);
 	
-			xv_set(base_frame, FRAME_CLOSED, FALSE, 0);
+			xv_set(base_frame, FRAME_CLOSED, FALSE, NULL);
 		}
                 return(NOTIFY_DONE);
         }
 
-        return notify_next_event_func(window, event, arg, type);
+        return notify_next_event_func(window, (Notify_event)event, arg, type);
 }
 	
-static
+static void
 set_name_frame(textsw_local, attributes)
 	Textsw		 textsw_local;
 	Attr_avlist	 attributes;
@@ -249,7 +275,8 @@
 	Icon		 edit_icon;
 	char		 icon_text[sizeof(frame_label)];
 	char		 *ptr;
-	int		 len, pass_on = 0, repaint = 0;
+	size_t		 len;
+	int		 pass_on = 0, repaint = 0;
 	int		 was_read_only = read_only;
 	Attr_avlist	 attrs;
 	char		*attr_string;
@@ -269,7 +296,7 @@
 		attr_string = (char *)attrs[1];
 		switch (attr_string[0]) {
 		  case '/':
-		    (void)strcpy(current_directory, attrs[1]);
+		    (void)strcpy(current_directory, (char *)attrs[1]);
 		    break;
 		  case '.':
 		    if (attr_string[1] != '\0')
@@ -279,7 +306,7 @@
 		    break;
 		  default:
 		    (void)strcat(current_directory, "/");
-		    (void)strcat(current_directory, attrs[1]);
+		    (void)strcat(current_directory, (char *)attrs[1]);
 		    break;
 		}
 		ATTR_CONSUME(*attrs);
@@ -291,17 +318,17 @@
 		ATTR_CONSUME(*attrs);
 		break;
 	      case TEXTSW_ACTION_LOADED_FILE:
-		(void)strcpy(current_filename, attrs[1]);
+		(void)strcpy(current_filename, (char *)attrs[1]);
 		edited = read_only = 0;
 		goto Update_icon_text;
 	      case TEXTSW_ACTION_EDITED_FILE:
 		edited = 1;
 		*ptr++ = '>';
 Update_icon_text:
-		len = (strlen(attrs[1]) > sizeof(icon_text) - 2) ?
-		    sizeof(icon_text) - 2 : strlen(attrs[1]);
+		len = (strlen((char *)attrs[1]) > sizeof(icon_text) - 2) ?
+		    sizeof(icon_text) - 2 : strlen((char *)attrs[1]);
 		    /* need 1 char for edit/not, 1 for null */
-		(void)strncpy(ptr, attrs[1], len); ptr[len] = '\0';
+		(void)strncpy(ptr, (char *)attrs[1], len); ptr[len] = '\0';
 		(void)strcpy(ptr, base_name(ptr));	/* strip path */
 		ATTR_CONSUME(*attrs);
 		break;
@@ -320,25 +347,25 @@
 		    (was_read_only) ? " (read only)"
 			: (edited) ? " (edited)" : "",
 		    current_directory);
-	    (void)xv_set(base_frame, FRAME_LABEL, frame_label, 0);
+	    (void)xv_set(base_frame, FRAME_LABEL, frame_label, NULL);
 
 	    if (icon_text[0] != '\0') {
 		struct rect	text_rect, *icon_rect;
 		struct pixfont	*font;
 		
-		edit_icon = xv_get(base_frame, FRAME_ICON);
+		edit_icon = (Icon)xv_get(base_frame, FRAME_ICON);
 		icon_rect = (Rect *) (icon_get(edit_icon, ICON_IMAGE_RECT));
 		font = (struct pixfont *) (icon_get(edit_icon, ICON_FONT));
 		ptr = (user_label) ?
 			(char *) xv_get(edit_icon, XV_LABEL) : icon_text;
 		
 		/* adjust icon text top/height to match font height */
-		text_rect.r_height = xv_get(font, FONT_DEFAULT_CHAR_HEIGHT);
+		text_rect.r_height = (int)xv_get((Xv_Font)font, FONT_DEFAULT_CHAR_HEIGHT);
 		text_rect.r_top =
 		    icon_rect->r_height - (text_rect.r_height + 2);
 
 		/* center the icon text */
-		text_rect.r_width = strlen(ptr)*(xv_get(font, FONT_DEFAULT_CHAR_WIDTH));
+		text_rect.r_width = strlen(ptr)*((int)xv_get((Xv_Font)font, FONT_DEFAULT_CHAR_WIDTH));
 		if (text_rect.r_width > icon_rect->r_width)
 		    text_rect.r_width = icon_rect->r_width;
 		text_rect.r_left = (icon_rect->r_width-text_rect.r_width)/2;
@@ -346,9 +373,9 @@
 		(void)xv_set(edit_icon,
 		    XV_LABEL,		ptr,
 		    ICON_LABEL_RECT,	&text_rect,
-		    0);
+		    NULL);
 		/* xv_set actually makes a copy of all the icon fields */
-		(void)xv_set(base_frame, FRAME_ICON, edit_icon, 0);
+		(void)xv_set(base_frame, FRAME_ICON, edit_icon, NULL);
 	    }
 	}
 }
@@ -358,14 +385,14 @@
 	Panel_item item;
 	Event *event;
 {
-	Textsw 	textsw = (Textsw)xv_get(item, XV_KEY_DATA, PANEL_ITEM_DATA);
+	Textsw 	textsw = (Textsw)xv_get(item, XV_KEY_DATA, (Attr_attribute)PANEL_ITEM_DATA);
 	Menu	menu = (Menu)xv_get(item, PANEL_ITEM_MENU);
         Panel   p_menu = (Panel)xv_get(menu, MENU_PIN_WINDOW);
         Menu_item menu_item;
         Menu pullr_menu;
         int num_items, i;
 	
-	xv_set(menu, XV_KEY_DATA, TEXTSW_MENU_DATA_KEY, textsw, 0);
+	xv_set(menu, XV_KEY_DATA, (Attr_attribute)TEXTSW_MENU_DATA_KEY, textsw, NULL);
         if (p_menu) {
           num_items = (int)xv_get(menu, MENU_NITEMS);
           for (i = 1; i<= num_items; i++) {
@@ -373,14 +400,14 @@
               if (menu_item) {
                   pullr_menu = (Menu)xv_get(menu_item, MENU_PULLRIGHT);
                   if (pullr_menu) {
-                     xv_set(pullr_menu, XV_KEY_DATA, TEXTSW_MENU_DATA_KEY, textsw, 0); 
+                     xv_set(pullr_menu, XV_KEY_DATA, (Attr_attribute)TEXTSW_MENU_DATA_KEY, textsw, NULL); 
                   }
               }
           }
         }
 }
 
-static
+static void
 textsw_split_proc(origview, newview, pos)
 
 Xv_Window	origview;
@@ -423,6 +450,7 @@
 }
 #endif	/* (defined(STANDALONE) || defined(DEBUG) || defined(GPROF)) */
 
+static void
 textedit_main(argc, argv)
 	int	  argc;
 	char	**argv;
@@ -480,27 +508,27 @@
         }
 
 
-	xv_init(XV_INIT_ARGC_PTR_ARGV,	&argc, argv, 0);
+	xv_init(XV_INIT_ARGC_PTR_ARGV, &argc, argv, NULL);
 
-     	icon_image = xv_create(0, SERVER_IMAGE,
+     	icon_image = xv_create((Xv_object)NULL, SERVER_IMAGE,
                 SERVER_IMAGE_BITS, edit_ic_image,
                 SERVER_IMAGE_DEPTH, 1,
                 XV_WIDTH, 64,
                 XV_HEIGHT, 64,
-                0);
+                NULL);
 
-     	mask_image = xv_create(0, SERVER_IMAGE,
+     	mask_image = xv_create((Xv_object)NULL, SERVER_IMAGE,
                 SERVER_IMAGE_BITS, edit_mask_image,
                 SERVER_IMAGE_DEPTH, 1,
                 XV_WIDTH, 64,
                 XV_HEIGHT, 64,
-                0);
+                NULL);
 
-        edit_icon= xv_create(0, ICON,
+        edit_icon= xv_create((Xv_object)NULL, ICON,
                         ICON_IMAGE, icon_image,
 			ICON_MASK_IMAGE, mask_image,
 			ICON_TRANSPARENT, TRUE,
-                        0);
+                        NULL);
 
 	xv_set(edit_icon,
 		WIN_CONSUME_EVENTS,
@@ -508,7 +536,7 @@
 		LOC_WINEXIT,
 		LOC_DRAG,
 		0,
-		0);
+		NULL);
 
 	cmd_name = *argv;		/* Must be BEFORE calls on die() */
 	current_filename[0] = '\0';
@@ -526,7 +554,7 @@
 #ifdef ecd.help
 	    HELP_DATA,			"sunview:textedit",
 #endif
-	    0);
+	    NULL);
 
 	/*
 	 * Set icon's font to system font [if user hasn't set icon font],
@@ -537,13 +565,13 @@
 	 * Note that we get the icon from the Frame in case user
 	 * over-rides via argc, argv!
 	 */
-	edit_icon = xv_get(base_frame, FRAME_ICON);
-	user_label = (int)xv_get(edit_icon, XV_LABEL);
+	edit_icon = (Icon)xv_get(base_frame, FRAME_ICON);
+	user_label = (char *)xv_get(edit_icon, XV_LABEL);
 	if (!icon_get(edit_icon, ICON_FONT)) {
-	    (void)icon_set(edit_icon, ICON_FONT, pw_pfsysopen(), 0);
+	    (void)icon_set(edit_icon, ICON_FONT, pw_pfsysopen(), NULL);
 	    if (!icon_get(edit_icon, ICON_FONT))
 		die("Cannot get default font.\n", (char *)NULL, (char *)NULL);
-	    (void)xv_set(base_frame, FRAME_ICON, edit_icon, 0);
+	    (void)xv_set(base_frame, FRAME_ICON, edit_icon, NULL);
 	}
 
 	/*
@@ -686,7 +714,7 @@
 
 	xv_set(base_frame,
 		WIN_CMD_LINE, cmdline_args,
-		0);
+		NULL);
 		
 	read_only = (read_only & (file_to_edit != NULL));
 #ifdef DEBUG
@@ -709,10 +737,10 @@
 			buf,
 			"Please confirm creation of new",
 			"file for textedit.",
-			0,
+			NULL,
 			NOTICE_BUTTON_NO, "Cancel",
 			NOTICE_BUTTON_YES, "Confirm",
-			0);
+			NULL);
 
 		if (alert_result == NOTICE_YES)
 			if ((fd = creat(file_to_edit, 0777)) == -1)
@@ -742,10 +770,10 @@
 				buf,
 				"Please confirm creation of new",
 				"file for textedit.",
-				0,
+				NULL,
 				NOTICE_BUTTON_YES, "Continue",
 				NOTICE_BUTTON_NO, "Cancel",
-				0);
+				NULL);
 	
 			if (alert_result == NOTICE_YES)
 				file_to_edit = NULL;
@@ -761,7 +789,7 @@
 	panel = xv_create(base_frame, PANEL,
 		PANEL_LAYOUT,	PANEL_HORIZONTAL,
 		XV_HELP_DATA,			"textedit:Panel",
-		0);
+		NULL);
 		
 	
 	textsw = (Textsw)xv_create(base_frame, TEXTSW,
@@ -776,20 +804,20 @@
 		OPENWIN_SPLIT,
 			OPENWIN_SPLIT_INIT_PROC, textsw_split_proc,
 		NULL,
-	    	0);
+	    	NULL);
 
 	if (!user_set_size)
 	{
 		xv_set(textsw,
                 	WIN_ROWS,     (number_of_lines) ? number_of_lines : 45,
                 	WIN_COLUMNS,  (num_cols) ? num_cols : 80,
-	    		0);
+	    		NULL);
 	}
 
 	/* force the panel to be some reasonable size, so that the 
 	   buttons lay out reasonably. */
 
-	xv_set(panel, WIN_WIDTH, 800, 0);
+	xv_set(panel, WIN_WIDTH, 800, NULL);
 
 	/* Panel item and fitting height here is for performance reason */
 	/* This way the textsw will not require to readjust the rect */
@@ -800,13 +828,13 @@
 		PANEL_ITEM_MENU, 		file_panel_menu, 
 		XV_HELP_DATA,			"textedit:File",
 		PANEL_NOTIFY_PROC,		button_notify_proc,
-		0);
+		NULL);
 		
 	textswwidth = (int)xv_get(textsw, WIN_WIDTH);
 
 	(void)window_fit_height(panel);
 
-	xv_set(textsw, WIN_BELOW, panel, 0);
+	xv_set(textsw, WIN_BELOW, panel, NULL);
 
 	switch (status) {
 	  case TEXTSW_STATUS_CANNOT_OPEN_INPUT:
@@ -844,44 +872,44 @@
 	 
 	 /* This set has to be done before the other panel items are created */
 	xv_set(file_panel_item,
-		XV_KEY_DATA, 			PANEL_ITEM_DATA, textsw,
-		0);
+		XV_KEY_DATA, (Attr_attribute)	PANEL_ITEM_DATA, textsw,
+		NULL);
 		
 	display_panel_item = xv_create(panel, PANEL_BUTTON,
 		PANEL_LABEL_STRING,		"View",
 		PANEL_NOTIFY_PROC,		button_notify_proc,
 		PANEL_ITEM_MENU, 		display_panel_menu,
 		XV_HELP_DATA,			"textedit:View",
-		XV_KEY_DATA, 			PANEL_ITEM_DATA, textsw,
-		0);
+		XV_KEY_DATA, (Attr_attribute)	PANEL_ITEM_DATA, textsw,
+		NULL);
 
 	edit_panel_item = xv_create(panel, PANEL_BUTTON,
 		PANEL_LABEL_STRING,		"Edit",
 		PANEL_NOTIFY_PROC,		button_notify_proc,
 		PANEL_ITEM_MENU, 		edit_panel_menu, 
 		XV_HELP_DATA,			"textedit:Edit",
-		XV_KEY_DATA, 			PANEL_ITEM_DATA, textsw,
-		0);
+		XV_KEY_DATA, (Attr_attribute)	PANEL_ITEM_DATA, textsw,
+		NULL);
 		
 	find_panel_item = xv_create(panel, PANEL_BUTTON,
 		PANEL_LABEL_STRING,		"Find",
 		PANEL_NOTIFY_PROC,		button_notify_proc,
 		PANEL_ITEM_MENU, 		find_panel_menu, 
 		XV_HELP_DATA,			"textedit:Find",
-		XV_KEY_DATA, 			PANEL_ITEM_DATA, textsw,
-		0);	
+		XV_KEY_DATA, (Attr_attribute)	PANEL_ITEM_DATA, textsw,
+		NULL);	
 	
 
 
 	if (!user_set_size)
 	{
-		xv_set(panel, WIN_WIDTH, textswwidth, 0);
+		xv_set(panel, WIN_WIDTH, textswwidth, NULL);
         	(void)window_fit(base_frame);
 	}
 	else
 	{
 		/* restore the panel width before coming up */
-		xv_set(panel, WIN_WIDTH, WIN_EXTEND_TO_EDGE, 0);
+		xv_set(panel, WIN_WIDTH, WIN_EXTEND_TO_EDGE, NULL);
 	}
 
 	/* set up to catch load events */
@@ -891,8 +919,8 @@
 
 	if (!user_label && file_to_edit)
 	{
-		xv_set(edit_icon, XV_LABEL, file_to_edit, 0);
-		xv_set(base_frame, FRAME_ICON, edit_icon, 0);
+		xv_set(edit_icon, XV_LABEL, file_to_edit, NULL);
+		xv_set(base_frame, FRAME_ICON, edit_icon, NULL);
 	}
 
 	xv_main_loop(base_frame);
@@ -926,7 +954,7 @@
 	    goto Die;
 	}
 	if (sig == SIGINT) {
-	    if (xv_get((Xv_window)(textsw), TEXTSW_MODIFIED)) {
+	    if ((int)xv_get((Xv_window)(textsw), TEXTSW_MODIFIED)) {
 		(void)xv_destroy(base_frame);	/* It will be vetoed */
 		handling_signal = 0;
 	    } else {
@@ -956,7 +984,7 @@
 	(void)fprintf(stderr, "failed!\nAttempting Store to %s ... ", name_to_use);
 	(void)fflush(stderr);
 #else
-	(void)sprintf(name_to_use, "%s/textedit.%d", xv_getlogindir(), pid);
+	(void)sprintf(name_to_use, "%s/textedit.%d", xv_getlogindir(), (int)pid);
 	(void)fprintf(stderr, "failed!\nAttempting Store to %s ... ", name_to_use);
 	(void)fflush(stderr);
 #endif
@@ -1025,7 +1053,7 @@
 /*
  * Misc. utilities
  */
-static
+static void
 die(msg1, msg2, msg3)
 	char	*msg1, *msg2, *msg3;
 {
diff -Naur xview-3.2p1.4.orig/contrib/examples/textsw/textsw.c xview-3.2p1.4/contrib/examples/textsw/textsw.c
--- xview-3.2p1.4.orig/contrib/examples/textsw/textsw.c	1993-06-29 07:14:03.000000000 +0200
+++ xview-3.2p1.4/contrib/examples/textsw/textsw.c	2013-01-07 12:50:43.059102000 +0100
@@ -16,7 +16,7 @@
     Frame	frame;
     int		textsw_width;
 
-    xv_init(XV_INIT_ARGS, argc, argv, 0);
+    xv_init(XV_INIT_ARGS, argc, argv, NULL);
 
     frame = xv_create(XV_NULL, FRAME, FRAME_LABEL, argv[0], NULL);
 
diff -Naur xview-3.2p1.4.orig/contrib/examples/ttysw/xv_termsw.c xview-3.2p1.4/contrib/examples/ttysw/xv_termsw.c
--- xview-3.2p1.4.orig/contrib/examples/ttysw/xv_termsw.c	1993-06-29 07:14:06.000000000 +0200
+++ xview-3.2p1.4/contrib/examples/ttysw/xv_termsw.c	2013-01-07 12:50:43.088672000 +0100
@@ -23,7 +23,7 @@
 
     xv_init(XV_INIT_ARGS, argc, argv, NULL);
 
-    frame = (Frame)xv_create(NULL, FRAME, NULL);
+    frame = (Frame)xv_create((Xv_object)NULL, FRAME, NULL);
     panel = (Panel)xv_create(frame, PANEL, NULL);
     text_item = (Panel_item)xv_create(panel, PANEL_TEXT,
         PANEL_LABEL_STRING,         "Command:",
diff -Naur xview-3.2p1.4.orig/lib/libolgx/ol_button.c xview-3.2p1.4/lib/libolgx/ol_button.c
--- xview-3.2p1.4.orig/lib/libolgx/ol_button.c	1997-04-28 19:05:28.000000000 +0200
+++ xview-3.2p1.4/lib/libolgx/ol_button.c	2013-01-07 12:50:43.203756000 +0100
@@ -26,7 +26,9 @@
 
 static void     olgx_draw_accel_label_internal();
 static void     olgx_draw_diamond_mark();
+/*
 static void     olgx_draw_label();
+*/
 
 void
 olgx_draw_button(info, win, x, y, width, height, label, state)
@@ -895,10 +897,12 @@
 
     unsigned long   savebg1;
     unsigned long   savebg2;
+/*
     Window              root;
     int                 x_dummy,y_dummy;
     unsigned int        w_dummy,h_dummy,bw_dummy;
     unsigned int        depth;
+*/
 
     if (!info->gc_rec[OLGX_TEXTGC])
 	olgx_initialise_gcrec(info, OLGX_TEXTGC);
@@ -1100,11 +1104,13 @@
      int             state;  /* unused */
 {
     XPoint          point[6];
-    int             d_height,d_half_height,d_width,d_half_width;
+    int             /*d_height,*/d_half_height,d_width,d_half_width;
     GC              gc;
     XGCValues       values;
+/*
     char            old_dashes;
     int             old_dash_offset;
+*/
 
     /* diamond height needs to be divisible by 2, but width should be odd. */
     d_half_width = info->mm_height/2;
@@ -1269,7 +1275,7 @@
 	    XCharStruct overall;
 	    void *string_label;
 	    Underlinelabel *ulabel, *hlabel;
-	    char *highlight_char;
+	    /*char *highlight_char;*/
 	    int has_highlight=0,has_underline=0;
 	    int highlightx_pos, highlight_length, highlighty_pos, 
 	        highlight_height;
diff -Naur xview-3.2p1.4.orig/lib/libolgx/ol_init.c xview-3.2p1.4/lib/libolgx/ol_init.c
--- xview-3.2p1.4.orig/lib/libolgx/ol_init.c	1997-04-28 14:45:34.000000000 +0200
+++ xview-3.2p1.4/lib/libolgx/ol_init.c	2013-01-07 12:50:43.254236000 +0100
@@ -1213,7 +1213,7 @@
 
     if (info->gc_rec[index] != NULL)
 	return (info->pixvals[index]);
-
+    return 0L;
 }
 
 
@@ -1561,8 +1561,8 @@
     cur->dpy = dpy;
     cur->screen = screen;
     cur->gc_list_ptr = NULL;
-    cur->busy_stipple = NULL;
-    cur->grey_stipple = NULL;
+    cur->busy_stipple = (Pixmap)NULL;
+    cur->grey_stipple = (Pixmap)NULL;
     cur->next = olgx_perdisp_res_list;
     olgx_perdisp_res_list = cur;
 
diff -Naur xview-3.2p1.4.orig/lib/libolgx/ol_slider.c xview-3.2p1.4/lib/libolgx/ol_slider.c
--- xview-3.2p1.4.orig/lib/libolgx/ol_slider.c	1993-06-29 07:18:30.000000000 +0200
+++ xview-3.2p1.4/lib/libolgx/ol_slider.c	2013-01-07 12:50:43.294937000 +0100
@@ -95,7 +95,7 @@
     int             inside_width;
     char            string[STRING_SIZE];
     short           add_ins[STRING_SIZE];
-    register        y_slider_offset;
+    register int    y_slider_offset;
     register int    i;
     int             num_add;
 
@@ -830,7 +830,7 @@
     short           add_ins[STRING_SIZE];
     register int    i;
     int             num_add;
-    register        left_offset;
+    register int    left_offset;
 
 
     inside_width = width - (info->gauge_width << 1);
@@ -952,7 +952,7 @@
     int             x, y, oldval, newval;
 
 {
-    register        left_offset;
+    register int    left_offset;
 
     /* Very Trivial */
 
@@ -1000,7 +1000,7 @@
     int             inside_width;
     char            string[1];
     char            string1[1];
-    register        left_offset;
+    register int    left_offset;
     XTextItem       item[2];
 
 
@@ -1129,7 +1129,7 @@
     int             x, y, width, oldval, newval;
 
 {
-    register        left_offset;
+    register int    left_offset;
 
 
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/attr/attr.c xview-3.2p1.4/lib/libxview/attr/attr.c
--- xview-3.2p1.4.orig/lib/libxview/attr/attr.c	2013-01-07 12:36:12.362071000 +0100
+++ xview-3.2p1.4/lib/libxview/attr/attr.c	2013-01-07 12:50:43.334633000 +0100
@@ -31,7 +31,7 @@
     va_list         valist;
     int            *countptr;
 {
-    return( copy_va_to_av( valist, listhead, NULL ));
+    return( copy_va_to_av( valist, listhead, (Attr_attribute)NULL ));
 }
 
 /*
@@ -50,17 +50,19 @@
     file_ptr = xv_help_find_file("attr_names");
     if (file_ptr) {
 	while (fscanf(file_ptr, "%x %s\n", &attr_value, attr_name_buf) != EOF) {
-	    if (found = (attr_value == attr))
+	    if (found = (attr_value == (int)attr))
 		break;
 	}
 	fclose(file_ptr);
     }
     if (!found)
-	sprintf(attr_name_buf, "attr # 0x%08x", attr);
+    /* FIXME: possible buffer overflow? */
+	sprintf(attr_name_buf, "attr # 0x%08lx", (unsigned long)attr);
     return attr_name_buf;
 }
 
 
+
 /* copy_va_to_av copies a varargs parameter list into an avlist. If the
    avlist parameter is NULL a new avlist is malloced and returned after
    the varargs list is copied into it. Attr1 exists because ANSI C requires
@@ -102,42 +104,83 @@
       avlist = avlist_tmp;
 
    if( attr1 )
-      attr = attr1;
+      attr = (int)attr1;
    else
-      attr = va_arg( valist, Attr_attribute );
+      attr = (int)va_arg( valist, Attr_attribute );
 
-   while( attr )
+   while( (int)attr )
    {
       if( ++arg_count > arg_count_max )
       {
-         xv_error( NULL,
+         xv_error( (Xv_object)NULL,
                    ERROR_STRING, XV_MSG(
-              "A/V list more than 250 elements long, extra elements ignored"),
-                   0);
+              "A/V list more than ATTR_STANDARD_SIZE elements long, extra elements ignored"),
+                   NULL);
          return( avlist1 );
       }
       cardinality = ATTR_CARDINALITY(attr);
 
-      switch (ATTR_LIST_TYPE(attr))
+      switch ((int)ATTR_LIST_TYPE(attr))
       {
          case ATTR_NONE:       /* not a list */
             *avlist++ = attr;
 
             if(( arg_count += cardinality ) > arg_count_max )
             {
-               xv_error( NULL,
+               xv_error( (Xv_object)NULL,
                          ERROR_STRING, XV_MSG(
-               "A/V list more than 250 elements long, extra elements ignored"),
-                         0);
+              "A/V list more than ATTR_STANDARD_SIZE elements long, extra elements ignored"),
+                         NULL);
                return( avlist1 );
             }
-            for( i=0; i < cardinality; i++ )
-               *avlist++ = va_arg( valist, Attr_attribute );
+            for( i=0; i < cardinality; i++ ) {
+#ifdef _XV_API_BROKEN_64BIT
+		/* Sanitize and strip 64-bit spill in attribute values */
+	        unsigned long value = va_arg( valist, Attr_attribute );
+		switch (ATTR_BASE_TYPE(attr)) {
+		case ATTR_BASE_INT:
+		case ATTR_BASE_ENUM:
+		case ATTR_BASE_BOOLEAN:
+		case ATTR_BASE_X:
+		case ATTR_BASE_INDEX_X:
+		case ATTR_BASE_Y:
+		case ATTR_BASE_INDEX_Y:
+		case ATTR_BASE_XY:
+		case ATTR_BASE_INDEX_XY:
+		    value &= 0x0ffffffffL;
+		    break;
+		case ATTR_BASE_SHORT:
+		    value &= 0x0000ffffL;
+		    break;
+		case ATTR_BASE_CHAR:
+		    value &= 0x000000ffL;
+		    break;
+		default:
+		    break;
+		}
+#if 0
+		/* This could happen, but I have not seen it yet:
+		 * A caller could send (int)0 when callee expects NULL,
+		 * thus causing a 64-bit spill also in longs and
+		 * pointers.  A pointer or long with 32 LSB 0's is quite
+		 * unlikely, so we might want to enable this.
+		 * This does not affect (int)0 acting as NULL terminator:
+		 * this is handled anyway.
+		 */
+		if (((value & 0x0ffffffffL) == 0L) && (value != 0L)) {
+		    value = 0L;
+		}
+#endif
+		*avlist++ = value;
+#else
+                *avlist++ = va_arg( valist, Attr_attribute );
+#endif
+	    }
             break;
 
          case ATTR_NULL:       /* null terminated list */
             *avlist++ = attr; 
-            switch (ATTR_LIST_PTR_TYPE(attr))
+            switch ((int)ATTR_LIST_PTR_TYPE(attr))
             {
                case ATTR_LIST_IS_INLINE:
                   /*
@@ -148,24 +191,58 @@
                   do {
                       if(( arg_count += cardinality ) > arg_count_max )
                       {
-                         xv_error( NULL,
+                         xv_error( (Xv_object)NULL,
                                    ERROR_STRING, XV_MSG(
-              "A/V list more than 250 elements long, extra elements ignored"),
-                                   0);
+              "A/V list more than ATTR_STANDARD_SIZE elements long, extra elements ignored"),
+                                   NULL);
                          return( avlist1 );
                       }
-                      for( i=0; i < cardinality; i++ )
-                         *avlist++ = va_arg( valist, Attr_attribute );
-                  } while (*(avlist - 1));
+                      for( i=0; i < cardinality; i++ ) {
+#ifdef _XV_API_BROKEN_64BIT
+			/* Sanitize and strip 64-bit spill in attribute values */
+			unsigned long value = va_arg( valist, Attr_attribute );
+			switch (ATTR_BASE_TYPE(attr)) {
+			case ATTR_BASE_INT:
+			case ATTR_BASE_ENUM:
+			case ATTR_BASE_BOOLEAN:
+			case ATTR_BASE_X:
+			case ATTR_BASE_INDEX_X:
+			case ATTR_BASE_Y:
+			case ATTR_BASE_INDEX_Y:
+			case ATTR_BASE_XY:
+			case ATTR_BASE_INDEX_XY:
+			    value &= 0x0ffffffffL;
+			    break;
+			case ATTR_BASE_SHORT:
+			    value &= 0x0000ffffL;
+			    break;
+			case ATTR_BASE_CHAR:
+			    value &= 0x000000ffL;
+			    break;
+			default:
+			    break;
+			}
+#if 0
+			/* See note above */
+			if (((value & 0x0ffffffffL) == 0L) && (value != 0L)) {
+			    value = 0L;
+			}
+#endif
+			*avlist++ = value;
+#else
+                        *avlist++ = va_arg( valist, Attr_attribute );
+#endif
+		      }
+                  } while ((int)*(avlist - 1));
                   break;
 
                case ATTR_LIST_IS_PTR:
                   if( ++arg_count  > arg_count_max )
                   {
-                     xv_error( NULL,
+                     xv_error( (Xv_object)NULL,
                                ERROR_STRING, XV_MSG(
-              "A/V list more than 250 elements long, extra elements ignored"),
-                               0);
+              "A/V list more than ATTR_STANDARD_SIZE elements long, extra elements ignored"),
+                               NULL);
                      return( avlist1 );
                   }
                   *avlist++ = va_arg( valist, Attr_attribute );
@@ -175,17 +252,17 @@
 
          case ATTR_COUNTED:    /* counted list */
             *avlist++ = attr;
-            switch (ATTR_LIST_PTR_TYPE(attr)) {
+            switch ((int)ATTR_LIST_PTR_TYPE(attr)) {
                case ATTR_LIST_IS_INLINE:
                {
                   register unsigned count;
 
                   if( ++arg_count  > arg_count_max )
                   {
-                     xv_error( NULL,
+                     xv_error( (Xv_object)NULL,
                                ERROR_STRING, XV_MSG(
-              "A/V list more than 250 elements long, extra elements ignored"),
-                               0);
+              "A/V list more than ATTR_STANDARD_SIZE elements long, extra elements ignored"),
+                               NULL);
                      return( avlist1 );
                   }
                   *avlist = va_arg( valist, Attr_attribute ); /*copy the count*/
@@ -193,24 +270,58 @@
 
                   if(( arg_count += count ) > arg_count_max )
                   {
-                     xv_error( NULL,
+                     xv_error( (Xv_object)NULL,
                                ERROR_STRING, XV_MSG(
-              "A/V list more than 250 elements long, extra elements ignored"),
-                               0);
+              "A/V list more than ATTR_STANDARD_SIZE elements long, extra elements ignored"),
+                               NULL);
                      return( avlist1 );
                   }
-                  for( i=0; i < count; i++ )
-                     *avlist++ = va_arg( valist, Attr_attribute );
+                  for( i=0; i < count; i++ ) {
+#ifdef _XV_API_BROKEN_64BIT
+			/* Sanitize and strip 64-bit spill in attribute values */
+			unsigned long value = va_arg( valist, Attr_attribute );
+			switch (ATTR_BASE_TYPE(attr)) {
+			case ATTR_BASE_INT:
+			case ATTR_BASE_ENUM:
+			case ATTR_BASE_BOOLEAN:
+			case ATTR_BASE_X:
+			case ATTR_BASE_INDEX_X:
+			case ATTR_BASE_Y:
+			case ATTR_BASE_INDEX_Y:
+			case ATTR_BASE_XY:
+			case ATTR_BASE_INDEX_XY:
+			    value &= 0x0ffffffffL;
+			    break;
+			case ATTR_BASE_SHORT:
+			    value &= 0x0000ffffL;
+			    break;
+			case ATTR_BASE_CHAR:
+			    value &= 0x000000ffL;
+			    break;
+			default:
+			    break;
+			}
+#if 0
+			/* See note above */
+			if (((value & 0x0ffffffffL) == 0L) && (value != 0L)) {
+			    value = 0L
+			}
+#endif
+			*avlist++ = value;
+#else
+                        *avlist++ = va_arg( valist, Attr_attribute );
+#endif
+	    	  }
                 }
                 break;
 
                 case ATTR_LIST_IS_PTR:
                    if( ++arg_count  > arg_count_max )
                    {
-                      xv_error( NULL,
+                      xv_error( (Xv_object)NULL,
                                 ERROR_STRING, XV_MSG(
-              "A/V list more than 250 elements long, extra elements ignored"),
-                                0);
+              "A/V list more than ATTR_STANDARD_SIZE elements long, extra elements ignored"),
+                                NULL);
                       return( avlist1 );
                    }
                    *avlist++ = va_arg( valist, Attr_attribute );
@@ -222,10 +333,10 @@
              if (cardinality != 0)       /* don't strip it */
                 *avlist++ = attr;
 
-             switch (ATTR_LIST_PTR_TYPE(attr))
+             switch ((int)ATTR_LIST_PTR_TYPE(attr))
              {
                 case ATTR_LIST_IS_INLINE:
-                   (void) copy_va_to_av(valist, avlist, 0);
+                   (void) copy_va_to_av(valist, avlist, (Attr_attribute)NULL);
                    if (cardinality != 0)   /* don't strip it */
                       avlist++;     /* move past the null terminator */
                    break;
@@ -235,10 +346,10 @@
                    {
                       if( ++arg_count  > arg_count_max )
                       {
-                         xv_error( NULL,
+                         xv_error( (Xv_object)NULL,
                                    ERROR_STRING, XV_MSG(
-              "A/V list more than 250 elements long, extra elements ignored"),
-                                   0);
+              "A/V list more than ATTR_STANDARD_SIZE elements long, extra elements ignored"),
+                                   NULL);
                          return( avlist1 );
                       }
                       *avlist++ = va_arg( valist, Attr_attribute );
@@ -257,12 +368,13 @@
                   break;
             }
             break;
+	default:
+	    break;
       }
-
-      attr = va_arg( valist, Attr_attribute );
+      attr = (int)va_arg( valist, Attr_attribute );
    }    
 
-   *avlist = NULL;
+   *avlist = (Attr_attribute)NULL;
    if( !avlist1 )
    {
       avlist_size = (( avlist - avlist_tmp ) + 1 ) * sizeof( Attr_attribute );
@@ -280,7 +392,6 @@
 }
 
 
-
 /*
  * attr_copy_avlist copies the attribute-value list from avlist to dest.
  * Recursive lists are collapsed into dest.
@@ -294,9 +405,9 @@
     register Attr_attribute attr;
     register unsigned cardinality;
 
-    while (attr = (Attr_attribute) avlist_get(avlist)) {
+    while ((attr = (int)avlist_get(avlist)) != (Attr_attribute)NULL) {
 	cardinality = ATTR_CARDINALITY(attr);
-	switch (ATTR_LIST_TYPE(attr)) {
+	switch ((int)ATTR_LIST_TYPE(attr)) {
 	  case ATTR_NONE:	/* not a list */
 	    *dest++ = attr;
 	    avlist_copy_values(avlist, dest, cardinality);
@@ -304,7 +415,7 @@
 
 	  case ATTR_NULL:	/* null terminated list */
 	    *dest++ = attr;
-	    switch (ATTR_LIST_PTR_TYPE(attr)) {
+	    switch ((int)ATTR_LIST_PTR_TYPE(attr)) {
 	      case ATTR_LIST_IS_INLINE:
 		/*
 		 * Note that this only checks the first four bytes for the
@@ -324,7 +435,7 @@
 
 	  case ATTR_COUNTED:	/* counted list */
 	    *dest++ = attr;
-	    switch (ATTR_LIST_PTR_TYPE(attr)) {
+	    switch ((int)ATTR_LIST_PTR_TYPE(attr)) {
 	      case ATTR_LIST_IS_INLINE:{
 		    register unsigned count;
 
@@ -344,7 +455,7 @@
 	    if (cardinality != 0)	/* don't strip it */
 		*dest++ = attr;
 
-	    switch (ATTR_LIST_PTR_TYPE(attr)) {
+	    switch ((int)ATTR_LIST_PTR_TYPE(attr)) {
 	      case ATTR_LIST_IS_INLINE:
 		dest = attr_copy_avlist(dest, avlist);
 		if (cardinality != 0)	/* don't strip it */
@@ -371,7 +482,7 @@
 	    break;
 	}
     }
-    *dest = 0;
+    *dest = 0L;
     return (dest);
 }
 
@@ -399,24 +510,24 @@
     register unsigned num;
     register unsigned cardinality;
 
-    while (attr = (Attr_attribute) * avlist++) {
+    while (attr = (int)*avlist++) {
 	count++;		/* count the attribute */
 	cardinality = ATTR_CARDINALITY(attr);
 	last_attr = attr;
-	switch (ATTR_LIST_TYPE(attr)) {
+	switch ((int)ATTR_LIST_TYPE(attr)) {
 	  case ATTR_NONE:	/* not a list */
 	    count += cardinality;
 	    avlist += cardinality;
 	    break;
 
 	  case ATTR_NULL:	/* null terminated list */
-	    switch (ATTR_LIST_PTR_TYPE(attr)) {
+	    switch ((int)ATTR_LIST_PTR_TYPE(attr)) {
 	      case ATTR_LIST_IS_INLINE:
 		/*
 		 * Note that this only checks the first four bytes for the
 		 * null termination.
 		 */
-		while (*avlist++)
+		while ((int)*avlist++)
 		    count++;
 		count++;	/* count the null terminator */
 		break;
@@ -429,7 +540,7 @@
 	    break;
 
 	  case ATTR_COUNTED:	/* counted list */
-	    switch (ATTR_LIST_PTR_TYPE(attr)) {
+	    switch ((int)ATTR_LIST_PTR_TYPE(attr)) {
 	      case ATTR_LIST_IS_INLINE:
 		num = ((unsigned) (*avlist)) * cardinality + 1;
 		count += num;
@@ -486,24 +597,24 @@
     register Attr_attribute attr;
     register Attr_avlist avlist;
 {
-    switch (ATTR_LIST_TYPE(attr)) {
+    switch ((int)ATTR_LIST_TYPE(attr)) {
       case ATTR_NULL:
-	if (ATTR_LIST_PTR_TYPE(attr) == ATTR_LIST_IS_PTR)
+	if ((int)ATTR_LIST_PTR_TYPE(attr) == ATTR_LIST_IS_PTR)
 	    avlist++;
 	else
-	    while (*avlist++);
+	    while ((int)*avlist++);
 	break;
 
       case ATTR_RECURSIVE:
-	if (ATTR_LIST_PTR_TYPE(attr) == ATTR_LIST_IS_PTR)
+	if ((int)ATTR_LIST_PTR_TYPE(attr) == ATTR_LIST_IS_PTR)
 	    avlist++;
 	else
-	    while (attr = (Attr_attribute) * avlist++)
+	    while (attr = (int)*avlist++)
 		avlist = attr_skip_value(attr, avlist);
 	break;
 
       case ATTR_COUNTED:
-	if (ATTR_LIST_PTR_TYPE(attr) == ATTR_LIST_IS_PTR)
+	if ((int)ATTR_LIST_PTR_TYPE(attr) == ATTR_LIST_IS_PTR)
 	    avlist++;
 	else
 	    avlist += ((int) *avlist) * ATTR_CARDINALITY(attr) + 1;
diff -Naur xview-3.2p1.4.orig/lib/libxview/attr/attr.h xview-3.2p1.4/lib/libxview/attr/attr.h
--- xview-3.2p1.4.orig/lib/libxview/attr/attr.h	1993-06-29 07:14:36.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/attr/attr.h	2013-01-07 12:50:43.365235000 +0100
@@ -71,6 +71,7 @@
  *		Sun packages
  *		(ATTR_BASE_LAST..128) is for future use by Sun packages.
  */
+
 #define	ATTR_BASE_UNUSED_FIRST		0
 #define	ATTR_BASE_UNUSED_LAST		31
 #define	ATTR_BASE_FIRST			64
@@ -79,6 +80,7 @@
 #define ATTR_PKG_UNUSED_LAST		31
 #define	ATTR_PKG_FIRST			64
 
+
 /*
  * Values from the Attr_pkg enumeration which are required for some
  * of the following #defines. This allows those defines to remain in this
@@ -168,14 +170,14 @@
  */
 #ifndef	lint
 #define attr_replace_cu(avlist, font, lmargin, tmargin, rgap) 	\
-    attr_rc_units_to_pixels(avlist, xv_get(font, FONT_DEFAULT_CHAR_WIDTH), 	\
-	xv_get(font, FONT_DEFAULT_CHAR_HEIGHT), lmargin, tmargin, 0, rgap)
+    attr_rc_units_to_pixels(avlist, (int)xv_get(font, FONT_DEFAULT_CHAR_WIDTH), 	\
+	(int)xv_get(font, FONT_DEFAULT_CHAR_HEIGHT), lmargin, tmargin, 0, rgap)
 
 #define attr_cu_to_x(encoded_value, font, left_margin) 		\
-    attr_rc_unit_to_x(encoded_value, xv_get(font, FONT_DEFAULT_CHAR_WIDTH), left_margin, 0)
+    attr_rc_unit_to_x(encoded_value, (int)xv_get(font, FONT_DEFAULT_CHAR_WIDTH), left_margin, 0)
 
 #define attr_cu_to_y(encoded_value, font, top_margin, row_gap) 	\
-    attr_rc_unit_to_y(encoded_value, xv_get(font, FONT_DEFAULT_CHAR_HEIGHT), top_margin, \
+    attr_rc_unit_to_y(encoded_value, (int)xv_get(font, FONT_DEFAULT_CHAR_HEIGHT), top_margin, \
 	row_gap)
 #endif	/* lint */
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/attr/attr_copy.c xview-3.2p1.4/lib/libxview/attr/attr_copy.c
--- xview-3.2p1.4.orig/lib/libxview/attr/attr_copy.c	2013-01-07 12:36:12.282273000 +0100
+++ xview-3.2p1.4/lib/libxview/attr/attr_copy.c	2013-01-07 12:50:43.397460000 +0100
@@ -17,6 +17,18 @@
 static int copy_singleton(Attr_attribute attr, Attr_attribute **source, Attr_attribute **dest);
 static int copy_null_list(Attr_attribute attr, Attr_attribute **source, Attr_attribute **dest);
 
+#ifdef __STDC__
+static int copy_1_attr(Attr_attribute attr, Attr_avlist *source, Attr_avlist *dest);
+static int copy_counted_list(Attr_attribute **source, Attr_attribute **dest);
+static int copy_singleton(Attr_attribute attr, Attr_attribute **source, Attr_attribute **dest);
+static int copy_null_list(Attr_attribute attr, Attr_attribute **source, Attr_attribute **dest);
+#else
+static int copy_1_attr();
+static int copy_counted_list();
+static int copy_singleton();
+static int copy_null_list();
+#endif
+
 /*
  * attr_copy:	copy an attribute list, returning the size in bytes
  */
diff -Naur xview-3.2p1.4.orig/lib/libxview/attr/attr_cu.c xview-3.2p1.4/lib/libxview/attr/attr_cu.c
--- xview-3.2p1.4.orig/lib/libxview/attr/attr_cu.c	1993-06-29 07:14:35.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/attr/attr_cu.c	2013-01-07 12:50:43.421631000 +0100
@@ -17,7 +17,7 @@
  * attr_decode_cu decodes the encoded character row & pixel value in
  * encoded_value.
  */
-static int
+static void
 attr_decode_cu(encoded_value, char_part, pixel_part)
     register u_int  encoded_value;
     int            *char_part;
@@ -205,7 +205,7 @@
     register short  is_ptr;
     register int    count;
 
-    while (attr = (Attr_attribute) * avlist++) {
+    while ((attr = (int) * avlist++) != (Attr_attribute)NULL) {
 	switch (base_type = ATTR_BASE_TYPE(attr)) {
 	  default:
 	    avlist = attr_skip(attr, avlist);
diff -Naur xview-3.2p1.4.orig/lib/libxview/attr/attr_cust.c xview-3.2p1.4/lib/libxview/attr/attr_cust.c
--- xview-3.2p1.4.orig/lib/libxview/attr/attr_cust.c	1993-06-29 07:14:37.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/attr/attr_cust.c	2013-01-07 12:50:43.447447000 +0100
@@ -256,7 +256,7 @@
         server = XV_SERVER_FROM_WINDOW(obj);
     }
     else  {
-	owner = xv_get(obj, XV_OWNER, NULL);
+	owner = (Xv_opaque)xv_get(obj, XV_OWNER, NULL);
 	server = attr_get_server(owner, NULL);
     }
 
@@ -542,7 +542,8 @@
     char		*attr_name;
 
     if (!pkg)  {
-	return;
+	/* FIXME: should be XV_ERROR? */
+	return XV_OK;
     }
 
     VA_START(list, pkg);
@@ -573,5 +574,6 @@
     }
     va_end(list);
 
+    return XV_OK;
 }
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/base/base.h xview-3.2p1.4/lib/libxview/base/base.h
--- xview-3.2p1.4.orig/lib/libxview/base/base.h	2013-01-07 12:36:25.820737000 +0100
+++ xview-3.2p1.4/lib/libxview/base/base.h	2013-01-07 12:50:43.475704000 +0100
@@ -26,6 +26,18 @@
 #define XV_OK		0
 #define	XV_ERROR	1
 
+#if defined(__x86_64__) || defined(__ia64__) || defined(_XV_API_BROKEN_64BIT)
+
+#ifndef TRUE
+#define	TRUE		1L
+#endif
+
+#ifndef FALSE
+#define FALSE		0L
+#endif
+
+#else
+
 #ifndef TRUE
 #define	TRUE		1
 #endif
@@ -34,9 +46,15 @@
 #define FALSE		0
 #endif
 
+#endif
+
 #ifndef NULL
+#ifdef __STDC__
+#define	NULL		((void *)0)
+#else
 #define NULL		0
 #endif
+#endif
 
 #ifndef MIN
 #define MIN(x, y) 	( ((x) < (y)) ? (x) : (y) )
@@ -76,7 +94,11 @@
 extern void *xv_calloc();
 
 #ifdef XV_NO_STRDUP
+#ifdef __linux__
+#include <string.h>
+#else
 extern char *strdup();
+#endif
 #endif /* XV_NO_STRDUP */
 
 #ifdef XV_USE_ALLOC_FUNCS
@@ -88,27 +110,27 @@
 #else
 
 #define xv_alloc(t)  \
-  ((( xv_alloc_save_ret = (void *)calloc( 1, sizeof( t ))) ? (void)0 : \
+  ((( xv_alloc_save_ret = (void *)calloc( (size_t) 1, sizeof( t ))) ? (void)0 : \
     xv_alloc_error()) \
    , xv_alloc_save_ret )
 
 #define xv_alloc_n(t, n)  \
-  ((( xv_alloc_save_ret = (void *)calloc( n, sizeof( t ))) ? (void)0 : \
+  ((( xv_alloc_save_ret = (void *)calloc( (size_t) n, sizeof( t ))) ? (void)0 : \
     xv_alloc_error()) \
    , xv_alloc_save_ret )
 
 #define xv_malloc( size )  \
-   ((( xv_alloc_save_ret = (void *)malloc( size )) ? (void)0 : \
+   ((( xv_alloc_save_ret = (void *)malloc( (size_t) size )) ? (void)0 : \
      xv_alloc_error())  \
    , xv_alloc_save_ret )
 
 #define xv_realloc( ptr, size )  \
- ((( xv_alloc_save_ret = (void *)realloc( ptr, size )) ? (void)0 : \
+ ((( xv_alloc_save_ret = (void *)realloc( ptr, (size_t) size )) ? (void)0 : \
    xv_alloc_error()) \
    , xv_alloc_save_ret )
 
 #define xv_valloc( size )  \
-   ((( xv_alloc_save_ret = (void *)valloc( size )) ? (void)0 : \
+   ((( xv_alloc_save_ret = (void *)valloc( (size_t) size )) ? (void)0 : \
      xv_alloc_error()) \
    , xv_alloc_save_ret )
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/base/drawable.c xview-3.2p1.4/lib/libxview/base/drawable.c
--- xview-3.2p1.4.orig/lib/libxview/base/drawable.c	1993-06-29 07:14:41.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/base/drawable.c	2013-01-07 12:50:43.508674000 +0100
@@ -11,6 +11,7 @@
  */
 
 #include <xview_private/draw_impl.h>
+#include <xview_private/win_info.h>		/* window_private_gc() */
 #define _NOTIFY_MIN_SYMBOLS
 #include <xview/notify.h>
 #undef _NOTIFY_MIN_SYMBOLS
diff -Naur xview-3.2p1.4.orig/lib/libxview/base/generic.c xview-3.2p1.4/lib/libxview/base/generic.c
--- xview-3.2p1.4.orig/lib/libxview/base/generic.c	2013-01-07 12:36:26.905253000 +0100
+++ xview-3.2p1.4/lib/libxview/base/generic.c	2013-01-07 12:50:43.533240000 +0100
@@ -39,16 +39,20 @@
 /*
  * Escape hatch to cope with SunView and/or client bugs in ref. counting.
  */
-Xv_private int generic_set_instance_name();
+Xv_private void generic_set_instance_name();
 Xv_private XrmQuarkList generic_create_instance_qlist();
 Xv_private_data int xv_free_unreferenced;
 Xv_private int  xv_destroy_status();
+Xv_private Xv_opaque db_name_from_qlist();
+Xv_private XrmQuarkList db_qlist_from_name();
 static Attr_attribute xv_next_key;	/* = 0 for -A-R */
 
 static Generic_node *add_node();
 static Generic_node *find_node();
 static void	     delete_node();
 
+XrmQuarkList db_qlist_from_name();
+Xv_opaque db_name_from_qlist();
 
 /* ------------------------------------------------------------------------ */
 
@@ -142,29 +146,29 @@
     Xv_object       parent;
     char	    *instance_name;
 {
-    Xv_opaque       	parent_quarks = NULL, quarks;
+    Xv_opaque       	parent_quarks = XV_NULL, quarks;
     short		null_parent = FALSE;
 
     if (instance_name == NULL)  {
 	return((XrmQuarkList)NULL);
     }
 
-    if (parent != NULL) 
+    if (parent != (Xv_object)NULL) 
         parent_quarks = xv_get(parent, XV_INSTANCE_QLIST); 
     else {
 	null_parent = TRUE;
-	parent_quarks = db_qlist_from_name(xv_instance_app_name, NULL);
+	parent_quarks = (Xv_opaque)db_qlist_from_name(xv_instance_app_name, NULL);
     }
 
-    quarks = db_qlist_from_name(instance_name, parent_quarks);
+    quarks = (Xv_opaque)db_qlist_from_name(instance_name, parent_quarks);
 
-    if ((null_parent == TRUE) && (parent_quarks != NULL))
+    if ((null_parent == TRUE) && (parent_quarks != XV_NULL))
 	free((void *)parent_quarks);
 
     return((XrmQuarkList)quarks);
 }
 
-Xv_private 
+Xv_private void
 generic_set_instance_name(parent, object, instance_name)
     Xv_object       parent;
     Xv_object       object;
@@ -174,7 +178,7 @@
 
     quarks = (Xv_opaque)generic_create_instance_qlist(parent, instance_name);
 
-    if (quarks != NULL)    
+    if (quarks != XV_NULL)    
         xv_set(object, XV_INSTANCE_QLIST, quarks, NULL);
 }
 
@@ -188,7 +192,7 @@
     Generic_node   *prev, *existing_node;
     int             ref_count;
     Generic_info	*generic = GEN_PRIVATE(object);
-    register Xv_opaque error_code = NULL;
+    register Xv_opaque error_code = XV_NULL;
 
     for (; *avlist; avlist = attr_next(avlist)) {
       /* The following check is done for performance reasons.  The check
@@ -252,6 +256,7 @@
 
 	  case XV_KEY_DATA:
 /* Alpha compatibility, mbuck@debian.org */
+/* FIXME: isn't "key" always int? */
 #if defined(__alpha)
 	    key = (unsigned long) avlist[1];
 #else
@@ -262,13 +267,13 @@
 		node = add_node(object, key);
 	    }
 	    if (node) {
-		if (existing_node && existing_node->data != avlist[2]) {
+		if (existing_node && existing_node->data != (Xv_opaque)avlist[2]) {
 		    if (existing_node->remove_proc)
 			(existing_node->remove_proc) (object,
 						      existing_node->key,
 						      existing_node->data);
 		}
-		node->data = avlist[2];
+		node->data = (Xv_opaque)avlist[2];
 		node->remove_proc = NULL;
 	    } else {
 		error_code = *avlist;
@@ -284,6 +289,7 @@
 	  case XV_KEY_DATA_REMOVE:
 	  case XV_KEY_DATA_REMOVE_PROC:
 /* Alpha compatibility, mbuck@debian.org */
+/* FIXME: isn't "key" always int? */
 #if defined(__alpha)
 	    key = (unsigned long) avlist[1];
 #else
@@ -310,13 +316,13 @@
 	  case XV_LABEL:
 	  case XV_NAME:
 	    /* If old data has been set, remove it first. */
-	    if (xv_get(object, XV_KEY_DATA, avlist[0]))
-		(void)xv_set(object, XV_KEY_DATA_REMOVE, avlist[1], NULL);
+	    if (xv_get(object, XV_KEY_DATA, (Attr_attribute)(int)avlist[0]))
+		(void)xv_set(object, XV_KEY_DATA_REMOVE, (int)avlist[1], NULL);
 	    /* Set new data. */
 	    (void) xv_set(object,
-			  XV_KEY_DATA, avlist[0], strdup((char *)avlist[1]),
-		          XV_KEY_DATA_REMOVE_PROC, avlist[0], generic_data_free,
-			  0);
+			  XV_KEY_DATA, (Attr_attribute)(int)avlist[0], (Xv_opaque)strdup((char *)avlist[1]),
+		          XV_KEY_DATA_REMOVE_PROC, (int)avlist[0], generic_data_free,
+			  NULL);
 	    break;
 
 	  case XV_OWNER:
@@ -330,9 +336,9 @@
 	  case XV_STATUS:
 	    /* PERFORMANCE ALERT: is recursion too slow? */
 	    if (avlist[1]) {
-		(void) xv_set(object, XV_KEY_DATA, avlist[0], avlist[1], 0);
+		(void) xv_set(object, XV_KEY_DATA, (Attr_attribute)(int)avlist[0], (Xv_opaque)avlist[1], NULL);
 	    } else {
-		(void) xv_set(object, XV_KEY_DATA_REMOVE, avlist[0], 0);
+		(void) xv_set(object, XV_KEY_DATA_REMOVE, (int)avlist[0], NULL);
 	    }
 	    break;
 
@@ -375,11 +381,11 @@
     Generic_info	*generic = GEN_PRIVATE(object);
 
     /* Don't set *status to XV_ERROR unless attribute is unrecognized! */
-    switch (attr) {
+    switch ((int)attr) {
       case XV_KEY_DATA:
       case XV_KEY_DATA_COPY_PROC:
       case XV_KEY_DATA_REMOVE_PROC:
-	key = va_arg(args, Attr_attribute);
+	key = (int)va_arg(args, Attr_attribute);
 	node = find_node(object, key, &prev);
 	if (node) {
 	    switch (attr) {
@@ -394,7 +400,7 @@
 		break;
 	    }
 	} else {
-	    result = 0;
+	    result = 0L;
 	}
 	break;
 
@@ -418,7 +424,7 @@
 	if (node) {
 	    result = node->data;
 	} else {
-	    result = 0;
+	    result = 0L;
 	}
 	break;
 
@@ -439,7 +445,7 @@
 	if (!result)  {
 	    if (generic->instance_qlist)  {
 	        generic->instance_name = 
-			(char *)db_name_from_qlist(generic->instance_qlist);
+			(char *)db_name_from_qlist((XrmQuarkList)generic->instance_qlist);
 	        result = (Xv_opaque)generic->instance_name;
 	    }
 	}
@@ -453,7 +459,7 @@
       case XV_NAME:
       case XV_STATUS:
 	/* PERFORMANCE ALERT!  Is recursion too slow? */
-	result = xv_get(object, (Attr_attribute) XV_KEY_DATA, attr);
+	result = xv_get(object, (Attr_attribute) XV_KEY_DATA, (int)attr);
 	break;
       case XV_SELF:
 	result = object;
@@ -469,7 +475,7 @@
 	if (xv_check_bad_attr(XV_GENERIC_OBJECT, attr) == XV_ERROR) {
 	    *status = XV_ERROR;
 	}
-	result = 0;
+	result = 0L;
 	break;
     }
 
@@ -484,7 +490,7 @@
     register Generic_node *node;
     Generic_info	*generic = GEN_PRIVATE(object);
 
-    switch (status) {
+    switch ((int)status) {
       case DESTROY_CHECKING:
 	if (xv_get(object, (Attr_attribute) XV_REF_COUNT))
 	    /* Assume decrement followed by increment => don't destroy. */
@@ -518,7 +524,7 @@
     node = xv_alloc(Generic_node);
     node->next = HEAD(object);
     gen_private->key_data = node;
-    node->key = key;
+    node->key = (int)key;
 
     return node;
 }
@@ -538,7 +544,7 @@
 	} else {
 	    for (*prev = HEAD(object), node = (*prev)->next; node;
 		 *prev = node, node = (*prev)->next) {
-		if (node->key == key)
+		if ((int)(node->key) == (int)key)
 		    break;
 	    }
 	}
diff -Naur xview-3.2p1.4.orig/lib/libxview/base/generic.h xview-3.2p1.4/lib/libxview/base/generic.h
--- xview-3.2p1.4.orig/lib/libxview/base/generic.h	2013-01-07 12:36:26.166590000 +0100
+++ xview-3.2p1.4/lib/libxview/base/generic.h	2013-01-07 12:50:43.562257000 +0100
@@ -58,8 +58,8 @@
 /*
  * Accelerator for XV_HELP and HELP_STRING_FILENAME
  */
-#define XV_HELP_DATA 		XV_KEY_DATA, XV_HELP
-#define HELP_STRING_FILENAME	XV_KEY_DATA, XV_HELP_STRING_FILENAME
+#define XV_HELP_DATA 		XV_KEY_DATA, (Attr_attribute)XV_HELP
+#define HELP_STRING_FILENAME	XV_KEY_DATA, (Attr_attribute)XV_HELP_STRING_FILENAME
 
 #define XV_XID			XV_DEVICE_NUMBER
 
@@ -72,7 +72,7 @@
  * An Ordinary Focus client has an XV_FOCUS_RANK of XV_FOCUS_SECONDARY.
  * A First Class Focus client has an XV_FOCUS_RANK of XV_FOCUS_PRIMARY.
  */
-#define XV_FOCUS_RANK		XV_KEY_DATA, XV_FOCUS_RANK_KEY
+#define XV_FOCUS_RANK		XV_KEY_DATA, (Attr_attribute)XV_FOCUS_RANK_KEY
 
 #define	XV_RC_SPECIAL		0x20000
 #define	XV_RESET_REF_COUNT	XV_REF_COUNT, XV_RC_SPECIAL
@@ -110,7 +110,14 @@
 	/*
 	 * For "contexts": key & data (& optional destroy for data) 
 	 */
+	/* FIXME:
+	 * XV_KEY_DATA is really ATTR_INT + ATTR_OPAQUE
+	 */
+#if defined(__x86_64__) || defined(__ia64__) || defined(_XV_API_BROKEN_64BIT)
+	XV_KEY_DATA		= GENERIC_ATTR(ATTR_OPAQUE_PAIR, 64),
+#else
 	XV_KEY_DATA		= GENERIC_ATTR(ATTR_INT_PAIR,	 64),
+#endif
 	XV_KEY_DATA_COPY_PROC	= GENERIC_ATTR(ATTR_OPAQUE_PAIR, 65),
 	XV_KEY_DATA_REMOVE	= GENERIC_ATTR(ATTR_INT,	 66), /* -S- */
 	XV_KEY_DATA_REMOVE_PROC = GENERIC_ATTR(ATTR_OPAQUE_PAIR, 67),
@@ -248,7 +255,7 @@
 
 typedef enum {
 /* Alpha compatibility, mbuck@debian.org */
-#if defined(__alpha)
+#if defined(__alpha) || defined(__x86_64__) || defined(__ia64__) || defined(_XV_API_BROKEN_64BIT)
     XV_INIT_ARGS             = XV_ATTR(ATTR_OPAQUE_PAIR,       	4),
     XV_INIT_ARGC_PTR_ARGV    = XV_ATTR(ATTR_OPAQUE_PAIR,       	7),  /* -S- */
 #else
@@ -275,4 +282,15 @@
 EXTERN_FUNCTION (Xv_object xv_init, (Attr_attribute attr1, DOTDOTDOT));
 EXTERN_FUNCTION (Attr_attribute xv_unique_key, (void));
 
+EXTERN_FUNCTION (int xv_parse_cmdline, (char *app_name, int *argc_ptr, char **argv_base, int scrunch));
+EXTERN_FUNCTION (Xv_opaque generic_get, (Xv_object object, int *status, Attr_attribute attr, va_list args));
+
+/*
+ * PRIVATE functions
+ */
+
+EXTERN_FUNCTION (void xv_connection_error, (char *server_name));
+EXTERN_FUNCTION (int xv_get_hostname, (char *buf, int maxlen));
+
+
 #endif /* ~xview_generic_DEFINED */
diff -Naur xview-3.2p1.4.orig/lib/libxview/base/pkg.h xview-3.2p1.4/lib/libxview/base/pkg.h
--- xview-3.2p1.4.orig/lib/libxview/base/pkg.h	1993-06-29 07:14:39.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/base/pkg.h	2013-01-07 12:50:43.590980000 +0100
@@ -99,5 +99,10 @@
 EXTERN_FUNCTION (int xv_check_bad_attr, (Xv_pkg *pkg, Attr_attribute attr));
 EXTERN_FUNCTION (Xv_opaque xv_get_varargs, (Xv_opaque passed_object, Attr_attribute attr, va_list valist));
 
+/*
+ * PUBLIC - this should go in attr.h, but it will result in a cyclic dependency, alas:
+ */
+EXTERN_FUNCTION (int xv_add_custom_attrs, (Xv_pkg *pkg, DOTDOTDOT));
+
 
 #endif /* ~xview_pkg_DEFINED */
diff -Naur xview-3.2p1.4.orig/lib/libxview/base/pkg_public.h xview-3.2p1.4/lib/libxview/base/pkg_public.h
--- xview-3.2p1.4.orig/lib/libxview/base/pkg_public.h	1993-06-29 07:14:38.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/base/pkg_public.h	2013-01-07 12:50:43.615875000 +0100
@@ -78,9 +78,9 @@
 #define XV_OBJECT_TO_STANDARD(_passed_object, _caller, _object)\
 {\
       if (!_passed_object) {\
-        xv_error(NULL, ERROR_INVALID_OBJECT,xv_notptr_str,\
+        xv_error((Xv_object)NULL, ERROR_INVALID_OBJECT,xv_notptr_str,\
                  ERROR_STRING, _caller,\
-                 0);\
+                 NULL);\
         _object = ((Xv_opaque)0);\
     }\
     else\
diff -Naur xview-3.2p1.4.orig/lib/libxview/base/xv.c xview-3.2p1.4/lib/libxview/base/xv.c
--- xview-3.2p1.4.orig/lib/libxview/base/xv.c	2013-01-07 12:36:25.516389000 +0100
+++ xview-3.2p1.4/lib/libxview/base/xv.c	2013-01-07 12:50:43.641933000 +0100
@@ -41,6 +41,8 @@
 Xv_private  Xv_opaque	xv_get_varargs( /* object, attribute, varargs */ );
 Xv_private  int	    	xv_destroy_status( /* object, status */ );
 Xv_private  Attr_avlist attr_customize(/* obj,pkg,instance_name,owner,avlist_copy,size,avlist */);
+Xv_private  int		xv_has_been_initialized( /* void */ );
+
 
 typedef int     (*int_fnp) ();
 typedef         Xv_opaque(*opaque_fnp) ();
@@ -57,10 +59,10 @@
 
 void xv_alloc_error()
 {
-   xv_error(NULL,
+   xv_error((Xv_object)NULL,
             ERROR_LAYER, ERROR_SYSTEM,
             ERROR_STRING, "call to alloc function returned NULL pointer",
-            0);
+            NULL);
 }
 
 void *xv_calloc( num, size )
@@ -68,14 +70,14 @@
 {
    void *ptr;
 
-   if( ptr = calloc( num, size ))
+   if( (ptr = calloc( (size_t)num, (size_t)size )) != NULL)
       return ptr;
    else
    {
-      xv_error(NULL,
+      xv_error((Xv_object)NULL,
                ERROR_LAYER, ERROR_SYSTEM,
                ERROR_STRING, "call to calloc function returned NULL pointer",
-               0);
+               NULL);
       return NULL;
    }
 }
@@ -145,7 +147,7 @@
 		 ERROR_SEVERITY, ERROR_NON_RECOVERABLE,
 		 ERROR_STRING,
 		     XV_MSG("data in object looks like seal of standard object"),
-		 0);
+		 NULL);
 
     if (byte_offset != (byte_offset & (~XV_EMBEDDING_MASK)))
 	/* The embedding header is too large for our encoding scheme. */
@@ -153,7 +155,7 @@
 		 ERROR_SEVERITY, ERROR_NON_RECOVERABLE,
 		 ERROR_STRING,
 		     XV_MSG("embedding header too large for our encoding scheme"),
-		 0);
+		 NULL);
 
     lu_ptr--;
     *lu_ptr = XV_EMBEDDING_SEAL | byte_offset;
@@ -182,7 +184,7 @@
 		 ERROR_INVALID_OBJECT, 
 			XV_MSG("embedding seal incorrect"),
 		 ERROR_STRING, caller,
-		 0);
+		 NULL);
 	return ((Xv_opaque) 0);
     }
     /* Embedding seal is okay: extract the offset. */
@@ -192,7 +194,7 @@
 		 ERROR_INVALID_OBJECT, 
 			XV_MSG("byte offset incorrect"),
 		 ERROR_STRING, caller,
-		 0);
+		 NULL);
 	return ((Xv_opaque) 0);
     }
     /* Offset is okay: see if offset pointer address a standard object. */
@@ -203,7 +205,7 @@
 		 ERROR_INVALID_OBJECT, 
 			XV_MSG("standard seal incorrect"),
 		 ERROR_STRING, caller,
-		 0);
+		 NULL);
 	return ((Xv_opaque) 0);
     }
     /* Offset pointer is okay. */
@@ -238,7 +240,7 @@
 {
     register Xv_pkg *find_pkg;
     Attr_avlist     attrs;
-    Xv_object       object = NULL;
+    Xv_object       object = (Xv_object)NULL;
     int             auto_create = TRUE, auto_create_seen = FALSE;
 
     for (attrs = (Attr_avlist) avlist;
@@ -263,10 +265,10 @@
     if (!xv_initialized) {
 	xv_initialized = TRUE;
 	/* use and xv_init attrs from the avlist */
-	xv_init(ATTR_LIST, avlist, 0);
+	xv_init(ATTR_LIST, avlist, NULL);
 	/* create the default server */
 	if (pkg != SERVER)
-	    if (!xv_create(XV_NULL, SERVER, 0))
+	    if (!xv_create(XV_NULL, SERVER, NULL))
 		(void) xv_connection_error((char *)NULL);
     }
     /*
@@ -337,7 +339,7 @@
 	xv_init(ATTR_LIST, avlist, 0);
 	/* create the default server */
 	if (pkg != SERVER)
-	    if (!xv_create(XV_NULL, SERVER, 0))
+	    if (!xv_create(XV_NULL, SERVER, NULL))
 		(void) xv_connection_error((char *)NULL);
     }
     /*
@@ -400,7 +402,7 @@
 	    ccom_object->pkg = ccom_object->pkg->parent_pkg;
 	    (void) xv_destroy_status(object, DESTROY_CLEANUP);
 	}
-	object = NULL;
+	object = (Xv_object)NULL;
     } else {
 	/*
 	 * Pass the avlist back to object to allow "normal" xv_set processing
@@ -413,7 +415,7 @@
 
 	/* Call set routines with XV_END_CREATE in init order */
 	argv[0] = XV_END_CREATE;
-	argv[1] = 0;
+	argv[1] = (Attr_attribute)NULL;
 	loop_pkgp = pkgp;
 	while (pkg_stack <= --loop_pkgp && error_code == 0) {
 	    if ((*loop_pkgp)->set) {	/* Ignore missing functions */
@@ -428,7 +430,7 @@
 
 		  default:
 		    (void) xv_destroy_status(object, DESTROY_CLEANUP);
-		    return (NULL);
+		    return (Xv_object)NULL;
 		}
 	    }
 	}
@@ -452,12 +454,12 @@
     Attr_attribute	flat_avlist[ATTR_STANDARD_SIZE];
     va_list         args;
 
-    if (object == NULL) {
-	xv_error(NULL,
+    if (object == (Xv_object)NULL) {
+	xv_error((Xv_object)NULL,
 	    ERROR_SEVERITY, ERROR_NON_RECOVERABLE,
 	    ERROR_STRING,
 		XV_MSG("NULL pointer passed to xv_set"),
-	    0);
+	    NULL);
     }
 
     VA_START( args, object );
@@ -543,7 +545,7 @@
 
     XV_OBJECT_TO_STANDARD(passed_object, "xv_get", object);
     if (!object)
-	return (Xv_opaque) 0;
+	return (Xv_opaque)NULL;
 
     /*
      * Execute the get procs youngest to oldest (client-visible pkg to base
@@ -551,7 +553,7 @@
      */
     VA_START( args_save, attr );
 
-    switch(attr) {
+    switch((int)attr) {
 	/* fast path: handle these two frequently used attributes directly. */
 	case XV_KEY_DATA:
 	case XV_IS_SUBTYPE_OF:
@@ -803,7 +805,7 @@
 			XV_MSG("send bug report"));
 		xv_error(object,
 			 ERROR_STRING, buffer,
-			 0);
+			 NULL);
 	    }
 	    return XV_ERROR;
 	}
@@ -835,9 +837,9 @@
 	 || pkg == XV_GENERIC_OBJECT
 #endif
 	) && !ATTR_CONSUMED(attr)) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_BAD_ATTR, attr,
-		 0);
+		 NULL);
 	return XV_OK;
     }
     return XV_ERROR;
diff -Naur xview-3.2p1.4.orig/lib/libxview/base/xv_debug.c xview-3.2p1.4/lib/libxview/base/xv_debug.c
--- xview-3.2p1.4.orig/lib/libxview/base/xv_debug.c	1993-06-29 07:14:42.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/base/xv_debug.c	2013-01-07 12:50:43.677993000 +0100
@@ -43,7 +43,11 @@
  * via a procedure pointer so that they can be replaced if necessary.
  */
 static void     _xview_abort();
+#ifdef ANSI_FUNC_PROTO
+static void	_xview_dprintf(FILE *file, char *fmt, ...);
+#else
 static void     _xview_dprintf();
+#endif
 static int      _xview_take_breakpoint();
 void            (*xv_abort) () = _xview_abort;
 void            (*xv_dprintf) () = _xview_dprintf;
@@ -143,8 +147,12 @@
 
 #else
 
-
+static void
+#ifdef ANSI_FUNC_PROTO
+_xview_dprintf(FILE *file, char *fmt, ...)
+#else
 _xview_dprintf()
+#endif
 {
 }
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/base/xv_init.c xview-3.2p1.4/lib/libxview/base/xv_init.c
--- xview-3.2p1.4.orig/lib/libxview/base/xv_init.c	1993-06-29 07:14:39.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/base/xv_init.c	2013-01-07 12:50:43.705721000 +0100
@@ -42,16 +42,21 @@
 Xv_private int  xv_handle_xio_errors();
 Xv_private void xv_x_error_handler();
 Xv_private char *xv_base_name();
+Xv_private int xv_has_been_initialized();
 
 #ifdef OW_I18N
 Xv_private_data wchar_t *xv_app_name_wcs;
 #endif /* OW_I18N */
 
 Xv_private_data char *xv_app_name;
+#ifdef __linux__
+#include <stdlib.h>
+#else
 char 			*getenv();
+#endif
 Xv_private_data char 	*xv_instance_app_name = NULL;
 Xv_private_data int	_xv_use_locale;
-Xv_private_data extern	notify_exclude_fd;
+Xv_private_data extern int notify_exclude_fd;
 
 #ifndef XGETTEXT
 /*
@@ -132,7 +137,7 @@
         va_end(valist);
     }
     else
-        attrs_start[0] = NULL;
+        attrs_start[0] = (Xv_object)NULL;
 
     /*
      * Get argv, argc for preparsing done below
@@ -491,11 +496,11 @@
         strcpy(error_string, ERROR_MSG);
         strcat(error_string, ":0");
     }
-    xv_error(NULL,
+    xv_error((Xv_object)NULL,
                  ERROR_SEVERITY, ERROR_NON_RECOVERABLE,
                  ERROR_STRING, error_string,
                  ERROR_PKG, SERVER,
-                 0);
+                 NULL);
     /* NOTREACHED */
     xv_free(error_string);
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/base/xv_init_x.c xview-3.2p1.4/lib/libxview/base/xv_init_x.c
--- xview-3.2p1.4.orig/lib/libxview/base/xv_init_x.c	1993-06-29 07:14:44.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/base/xv_init_x.c	2013-01-07 12:50:43.745681000 +0100
@@ -86,8 +86,8 @@
 	xv_xlib_error_proc(dpy, event);  /* should exit(1) */
     else
 	/* Using X11R3 */
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 	    ERROR_SERVER, event,
 	    ERROR_SEVERITY, ERROR_NON_RECOVERABLE,
-	    0);
+	    NULL);
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/base/xv_parse.c xview-3.2p1.4/lib/libxview/base/xv_parse.c
--- xview-3.2p1.4.orig/lib/libxview/base/xv_parse.c	2013-01-07 12:36:26.533646000 +0100
+++ xview-3.2p1.4/lib/libxview/base/xv_parse.c	2013-01-07 12:50:43.776919000 +0100
@@ -34,6 +34,7 @@
 extern XrmDatabase defaults_rdb;
 
 Xv_private int  list_fonts;
+Xv_private int	xv_parse_one();
 
 #ifdef _XV_DEBUG
 Xv_private int  server_gather_stats;
@@ -288,7 +289,7 @@
     return (0);
 }
 
-int
+Xv_private int
 xv_parse_one(app_name, argc, argv)
     char           *app_name;
     register int    argc;
@@ -316,9 +317,9 @@
 			XV_MSG("%s: missing argument after %s"), 
 			app_name,
 		       argv[0]);
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING, dummy,
-		 0);
+		 NULL);
 
 	return (-1);
     }
diff -Naur xview-3.2p1.4.orig/lib/libxview/canvas/canvas.c xview-3.2p1.4/lib/libxview/canvas/canvas.c
--- xview-3.2p1.4.orig/lib/libxview/canvas/canvas.c	1993-06-29 07:14:47.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/canvas/canvas.c	2013-01-07 12:50:43.811099000 +0100
@@ -65,13 +65,13 @@
      */
     xv_set(canvas_public,
         WIN_INHERIT_COLORS, TRUE,
-        XV_FOCUS_RANK, XV_FOCUS_PRIMARY,
+        XV_FOCUS_RANK, (Attr_attribute)XV_FOCUS_PRIMARY,
 #ifdef OW_I18N
 	WIN_IM_PREEDIT_START,	canvas_preedit_start, canvas_public,
 	WIN_IM_PREEDIT_DRAW,	canvas_preedit_draw, canvas_public,
 	WIN_IM_PREEDIT_DONE,	canvas_preedit_done, canvas_public,
 #endif
-        0);
+        NULL);
 
     return XV_OK;
 }
@@ -103,7 +103,7 @@
 	     */
 	    frame_public = (Frame) xv_get(canvas_public, WIN_FRAME);
 	    pew = (Canvas_pew *) xv_get(frame_public,
-					XV_KEY_DATA, canvas_pew_key);
+					XV_KEY_DATA, (Attr_attribute)canvas_pew_key);
 
 	    if (pew != NULL) {
 	        /*
diff -Naur xview-3.2p1.4.orig/lib/libxview/canvas/cnvs_cb.c xview-3.2p1.4/lib/libxview/canvas/cnvs_cb.c
--- xview-3.2p1.4.orig/lib/libxview/canvas/cnvs_cb.c	1993-06-29 07:14:49.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/canvas/cnvs_cb.c	2013-01-07 12:50:43.839744000 +0100
@@ -315,7 +315,7 @@
             NULL);
  
     xv_set(frame,
-        XV_KEY_DATA,		canvas_pew_key,	pew,
+        XV_KEY_DATA,		(Attr_attribute)canvas_pew_key,	pew,
 	NULL);
 
     xv_set(pew->frame,
@@ -342,9 +342,9 @@
 
 	frame_public =  (Frame) xv_get(client, XV_OWNER);
 	if ((pew = (Canvas_pew *) xv_get(frame_public, XV_KEY_DATA,
-						canvas_pew_key)) != NULL) {
+						(Attr_attribute)canvas_pew_key)) != NULL) {
 	    xv_set(frame_public,
-		   XV_KEY_DATA,	canvas_pew_key, NULL,
+		   XV_KEY_DATA,	(Attr_attribute)canvas_pew_key, NULL,
 		   NULL);
 	    xv_free(pew);
 	}
@@ -398,7 +398,7 @@
 this is display only window, you should type in to the\n\
 canvas window itself instead."),
                         NOTICE_BUTTON_YES, XV_MSG("OK"),
-                        0);
+                        NULL);
 	/*FALLTHROUGH*/
 
       case KBD_DONE:
@@ -427,7 +427,7 @@
     switch ((Notify_event) event_action(event)) {
       case ACTION_OPEN:
       case ACTION_CLOSE:
-	pew = (Canvas_pew *) xv_get(parent_win, XV_KEY_DATA, canvas_pew_key);
+	pew = (Canvas_pew *) xv_get(parent_win, XV_KEY_DATA, (Attr_attribute)canvas_pew_key);
 
 	if ((Notify_event) event_action(event) == ACTION_CLOSE) {
 	    xv_set(pew->frame, XV_SHOW, FALSE, NULL);
@@ -455,7 +455,7 @@
     Canvas_pew		*pew;
 
     pew = (Canvas_pew *) xv_get(xv_get(frame, XV_OWNER),
-				XV_KEY_DATA, canvas_pew_key);
+				XV_KEY_DATA, (Attr_attribute)canvas_pew_key);
     if (pew->active_count > 0) {
 
         notice_prompt(pew->frame, NULL,
diff -Naur xview-3.2p1.4.orig/lib/libxview/canvas/cnvs_get.c xview-3.2p1.4/lib/libxview/canvas/cnvs_get.c
--- xview-3.2p1.4.orig/lib/libxview/canvas/cnvs_get.c	1993-06-29 07:14:48.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/canvas/cnvs_get.c	2013-01-07 12:50:43.867943000 +0100
@@ -25,7 +25,7 @@
     Xv_Window       view_public, paint_window;
     Rect            view_rect, *canvas_rect;
 
-    switch (attr) {
+    switch ((int)attr) {
       case CANVAS_NTH_PAINT_WINDOW:
 	view_public = (Xv_Window) xv_get(canvas_public, OPENWIN_NTH_VIEW, va_arg(valist, int));
 	if (view_public != NULL) {
diff -Naur xview-3.2p1.4.orig/lib/libxview/canvas/cnvs_impl.h xview-3.2p1.4/lib/libxview/canvas/cnvs_impl.h
--- xview-3.2p1.4.orig/lib/libxview/canvas/cnvs_impl.h	1993-06-29 07:14:47.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/canvas/cnvs_impl.h	2013-01-07 12:50:43.907510000 +0100
@@ -162,3 +162,9 @@
 			(Window parent_win, Event *event,
 			 Notify_arg arg, Notify_event_type type));
 #endif /* OW_I18N */
+
+/*
+ * Who knows?
+ */
+EXTERN_FUNCTION (Pkg_private void canvas_inform_repaint, (Canvas_info *canvas, Xv_Window paint_window));
+
diff -Naur xview-3.2p1.4.orig/lib/libxview/canvas/cnvs_input.c xview-3.2p1.4/lib/libxview/canvas/cnvs_input.c
--- xview-3.2p1.4.orig/lib/libxview/canvas/cnvs_input.c	2013-01-07 12:36:47.955105000 +0100
+++ xview-3.2p1.4/lib/libxview/canvas/cnvs_input.c	2013-01-07 13:21:13.382421000 +0100
@@ -10,6 +10,7 @@
  *	file for terms of the license.
  */
 
+#define xview_other_rl_funcs
 #include <xview_private/cnvs_impl.h>
 #include <xview/canvas.h>
 #include <xview/frame.h>
@@ -20,6 +21,7 @@
 #ifdef OW_I18N
 #include <xview/xv_i18n.h>
 #endif /*OW_I18N*/
+#include <xview/rectlist.h>
 
 #define window_event_proc(win, event, arg) \
     (((int (*)())(window_get(win, WIN_EVENT_PROC)))(win, event, arg))
@@ -115,17 +117,17 @@
         && xid ) {
 	paint_public = (Canvas) win_data(XDisplayOfIM(XIMOfIC(ic)),xid);
         canvas = (Canvas_info *) xv_get(paint_public, XV_KEY_DATA,
-                               canvas_context_key);
+                               (Attr_attribute)canvas_context_key);
         canvas_public = CANVAS_PUBLIC(canvas);
     } else {
         canvas = (Canvas_info *) xv_get(window_public, XV_KEY_DATA,
-                               canvas_context_key);
+                               (Attr_attribute)canvas_context_key);
 /* ISSUE: client_data is not initialized */
         canvas_public = (Canvas)client_data;
     }
 #else 
     canvas = (Canvas_info *) xv_get(window_public, XV_KEY_DATA,
-				    canvas_context_key);
+				    (Attr_attribute)canvas_context_key);
     canvas_public = CANVAS_PUBLIC(canvas);
 #endif /*OW_I18N*/
 
@@ -179,10 +181,10 @@
 			     pw_nbr + 1);
 	    if (next_pw) {
 		/* Set focus to first element in next paint window */
-		xv_set(next_pw, WIN_SET_FOCUS, 0);
-		xv_set(canvas_public, XV_FOCUS_ELEMENT, 0, 0);
+		xv_set(next_pw, WIN_SET_FOCUS, NULL);
+		xv_set(canvas_public, XV_FOCUS_ELEMENT, 0, NULL);
 	    } else
-		xv_set(xv_get(canvas_public, WIN_FRAME), FRAME_NEXT_PANE, 0);
+		xv_set(xv_get(canvas_public, WIN_FRAME), FRAME_NEXT_PANE, NULL);
 	}
 	break;
 
@@ -198,12 +200,12 @@
 	    }
 	    if (pw_nbr > 0) {
 		/* Set focus to last element in previous paint window */
-		xv_set(previous_pw, WIN_SET_FOCUS, 0);
-		xv_set(canvas_public, XV_FOCUS_ELEMENT, -1, 0);
+		xv_set(previous_pw, WIN_SET_FOCUS, NULL);
+		xv_set(canvas_public, XV_FOCUS_ELEMENT, -1, NULL);
 	    } else {
 		xv_set(xv_get(canvas_public, WIN_FRAME),
 		       FRAME_PREVIOUS_PANE,
-		       0);
+		       NULL);
 	    }
 	}
 	break;
@@ -216,7 +218,7 @@
 	 */
 	if (event_is_down(event)) {
 	    view = CANVAS_VIEW_PUBLIC((Canvas_view_info *) xv_get(window_public,
-	    	XV_KEY_DATA, canvas_view_context_key));
+	    	XV_KEY_DATA, (Attr_attribute)canvas_view_context_key));
 	    for (view_nbr = 0;
 		 nth_view = xv_get(canvas_public, OPENWIN_NTH_VIEW, view_nbr);
 		 view_nbr++) {
@@ -230,12 +232,12 @@
 		if (!sb)
 		    sb = xv_get(canvas_public,
 				OPENWIN_VERTICAL_SCROLLBAR, previous_view);
-		xv_set(sb, WIN_SET_FOCUS, 0);
+		xv_set(sb, WIN_SET_FOCUS, NULL);
 	    } else {
 		/* Go to last element in previous frame subwindow */
 		xv_set(xv_get(canvas_public, WIN_FRAME),
 		       FRAME_PREVIOUS_ELEMENT,
-		       0);
+		       NULL);
 	    }
 	}
 	break;
@@ -248,16 +250,16 @@
 	 */
 	if (event_is_down(event)) {
 	    view = CANVAS_VIEW_PUBLIC((Canvas_view_info *) xv_get(window_public,
-	    	XV_KEY_DATA, canvas_view_context_key));
+	    	XV_KEY_DATA, (Attr_attribute)canvas_view_context_key));
 	    sb = xv_get(canvas_public, OPENWIN_VERTICAL_SCROLLBAR, view);
 	    if (!sb)
 		sb = xv_get(canvas_public, OPENWIN_HORIZONTAL_SCROLLBAR, view);
 	    if (sb) {
-		xv_set(sb, WIN_SET_FOCUS, 0);
+		xv_set(sb, WIN_SET_FOCUS, NULL);
 		break;
 	    }
 	    /* There is no scrollbar attached: go to next pane */
-	    xv_set(xv_get(canvas_public, WIN_FRAME), FRAME_NEXT_PANE, 0);
+	    xv_set(xv_get(canvas_public, WIN_FRAME), FRAME_NEXT_PANE, NULL);
 	}
 	break;
 
@@ -265,7 +267,7 @@
       case ACTION_SCROLL_UP:
       case ACTION_SCROLL_DOWN:
 	view = CANVAS_VIEW_PUBLIC((Canvas_view_info *) xv_get(window_public,
-	    XV_KEY_DATA, canvas_view_context_key));
+	    XV_KEY_DATA, (Attr_attribute)canvas_view_context_key));
 	sb = xv_get(canvas_public, OPENWIN_VERTICAL_SCROLLBAR, view);
 	if (sb) {
 	    Event	    sb_event;
@@ -317,10 +319,10 @@
 
       case ACTION_JUMP_MOUSE_TO_INPUT_FOCUS:
 	view = CANVAS_VIEW_PUBLIC((Canvas_view_info *) xv_get(window_public,
-	    XV_KEY_DATA, canvas_view_context_key));
+	    XV_KEY_DATA, (Attr_attribute)canvas_view_context_key));
 	xv_set(view,
 	       WIN_MOUSE_XY, 0, 0,
-	       0);
+	       NULL);
 	/* BUG ALERT:  Clicking MENU at this point does not send ACTION_MENU
 	 *	       to the canvas paint window.  Instead, an Window Manager
 	 *	       Window menu is brought up.
@@ -396,7 +398,7 @@
 /*
  * tell the client to repaint the paint window.
  */
-Pkg_private
+Pkg_private void
 canvas_inform_repaint(canvas, paint_window)
     Canvas_info    *canvas;
     Xv_Window       paint_window;
@@ -450,11 +452,12 @@
     register Event *event;
 {
     Xv_Window       paint_window;
-    Event           tmp_event;
+    /* is this static thing really a good idea here? */
+    static Event    tmp_event;
     int             x, y;
 
-    paint_window = xv_get(canvas_public, CANVAS_NTH_PAINT_WINDOW, 0);
-    if (paint_window == NULL) {
+    paint_window = xv_get(canvas_public, CANVAS_NTH_PAINT_WINDOW, NULL);
+    if (paint_window == (Xv_Window)NULL) {
 	/* call xv_error */
 	return (event);
     }
@@ -475,11 +478,12 @@
     register Event *event;
 {
     Xv_Window       paint_window;
-    Event           tmp_event;
+    /* is this static thing really a good idea here? */
+    static Event    tmp_event;
     int             x, y;
 
-    paint_window = xv_get(canvas_public, CANVAS_NTH_PAINT_WINDOW, 0);
-    if (paint_window == NULL) {
+    paint_window = xv_get(canvas_public, CANVAS_NTH_PAINT_WINDOW, NULL);
+    if (paint_window == (Xv_Window)NULL) {
 	/* call xv_error */
 	return (event);
     }
diff -Naur xview-3.2p1.4.orig/lib/libxview/canvas/cnvs_set.c xview-3.2p1.4/lib/libxview/canvas/cnvs_set.c
--- xview-3.2p1.4.orig/lib/libxview/canvas/cnvs_set.c	1993-06-29 07:14:47.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/canvas/cnvs_set.c	2013-01-07 12:50:43.992120000 +0100
@@ -20,6 +20,8 @@
 static void     canvas_set_bit_gravity();
 static void     canvas_append_paint_attrs();
 
+Attr_avlist attr_copy_avlist();
+
 
 Pkg_private Xv_opaque
 canvas_set_avlist(canvas_public, avlist)
@@ -38,8 +40,8 @@
     Xv_Window       paint_window;
     Rect            pw_rect;
 
-    for (attr = avlist[0]; attr;
-	 avlist = attr_next(avlist), attr = avlist[0]) {
+    for (attr = (int)avlist[0]; attr;
+	 avlist = attr_next(avlist), attr = (int)avlist[0]) {
 	switch (attr) {
 	  case CANVAS_WIDTH:
 	    if (canvas->width != (int) avlist[1]) {
diff -Naur xview-3.2p1.4.orig/lib/libxview/canvas/cnvs_view.c xview-3.2p1.4/lib/libxview/canvas/cnvs_view.c
--- xview-3.2p1.4.orig/lib/libxview/canvas/cnvs_view.c	1993-06-29 07:14:48.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/canvas/cnvs_view.c	2013-01-07 12:50:44.020931000 +0100
@@ -59,7 +59,7 @@
 	   WIN_NOTIFY_IMMEDIATE_EVENT_PROC, canvas_view_event,
 	   WIN_CONSUME_PICK_EVENTS,
 	   WIN_RESIZE, 0,
-	   0);
+	   NULL);
 
     return XV_OK;
 }
@@ -76,7 +76,7 @@
 
     *stat = XV_OK;
 
-    switch (attr) {
+    switch ((int)attr) {
       case CANVAS_VIEW_PAINT_WINDOW:
 	return ((Xv_opaque) view->paint_window);
 
@@ -108,22 +108,22 @@
     Canvas_view_info *view;
     Canvas_info    *canvas;
 
-    switch (attr) {
+    switch ((int)attr) {
       case CANVAS_PAINT_CANVAS_WINDOW:
 	canvas = (Canvas_info *) xv_get(paint_public,
-					XV_KEY_DATA, canvas_context_key);
+					XV_KEY_DATA, (Attr_attribute)canvas_context_key);
 	return (Xv_opaque) CANVAS_PUBLIC(canvas);
 
       case CANVAS_PAINT_VIEW_WINDOW:
 	view = (Canvas_view_info *) xv_get(paint_public,
-					   XV_KEY_DATA, canvas_view_context_key);
+					   XV_KEY_DATA, (Attr_attribute)canvas_view_context_key);
 	return (Xv_opaque) CANVAS_VIEW_PUBLIC(view);
 
 #ifdef OW_I18N
       case WIN_IC:
 	ATTR_CONSUME(attr);
 	canvas = (Canvas_info *) xv_get(paint_public,
-					XV_KEY_DATA, canvas_context_key);
+					XV_KEY_DATA, (Attr_attribute)canvas_context_key);
 	return (Xv_opaque) canvas->ic;
 #endif /*OW_I18N*/
 
@@ -145,18 +145,18 @@
 
 #ifdef OW_I18N
     Canvas_info 	*canvas = (Canvas_info *) xv_get(paint_public,
-                                            XV_KEY_DATA, canvas_context_key);
+                                            XV_KEY_DATA, (Attr_attribute)canvas_context_key);
 #else
     Canvas_info    	*canvas;
 #endif /*OW_I18N*/
 
-    for (attr = avlist[0]; attr;
-         avlist = attr_next(avlist), attr = avlist[0]) {
+    for (attr = (int)avlist[0]; attr;
+         avlist = attr_next(avlist), attr = (int)avlist[0]) {
         switch (attr) {
 	    case WIN_CMS_CHANGE: 
 #ifndef OW_I18N
 		canvas = (Canvas_info *) xv_get(paint_public,
-                                XV_KEY_DATA, canvas_context_key);
+                                XV_KEY_DATA, (Attr_attribute)canvas_context_key);
 #endif /*OW_I18N*/
                 if (status(canvas, cms_repaint)) {
                     Rect                rect;
@@ -224,7 +224,7 @@
 #endif
 
 		canvas->pew = (Canvas_pew *) xv_get(frame_public,
-					     XV_KEY_DATA, canvas_pew_key);
+					     XV_KEY_DATA, (Attr_attribute)canvas_pew_key);
 		if (canvas->pew == NULL) {
 		    /*
 		     * This is the first time creating canvas with IM
@@ -391,8 +391,8 @@
 #ifdef OW_I18N
     use_im = (Bool) xv_get(canvas_public, WIN_USE_IM);
 
-    for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-        switch (attrs[0]) {
+    for (attrs = avlist; (int)*attrs; attrs = attr_next(attrs)) {
+        switch ((int)attrs[0]) {
 
 	    case WIN_USE_IM:
 		use_im = (int) attrs[1];
@@ -416,9 +416,9 @@
 			WIN_NOTIFY_IMMEDIATE_EVENT_PROC, canvas_paint_event,
 				     WIN_RETAINED, status(canvas, retained),
 			       WIN_X_PAINT_WINDOW, status(canvas, x_canvas),
-				    XV_KEY_DATA, canvas_context_key, canvas,
-				    XV_KEY_DATA, canvas_view_context_key, view,
-				       0);
+				    XV_KEY_DATA, (Attr_attribute)canvas_context_key, canvas,
+				    XV_KEY_DATA, (Attr_attribute)canvas_view_context_key, view,
+				       NULL);
     } else {
 	view->paint_window = xv_create(view_public, CANVAS_PAINT_WINDOW,
 				       ATTR_LIST, canvas->paint_avlist,
@@ -431,9 +431,9 @@
 			WIN_NOTIFY_IMMEDIATE_EVENT_PROC, canvas_paint_event,
 				     WIN_RETAINED, status(canvas, retained),
 			       WIN_X_PAINT_WINDOW, status(canvas, x_canvas),
-				    XV_KEY_DATA, canvas_context_key, canvas,
-				    XV_KEY_DATA, canvas_view_context_key, view,
-				       0);
+				    XV_KEY_DATA, (Attr_attribute)canvas_context_key, canvas,
+				    XV_KEY_DATA, (Attr_attribute)canvas_view_context_key, view,
+				       NULL);
 	xv_free(canvas->paint_avlist);
 	canvas->paint_avlist = canvas->paint_end_avlist = NULL;
     }
@@ -444,52 +444,52 @@
 
 #ifdef OW_I18N
     if (canvas->ic)
-        xv_set(view->paint_window, WIN_IC, canvas->ic, 0);
+        xv_set(view->paint_window, WIN_IC, canvas->ic, NULL);
 #endif
     
     if (status(canvas, created)) {
-	split_paint = (Xv_Window) xv_get(canvas_public, CANVAS_NTH_PAINT_WINDOW, 0);
-	if (split_paint != NULL) {
+	split_paint = (Xv_Window) xv_get(canvas_public, CANVAS_NTH_PAINT_WINDOW, NULL);
+	if (split_paint != (Xv_Window)NULL) {
 	    Xv_opaque   defaults_array[ATTR_STANDARD_SIZE];
 	    Attr_avlist defaults = defaults_array;
 	    Xv_opaque   value;
 	    
 	    /* inherit certain attributes from the split window */
-	    value = xv_get(split_paint, WIN_BACKGROUND_PIXMAP, 0);
+	    value = xv_get(split_paint, WIN_BACKGROUND_PIXMAP, NULL);
 	    if (value) {
 		*defaults++ = (Xv_opaque)WIN_BACKGROUND_PIXMAP;
-		*defaults++ = xv_get(split_paint, WIN_BACKGROUND_PIXMAP, 0);
+		*defaults++ = xv_get(split_paint, WIN_BACKGROUND_PIXMAP, NULL);
 	    }		
 	    
 	    *defaults++ = (Xv_opaque)WIN_BIT_GRAVITY;
-	    *defaults++ = xv_get(split_paint, WIN_BIT_GRAVITY, 0);
+	    *defaults++ = xv_get(split_paint, WIN_BIT_GRAVITY, NULL);
 
 	    *defaults++ = (Xv_opaque)WIN_COLOR_INFO;
-	    *defaults++ = xv_get(split_paint, WIN_COLOR_INFO, 0);
+	    *defaults++ = xv_get(split_paint, WIN_COLOR_INFO, NULL);
 	    
             *defaults++ = (Xv_opaque)WIN_COLUMN_GAP;
-	    *defaults++ = xv_get(split_paint, WIN_COLUMN_GAP, 0);
+	    *defaults++ = xv_get(split_paint, WIN_COLUMN_GAP, NULL);
 
             *defaults++ = (Xv_opaque)WIN_COLUMN_WIDTH;
-	    *defaults++ = xv_get(split_paint, WIN_COLUMN_WIDTH, 0);
+	    *defaults++ = xv_get(split_paint, WIN_COLUMN_WIDTH, NULL);
 
             *defaults++ = (Xv_opaque)WIN_CURSOR;
-	    *defaults++ = xv_get(split_paint, WIN_CURSOR, 0);
+	    *defaults++ = xv_get(split_paint, WIN_CURSOR, NULL);
 
 	    *defaults++ = (Xv_opaque)WIN_EVENT_PROC;
-	    *defaults++ = xv_get(split_paint, WIN_EVENT_PROC, 0);
+	    *defaults++ = xv_get(split_paint, WIN_EVENT_PROC, NULL);
 
 	    *defaults++ = (Xv_opaque)WIN_ROW_GAP;
-	    *defaults++ = xv_get(split_paint, WIN_ROW_GAP, 0);
+	    *defaults++ = xv_get(split_paint, WIN_ROW_GAP, NULL);
 
 	    *defaults++ = (Xv_opaque)WIN_ROW_HEIGHT;
-	    *defaults++ = xv_get(split_paint, WIN_ROW_HEIGHT, 0);
+	    *defaults++ = xv_get(split_paint, WIN_ROW_HEIGHT, NULL);
 
 	    *defaults++ = (Xv_opaque)WIN_WINDOW_GRAVITY;
-	    *defaults++ = xv_get(split_paint, WIN_WINDOW_GRAVITY, 0);
+	    *defaults++ = xv_get(split_paint, WIN_WINDOW_GRAVITY, NULL);
 
 	    *defaults++ = (Xv_opaque)WIN_X_EVENT_MASK;
-	    *defaults++ = xv_get(split_paint, WIN_X_EVENT_MASK, 0);
+	    *defaults++ = xv_get(split_paint, WIN_X_EVENT_MASK, NULL);
 
 	    /* null terminate the list */
 	    *defaults   = (Xv_opaque)0;
@@ -500,12 +500,12 @@
 	    /* Deal with possible scrollbars */
 	    sb = (Scrollbar)xv_get(canvas_public, OPENWIN_VERTICAL_SCROLLBAR,
 				   view_public);
-	    if (sb != NULL) {
+	    if (sb != (Scrollbar)NULL) {
 		canvas_scroll(view->paint_window, sb);
 	    }
 	    sb = (Scrollbar)xv_get(canvas_public, OPENWIN_HORIZONTAL_SCROLLBAR,
 				   view_public);
-	    if (sb != NULL) {
+	    if (sb != (Scrollbar)NULL) {
 		canvas_scroll(view->paint_window, sb);
 	    }
 	}
@@ -519,8 +519,8 @@
 	           WIN_ASCII_EVENTS,
 	           ACTION_HELP,
 	           WIN_MOUSE_BUTTONS,
-	           0,
-	       0);
+	           NULL,
+	       NULL);
 	status_set(canvas, created);
     }
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/color/cms.c xview-3.2p1.4/lib/libxview/color/cms.c
--- xview-3.2p1.4.orig/lib/libxview/color/cms.c	1993-06-29 07:15:52.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/color/cms.c	2013-01-07 12:50:44.054332000 +0100
@@ -74,7 +74,7 @@
 	xv_free(cms->name);
     }
 
-    sprintf(buf, "%x", cms);
+    sprintf(buf, "%lx", (unsigned long)cms);
     cms->name = (char *)xv_malloc(strlen("xv_cms_") + strlen(buf) + 1);
     sprintf(cms->name, "xv_cms_%s", buf);
 }
@@ -367,11 +367,11 @@
     for (--count; count >= 0; --count) {
 	if (!XParseColor(display, DefaultColormap(display, screen_num), named_colors[count],
 	    	xcolors+count)) {
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		 ERROR_STRING,
 		 XV_MSG("Unable to find RGB values for a named color"),
 		 ERROR_PKG, CMS,
-		 0);
+		 NULL);
 	    return(NULL);
 	}
     }
diff -Naur xview-3.2p1.4.orig/lib/libxview/color/cms.h xview-3.2p1.4/lib/libxview/color/cms.h
--- xview-3.2p1.4.orig/lib/libxview/color/cms.h	1993-06-29 07:15:52.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/color/cms.h	2013-01-07 12:50:44.089473000 +0100
@@ -80,6 +80,10 @@
     CMS_COLOR_COUNT   	= CMS_ATTR(ATTR_INT,        	    	25),
     CMS_SCREEN		= CMS_ATTR(ATTR_OPAQUE,		    	30),
     CMS_INDEX_TABLE	= CMS_ATTR(ATTR_OPAQUE,             	35),
+    /*
+     * CMS_FOREGROUND_PIXEL, CMS_BACKGROUND_PIXEL and CMS_PIXEL should
+     * really have been ATTR_LONG, but changing it here would break the ABI.
+     */
     CMS_FOREGROUND_PIXEL= CMS_ATTR(ATTR_INT,                	40),
     CMS_BACKGROUND_PIXEL= CMS_ATTR(ATTR_INT,                	45),
     CMS_PIXEL		= CMS_ATTR(ATTR_INT,                	50),
diff -Naur xview-3.2p1.4.orig/lib/libxview/color/cms_impl.h xview-3.2p1.4/lib/libxview/color/cms_impl.h
--- xview-3.2p1.4.orig/lib/libxview/color/cms_impl.h	1993-06-29 07:15:52.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/color/cms_impl.h	2013-01-07 12:50:44.121583000 +0100
@@ -97,6 +97,8 @@
 Pkg_private int		cms_set_static_colors();
 Pkg_private XColor     *cms_parse_named_colors();
 Pkg_private int		cms_set_dynamic_colors();
+Pkg_private int		cms_get_colors();
+Pkg_private int		cms_alloc_static_colors();
 
 Xv_private Xv_opaque	cms_default_colormap();
 #endif	/* ~xview_cms_impl_h_DEFINED */
diff -Naur xview-3.2p1.4.orig/lib/libxview/color/cms_pblc.c xview-3.2p1.4/lib/libxview/color/cms_pblc.c
--- xview-3.2p1.4.orig/lib/libxview/color/cms_pblc.c	2013-01-07 12:36:33.243028000 +0100
+++ xview-3.2p1.4/lib/libxview/color/cms_pblc.c	2013-01-07 12:50:44.151616000 +0100
@@ -46,12 +46,12 @@
     for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
 	switch ((int)attrs[0]) {
 	  case CMS_TYPE:
-	    cms->type = (Cms_type)attrs[1];
+	    cms->type = (Cms_type)(int)attrs[1];
 	    ATTR_CONSUME(attrs[0]);
 	    break;
 	    
 	  case CMS_DEFAULT_CMS:
-	    if (attrs[1]) {
+	    if ((int)attrs[1]) {
 		STATUS_SET(cms, default_cms);
 	    } else {
 		STATUS_RESET(cms, default_cms);
@@ -60,7 +60,7 @@
 	    break;
 	    
 	  case CMS_CONTROL_CMS:
-	    if (attrs[1]) {
+	    if ((int)attrs[1]) {
 		STATUS_SET(cms, control_cms);
 	    } else {
 		STATUS_RESET(cms, control_cms);
@@ -69,8 +69,8 @@
 	    break;
 	    
 	  case CMS_SIZE:
-	    if (attrs[1] != 0)
-	      cms->size = (unsigned long)attrs[1];
+	    if ((int)attrs[1] != 0)
+	      cms->size = (unsigned long)(int)attrs[1];
 	    ATTR_CONSUME(attrs[0]);
 	    break;
 	    
@@ -111,17 +111,16 @@
      * static visual.
      */
     if (cms->type == XV_DYNAMIC_CMS && !XV_DYNAMIC_VISUAL(cms->visual->vinfo->class)) {
-	xv_error(NULL, 
+	xv_error((Xv_object)NULL, 
 		 ERROR_STRING,
 		 XV_MSG("Can not allocate a read/write cms from a static visual"),
 		 ERROR_PKG, CMS,
-		 0);
+		 NULL);
 	return(XV_ERROR);
     } else {
 	if (cms->size == 0)
 	  cms->size = STATUS(cms, control_cms) ? CMS_CONTROL_COLORS : XV_DEFAULT_CMS_SIZE;
-	cms->index_table =
-	  xv_alloc_n(unsigned long, cms->size);
+	cms->index_table = xv_alloc_n(unsigned long, cms->size);
 	if (cms->type == XV_STATIC_CMS) {
 	    for (i = 0; i <= cms->size - 1; i++)
 	      cms->index_table[i] = XV_INVALID_PIXEL;
@@ -152,7 +151,7 @@
     }
 
     for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-	switch (attrs[0]) {
+	switch ((int)attrs[0]) {
 	    case CMS_NAME:
 		cms_set_name(cms, (char *)attrs[1]);
 		ATTR_CONSUME(attrs[0]);
@@ -183,15 +182,15 @@
 		break;
 
 	    case CMS_TYPE:
-		xv_error(NULL,
+		xv_error((Xv_object)NULL,
 		         ERROR_STRING, 
 				XV_MSG("CMS_TYPE is a create-only attribute"),
 		    	 ERROR_PKG, CMS,
-		    	 0);
+		    	 NULL);
 		return((Xv_opaque)XV_ERROR);
 
 	    case CMS_FRAME_CMS:
-		if (attrs[1]) {
+		if ((int)attrs[1]) {
 		    STATUS_SET(cms, frame_cms);
 		} else {
 		    STATUS_RESET(cms, frame_cms);
@@ -237,11 +236,11 @@
 					   (int)xv_get(cms->screen, SCREEN_NUMBER, 0));
 		    if (!XParseColor(display, cmap, 
 				     control_color, &(xcolors[0]))) {
-			xv_error(NULL, 
+			xv_error((Xv_object)NULL, 
 				 ERROR_STRING,
 				 "Unable to parse window color",
 				 ERROR_PKG, CMS,
-				 0);
+				 NULL);
 			xcolors[CMS_CONTROL_BG1].red = 0xcccc;
 			xcolors[CMS_CONTROL_BG1].green = 0xcccc;
 			xcolors[CMS_CONTROL_BG1].blue = 0xcccc;
@@ -258,11 +257,11 @@
 
 		    if (cms_set_colors(cms, (Xv_Singlecolor *)NULL, xcolors, 
 			    (unsigned long)0, (unsigned long)CMS_CONTROL_COLORS) == XV_ERROR) {
-			xv_error(NULL,
+			xv_error((Xv_object)NULL,
 			    ERROR_STRING,
 			    XV_MSG("Unable to allocate control colors for colormap segment"),
 			    ERROR_PKG, CMS,
-			    0);
+			    NULL);
 			xv_free(xcolors);
 	    		return((Xv_opaque)XV_ERROR);
 		    }
@@ -322,15 +321,15 @@
 #endif
     int			cms_status = 0;
 
-    switch (attr) {
+    switch ((int)attr) {
       case CMS_PIXEL: {
 	  unsigned long    index;
 	  
 /* Alpha compatibility, mbuck@debian.org */
 #if 1
-	  index = va_arg(args, unsigned long);
+	  index = (unsigned int)va_arg(args, unsigned long);
 #else
-	  index = (unsigned long)avlist[0];
+	  index = (unsigned int)avlist[0];
 #endif
 	  if (index >= cms->size) {
 	      index = cms->size - 1;
@@ -417,7 +416,7 @@
 			       (unsigned char *)NULL) == XV_OK) {
 		value = (Xv_opaque)v;
 	    } else {
-		value = NULL;
+		value = XV_NULL;
 	    }
 	}
 #else
@@ -427,7 +426,7 @@
 			   (unsigned char *)NULL) == XV_OK) {
 	    value = (Xv_opaque)avlist[0];
 	} else {
-	    value = NULL;
+	    value = XV_NULL;
 	}
 #endif
 	break;
@@ -444,7 +443,7 @@
 			       (unsigned char *)NULL) == XV_OK) {
 		value = (Xv_opaque)v;
 	    } else {
-		value = NULL;
+		value = XV_NULL;
 	    }
 	}
 #else
@@ -454,7 +453,7 @@
 			   (unsigned char *)NULL) == XV_OK) {
 	    value = (Xv_opaque)avlist[0];
 	} else {
-	    value = NULL;
+	    value = XV_NULL;
 	}
 #endif
 	break;
@@ -534,7 +533,7 @@
 	    break;
 	}
     }
-    return(NULL);
+    return (Xv_object)NULL;
 }
 
 Pkg_private int
diff -Naur xview-3.2p1.4.orig/lib/libxview/cursor/curs_cmpat.c xview-3.2p1.4/lib/libxview/cursor/curs_cmpat.c
--- xview-3.2p1.4.orig/lib/libxview/cursor/curs_cmpat.c	1993-06-29 07:14:52.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/cursor/curs_cmpat.c	2013-01-07 12:50:44.183011000 +0100
@@ -40,7 +40,7 @@
         va_end(valist);
     }
     else
-        avlist[0] = NULL;
+        avlist[0] = XV_NULL;
 
     return (xv_create_avlist(XV_NULL, CURSOR, avlist));
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/cursor/curs_pri.c xview-3.2p1.4/lib/libxview/cursor/curs_pri.c
--- xview-3.2p1.4.orig/lib/libxview/cursor/curs_pri.c	1993-06-29 07:14:51.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/cursor/curs_pri.c	2013-01-07 12:50:44.210754000 +0100
@@ -44,11 +44,11 @@
     Xv_Drawable_info info;
 
     if ((w <= 0) || (h <= 0) || (d <= 0)) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING,
 		   XV_MSG("cannot create cursor with null image"),
 		 ERROR_PKG, CURSOR,
-		 0);
+		 NULL);
 	return (unsigned long) None;
     }
     /*
@@ -56,11 +56,11 @@
      * does not handle negative xhot or yhot.
      */
     if ((xhot < 0) || (yhot < 0))
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 	         ERROR_STRING, 
 		 XV_MSG("cursor_make_x(): bad xhot/yhot parameters"),
 		 ERROR_PKG, CURSOR,
-		 0);
+		 NULL);
 
     if (xhot > w) {
 	w = xhot;
@@ -172,10 +172,10 @@
 	mask = src;
 	break;
       default:
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 	         ERROR_STRING, "cursor_make_x(): unknown rasterop specified",
 		 ERROR_PKG, CURSOR,
-		 0);
+		 NULL);
     }
     /*
      * WARNING: X server interprets "mask==None" as implying src is mask, but
@@ -211,13 +211,13 @@
     xview_cursor_font = (Xv_Font) xv_find(xv_server(root_info), FONT,
 					  FONT_FAMILY, FONT_FAMILY_OLCURSOR,
 					  FONT_TYPE, FONT_TYPE_CURSOR,
-					  0);
+					  NULL);
     if (!xview_cursor_font)
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING, 
 		 XV_MSG("Unable to find OPEN LOOK cursor font"),
 		 ERROR_PKG, CURSOR,
-		 0);
+		 NULL);
     x_cursor_font = (Font) xv_get(xview_cursor_font, XV_XID);
     if (mask_char == 0) {
 	mask_char = src_char;
diff -Naur xview-3.2p1.4.orig/lib/libxview/cursor/cursor.c xview-3.2p1.4/lib/libxview/cursor/cursor.c
--- xview-3.2p1.4.orig/lib/libxview/cursor/cursor.c	1993-06-29 07:14:52.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/cursor/cursor.c	2013-01-07 12:50:44.249710000 +0100
@@ -169,7 +169,7 @@
     cursor->drag_state = CURSOR_NEUTRAL;
     cursor->drag_type = CURSOR_MOVE;
 
-    (void) xv_set(object, XV_RESET_REF_COUNT, 0);	/* Mark as ref counted. */
+    (void) xv_set(object, XV_RESET_REF_COUNT, NULL);	/* Mark as ref counted. */
 
     return XV_OK;
 }
@@ -208,7 +208,7 @@
 {
     register Cursor_info     *cursor = CURSOR_PRIVATE(cursor_public);
 
-    switch (which_attr) {
+    switch ((int)which_attr) {
       case XV_XID:
 	return (Xv_opaque) cursor->cursor_id;
 
@@ -280,9 +280,9 @@
     Xv_singlecolor		*fg = NULL, *bg = NULL;	
     XColor			xfg, xbg;
 
-    for (; *avlist; avlist = attr_next(avlist)) {
+    for (; (int)*avlist; avlist = attr_next(avlist)) {
 	arg1 = avlist[1];
-	switch (*avlist) {
+	switch ((int)*avlist) {
 	  case XV_SHOW:
 	    /* BUG: is this used anywhere? */
 	    if (arg1)
diff -Naur xview-3.2p1.4.orig/lib/libxview/dnd/dnd.c xview-3.2p1.4/lib/libxview/dnd/dnd.c
--- xview-3.2p1.4.orig/lib/libxview/dnd/dnd.c	2013-01-07 12:36:27.256402000 +0100
+++ xview-3.2p1.4/lib/libxview/dnd/dnd.c	2013-01-07 12:50:44.317344000 +0100
@@ -22,7 +22,9 @@
 static int  SendDndEvent(),
 	    Verification(),
 	    ConstructSiteList(),
-	    FindDropSite();
+	    FindDropSite(),
+	    WaitForAck(),
+	    SendTrigger();
 
 /* DND_HACK begin */
 /* The code highlighted by the words DND_HACK is here to support dropping
@@ -32,6 +34,8 @@
  * not to support running V2 apps with the latest release.
  */
 static Window FindLeafWindow();
+static int IsV2App();
+static int SendOldDndEvent();
 /* DND_HACK end */
 
 static void UpdateGrabCursor();
@@ -51,6 +55,9 @@
 static int IsV2App(Display *dpy, Window window, Dnd_info *dnd, XButtonEvent *ev);
 
 
+Xv_object xview_x_input_readevent();
+Xv_object win_data();
+
 Xv_public int
 dnd_send_drop(dnd_public)
     Xv_object	 dnd_public;
@@ -201,11 +208,11 @@
         Xv_Server	 server = XV_SERVER_FROM_WINDOW(dnd->parent);
         Attr_attribute	 dndKey = xv_get(server, SERVER_DND_ACK_KEY);
 
-    	xv_set(server, XV_KEY_DATA, dndKey, False, 0);
+    	xv_set(server, XV_KEY_DATA, (Attr_attribute)dndKey, (Attr_attribute)False, NULL);
 
     	if ((value = SendDndEvent(dnd, Dnd_Trigger_Local, 0, buttonEvent))
 	     == DND_SUCCEEDED) {
-            if ((int)xv_get(server, XV_KEY_DATA, dndKey))
+            if ((int)xv_get(server, XV_KEY_DATA, (Attr_attribute)dndKey))
 	        value = DND_SUCCEEDED;
 	    else
 	        value = DND_TIMEOUT;
@@ -255,9 +262,9 @@
         else {
 	    i++;
 	    if (i == 1)
-	        xv_set(req, SEL_TYPE, XA_STRING, 0);
+	        xv_set(req, SEL_TYPE, XA_STRING, NULL);
 	    else if (i == 2)
-	        xv_set(req, SEL_TYPE_NAME, "TEXT", 0);
+	        xv_set(req, SEL_TYPE_NAME, "TEXT", NULL);
 	    else
 		return(DND_ERROR);
 	}
diff -Naur xview-3.2p1.4.orig/lib/libxview/dnd/dnd_decode.c xview-3.2p1.4/lib/libxview/dnd/dnd_decode.c
--- xview-3.2p1.4.orig/lib/libxview/dnd/dnd_decode.c	1993-06-29 07:15:57.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/dnd/dnd_decode.c	2013-01-07 12:50:44.352248000 +0100
@@ -57,7 +57,7 @@
 
 		/* Remind ourself to send _SUN_DRAGDROP_DONE in dnd_done() */
     if (DND_IS_TRANSIENT(event))
-	xv_set(sel_obj, XV_KEY_DATA, dnd_transient_key, True, NULL);
+	xv_set(sel_obj, XV_KEY_DATA, (Attr_attribute)dnd_transient_key, (Attr_attribute)True, NULL);
 
 		/* Set the rank of the selection to the rank being used in
 		 * the drag and drop transaction.
@@ -93,7 +93,7 @@
     if (dnd_is_local(ev)) {          /* flag set to True in local case */
         Attr_attribute       dndKey = xv_get(server, SERVER_DND_ACK_KEY);
 
-    	xv_set(server, XV_KEY_DATA, dndKey, True, NULL);
+    	xv_set(server, XV_KEY_DATA, (Attr_attribute)dndKey, (Attr_attribute)True, NULL);
         return (DND_SUCCEEDED);
     } else { /* Remote case */
 	return(MakeSelRequest(cM->display, cM->data.l[0], sel,
@@ -158,7 +158,7 @@
 dnd_done(sel)
     Selection_requestor	sel;
 {
-    if (xv_get(sel, XV_KEY_DATA, dnd_transient_key)) {
+    if (xv_get(sel, XV_KEY_DATA, (Attr_attribute)dnd_transient_key)) {
 	int  format;
 	long length;
 	void (*reply_proc)();
@@ -167,8 +167,8 @@
         if ((reply_proc = (void (*)())xv_get(sel, SEL_REPLY_PROC)))
 	    xv_set(sel, SEL_REPLY_PROC, (void (*)())NULL, NULL);
 
-	xv_set(sel, XV_KEY_DATA, dnd_transient_key, False, NULL);
-	xv_set(sel, SEL_TYPE_NAME, "_SUN_DRAGDROP_DONE", 0);
+	xv_set(sel, XV_KEY_DATA, (Attr_attribute)dnd_transient_key, (Attr_attribute)False, NULL);
+	xv_set(sel, SEL_TYPE_NAME, "_SUN_DRAGDROP_DONE", NULL);
 
 	(void)xv_get(sel, SEL_DATA, &length, &format);
 	
diff -Naur xview-3.2p1.4.orig/lib/libxview/dnd/dnd_dsdm.c xview-3.2p1.4/lib/libxview/dnd/dnd_dsdm.c
--- xview-3.2p1.4.orig/lib/libxview/dnd/dnd_dsdm.c	2013-01-07 12:36:27.354853000 +0100
+++ xview-3.2p1.4/lib/libxview/dnd/dnd_dsdm.c	2013-01-07 12:50:44.385294000 +0100
@@ -27,6 +27,12 @@
 
 Xv_private int DndSendPreviewEvent();
 
+#ifdef __STDC__
+static void ReplyProc(Selection_requestor sel, Atom target, Atom type, Xv_opaque buffer, unsigned long length, int format);
+#else
+static void ReplyProc();
+#endif
+
 
 static void ReplyProc();
 
@@ -75,7 +81,7 @@
 	/* Hang the private dnd info off the selection object so we can
 	 * access it in the ReplyProc.
 	 */
-    xv_set(dnd->sel, XV_KEY_DATA, DND_SITE_KEY, (char *)dnd, NULL);
+    xv_set(dnd->sel, XV_KEY_DATA, (Attr_attribute)DND_SITE_KEY, (char *)dnd, NULL);
 
     siteRects = (DndSiteRects *)xv_get(dnd->sel, SEL_DATA, &length,
 					    &format);
@@ -106,7 +112,7 @@
 
     Xv_opaque	 server = XV_SERVER_FROM_WINDOW((Xv_opaque)
 				 			xv_get(sel, XV_OWNER));
-    Dnd_info	*dnd = (Dnd_info *)xv_get(sel, XV_KEY_DATA, DND_SITE_KEY);
+    Dnd_info	*dnd = (Dnd_info *)xv_get(sel, XV_KEY_DATA, (Attr_attribute)DND_SITE_KEY);
     
     if (target == ATOM("_SUN_DRAGDROP_DSDM")) {
 	/* Only handle INCR responses in ReplyProc(). */
diff -Naur xview-3.2p1.4.orig/lib/libxview/dnd/dnd_pblc.c xview-3.2p1.4/lib/libxview/dnd/dnd_pblc.c
--- xview-3.2p1.4.orig/lib/libxview/dnd/dnd_pblc.c	2013-01-07 12:36:27.312628000 +0100
+++ xview-3.2p1.4/lib/libxview/dnd/dnd_pblc.c	2013-01-07 12:50:44.419079000 +0100
@@ -53,8 +53,8 @@
     register Dnd_info		*dnd = DND_PRIVATE(dnd_public);
     register Attr_avlist	 attrs;
 
-    for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-        switch (attrs[0]) {
+    for (attrs = avlist; (int)*attrs; attrs = attr_next(attrs)) {
+        switch ((int)attrs[0]) {
             case DND_TYPE:
                dnd->type = (DndDragType) attrs[1];
                break;
diff -Naur xview-3.2p1.4.orig/lib/libxview/dnd/site_pblc.c xview-3.2p1.4/lib/libxview/dnd/site_pblc.c
--- xview-3.2p1.4.orig/lib/libxview/dnd/site_pblc.c	2013-01-07 12:36:27.554361000 +0100
+++ xview-3.2p1.4/lib/libxview/dnd/site_pblc.c	2013-01-07 12:50:44.451127000 +0100
@@ -64,8 +64,8 @@
     register Dnd_site_info	*site = DND_SITE_PRIVATE(site_public);
     register Attr_avlist	 attrs;
 
-    for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-        switch (attrs[0]) {
+    for (attrs = avlist; (int)*attrs; attrs = attr_next(attrs)) {
+        switch ((int)attrs[0]) {
 #ifdef WINDOW_SITES
 	  case DROP_SITE_TYPE:
 	      if (DND_WINDOW_SITE == (int)attrs[1])
@@ -168,7 +168,7 @@
     Dnd_site_info	*site = DND_SITE_PRIVATE(site_public);
     Xv_opaque		 value;
 
-    switch (attr) {
+    switch ((int)attr) {
 #ifdef WINDOW_SITES
 	case DROP_SITE_TYPE:
 	   if (status(site, is_window_region))
@@ -207,7 +207,7 @@
         default:
            if (xv_check_bad_attr(&xv_drop_site_item, attr) == XV_ERROR)
 		*error = XV_ERROR;
-	   value = NULL;
+	   value = XV_NULL;
 	   break;
     }
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/file_chooser/file_chsr.c xview-3.2p1.4/lib/libxview/file_chooser/file_chsr.c
--- xview-3.2p1.4.orig/lib/libxview/file_chooser/file_chsr.c	2013-01-07 12:36:48.011821000 +0100
+++ xview-3.2p1.4/lib/libxview/file_chooser/file_chsr.c	2013-01-07 12:50:44.482952000 +0100
@@ -186,7 +186,7 @@
 				   );
 	    else {
 		xv_set( private->ui.document_txt,
-		       PANEL_VALUE, attrs[1], 
+		       PANEL_VALUE, (char *)attrs[1], 
 		       NULL);
 		if ( !private->save_to_dir )
 		    fc_item_inactive( private->ui.save_btn, no_string((char *)attrs[1]) );
@@ -228,7 +228,7 @@
 			= _xv_wcstombsdup( (wchar_t *) attrs[1] );
 		} else {
 		    xv_set(private->ui.list,
-			   FILE_LIST_DIRECTORY_WCS,	attrs[1],
+			   FILE_LIST_DIRECTORY_WCS, (wchar_t *)attrs[1],
 			   NULL);
 		}
 	    } else {		/* Multibyte */
@@ -240,7 +240,7 @@
 				   );
 	    } else {
 		xv_set(private->ui.list,
-		       FILE_LIST_DIRECTORY,	attrs[1],
+		       FILE_LIST_DIRECTORY, (char *)attrs[1],
 		       NULL);
 	    }
 
@@ -291,7 +291,7 @@
 		private->state->auto_update = (unsigned) attrs[1];
 	    else
 		xv_set(private->ui.list, 
-		       FILE_LIST_AUTO_UPDATE,  attrs[1],
+		       FILE_LIST_AUTO_UPDATE, (unsigned)attrs[1],
 		       NULL);
 	    break;
 
@@ -303,7 +303,7 @@
 		private->state->hidden_files = (unsigned) ((attrs[1]) ? TRUE : FALSE);
 	    else
 		xv_set(private->ui.list, 
-		       FILE_LIST_SHOW_DOT_FILES, attrs[1],
+		       FILE_LIST_SHOW_DOT_FILES, (unsigned)attrs[1],
 		       NULL);
 	    break;
 
@@ -315,7 +315,7 @@
 		private->state->abbrev_view = (unsigned) ((attrs[1]) ? TRUE : FALSE);
 	    else
 		xv_set(private->ui.list,
-		       FILE_LIST_ABBREV_VIEW, attrs[1],
+		       FILE_LIST_ABBREV_VIEW, (unsigned)attrs[1],
 		       NULL);
 	    break;
 
@@ -375,7 +375,7 @@
 				   );
 	    } else {
 		xv_set(private->ui.list,
-		       FILE_LIST_FILTER_STRING,	attrs[1],
+		       FILE_LIST_FILTER_STRING,	(char *)attrs[1],
 		       NULL);
 	    }
 	    break;
@@ -391,7 +391,7 @@
 		    = _xv_wcstombsdup( (wchar_t *) attrs[1] );
 	    } else {
 		xv_set(private->ui.list,
-		       FILE_LIST_FILTER_STRING_WCS,	attrs[1],
+		       FILE_LIST_FILTER_STRING_WCS, (wchar_t *)attrs[1],
 		       NULL);
 	    }
 	    break;
@@ -405,7 +405,7 @@
 		private->state->match_glyph = (Server_image) attrs[1];
 	    else
 		xv_set( private->ui.list,
-		       FILE_LIST_MATCH_GLYPH,	attrs[1],
+		       FILE_LIST_MATCH_GLYPH, (Server_image)attrs[1],
 		       NULL);
 	    break;
 
@@ -417,7 +417,7 @@
 		private->state->match_glyph_mask = (Server_image) attrs[1];
 	    else
 		xv_set( private->ui.list,
-		       FILE_LIST_MATCH_GLYPH_MASK, attrs[1],
+		       FILE_LIST_MATCH_GLYPH_MASK, (Server_image)attrs[1],
 		       NULL);
 	    break;
 
@@ -485,7 +485,7 @@
 	    
 	    if ( private->save_to_dir == TRUE ) {
 		xv_set( private->ui.document_txt,
-		       PANEL_VALUE,	"",
+		       PANEL_VALUE, (char *)"",
 		       PANEL_INACTIVE,	TRUE,
 		       NULL);
 		fc_item_inactive( private->ui.save_btn, FALSE );
@@ -513,18 +513,18 @@
 
 	    /* Remove the extra space used by extension area */
 	    if ( ((int) attrs[1] == 0) && (private->exten_height != 0) ) {
-		xv_get(public, FRAME_MIN_SIZE, &width, &height);
+		(void)xv_get(public, FRAME_MIN_SIZE, &width, &height);
 		xv_set(public, FRAME_MIN_SIZE, width, height - white_space, NULL);
 
-		height = xv_get(public, XV_HEIGHT);
+		height = (int)xv_get(public, XV_HEIGHT);
 		xv_set(public, XV_HEIGHT, height - white_space, NULL);
 	    } 
 	    	/* Add space needed for extension area */
 	    else  if ( ((int) attrs[1] > 0) && (private->exten_height == 0) ) {
-		xv_get(public, FRAME_MIN_SIZE, &width, &height);
+		(void)xv_get(public, FRAME_MIN_SIZE, &width, &height);
 		xv_set(public, FRAME_MIN_SIZE, width, height + white_space, NULL);
 
-		height = xv_get(public, XV_HEIGHT);
+		height = (int)xv_get(public, XV_HEIGHT);
 		xv_set(public, XV_HEIGHT, height + white_space, NULL);
 	    }
 
@@ -797,7 +797,7 @@
 	if ( private->type == FILE_CHOOSER_OPEN )
 	    return XV_NULL;
 	else
-	    return xv_get(private->ui.document_txt, PANEL_VALUE);
+	    return (Xv_opaque)xv_get(private->ui.document_txt, PANEL_VALUE);
 
 #ifdef OW_I18N
     case FILE_CHOOSER_DOC_NAME_WCS:
@@ -912,7 +912,7 @@
      * Create UI at End-Create time so that Cmd Panel
      * is properly initialized.
      */
-    private->ui.panel = xv_get(FC_PUBLIC(private), FRAME_CMD_PANEL);
+    private->ui.panel = (Panel)xv_get(FC_PUBLIC(private), FRAME_CMD_PANEL);
     fc_create_ui( private );
     
     
@@ -1057,7 +1057,7 @@
      Path_name path_name;
      Event *event;
 {
-    Fc_private *private = (Fc_private *)xv_get(path_name, XV_KEY_DATA, FC_KEY);
+    Fc_private *private = (Fc_private *)xv_get(path_name, XV_KEY_DATA, (Attr_attribute)FC_KEY);
     Pkg_private Panel_setting xv_path_name_notify_proc();
 
     if (event_action(event) == ACTION_DEFAULT_ACTION
@@ -1071,7 +1071,7 @@
 	 * signify if the new path name was successfully validated
 	 * or not by the notify proc.
 	 */
-	if ( (int) xv_get(path_name, PANEL_NOTIFY_STATUS) == XV_ERROR )
+	if ( ((int) xv_get(path_name, PANEL_NOTIFY_STATUS)) == XV_ERROR )
 	    private->default_action_failed = TRUE;
     }
 
@@ -1189,10 +1189,10 @@
 	= xv_create(server, HISTORY_MENU, 
 		    HISTORY_MENU_HISTORY_LIST,	private->hist_list,
 		    HISTORY_NOTIFY_PROC,	fc_hist_notify,
-		    XV_KEY_DATA,		FC_KEY, private,
+		    XV_KEY_DATA,		(Attr_attribute)FC_KEY, private,
 		    NULL);
 
-    menu = xv_get(private->ui.hist_menu, HISTORY_MENU_OBJECT);
+    menu = (Menu)xv_get(private->ui.hist_menu, HISTORY_MENU_OBJECT);
     xv_set(menu, XV_HELP_DATA, "xview:file_chooser_goto_menu", NULL);
 
     private->ui.goto_msg
@@ -1208,7 +1208,7 @@
 		    PANEL_ITEM_MENU,		menu,
 		    PANEL_VALUE_STORED_LENGTH, 	MAXPATHLEN+1,
 		    PANEL_EVENT_PROC,		fc_goto_btn_event,
-		    XV_KEY_DATA,		FC_KEY, private,
+		    XV_KEY_DATA,		(Attr_attribute)FC_KEY, private,
 		    NULL);
 
     private->ui.goto_txt 
@@ -1216,7 +1216,7 @@
 		    XV_HELP_DATA, 	"xview:file_chooser_goto_path",
 		    PATH_USE_FRAME,	TRUE,
 		    PANEL_NOTIFY_PROC,	fc_goto_notify,
-		    XV_KEY_DATA,	FC_KEY, private,
+		    XV_KEY_DATA,	(Attr_attribute)FC_KEY, private,
 		    NULL);
     /*
      * Since the client can't supply a goto field, it is safe to
@@ -1270,7 +1270,7 @@
 		    FILE_LIST_CHANGE_DIR_FUNC,	fc_cd_func,
 		    PANEL_NOTIFY_PROC,		fc_list_notify,
 		    FILE_LIST_FILTER_FUNC,	fc_filter_func,
-		    XV_KEY_DATA,		FC_KEY, private,
+		    XV_KEY_DATA,		(Attr_attribute)FC_KEY, private,
 		    NULL);
 
     if ( private->type != FILE_CHOOSER_OPEN ) {
@@ -1283,7 +1283,7 @@
 					: XV_MSG("Save As:"),
 			PANEL_VALUE_STORED_LENGTH, MAXPATHLEN+1,
 			PANEL_VALUE,		private->state->doc_name,
-			XV_KEY_DATA,		FC_KEY, private,
+			XV_KEY_DATA,		(Attr_attribute)FC_KEY, private,
 			NULL);
 
 	private->document_default_event 
@@ -1301,7 +1301,7 @@
 		    		? XV_MSG("Open")
 		    		: XV_MSG("Open Folder"),
 		    PANEL_NOTIFY_PROC,	fc_open_notify,
-		    XV_KEY_DATA,	FC_KEY, private,
+		    XV_KEY_DATA,	(Attr_attribute)FC_KEY, private,
 		    NULL);
 
     private->ui.cancel_btn 
@@ -1309,7 +1309,7 @@
 		    XV_HELP_DATA, 	"xview:file_chooser_cancel_button",
 		    PANEL_LABEL_STRING,	XV_MSG("Cancel"),
 		    PANEL_NOTIFY_PROC,	fc_cancel_notify,
-		    XV_KEY_DATA,	FC_KEY, private,
+		    XV_KEY_DATA,	(Attr_attribute)FC_KEY, private,
 		    NULL);
 
     if ( private->type != FILE_CHOOSER_OPEN )
@@ -1319,7 +1319,7 @@
 			PANEL_LABEL_STRING,	XV_MSG("Save"),
 			PANEL_NOTIFY_PROC,	fc_save_notify,
 			PANEL_INACTIVE,		no_string( private->state->doc_name ),
-			XV_KEY_DATA,		FC_KEY, private,
+			XV_KEY_DATA,		(Attr_attribute)FC_KEY, private,
 			NULL);
 
     /*
@@ -1331,7 +1331,7 @@
 			XV_HELP_DATA, 		"xview:file_chooser",
 			PANEL_LABEL_STRING,	private->state->custom_name,
 			PANEL_NOTIFY_PROC,	fc_open_notify,
-			XV_KEY_DATA,		FC_KEY, private,
+			XV_KEY_DATA,		(Attr_attribute)FC_KEY, private,
 			NULL);
 
 
@@ -1374,11 +1374,11 @@
      Panel_button_item item;
      Event *event;
 {
-    Fc_private *private = (Fc_private *)xv_get(item, XV_KEY_DATA, FC_KEY);
+    Fc_private *private = (Fc_private *)xv_get(item, XV_KEY_DATA, (Attr_attribute)FC_KEY);
     int row = (int) xv_get(private->ui.list, PANEL_LIST_FIRST_SELECTED);
     char *dir = (char *) xv_get(private->ui.list, FILE_LIST_DIRECTORY);
-    char *file = (char *) xv_get(private->ui.list, PANEL_LIST_STRING, row);
-    Xv_opaque client_data = xv_get(private->ui.list, PANEL_LIST_CLIENT_DATA, row);
+    char *file = (char *) xv_get(private->ui.list, PANEL_LIST_STRING, (Attr_attribute)row);
+    Xv_opaque client_data = xv_get(private->ui.list, PANEL_LIST_CLIENT_DATA, (Attr_attribute)row);
 
 
     /* FILE_LIST_DIRECTORY can be NULL */
@@ -1416,7 +1416,7 @@
      Panel_button_item item;
      Event *event;
 {
-    Fc_private *private = (Fc_private *)xv_get(item, XV_KEY_DATA, FC_KEY);
+    Fc_private *private = (Fc_private *)xv_get(item, XV_KEY_DATA, (Attr_attribute)FC_KEY);
     char *dir = (char *) xv_get(private->ui.list, FILE_LIST_DIRECTORY);
     char *file = (char *) xv_get(private->ui.document_txt, PANEL_VALUE);
     char *path = (char *)NULL;
@@ -1445,7 +1445,7 @@
      Panel_button_item item;
      Event *event;
 {
-    Fc_private *private = (Fc_private *)xv_get(item, XV_KEY_DATA, FC_KEY);
+    Fc_private *private = (Fc_private *)xv_get(item, XV_KEY_DATA, (Attr_attribute)FC_KEY);
 
     /*
      * All Cancel really does is dismiss the popup.  Note:  Panel_button_item
@@ -1468,7 +1468,7 @@
      struct stat *sbuf;
      File_list_op op;
 {
-    Fc_private *private = (Fc_private *)xv_get(list, XV_KEY_DATA, FC_KEY);
+    Fc_private *private = (Fc_private *)xv_get(list, XV_KEY_DATA, (Attr_attribute)FC_KEY);
 
 
 
@@ -1528,7 +1528,7 @@
      Panel_button_item	item;
      Event *		event;
 {
-    Fc_private *private = (Fc_private *)xv_get(item, XV_KEY_DATA, FC_KEY);
+    Fc_private *private = (Fc_private *)xv_get(item, XV_KEY_DATA, (Attr_attribute)FC_KEY);
 
     /*
      * Set a flag that denotes that the History Menu callback
@@ -1554,7 +1554,7 @@
      char *label;
      char *value;
 {
-    Fc_private *private = (Fc_private *)xv_get(hm, XV_KEY_DATA, FC_KEY);
+    Fc_private *private = (Fc_private *)xv_get(hm, XV_KEY_DATA, (Attr_attribute)FC_KEY);
     char *path = (char *) xv_get(private->ui.goto_txt, PANEL_VALUE);
 
 
@@ -1612,7 +1612,7 @@
      Event *event;
      struct stat *sbuf;
 {
-    Fc_private *private = (Fc_private *)xv_get(item, XV_KEY_DATA, FC_KEY);
+    Fc_private *private = (Fc_private *)xv_get(item, XV_KEY_DATA, (Attr_attribute)FC_KEY);
     char *path = (char *) xv_get(item, PATH_LAST_VALIDATED);
     char *dir;
     char *file;
@@ -1674,7 +1674,7 @@
      */
     row = xv_get(private->ui.list, PANEL_LIST_NROWS) - 1;
     while ( row >= 0 ) {
-	char *str = (char *) xv_get(private->ui.list, PANEL_LIST_STRING, row);
+	char *str = (char *) xv_get(private->ui.list, PANEL_LIST_STRING, (Attr_attribute)row);
 	if ( strequal(file, str) )
 	    break;
 	row--;
@@ -1717,7 +1717,7 @@
      Event *event;
      int row;
 {
-    Fc_private *private = (Fc_private *)xv_get(item, XV_KEY_DATA, FC_KEY);
+    Fc_private *private = (Fc_private *)xv_get(item, XV_KEY_DATA, (Attr_attribute)FC_KEY);
     int status;
 
     switch( op ) {
@@ -1839,7 +1839,7 @@
      Panel_text_item	item;
      Event *		event;
 {
-    Fc_private *private = (Fc_private *)xv_get(item, XV_KEY_DATA, FC_KEY);
+    Fc_private *private = (Fc_private *)xv_get(item, XV_KEY_DATA, (Attr_attribute)FC_KEY);
     char *value;
 
     if ( private->document_default_event )
@@ -2256,7 +2256,7 @@
      char *path;
      File_list_row *row;
 {
-    Fc_private *private = (Fc_private *)xv_get(row->file_list, XV_KEY_DATA, FC_KEY);
+    Fc_private *private = (Fc_private *)xv_get(row->file_list, XV_KEY_DATA, (Attr_attribute)FC_KEY);
     Xv_opaque client_data = XV_NULL;
     Server_image glyph = XV_NULL;
     Server_image mask_glyph = XV_NULL;
@@ -2385,7 +2385,7 @@
      File_list_row *row2;
 {
     Fc_private *private 
-	= (Fc_private *) xv_get(row1->file_list, XV_KEY_DATA, FC_KEY);
+	= (Fc_private *) xv_get(row1->file_list, XV_KEY_DATA, (Attr_attribute)FC_KEY);
     int status;
     File_chooser_row fc_row1;
     File_chooser_row fc_row2;
diff -Naur xview-3.2p1.4.orig/lib/libxview/file_chooser/file_list.c xview-3.2p1.4/lib/libxview/file_chooser/file_list.c
--- xview-3.2p1.4.orig/lib/libxview/file_chooser/file_list.c	2013-01-07 12:36:27.829544000 +0100
+++ xview-3.2p1.4/lib/libxview/file_chooser/file_list.c	2013-01-07 12:50:44.539930000 +0100
@@ -44,8 +44,10 @@
 
 #if defined(__STDC__) || defined(__cplusplus) || defined(c_plusplus)
 static void	flist_error(File_list_private *private, char *format, ...);
+static int	flist_match_regex(char *s, File_list_private *private);
 #else
 static void	flist_error();
+static int	flist_match_regex();
 #endif
 
 static int flist_match_regex( char *s, File_list_private *private );
diff -Naur xview-3.2p1.4.orig/lib/libxview/file_chooser/hist_list.c xview-3.2p1.4/lib/libxview/file_chooser/hist_list.c
--- xview-3.2p1.4.orig/lib/libxview/file_chooser/hist_list.c	1993-06-29 07:17:57.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/file_chooser/hist_list.c	2013-01-07 12:50:44.588125000 +0100
@@ -300,7 +300,7 @@
 	else if ( attr == HISTORY_VALUE )
 	    return (Xv_opaque) ((entry->value) ? entry->value : "");
 	else
-	    return xv_get(entry->mi, MENU_INACTIVE);
+	    return (int)xv_get(entry->mi, MENU_INACTIVE);
 	break;
     }
 
@@ -428,7 +428,6 @@
 {
     History_list_private *private = HIST_LIST_PRIVATE(public);
     struct hist_entry *	node;
-    struct hist_entry *	old_node;
     struct history_list *list_node;
 
 
@@ -656,7 +655,6 @@
      History_list_private *private;
      Menu menu;
 {
-    int ii;
     struct hist_entry *node;
 
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/file_chooser/hist_menu.c xview-3.2p1.4/lib/libxview/file_chooser/hist_menu.c
--- xview-3.2p1.4.orig/lib/libxview/file_chooser/hist_menu.c	1993-06-29 07:17:57.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/file_chooser/hist_menu.c	2013-01-07 12:50:44.615268000 +0100
@@ -52,7 +52,7 @@
 		    MENU_GEN_PROC,	hist_menu_gen_proc,
 		    MENU_DONE_PROC,	hist_menu_done_proc,
 		    MENU_DEFAULT,	1,
-		    XV_KEY_DATA,	HIST_PRIVATE_KEY, private,
+		    XV_KEY_DATA,	(Attr_attribute)HIST_PRIVATE_KEY, private,
 		    NULL );
 
     return XV_OK;
@@ -207,7 +207,7 @@
 {
     char *label = (char *)xv_get(mi, MENU_STRING);
     History_menu_private *private 
-	= (History_menu_private *)xv_get(menu, XV_KEY_DATA, HIST_PRIVATE_KEY);
+	= (History_menu_private *)xv_get(menu, XV_KEY_DATA, (Attr_attribute)HIST_PRIVATE_KEY);
     char *value = (char *)xv_get(private->list, HISTORY_VALUE_FROM_MENUITEM, mi);
 
 #ifdef OW_I18N
@@ -265,7 +265,7 @@
      Menu_generate op;
 {
     History_menu_private *private 
-	= (History_menu_private *) xv_get(menu, XV_KEY_DATA, HIST_PRIVATE_KEY);
+	= (History_menu_private *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)HIST_PRIVATE_KEY);
     int ii;
 
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/file_chooser/path.c xview-3.2p1.4/lib/libxview/file_chooser/path.c
--- xview-3.2p1.4.orig/lib/libxview/file_chooser/path.c	1994-06-26 03:05:19.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/file_chooser/path.c	2013-01-07 12:50:44.645163000 +0100
@@ -40,7 +40,7 @@
     public->private_data = (Xv_opaque) private;
     private->public_self = (Xv_opaque) public;
 
-    private->frame = xv_get(owner, WIN_FRAME);
+    private->frame = (Frame)xv_get(owner, WIN_FRAME);
     private->notify_status = XV_OK;
 
     if ( !path_avlist )
diff -Naur xview-3.2p1.4.orig/lib/libxview/filter/filter.c xview-3.2p1.4/lib/libxview/filter/filter.c
--- xview-3.2p1.4.orig/lib/libxview/filter/filter.c	2013-01-07 12:36:20.972680000 +0100
+++ xview-3.2p1.4/lib/libxview/filter/filter.c	2013-01-07 13:22:44.865572000 +0100
@@ -41,7 +41,7 @@
 
 static enum CharClass breakProc(char c);
 static struct CharAction digits(char c);
-static any_shell_meta(char  *s);
+static int any_shell_meta(char  *s);
 
 
 struct filter_rec **
@@ -67,10 +67,10 @@
 
 	    (void) sprintf(dummy,
 			   XV_MSG("while parsing filter file %s"), filename);
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		     ERROR_LAYER, ERROR_SYSTEM,
 		     ERROR_STRING, dummy,
-		     0);
+		     NULL);
 	    return ((struct filter_rec **)NULL);
 	}
 	rec->key_name = STRDUP(scratch);
@@ -103,9 +103,9 @@
 	    (void) sprintf(dummy,
 			   XV_MSG("filter file %s: missing command-line"), 
 			   filename);
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		     ERROR_STRING, dummy,
-		     0);
+		     NULL);
 
 	    pos = stream_get_pos(in);
 	    goto errorNoSkip;
@@ -155,9 +155,9 @@
 	    (void) sprintf(dummy,
 			   XV_MSG("problem parsing filter file %s"), 
 			   filename);
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		     ERROR_STRING, dummy,
-		     0);
+		     NULL);
 	}
 errorNoSkip:
 	{
@@ -172,9 +172,9 @@
 			       XV_MSG("problem near character position %d"),
 			       pos.charpos);
 	    i--;
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		     ERROR_STRING, dummy,
-		     0);
+		     NULL);
 	}
     }
     val = (struct filter_rec **) xv_calloc((unsigned) i + 1,
@@ -185,10 +185,10 @@
 	(void) sprintf(dummy, 
 		XV_MSG("while parsing filter file %s"), 
 		filename);
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_LAYER, ERROR_SYSTEM,
 		 ERROR_STRING, dummy,
-		 0);
+		 NULL);
 	return ((struct filter_rec **)NULL);
     }
     for (j = 0; j < i; j++)
@@ -245,7 +245,7 @@
 /*
  * Are there any shell meta-characters in string s?
  */
-static
+static int
 any_shell_meta(s)
     register char  *s;
 {
diff -Naur xview-3.2p1.4.orig/lib/libxview/font/font.c xview-3.2p1.4/lib/libxview/font/font.c
--- xview-3.2p1.4.orig/lib/libxview/font/font.c	2013-01-07 12:36:29.571585000 +0100
+++ xview-3.2p1.4/lib/libxview/font/font.c	2013-01-07 15:57:11.381565000 +0100
@@ -32,10 +32,11 @@
  * Public
  */
 
-extern Pixfont *xv_pf_sys;
-extern char    *defaults_get_string();
+extern Pixfont	*xv_pf_sys;
+extern char	*defaults_get_string();
 extern Xv_opaque xv_default_server;
 extern Display *xv_default_display;
+extern int	xv_mem_destroy();
 
 #ifdef OW_I18N 
 extern char     *getenv();
@@ -62,11 +63,14 @@
 Xv_private Xv_Font xv_find_olglyph_font();
 Pkg_private XID xv_load_x_font();
 Pkg_private void xv_unload_x_font();
+Pkg_private int font_free_font_return_attr_strings();
 Xv_private char *xv_font_regular();
 Xv_private char *xv_font_regular_cmdline();
 Xv_private char *xv_font_scale_cmdline();
 Xv_private char *xv_font_scale();
 
+
+
 /*
  * delimiters
  */
@@ -132,25 +136,6 @@
 static Font_locale_info         *fs_locales = NULL;
 #endif
 
-Xv_private Xv_Font xv_font_with_name();
-static void     font_default_font();
-static char    *font_default_font_from_scale();
-static char    *font_determine_font_name();
-static char    *font_rescale_from_font();
-static int      font_read_attrs();
-static int      font_string_compare();
-static int      font_string_compare_nchars();
-static char	*font_strip_name();
-static int	font_delim_count();
-static XID font_try_misc_name();
-static Font_locale_info *find_font_locale_info();
-static int	font_setup_known_families();
-static int	font_setup_known_styles();
-static void	font_init_known_families();
-static void	font_init_known_styles();
-static void	font_init_sizes();
-static void	font_reduce_wildcards();
-
 typedef struct family_foundry {
     char           *family;
     char           *foundry;
@@ -355,9 +340,30 @@
     NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
 };
 
-static int font_setup_defaults(Font_locale_info	*linfo);
+static void font_setup_defaults(Font_locale_info	*linfo);
 static int font_construct_name(Font_return_attrs font_attrs);
-static int font_init_create_attrs(Font_return_attrs font_attrs);
+static void font_init_create_attrs(Font_return_attrs font_attrs);
+
+
+Xv_private Xv_Font xv_font_with_name();
+static char    *normalize_font_name();
+static void     font_default_font();
+static char    *font_default_font_from_scale();
+static char    *font_determine_font_name();
+static char    *font_rescale_from_font();
+static int      font_read_attrs();
+static int      font_string_compare();
+static int      font_string_compare_nchars();
+static char	*font_strip_name();
+static int	font_delim_count();
+static XID font_try_misc_name();
+static Font_locale_info *find_font_locale_info();
+static void	font_setup_known_families();
+static void	font_setup_known_styles();
+static void	font_init_known_families();
+static void	font_init_known_styles();
+static void	font_init_sizes();
+static void	font_reduce_wildcards();
 
 /*
  * Normalize font name.
@@ -940,10 +946,10 @@
 	    (void) sprintf(dummy, XV_MSG("Cannot load font set '%s'"),
 		    message_name);
 
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 	        ERROR_STRING, dummy,
 	        ERROR_PKG, FONT,
-	        0);
+	        NULL);
 
  	    font_free_font_return_attr_strings(&my_attrs);
 	    return XV_ERROR;
@@ -965,10 +971,10 @@
 	    (void) sprintf(dummy, XV_MSG("Cannot load font '%s'"),
 		       (my_attrs.orig_name) ? my_attrs.orig_name 
 					: my_attrs.name);
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		 ERROR_STRING, dummy,
 		 ERROR_PKG, FONT,
-		 0);
+		 NULL);
 
             font_free_font_return_attr_strings(&my_attrs);
 
@@ -1012,7 +1018,7 @@
 	                      + ((XFontStruct *)x_font_info)->descent;
 	font->column_width = font->def_char_width;
     }
-    (void) xv_set((Xv_opaque)font_public, XV_RESET_REF_COUNT, 0);
+    (void) xv_set((Xv_opaque)font_public, XV_RESET_REF_COUNT, NULL);
     font->type = my_attrs.type;
  
     font->small_size = (int) my_attrs.small_size;
@@ -1160,15 +1166,15 @@
     /*
      * Add new font to server's list
      */
-    if (font_head = (Font_info *) xv_get(server, XV_KEY_DATA, FONT_HEAD)) {
+    if (font_head = (Font_info *) xv_get(server, XV_KEY_DATA, (Attr_attribute)FONT_HEAD)) {
 	font->next = font_head->next;
 	font_head->next = font;
     } else {
 	font->next = (Font_info *) 0;
 	(void) xv_set(server,
-		      XV_KEY_DATA, FONT_HEAD, font,
-		      XV_KEY_DATA_REMOVE_PROC, FONT_HEAD, font_list_free,
-		      0);
+		      XV_KEY_DATA, (Attr_attribute)FONT_HEAD, font,
+		      XV_KEY_DATA_REMOVE_PROC, (Attr_attribute)FONT_HEAD, font_list_free,
+		      NULL);
     }
 
     /*
@@ -1179,7 +1185,7 @@
 	if (!my_attrs.name || ((font_string_compare(my_attrs.name,
 			normalize_font_name((char *)NULL, linfo)) == 0))) {
 	    xv_pf_sys = (Pixfont *)font_public;
-	    (void) xv_set((Xv_opaque)font_public, XV_INCREMENT_REF_COUNT, 0);
+	    (void) xv_set((Xv_opaque)font_public, XV_INCREMENT_REF_COUNT, NULL);
 	}
     }
     return XV_OK;
@@ -1321,10 +1327,10 @@
 	    (void) sprintf(dummy, XV_MSG("Cannot load font '%s'"),
 		       (my_attrs.orig_name) ? my_attrs.orig_name 
 					: my_attrs.name);
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		 ERROR_STRING, dummy,
 		 ERROR_PKG, FONT,
-		 0);
+		 NULL);
 
             font_free_font_return_attr_strings(&my_attrs);
 
@@ -1359,7 +1365,7 @@
     font->def_char_height = ((XFontStruct *)x_font_info)->ascent 
 	+ ((XFontStruct *)x_font_info)->descent;
     font->x_font_info = (Xv_opaque)x_font_info;
-    (void) xv_set((Xv_opaque)font_public, XV_RESET_REF_COUNT, 0);
+    (void) xv_set((Xv_opaque)font_public, XV_RESET_REF_COUNT, NULL);
     font->type = FONT_TYPE_TEXT;
 
 #ifdef CHECK_OVERLAPPING_CHARS
@@ -1434,15 +1440,15 @@
     /*
      * Add new font to server's list
      */
-    if (font_head = (Font_info *) xv_get(server, XV_KEY_DATA, FONT_HEAD)) {
+    if ((font_head = (Font_info *) xv_get(server, XV_KEY_DATA, (Attr_attribute)FONT_HEAD)) != NULL) {
 	font->next = font_head->next;
 	font_head->next = font;
     } else {
 	font->next = (Font_info *) 0;
 	(void) xv_set(server,
-		      XV_KEY_DATA, FONT_HEAD, font,
-		      XV_KEY_DATA_REMOVE_PROC, FONT_HEAD, font_list_free,
-		      0);
+		      XV_KEY_DATA, (Attr_attribute)FONT_HEAD, font,
+		      XV_KEY_DATA_REMOVE_PROC, (Attr_attribute)FONT_HEAD, font_list_free,
+		      NULL);
     }
 
     /*
@@ -1457,7 +1463,7 @@
 	 * == 0)
 	     */ ) {
 	    xv_pf_sys = (Pixfont *)font_public;
-	    (void) xv_set((Xv_opaque)font_public, XV_INCREMENT_REF_COUNT, 0);
+	    (void) xv_set((Xv_opaque)font_public, XV_INCREMENT_REF_COUNT, NULL);
 	}
     }
     return XV_OK;
@@ -1528,17 +1534,17 @@
     if (status == DESTROY_CLEANUP) {
 	/* PERFORMANCE ALERT: revive list package to consolidate code. */
 	/* Remove the font from SunView's server list. */
-	font_head = (Font_info *) xv_get(server, XV_KEY_DATA, FONT_HEAD);
+	font_head = (Font_info *) xv_get(server, XV_KEY_DATA, (Attr_attribute)FONT_HEAD);
 	if (!font_head) {
 	    server = (Xv_opaque) xv_default_server;
 	    if (server)  {
-	        font_head = (Font_info *) xv_get(server, XV_KEY_DATA, FONT_HEAD);
+	        font_head = (Font_info *) xv_get(server, XV_KEY_DATA, (Attr_attribute)FONT_HEAD);
 	    }
 	}
 	if (font_head)  {
 	    if (((Xv_Font) FONT_PUBLIC(font_head)) == (Xv_Font) font_public) {
 	        /* at head of list */
-	        (void) xv_set(server, XV_KEY_DATA, FONT_HEAD, font->next, 0);
+	        (void) xv_set(server, XV_KEY_DATA, (Attr_attribute)FONT_HEAD, font->next, NULL);
 	    } else {
 	        for (prev = font_head; prev; prev = prev->next) {
 		    if (prev->next == font) {
@@ -2310,10 +2316,10 @@
 	char	dummy[128];
 
 	sprintf(dummy, "Bad scale value:%d", (int)scale);
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 	        ERROR_STRING, dummy,
 	        ERROR_PKG, FONT,
-	        0);
+	        NULL);
 	return (char *) font_name;	/* no scaling */
     }
 
@@ -2629,7 +2635,7 @@
     if (!font_attrs_exist)
 	(void) font_default_font(&my_attrs);
 
-    font_list = (Font_info *) xv_get(server, XV_KEY_DATA, FONT_HEAD);
+    font_list = (Font_info *) xv_get(server, XV_KEY_DATA, (Attr_attribute)FONT_HEAD);
     if (!font_list) {
         font_free_font_return_attr_strings(&my_attrs);
   	return ((Xv_object) NULL);
@@ -2736,7 +2742,7 @@
     font_free_font_return_attr_strings(&my_attrs);
 
     if (finfo) {
-        (void) xv_set(FONT_PUBLIC(finfo), XV_INCREMENT_REF_COUNT, 0);
+        (void) xv_set(FONT_PUBLIC(finfo), XV_INCREMENT_REF_COUNT, NULL);
   	return (FONT_PUBLIC(finfo));
     } else
         return ((Xv_object) NULL);
@@ -2787,7 +2793,7 @@
 	return(error_code);
     }
 
-    if (font_list = (Font_info *) xv_get(server, XV_KEY_DATA, FONT_HEAD)) {
+    if ((font_list = (Font_info *) xv_get(server, XV_KEY_DATA, (Attr_attribute)FONT_HEAD)) != NULL) {
 	while (font_list) {
 	    if (((font_string_compare(my_attrs.name, font_list->name) == 0)
 		 && (my_attrs.name != (char *) 0)
@@ -2805,7 +2811,7 @@
 			
 			) {
 		font_free_font_return_attr_strings(&my_attrs);
-		(void) xv_set(FONT_PUBLIC(font_list), XV_INCREMENT_REF_COUNT, 0);
+		(void) xv_set(FONT_PUBLIC(font_list), XV_INCREMENT_REF_COUNT, NULL);
 		return (FONT_PUBLIC(font_list));
 	    }
 	    font_list = font_list->next;
@@ -2862,6 +2868,7 @@
 	attrs->names = (char **) NULL;
     }
 #endif /*OW_I18N*/
+    return XV_OK;
 }
 
 /*
@@ -3328,7 +3335,7 @@
 
 }
 
-static int
+static void
 font_setup_known_families(linfo)
 Font_locale_info	*linfo;
 {
@@ -3419,11 +3426,11 @@
 	 * This might be because of recursive family definitions
 	 */
 	if (null_entry_found && (numresolved == oldresolved))  {
-            xv_error(NULL,
+            xv_error((Xv_object)NULL,
                     ERROR_STRING, 
 			XV_MSG("Initialization of font families failed. Possible recursive family definition"),
                     ERROR_PKG, FONT,
-                    0);
+                    NULL);
 	    return;
 	}
 
@@ -3437,14 +3444,14 @@
     }
 }
 
-static int
+static void
 font_setup_known_styles(linfo)
 Font_locale_info	*linfo;
 {
     font_init_known_styles(linfo);
 }
 
-static int
+static void
 font_setup_defaults(linfo)
 Font_locale_info	*linfo;
 {
@@ -3878,6 +3885,7 @@
         font_attrs->scale = font_scale_from_size(font_attrs, 
 					font_attrs->size);
     }
+    return XV_OK;
 }
 
 #ifdef OW_I18N
@@ -4168,10 +4176,10 @@
 
 	        sprintf(dummy, 
 			XV_MSG("Attempt to rescale from font failed"));
-	        xv_error(NULL,
+	        xv_error((Xv_object)NULL,
 		     ERROR_STRING, dummy,
 		     ERROR_PKG, FONT,
-		     0);
+		     NULL);
 	        return (XV_ERROR);
 	    }
         } else {
@@ -4192,10 +4200,10 @@
                 sprintf(dummy, 
 	            XV_MSG("Font style %s is not known, using default style instead"),
                             font_attrs->style);
-                xv_error(NULL,
+                xv_error((Xv_object)NULL,
                     ERROR_STRING, dummy,
                     ERROR_PKG, FONT,
-                    0);
+                    NULL);
 
                 font_attrs->style = linfo->default_style;
                 font_attrs->weight = linfo->default_weight;
@@ -4209,20 +4217,20 @@
 	        (void) sprintf(dummy, 
 			XV_MSG("Cannot load font '%s'"), 
 			font_name);
-	        xv_error(NULL,
+	        xv_error((Xv_object)NULL,
 		         ERROR_STRING, dummy,
 		         ERROR_PKG, FONT,
-		         0);
+		         NULL);
 	        return (XV_ERROR);
 	    }
         }
     }
 
     if (!font_attrs->name)  {
-        xv_error(NULL,
+        xv_error((Xv_object)NULL,
             ERROR_STRING, XV_MSG("Failed to construct font name"),
             ERROR_PKG, FONT,
-            0);
+            NULL);
         return (XV_ERROR);
     }
 
@@ -4428,6 +4436,7 @@
 		       &pfc->pc_adv.x, &pfc->pc_adv.y,
 		       &pfc->pc_pr);
     }
+    return XV_OK;
 }
 
 Pkg_private int
@@ -4436,6 +4445,7 @@
 XFontStruct	*x_font_info;
 {
     *variable_height_font = FALSE;
+    return XV_OK;
 }
 
 Pkg_private int
@@ -4444,6 +4454,7 @@
 XFontStruct	*x_font_info;
 {
     *neg_left_bearing = (x_font_info->min_bounds.lbearing < 0);
+    return XV_OK;
 }
 
 Pkg_private int
@@ -4464,7 +4475,7 @@
 
 }
 
-static int
+static void
 font_init_create_attrs(font_attrs)
 Font_return_attrs	font_attrs;
 {
diff -Naur xview-3.2p1.4.orig/lib/libxview/font/font_set.c xview-3.2p1.4/lib/libxview/font/font_set.c
--- xview-3.2p1.4.orig/lib/libxview/font/font_set.c	1993-06-29 07:15:00.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/font/font_set.c	2013-01-07 12:50:44.789550000 +0100
@@ -28,8 +28,8 @@
     register Font_info *font = FONT_PRIVATE(font_public);
     register Attr_attribute *attrs;
 
-    for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-	switch (attrs[0]) {
+    for (attrs = avlist; (int)*attrs; attrs = attr_next(attrs)) {
+	switch ((int)attrs[0]) {
 	  case FONT_TYPE:
 	    font->type = (Font_type) attrs[1];
 	    break;
@@ -38,14 +38,14 @@
 		if (!multibyte) {
 		    Font_string_dims dims;
 
-		    (void) xv_get(font_public, FONT_STRING_DIMS, "n", &dims, 0);
+		    (void) xv_get(font_public, FONT_STRING_DIMS, "n", &dims, NULL);
 		    if ((dims.width > 0) && (dims.width < font->def_char_width))
 		        font->def_char_width = dims.width;
 		}
 #else
 		Font_string_dims dims;
 
-		(void) xv_get(font_public, FONT_STRING_DIMS, "n", &dims, 0);
+		(void) xv_get(font_public, FONT_STRING_DIMS, "n", &dims, NULL);
 		if ((dims.width > 0) && (dims.width < font->def_char_width))
 		    font->def_char_width = dims.width;
 #endif /* OW_I18N */
@@ -56,10 +56,10 @@
 		    sprintf(dummy, 
 		    XV_MSG("Font '%s' has overlapping characters;\n\
 character painting errors may occur."), font->name);
-		    xv_error(NULL,
+		    xv_error((Xv_object)NULL,
 			     ERROR_STRING, dummy,
 			     ERROR_PKG, FONT,
-			     0);
+			     NULL);
 		}
 #endif				/* CHECK_OVERLAPPING_CHARS */
 		break;
diff -Naur xview-3.2p1.4.orig/lib/libxview/font/pf.c xview-3.2p1.4/lib/libxview/font/pf.c
--- xview-3.2p1.4.orig/lib/libxview/font/pf.c	1993-06-29 07:14:59.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/font/pf.c	2013-01-07 12:50:44.819588000 +0100
@@ -36,7 +36,7 @@
     char           *fontname;
 {
     if (!xv_default_server)
-	xv_create(0, SERVER, 0);
+	xv_create((Xv_object)NULL, SERVER, NULL);
     return ((Pixfont *) xv_get(xv_default_server,
 			       SERVER_FONT_WITH_NAME, fontname));
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/font/pf_text.c xview-3.2p1.4/lib/libxview/font/pf_text.c
--- xview-3.2p1.4.orig/lib/libxview/font/pf_text.c	1993-06-29 07:14:59.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/font/pf_text.c	2013-01-07 12:50:44.848982000 +0100
@@ -203,6 +203,7 @@
 	basex += pc->pc_adv.x;
 	basey += pc->pc_adv.y;
     }
+    return XV_OK;
 }
 
 Xv_public struct pr_size
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/fm_bdry.c xview-3.2p1.4/lib/libxview/frame/fm_bdry.c
--- xview-3.2p1.4.orig/lib/libxview/frame/fm_bdry.c	1993-06-29 07:16:05.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/frame/fm_bdry.c	2013-01-07 12:50:44.888360000 +0100
@@ -15,6 +15,7 @@
  */
 
 #include <xview_private/fm_impl.h>
+#include <xview/win.h>
 
 Pkg_private void     frame_compute_constraint();
 static void     compute_shadows();
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/fm_destroy.c xview-3.2p1.4/lib/libxview/frame/fm_destroy.c
--- xview-3.2p1.4.orig/lib/libxview/frame/fm_destroy.c	1993-06-29 07:16:11.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/frame/fm_destroy.c	2013-01-07 12:50:44.929835000 +0100
@@ -43,7 +43,7 @@
      */  
     if ((status == DESTROY_CLEANUP) || (status == DESTROY_PROCESS_DEATH))
     {
-        xv_set( frame_public, XV_SHOW, FALSE, 0 );
+        xv_set( frame_public, XV_SHOW, FALSE, NULL );
         win_remove(frame_public);
     }
 
@@ -110,24 +110,24 @@
 	    GC			gc;
 	    
 	    image = xv_get(frame->focus_window, 
-				XV_KEY_DATA, FRAME_FOCUS_UP_IMAGE);
+				XV_KEY_DATA, (Attr_attribute)FRAME_FOCUS_UP_IMAGE);
 	    if (image)  {
 		xv_destroy(image);
 	    }
 
 	    image = xv_get(frame->focus_window, 
-				XV_KEY_DATA, FRAME_FOCUS_RIGHT_IMAGE);
+				XV_KEY_DATA, (Attr_attribute)FRAME_FOCUS_RIGHT_IMAGE);
 	    if (image)  {
 		xv_destroy(image);
 	    }
 
-	    gc = (GC) xv_get(frame->focus_window, XV_KEY_DATA, FRAME_FOCUS_GC);
+	    gc = (GC) xv_get(frame->focus_window, XV_KEY_DATA, (Attr_attribute)FRAME_FOCUS_GC);
 	    if (gc)  {
                 Xv_Drawable_info *info;
 
                 DRAWABLE_INFO_MACRO(frame->focus_window, info);
 		XFreeGC(xv_display(info), gc);
-	        xv_set(frame->focus_window, XV_KEY_DATA, FRAME_FOCUS_GC, (GC)NULL, NULL);
+	        xv_set(frame->focus_window, XV_KEY_DATA, (Attr_attribute)FRAME_FOCUS_GC, (GC)NULL, NULL);
 	    }
 
 	    xv_destroy(frame->focus_window);
@@ -164,7 +164,7 @@
         }
 
         frame_notice = (Xv_Notice)xv_get((Frame)window, 
-                                XV_KEY_DATA, frame_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)frame_notice_key, 
 				NULL);
         if (!frame_notice)  {
             frame_notice = xv_create((Frame)window, NOTICE,
@@ -172,7 +172,7 @@
                         NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
 		            XV_MSG("Are you sure you want to Quit?"),
-                        0,
+                        NULL,
 			NOTICE_BUTTON_YES, 
 			    XV_MSG("Confirm"),
 			NOTICE_BUTTON_NO, 
@@ -180,10 +180,10 @@
 			NOTICE_NO_BEEPING, 1,
 			NOTICE_STATUS, &result,
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
             xv_set((Frame)window, 
-                XV_KEY_DATA, frame_notice_key, frame_notice,
+                XV_KEY_DATA, (Attr_attribute)frame_notice_key, frame_notice,
                 NULL);
         }
         else  {
@@ -192,7 +192,7 @@
                 NOTICE_BLOCK_THREAD, TRUE,
                 NOTICE_MESSAGE_STRINGS,
 		    XV_MSG("Are you sure you want to Quit?"),
-                0,
+                NULL,
                 NOTICE_BUTTON_YES, XV_MSG("Confirm"),
                 NOTICE_BUTTON_NO, XV_MSG("Cancel"),
                 NOTICE_NO_BEEPING, 1,
@@ -206,7 +206,7 @@
 	xv_error((Xv_opaque)frame,
 	         ERROR_STRING, XV_MSG("Notice failed on attempt to destroy frame."),
 		 ERROR_PKG, FRAME,
-		 0);
+		 NULL);
     return ((result == NOTICE_YES) ? XV_OK : XV_ERROR);
 }
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/fm_display.c xview-3.2p1.4/lib/libxview/frame/fm_display.c
--- xview-3.2p1.4.orig/lib/libxview/frame/fm_display.c	1993-06-29 07:16:06.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/frame/fm_display.c	2013-01-07 12:50:44.956178000 +0100
@@ -122,7 +122,7 @@
      * if 'save_black' != 'new_black'.
      */
     save_black = olgx_get_single_color(frame->ginfo, OLGX_BLACK);
-    new_black = xv_get(xv_cms(info), CMS_PIXEL, 
+    new_black = (unsigned int)xv_get(xv_cms(info), CMS_PIXEL, 
 			xv_get(frame->footer, WIN_FOREGROUND_COLOR)); 
 
     change_black = (save_black != new_black);
@@ -265,7 +265,7 @@
      * if 'save_black' != 'new_black'.
      */
     save_black = olgx_get_single_color(frame->ginfo, OLGX_BLACK);
-    new_black = xv_get(frame_cms, CMS_PIXEL, 
+    new_black = (unsigned int)xv_get(frame_cms, CMS_PIXEL, 
 			xv_get(frame->imstatus, WIN_FOREGROUND_COLOR)); 
 
     change_black = (save_black != new_black);
@@ -483,10 +483,10 @@
     if (frame->focus_subwindow != sw) {
 	/* Remove caret from current frame focus subwindow */
 	if (frame->focus_subwindow)
-	    xv_set(frame->focus_subwindow, WIN_REMOVE_CARET, 0);
+	    xv_set(frame->focus_subwindow, WIN_REMOVE_CARET, NULL);
 	/* Update frame focus subwindow and primary focus subwindow data */
 	frame->focus_subwindow = sw;
-	if (xv_get(sw, XV_FOCUS_RANK) == XV_FOCUS_PRIMARY)
+	if ((int)xv_get(sw, XV_FOCUS_RANK) == XV_FOCUS_PRIMARY)
 	    frame->primary_focus_sw = sw;
     }
 
@@ -505,10 +505,10 @@
 	     WIN_CMS, cms,
 	     WIN_FOREGROUND_COLOR, xv_get(pw, WIN_FOREGROUND_COLOR),
 	     WIN_BACKGROUND_COLOR, xv_get(pw, WIN_BACKGROUND_COLOR),
-	     0);
+	     NULL);
     
     /* Show caret in frame subwindow with input focus */
-    xv_set(sw, WIN_KBD_FOCUS, TRUE, 0);
+    xv_set(sw, WIN_KBD_FOCUS, TRUE, NULL);
 }
 
 /*
@@ -520,7 +520,7 @@
     Frame           frame_public;
     Xv_Window       sw;
 {
-    xv_set(sw, WIN_KBD_FOCUS, FALSE, 0);
+    xv_set(sw, WIN_KBD_FOCUS, FALSE, NULL);
 }
 
 /* ARGSUSED */
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/fm_geom.c xview-3.2p1.4/lib/libxview/frame/fm_geom.c
--- xview-3.2p1.4.orig/lib/libxview/frame/fm_geom.c	1993-06-29 07:16:07.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/frame/fm_geom.c	2013-01-07 12:50:44.988902000 +0100
@@ -14,6 +14,7 @@
 #include <xview/window.h>
 #include <xview/font.h>
 #include <pixrect/pixfont.h>
+#include <xview/win.h>
 
 /* OPEN LOOK footer sizes */
 /* Pre-subtracted 3 for the size of the resize handle */
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/fm_get.c xview-3.2p1.4/lib/libxview/frame/fm_get.c
--- xview-3.2p1.4.orig/lib/libxview/frame/fm_get.c	2013-01-07 12:36:28.765702000 +0100
+++ xview-3.2p1.4/lib/libxview/frame/fm_get.c	2013-01-07 12:50:45.015463000 +0100
@@ -10,9 +10,13 @@
  *	file for terms of the license.
  */
 
+#ifdef __linux__
+#include <ctype.h>			/* isascii() */
+#endif
 #include <xview_private/fm_impl.h>
 #include <xview_private/draw_impl.h>
 #include <xview/server.h>
+#include <xview/win.h>
 
 static int      			frame_fit_direction();
 /* ACC_XVIEW */
@@ -30,7 +34,7 @@
     register Frame_class_info *frame = FRAME_CLASS_PRIVATE(frame_public);
     static Rect     rect_local;
 
-    switch (attr) {
+    switch ((int)attr) {
       case XV_RECT:
 	{
 	    static Rect rect;
@@ -93,7 +97,7 @@
 		if (--n == 0)
 		return sw;
 	    FRAME_END_EACH
-		return NULL;
+		return XV_NULL;
 	}
 
       case FRAME_OLD_RECT:
@@ -108,7 +112,7 @@
 
       case FRAME_FOCUS_DIRECTION:
 	return (Xv_opaque) (frame->focus_window ?
-	    xv_get(frame->focus_window, XV_KEY_DATA, FRAME_FOCUS_DIRECTION) :
+	    xv_get(frame->focus_window, XV_KEY_DATA, (Attr_attribute)FRAME_FOCUS_DIRECTION) :
 	    FRAME_FOCUS_UP);
 
       case FRAME_FOCUS_WIN:
@@ -182,7 +186,7 @@
 		if (--n == 0)
 		return sw;
 	    FRAME_END_EACH
-		return NULL;
+		return XV_NULL;
 	}
 
       case FRAME_CLOSED:
@@ -426,7 +430,7 @@
 	    
 	    /* subframes don't have a closed rect */
 	    if (is_subframe)
-	      return NULL;
+	      return XV_NULL;
 	    (void) win_getrect(frame->icon, &rect_local);
 	    return (Xv_opaque) & rect_local;
 	}
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/fm_impl.h xview-3.2p1.4/lib/libxview/frame/fm_impl.h
--- xview-3.2p1.4.orig/lib/libxview/frame/fm_impl.h	2013-01-07 12:36:28.035222000 +0100
+++ xview-3.2p1.4/lib/libxview/frame/fm_impl.h	2013-01-07 12:50:45.055927000 +0100
@@ -172,10 +172,10 @@
     { Xv_Window	_next; \
     for ((child) = (first), \
 	 (child) && \
-	 (_next = xv_get((child), XV_KEY_DATA, FRAME_NEXT_CHILD)); \
+	 (_next = xv_get((child), XV_KEY_DATA, (Attr_attribute)FRAME_NEXT_CHILD)); \
 	 (child); (child) = _next, \
 	 (child) && \
-	 (_next = xv_get((child), XV_KEY_DATA, FRAME_NEXT_CHILD))) {
+	 (_next = xv_get((child), XV_KEY_DATA, (Attr_attribute)FRAME_NEXT_CHILD))) {
 
 #define	FRAME_EACH_SUBWINDOW(frame, child)	\
     FRAME_EACH_CHILD((frame)->first_subwindow, child)
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/fm_input.c xview-3.2p1.4/lib/libxview/frame/fm_input.c
--- xview-3.2p1.4.orig/lib/libxview/frame/fm_input.c	2013-01-07 12:36:28.246268000 +0100
+++ xview-3.2p1.4/lib/libxview/frame/fm_input.c	2013-01-07 12:50:45.086005000 +0100
@@ -154,7 +154,7 @@
 
 	    /* Priority 2: First primary focus subwindow */
 	    FRAME_EACH_CHILD(frame->first_subwindow, child)
-		if (xv_get(child, XV_FOCUS_RANK) == XV_FOCUS_PRIMARY &&
+		if ((int)xv_get(child, XV_FOCUS_RANK) == XV_FOCUS_PRIMARY &&
 		    frame_set_focus(child) == XV_OK)
 		    goto Done;
 	    FRAME_END_EACH
@@ -175,7 +175,7 @@
 		    goto Done;
 	    FRAME_END_EACH
 	    FRAME_EACH_CHILD(frame->first_subwindow, child)
-		if (xv_set(child, WIN_SET_FOCUS, 0) == XV_OK)
+		if (xv_set(child, WIN_SET_FOCUS, NULL) == XV_OK)
 		    goto Done;
 	    FRAME_END_EACH
 
@@ -262,25 +262,25 @@
 
     if (event_action(event) == WIN_REPAINT) {
 	focus_direction = (Frame_focus_direction) xv_get(window,
-	    XV_KEY_DATA, FRAME_FOCUS_DIRECTION);
+	    XV_KEY_DATA, (Attr_attribute)FRAME_FOCUS_DIRECTION);
 	if (focus_direction == FRAME_FOCUS_UP) {
-	    image = xv_get(window, XV_KEY_DATA, FRAME_FOCUS_UP_IMAGE);
+	    image = xv_get(window, XV_KEY_DATA, (Attr_attribute)FRAME_FOCUS_UP_IMAGE);
 	    width = FRAME_FOCUS_UP_WIDTH;
 	    height = FRAME_FOCUS_UP_HEIGHT;
 	} else {
-	    image = xv_get(window, XV_KEY_DATA, FRAME_FOCUS_RIGHT_IMAGE);
+	    image = xv_get(window, XV_KEY_DATA, (Attr_attribute)FRAME_FOCUS_RIGHT_IMAGE);
 	    width = FRAME_FOCUS_RIGHT_WIDTH;
 	    height = FRAME_FOCUS_RIGHT_HEIGHT;
 	}
 	DRAWABLE_INFO_MACRO(window, info);
-	gc = (GC) xv_get(window, XV_KEY_DATA, FRAME_FOCUS_GC);
+	gc = (GC) xv_get(window, XV_KEY_DATA, (Attr_attribute)FRAME_FOCUS_GC);
 	if (!gc) {
 	    /* Create the Graphics Context for the Focus Window */
 	    /* THIS IS ALSO DONE IN notice_show_focus_win() in notice_pt.c */
 	    gc_values.fill_style = FillOpaqueStippled;
 	    gc = XCreateGC(xv_display(info), xv_xid(info), GCFillStyle,
 			   &gc_values);
-	    xv_set(window, XV_KEY_DATA, FRAME_FOCUS_GC, gc, 0);
+	    xv_set(window, XV_KEY_DATA, (Attr_attribute)FRAME_FOCUS_GC, gc, NULL);
 	}
 	DRAWABLE_INFO_MACRO(image, image_info);
 	gc_values.background = xv_bg(info);
@@ -347,7 +347,7 @@
     /* The subwindow doesn't have the input focus, so set the input
      * focus to the subwindow.
      */
-    if (xv_set(sw, WIN_SET_FOCUS, 0) == XV_OK)
+    if (xv_set(sw, WIN_SET_FOCUS, NULL) == XV_OK)
 	return XV_OK;
 
     return XV_ERROR;
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/fm_layout.c xview-3.2p1.4/lib/libxview/frame/fm_layout.c
--- xview-3.2p1.4.orig/lib/libxview/frame/fm_layout.c	2013-01-07 12:36:28.327754000 +0100
+++ xview-3.2p1.4/lib/libxview/frame/fm_layout.c	2013-01-07 12:50:45.117760000 +0100
@@ -13,6 +13,7 @@
 #include <xview_private/i18n_impl.h>
 #include <xview_private/fm_impl.h>
 #include <xview_private/draw_impl.h>
+#include <xview/win.h>
 
 static Xv_Window frame_prev_child();
 static void     expand_sw();
@@ -29,7 +30,7 @@
     register Xv_Window	child;
     Window_layout_op	op;
 /* Alpha compatibility, mbuck@debian.org, FIXME: I don't understand this */
-#if defined(__alpha)
+#if defined(__alpha) || defined(_XV_API_BROKEN_64BIT)
     unsigned long       d1, d2, d3, d4, d5;
 #else
     int             	d1, d2, d3, d4, d5;
@@ -46,10 +47,10 @@
     is_subframe = ((int) xv_get(frame_public, XV_IS_SUBTYPE_OF, FRAME_CLASS) &&
 		   (int) xv_get(child, XV_IS_SUBTYPE_OF, FRAME_CLASS));
 
-    is_footer = (int)xv_get(child, XV_KEY_DATA, FRAME_FOOTER_WINDOW);
+    is_footer = (int)xv_get(child, XV_KEY_DATA, (Attr_attribute)FRAME_FOOTER_WINDOW, NULL);
 
 #ifdef OW_I18N
-    is_IMstatus= (int)xv_get(child, XV_KEY_DATA, FRAME_IMSTATUS_WINDOW);
+    is_IMstatus= (int)xv_get(child, XV_KEY_DATA, (Attr_attribute)FRAME_IMSTATUS_WINDOW, NULL);
 #endif
 
     /* Only access private field if necessary. (WG Mar 1995) */
@@ -122,25 +123,25 @@
 		xv_set(child,
 		       WIN_DESIRED_WIDTH, desired_w,
 		       WIN_DESIRED_HEIGHT, desired_h,
-		       0);
+		       NULL);
 	    }
             if (!is_footer &&
 #ifdef OW_I18N
 		!is_IMstatus &&
 #endif
-		xv_get(child, XV_KEY_DATA, FRAME_ORPHAN_WINDOW) == FALSE) {
+		(int)xv_get(child, XV_KEY_DATA, (Attr_attribute)FRAME_ORPHAN_WINDOW) == FALSE) {
 
 		/* Add the child to the subwindow or subframe list */
 		if (last_child)
-		    xv_set(last_child, XV_KEY_DATA, FRAME_NEXT_CHILD, child, 0);
+		    xv_set(last_child, XV_KEY_DATA, (Attr_attribute)FRAME_NEXT_CHILD, child, NULL);
 		else if (is_subframe)
 		    frame->first_subframe = child;
 		else
 		    frame->first_subwindow = child;
 
 		/* this is the last child in the list */
-		xv_set(child, XV_KEY_DATA, FRAME_NEXT_CHILD, 0, 0);
-		xv_set(child, XV_KEY_DATA, FRAME_PREVIOUS_CHILD, last_child, 0);
+		xv_set(child, XV_KEY_DATA, (Attr_attribute)FRAME_NEXT_CHILD, 0L, NULL);
+		xv_set(child, XV_KEY_DATA, (Attr_attribute)FRAME_PREVIOUS_CHILD, last_child, NULL);
 	    }
 
 	    /*
@@ -155,7 +156,7 @@
 		    xv_error(child,
 			  ERROR_STRING,
 			  XV_MSG("Attempt to make frame subwindow deaf failed"),
-			  0);
+			  NULL);
 		}
 	    }
 	    break;
@@ -186,12 +187,12 @@
 		&frame->first_subframe : &frame->first_subwindow;
 	    prev_child = is_subframe ?
 		prev_child : frame_prev_child(*first_child, child);
-	    next_child = xv_get(child, XV_KEY_DATA, FRAME_NEXT_CHILD);
+	    next_child = xv_get(child, XV_KEY_DATA, (Attr_attribute)FRAME_NEXT_CHILD);
 
 	    /* remove the child from the subwindow or subframe list */
 	    if (prev_child)
 		xv_set(prev_child,
-		       XV_KEY_DATA, FRAME_NEXT_CHILD, next_child, 0);
+		       XV_KEY_DATA, (Attr_attribute)FRAME_NEXT_CHILD, next_child, NULL);
 	    else
 		*first_child = next_child;
 
@@ -342,7 +343,7 @@
 	    xv_error((Xv_opaque)frame,
 		     		ERROR_STRING, temp,
 		     		ERROR_PKG, FRAME,
-		     0);
+		     NULL);
 	    return FALSE;
 	}
 
@@ -504,9 +505,9 @@
 	(void)win_get_outer_rect(child, &rect);
         if (to_right) {
 	    if (rect_right(&rect) == limit)
-	        window_set(child, WIN_DESIRED_WIDTH, WIN_EXTEND_TO_EDGE, 0);
+	        window_set(child, WIN_DESIRED_WIDTH, WIN_EXTEND_TO_EDGE, NULL);
 	} else if (rect_bottom(&rect) == limit)
-	  window_set(child, WIN_DESIRED_HEIGHT, WIN_EXTEND_TO_EDGE, 0);
+	  window_set(child, WIN_DESIRED_HEIGHT, WIN_EXTEND_TO_EDGE, NULL);
     FRAME_END_EACH
 }
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/fm_set.c xview-3.2p1.4/lib/libxview/frame/fm_set.c
--- xview-3.2p1.4.orig/lib/libxview/frame/fm_set.c	1993-06-29 07:16:12.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/frame/fm_set.c	2013-01-07 12:50:45.159940000 +0100
@@ -29,6 +29,7 @@
 #endif 
 #endif
 #include <pixrect/memvar.h>
+#include <xview/win.h>
 
 /* ACC_XVIEW */
 #define		FRAME_MENU_BLOCK	10
@@ -43,6 +44,8 @@
 static void     frame_change_state();
 static void 	frame_set_icon(); 
 
+Xv_window frame_create_footer();
+
 extern unsigned short default_frame_icon_image[256];
 
 /*
@@ -88,13 +91,13 @@
     _xv_pswcs_t     	 pswcs = {0, NULL, NULL};
 #endif
 
-    for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-	switch (attrs[0]) {
+    for (attrs = avlist; (int)*attrs; attrs = attr_next(attrs)) {
+	switch ((int)attrs[0]) {
 	  case FRAME_CLOSED:
 	  case FRAME_CLOSED_RECT: 
 	    owner = xv_get(frame_public, XV_OWNER);
 	    is_subframe = (int) xv_get(owner, XV_IS_SUBTYPE_OF, FRAME_CLASS);
-	    switch (attrs[0]) {
+	    switch ((int)attrs[0]) {
 	      case FRAME_CLOSED:
 		frame_change_state(frame, attrs[1]);
 		break;
@@ -125,7 +128,7 @@
 	    /* SunView1 compatibility only */
 	  case FRAME_CURRENT_RECT:
 	    (void) xv_set((frame_is_iconic(frame)) ? frame->icon : frame_public,
-			  WIN_RECT, (Rect *) attrs[1], 0);
+			  WIN_RECT, (Rect *) attrs[1], NULL);
 	    break;
 
 	  case FRAME_DEFAULT_DONE_PROC:
@@ -143,18 +146,18 @@
 	    break;
 	    
 	  case FRAME_INHERIT_COLORS:
-	    xv_set(frame_public, WIN_INHERIT_COLORS, TRUE, 0);
+	    xv_set(frame_public, WIN_INHERIT_COLORS, TRUE, NULL);
 	    break;
 	    
 	  case FRAME_FOCUS_DIRECTION:
 	    if (frame->focus_window) {
 		xv_set(frame->focus_window,
-		       XV_KEY_DATA, FRAME_FOCUS_DIRECTION, attrs[1],
+		       XV_KEY_DATA, (Attr_attribute)FRAME_FOCUS_DIRECTION, attrs[1],
 		       XV_WIDTH, attrs[1] == FRAME_FOCUS_UP ?
 		       FRAME_FOCUS_UP_WIDTH : FRAME_FOCUS_RIGHT_WIDTH,
 		       XV_HEIGHT, attrs[1] == FRAME_FOCUS_UP ?
 		       FRAME_FOCUS_UP_HEIGHT : FRAME_FOCUS_RIGHT_HEIGHT,
-		       0);
+		       NULL);
 	    }
 	    break;
 	    
@@ -203,7 +206,7 @@
 		    xv_error(frame_public,
 				ERROR_STRING,
 				XV_MSG("Attempt to make frame deaf failed"),
-				0);
+				NULL);
 		    result = XV_ERROR;
 		    break;
 		}
@@ -214,7 +217,7 @@
 		    xv_error(frame_public,
 				ERROR_STRING,
 				XV_MSG("Attempt to make frame undeaf failed"),
-				0);
+				NULL);
 		    result = XV_ERROR;
 		    break;
 		}
@@ -236,22 +239,22 @@
 	  case FRAME_NEXT_PANE: {
     	    Xv_Window pane = frame->focus_subwindow;
 	    do {
-		pane = xv_get(pane, XV_KEY_DATA, FRAME_NEXT_CHILD);
+		pane = xv_get(pane, XV_KEY_DATA, (Attr_attribute)FRAME_NEXT_CHILD);
 		if (!pane)
 		    pane = frame->first_subwindow;
 		if (pane == frame->focus_subwindow)
 		    break;
-	    } while (xv_set(pane, WIN_SET_FOCUS, 0) != XV_OK);
+	    } while (xv_set(pane, WIN_SET_FOCUS, NULL) != XV_OK);
 	    xv_set(pane,
 		   XV_FOCUS_ELEMENT, 0,  /* first element */
-		   0);
+		   NULL);
 	    break;
 	  }
 
 	  case FRAME_PREVIOUS_ELEMENT:
 	  case FRAME_PREVIOUS_PANE: {
 	    Xv_Window pane = xv_get(frame->focus_subwindow,
-			   XV_KEY_DATA, FRAME_PREVIOUS_CHILD);
+			   XV_KEY_DATA, (Attr_attribute)FRAME_PREVIOUS_CHILD);
 	    if (!pane)
 		pane = frame_last_child(frame->first_subwindow);
 	    if (xv_get(pane, XV_IS_SUBTYPE_OF, OPENWIN)) {
@@ -261,7 +264,7 @@
 					       nbr_views-1);
 		Xv_Window sb;
 
-		if (attrs[0] == FRAME_PREVIOUS_ELEMENT && is_canvas) {
+		if ((int)attrs[0] == FRAME_PREVIOUS_ELEMENT && is_canvas) {
 		    /* FRAME_PREVIOUS_ELEMENT: set focus to
 		     *	    horizontal scrollbar,
 		     *	    vertical scrollbar, or
@@ -272,14 +275,14 @@
 			sb = xv_get(pane, OPENWIN_VERTICAL_SCROLLBAR,
 				    last_view);
 		    if (sb)
-			xv_set(sb, WIN_SET_FOCUS, 0);
+			xv_set(sb, WIN_SET_FOCUS, NULL);
 		    else {
 			/* No scrollbars: set focus to Canvas */
 			if (pane != frame->focus_subwindow)
-			    xv_set(pane, WIN_SET_FOCUS, 0);
+			    xv_set(pane, WIN_SET_FOCUS, NULL);
 			xv_set(pane,
 			       XV_FOCUS_ELEMENT, -1,  /* last element */
-			       0);
+			       NULL);
 		    }
 		} else {
 		    Xv_Window pw;
@@ -291,23 +294,23 @@
 			pw = xv_get(last_view, CANVAS_VIEW_PAINT_WINDOW);
 		    else
 			pw = last_view;
-		    xv_set(pw, WIN_SET_FOCUS, 0);
+		    xv_set(pw, WIN_SET_FOCUS, NULL);
 		    xv_set(pane,
 			   XV_FOCUS_ELEMENT, -1,  /* last element */
-			   0);
+			   NULL);
 		}
 	    } else {
 		do {
 		    if (pane == frame->focus_subwindow ||
-			xv_set(pane, WIN_SET_FOCUS, 0) == XV_OK)
+			xv_set(pane, WIN_SET_FOCUS, NULL) == XV_OK)
 			break;
-		    pane = xv_get(pane, XV_KEY_DATA, FRAME_PREVIOUS_CHILD);
+		    pane = xv_get(pane, XV_KEY_DATA, (Attr_attribute)FRAME_PREVIOUS_CHILD);
 		    if (!pane)
 			pane = frame_last_child(frame->first_subwindow);
 		} while (TRUE);
 		xv_set(pane,
 		       XV_FOCUS_ELEMENT, -1,  /* last element */
-		       0);
+		       NULL);
 	    }
 	    break;
 	  }
@@ -607,14 +610,14 @@
 			    if (frame->footer == NULL) {
 				frame->footer = frame_create_footer(frame);
 			    } else {
-				xv_set(frame->footer, XV_SHOW, TRUE, 0);
+				xv_set(frame->footer, XV_SHOW, TRUE, NULL);
 			    }
 			    frame_adjust_normal_hints(frame,
 					 (int)xv_get(frame->footer, XV_HEIGHT),
 					 &update_hints);
 			} else {
 			    if (frame->footer != NULL) {
-				xv_set(frame->footer, XV_SHOW, FALSE, 0);
+				xv_set(frame->footer, XV_SHOW, FALSE, NULL);
 			        frame_adjust_normal_hints(frame,
 					-(int)xv_get(frame->footer, XV_HEIGHT),
 					&update_hints);
@@ -1133,7 +1136,7 @@
                             if (frame->imstatus == NULL) {
                                 frame->imstatus = frame_create_IMstatus(frame);
                             } else {
-                                xv_set(frame->imstatus, XV_SHOW, TRUE, 0);
+                                xv_set(frame->imstatus, XV_SHOW, TRUE, NULL);
                             }
 			    /* Adjust frame's min/max size hints. */
 			    frame_adjust_normal_hints(frame,
@@ -1141,7 +1144,7 @@
 				       &update_hints);
                         } else {
                             if (frame->imstatus != NULL) {
-                                xv_set(frame->imstatus, XV_SHOW, FALSE, 0);
+                                xv_set(frame->imstatus, XV_SHOW, FALSE, NULL);
 			        /* Adjust frame's min/max size hints. */
 			        frame_adjust_normal_hints(frame,
 				      -(int)xv_get(frame->imstatus, XV_HEIGHT),
@@ -1227,7 +1230,7 @@
 		if (is_subframe) {
 		    xv_set(frame_public,
 			   WIN_PARENT, xv_get(frame_public, XV_ROOT),
-			   0);
+			   NULL);
 		} else if (!frame->icon) {
 		    /* Create a default icon for a main frame */
 		    frame->icon = frame->default_icon = 
@@ -1238,7 +1241,9 @@
 
 		    icon_id = (unsigned long) xv_get(frame->icon, XV_XID);
 		    if (set_icon_rect) {
-		        (void) win_setrect(frame->icon, icon_rect);
+			/* FIXME: what goes here? */
+		        /*(void) win_setrect(frame->icon, icon_rect);*/
+		        (void) win_setrect(frame->icon, &icon_rect);
 		    }
 		    frame->wmhints.flags |= IconWindowHint;
 		    frame->wmhints.icon_window = icon_id;
@@ -1253,7 +1258,9 @@
 		}
 		if (set_icon_rect) {
 		    set_icon_rect = FALSE;
-		    (void) win_setrect(frame->icon, icon_rect);
+		    /* FIXME: what goes here? */
+		    /*(void) win_setrect(frame->icon, icon_rect);*/
+		    (void) win_setrect(frame->icon, &icon_rect);
 	    	    frame->wmhints.flags |= IconPositionHint;
 	    	    frame->wmhints.icon_x = icon_rect.r_left;
 	    	    frame->wmhints.icon_y = icon_rect.r_top;
@@ -1540,10 +1547,12 @@
 	icon = frame->default_icon;
     }
     frame->icon = icon;
-    xv_set(frame->icon, XV_OWNER, FRAME_PUBLIC(frame), 0);
+    xv_set(frame->icon, XV_OWNER, FRAME_PUBLIC(frame), NULL);
     icon_id = (unsigned long) xv_get(frame->icon, XV_XID);
     if (*set_icon_rect) {
-        (void) win_setrect(frame->icon, icon_rect);
+	/* FIXME: what goes here? */
+        /*(void) win_setrect(frame->icon, icon_rect);*/
+        (void) win_setrect(frame->icon, &icon_rect);
     }
 		
     if (!sameicon) {
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/fm_win.c xview-3.2p1.4/lib/libxview/frame/fm_win.c
--- xview-3.2p1.4.orig/lib/libxview/frame/fm_win.c	2013-01-07 12:36:28.883377000 +0100
+++ xview-3.2p1.4/lib/libxview/frame/fm_win.c	2013-01-07 12:50:45.196175000 +0100
@@ -18,6 +18,7 @@
 #include <xview_private/i18n_impl.h>
 #include <xview_private/fm_impl.h>
 #include <xview_private/draw_impl.h>
+#include <xview/win.h>
 
 /*
  * use the window manager to set the position and trim the size of the base
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/fmbs_set.c xview-3.2p1.4/lib/libxview/frame/fmbs_set.c
--- xview-3.2p1.4.orig/lib/libxview/frame/fmbs_set.c	1993-06-29 07:16:10.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/frame/fmbs_set.c	2013-01-07 12:50:45.221144000 +0100
@@ -37,7 +37,7 @@
     add_decor = delete_decor = 0;
 
     for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-	switch (attrs[0]) {
+	switch ((int)attrs[0]) {
 
 	  case FRAME_WM_COMMAND_STRINGS:
 	    attrs[0] = (Frame_attribute) ATTR_NOP(attrs[0]);
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/fmcmd_set.c xview-3.2p1.4/lib/libxview/frame/fmcmd_set.c
--- xview-3.2p1.4.orig/lib/libxview/frame/fmcmd_set.c	2013-01-07 12:36:28.640501000 +0100
+++ xview-3.2p1.4/lib/libxview/frame/fmcmd_set.c	2013-01-07 14:44:14.040198000 +0100
@@ -20,6 +20,12 @@
 
 static int update_default_pin_state();
 
+#ifdef __STDC__
+static int update_default_pin_state(Frame_cmd_info *frame, Xv_opaque server_public);
+#else
+static int update_default_pin_state();
+#endif
+
 Pkg_private     Xv_opaque
 frame_cmd_set_avlist(frame_public, avlist)
     Frame           frame_public;
@@ -224,7 +230,7 @@
 
 		        default_panel_item = (Panel_item) xv_get(frame->panel,
 							    PANEL_DEFAULT_ITEM);
-		        if (default_panel_item == NULL)
+		        if (default_panel_item == (Panel_item)NULL)
 		            break;
 		        rect = (Rect *) xv_get(default_panel_item,
 							       PANEL_ITEM_RECT);
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/fmcmd_set.c.rej xview-3.2p1.4/lib/libxview/frame/fmcmd_set.c.rej
--- xview-3.2p1.4.orig/lib/libxview/frame/fmcmd_set.c.rej	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/lib/libxview/frame/fmcmd_set.c.rej	2013-01-07 12:50:45.288670000 +0100
@@ -0,0 +1,19 @@
+--- lib/libxview/frame/fmcmd_set.c	1993-06-29 07:16:07.000000000 +0200
++++ lib/libxview/frame/fmcmd_set.c	2005-05-03 15:18:14.000000000 +0200
+@@ -36,14 +42,13 @@
+     int             result = XV_OK;
+     int             add_decor, delete_decor, set_win_attr;
+     Atom            add_decor_list[WM_MAX_DECOR], delete_decor_list[WM_MAX_DECOR];
+-    int 	    update_default_pin_state();
+ 
+     DRAWABLE_INFO_MACRO(frame_public, info);
+     server_public = xv_server(info);
+     set_win_attr = add_decor = delete_decor = 0;
+ 
+-    for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
+-	switch (attrs[0]) {
++    for (attrs = avlist; (int)*attrs; attrs = attr_next(attrs)) {
++	switch ((int)attrs[0]) {
+ 
+ 	  case FRAME_CMD_PUSHPIN_IN:  
+ 
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/fmhlp_set.c xview-3.2p1.4/lib/libxview/frame/fmhlp_set.c
--- xview-3.2p1.4.orig/lib/libxview/frame/fmhlp_set.c	1993-06-29 07:16:08.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/frame/fmhlp_set.c	2013-01-07 12:50:45.305247000 +0100
@@ -42,8 +42,8 @@
     server_public = xv_server(info);
     add_decor = delete_decor = 0;
 
-    for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-	switch (attrs[0]) {
+    for (attrs = avlist; (int)*attrs; attrs = attr_next(attrs)) {
+	switch ((int)attrs[0]) {
 
 	  case FRAME_SHOW_LABEL:	/* same as FRAME_SHOW_HEADER */
 	    attrs[0] = (Frame_attribute) ATTR_NOP(attrs[0]);
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/frame.c xview-3.2p1.4/lib/libxview/frame/frame.c
--- xview-3.2p1.4.orig/lib/libxview/frame/frame.c	1993-06-29 07:16:05.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/frame/frame.c	2013-01-07 12:50:45.330017000 +0100
@@ -16,6 +16,13 @@
 #include <xview/server.h>
 #include <xview_private/draw_impl.h>
 #include <xview_private/windowimpl.h>
+#include <xview_private/scrn_impl.h>
+
+#ifdef __STDC__
+extern void xv_usage(char *);
+#else
+extern void xv_usage();
+#endif
 
 Xv_private void
 frame_cmdline_help(name)
@@ -37,7 +44,7 @@
     XID   		win_xid;
     register Display	*display;
     int			top = 0, bottom = 0, left = 0, right = 0;
-    
+
     if (xv_get(frame, WIN_TYPE) != (Xv_opaque)FRAME_TYPE) {
 	XV_BZERO(rect, sizeof(Rect));
         return;
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/frame.h xview-3.2p1.4/lib/libxview/frame/frame.h
--- xview-3.2p1.4.orig/lib/libxview/frame/frame.h	1993-06-29 07:16:13.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/frame/frame.h	2013-01-07 12:50:45.353563000 +0100
@@ -159,8 +159,13 @@
 	FRAME_CLOSED	= FRAME_ATTR(ATTR_BOOLEAN,		  15),
 	FRAME_CLOSED_RECT	= FRAME_ATTR(ATTR_RECT_PTR,		  20),
 	FRAME_WM_COMMAND_STRINGS= FRAME_ATTR_LIST(ATTR_NULL, ATTR_STRING, 21),
+#if defined(__x86_64__) || defined(__ia64__) || defined(_XV_API_BROKEN_64BIT)
+	FRAME_WM_COMMAND_ARGC_ARGV
+				= FRAME_ATTR(ATTR_OPAQUE_PAIR, 		  22),
+#else
 	FRAME_WM_COMMAND_ARGC_ARGV
 				= FRAME_ATTR(ATTR_INT_PAIR, 		  22),
+#endif
 	FRAME_WM_COMMAND_ARGV	= FRAME_ATTR(ATTR_OPAQUE,		  23),
 	FRAME_WM_COMMAND_ARGC	= FRAME_ATTR(ATTR_INT,			  24),
 	FRAME_CMD_PANEL		= FRAME_ATTR(ATTR_OPAQUE,		  25),
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/frame_base.c xview-3.2p1.4/lib/libxview/frame/frame_base.c
--- xview-3.2p1.4.orig/lib/libxview/frame/frame_base.c	1993-06-29 07:16:06.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/frame/frame_base.c	2013-01-07 12:50:45.379195000 +0100
@@ -66,8 +66,8 @@
     /* Wmgr default to have resize corner for cmd frame */
     status_set(frame, show_resize_corner, TRUE);
 
-    for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-	switch (*attrs) {
+    for (attrs = avlist; (int)*attrs; attrs = attr_next(attrs)) {
+	switch ((int)*attrs) {
 
 	  case FRAME_SCALE_STATE:
 	    /*
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/frame_cmd.c xview-3.2p1.4/lib/libxview/frame/frame_cmd.c
--- xview-3.2p1.4.orig/lib/libxview/frame/frame_cmd.c	1993-06-29 07:16:13.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/frame/frame_cmd.c	2013-01-07 12:50:45.405705000 +0100
@@ -71,8 +71,8 @@
     notify_interpose_event_func(frame_public, frame_cmd_input,
 				NOTIFY_IMMEDIATE);
 
-    for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-	switch (*attrs) {
+    for (attrs = avlist; (int)*attrs; attrs = attr_next(attrs)) {
+	switch ((int)*attrs) {
 
 	  case FRAME_SCALE_STATE:
 	    /*
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/frame_init.c xview-3.2p1.4/lib/libxview/frame/frame_init.c
--- xview-3.2p1.4.orig/lib/libxview/frame/frame_init.c	2013-01-07 12:36:47.824590000 +0100
+++ xview-3.2p1.4/lib/libxview/frame/frame_init.c	2013-01-07 12:50:45.439979000 +0100
@@ -20,6 +20,8 @@
 #include <xview_private/svr_atom.h>
 #include <xview/defaults.h>
 #include <xview/font.h>
+#include <xview_private/windowimpl.h>
+#include <xview/win.h>
 
 #ifndef MAXHOSTNAMELEN
 #define MAXHOSTNAMELEN 64
@@ -56,7 +58,7 @@
          (void) xv_destroy_safe(frame);
     }
     else  {
-        (void) xv_set(frame, XV_SHOW, FALSE, 0);
+        (void) xv_set(frame, XV_SHOW, FALSE, NULL);
     }
 }
 
@@ -246,13 +248,13 @@
      * position or size.
      */
 
-		  WIN_RECT_INFO, 0,
+		  WIN_RECT_INFO, 0L,
 
 		  WIN_CONSUME_EVENTS,
 		      WIN_MAP_NOTIFY, WIN_UNMAP_NOTIFY,
-		      0,
+		      NULL,
 		  WIN_IGNORE_EVENT, WIN_REPAINT,
-		  0);
+		  NULL);
     /*
      * Only if the user has not set the width (columns) or height (rows)
      * do we set the default rows and columns.  
@@ -264,8 +266,8 @@
      */
     if ((!userWidth) && (!userHeight)) 
 	(void) xv_set(frame_public,
-			WIN_COLUMNS, 80,
-			WIN_ROWS, 34,
+			WIN_COLUMNS, 80L,
+			WIN_ROWS, 34L,
 			NULL);
     else if (!userHeight)
 	(void) xv_set(frame_public, WIN_ROWS, 34, NULL);
@@ -281,8 +283,8 @@
     else {
 	int             frame_count;
 
-	frame_count = (int) xv_get(xv_server(info), XV_KEY_DATA, FRAME_COUNT);
-	xv_set(xv_server(info), XV_KEY_DATA, FRAME_COUNT, ++frame_count, 0);
+	frame_count = (int) xv_get(xv_server(info), XV_KEY_DATA, (Attr_attribute)FRAME_COUNT, NULL);
+	xv_set(xv_server(info), XV_KEY_DATA, (Attr_attribute)FRAME_COUNT, (Attr_attribute)++frame_count, NULL);
     }
 
     /* Initialise default foreground and background */
@@ -317,22 +319,22 @@
 	XV_SHOW, FALSE,
 	XV_WIDTH, FRAME_FOCUS_UP_WIDTH,
 	XV_HEIGHT, FRAME_FOCUS_UP_HEIGHT,
-	XV_KEY_DATA, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_UP,
-	XV_KEY_DATA, FRAME_FOCUS_UP_IMAGE,
+	XV_KEY_DATA, (Attr_attribute)FRAME_FOCUS_DIRECTION, (Attr_attribute)FRAME_FOCUS_UP,
+	XV_KEY_DATA, (Attr_attribute)FRAME_FOCUS_UP_IMAGE,
 	    xv_create(xv_screen(info), SERVER_IMAGE,
-		XV_WIDTH, 16,
-		XV_HEIGHT, 16,
+		XV_WIDTH, 16L,
+		XV_HEIGHT, 16L,
 		SERVER_IMAGE_BITS, focus_up_bits,
-		SERVER_IMAGE_DEPTH, 1,
-		0),
-	XV_KEY_DATA, FRAME_FOCUS_RIGHT_IMAGE,
+		SERVER_IMAGE_DEPTH, 1L,
+		NULL),
+	XV_KEY_DATA, (Attr_attribute)FRAME_FOCUS_RIGHT_IMAGE,
 	    xv_create(xv_screen(info), SERVER_IMAGE,
-		XV_WIDTH, 16,
-		XV_HEIGHT, 16,
+		XV_WIDTH, 16L,
+		XV_HEIGHT, 16L,
 		SERVER_IMAGE_BITS, focus_right_bits,
-		SERVER_IMAGE_DEPTH, 1,
-		0),
-	0);
+		SERVER_IMAGE_DEPTH, 1L,
+		NULL),
+	NULL);
 
     frame_update_compose_led(frame, False);
 
@@ -358,7 +360,7 @@
 	WIN_BIT_GRAVITY, ForgetGravity,
         WIN_INHERIT_COLORS, TRUE,				  
         XV_HEIGHT, frame_footer_height(scale),
-	XV_KEY_DATA, FRAME_FOOTER_WINDOW, TRUE,
+	XV_KEY_DATA, (Attr_attribute)FRAME_FOOTER_WINDOW, (Attr_attribute)TRUE,
 	NULL);
     
     three_d = defaults_get_boolean("OpenWindows.3DLook.Color",
@@ -389,7 +391,7 @@
 
         WIN_BIT_GRAVITY, ForgetGravity,
         XV_HEIGHT, frame_IMstatus_height(scale),
-        XV_KEY_DATA, FRAME_IMSTATUS_WINDOW, TRUE,
+        XV_KEY_DATA, (Attr_attribute)FRAME_IMSTATUS_WINDOW, (Attr_attribute)TRUE,
         NULL);
 
     three_d = defaults_get_boolean("OpenWindows.3DLook.Color",
diff -Naur xview-3.2p1.4.orig/lib/libxview/frame/frame_sw.c xview-3.2p1.4/lib/libxview/frame/frame_sw.c
--- xview-3.2p1.4.orig/lib/libxview/frame/frame_sw.c	1993-06-29 07:16:08.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/frame/frame_sw.c	2013-01-07 12:50:45.465527000 +0100
@@ -11,6 +11,7 @@
  */
 
 #include <xview_private/fm_impl.h>
+#include <xview/win.h>
 
 #ifdef OW_I18N
 #ifdef FULL_R5
diff -Naur xview-3.2p1.4.orig/lib/libxview/help/help.c xview-3.2p1.4/lib/libxview/help/help.c
--- xview-3.2p1.4.orig/lib/libxview/help/help.c	1993-06-29 07:16:18.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/help/help.c	2013-01-07 12:50:45.493711000 +0100
@@ -59,6 +59,12 @@
 Pkg_private int	    xv_help_get_arg();
 Pkg_private char   *xv_help_get_text();
 
+#ifdef __STDC__
+static void more_help_proc(Panel_item item, Event *event);
+#else
+static void more_help_proc();
+#endif
+
 typedef struct {
      Xv_Cursor    busy_pointer;
      Frame	  help_frame;
@@ -97,7 +103,7 @@
     /* Invoke More Help application */
     switch ( pid = fork() ) {
     case -1:		/* error */
-	xv_error ( 0,
+	xv_error ( (Xv_object)NULL,
 		  ERROR_LAYER,	ERROR_SYSTEM,
 		  ERROR_STRING,	XV_MSG("Help package:  cannot invoke More Help"),
 		  NULL );
@@ -121,7 +127,7 @@
 {
     char	   *sys_command;
 
-    sys_command = (char *) xv_get(item, XV_KEY_DATA, MORE_HELP_KEY);
+    sys_command = (char *) xv_get(item, XV_KEY_DATA, (Attr_attribute)MORE_HELP_KEY);
     if (sys_command)
 	invoke_more_help(event_window(event), sys_command);
 }
@@ -151,7 +157,7 @@
 	 * No top level frame
 	 * May be a menu, try using WIN_FRAME as key data
 	 */
-        notice_window = (Xv_Window)xv_get(window, XV_KEY_DATA, WIN_FRAME);
+        notice_window = (Xv_Window)xv_get(window, XV_KEY_DATA, (Attr_attribute)WIN_FRAME);
 
         if (!notice_window)  {
 	    notice_window = window;   /* No frame: must be top level window */
@@ -159,7 +165,7 @@
     }
 
     help_notice = (Xv_Notice)xv_get(notice_window, 
-                                XV_KEY_DATA, help_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)help_notice_key, 
                                 NULL);
 
     if (!help_notice)  {
@@ -168,13 +174,13 @@
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
 			    message,
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("OK"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
         xv_set(notice_window, 
-            XV_KEY_DATA, help_notice_key, help_notice,
+            XV_KEY_DATA, (Attr_attribute)help_notice_key, help_notice,
             NULL);
     }
     else  {
@@ -183,7 +189,7 @@
 	    NOTICE_BLOCK_THREAD, TRUE,
             NOTICE_MESSAGE_STRINGS,
                 message,
-            0,
+            NULL,
             NOTICE_BUTTON_YES, XV_MSG("OK"),
             XV_SHOW, TRUE, 
             NULL);
@@ -199,7 +205,7 @@
     Help_info	   *help_info;
 
     if (status == DESTROY_CLEANUP) {
-	help_info = (Help_info *) xv_get(client, XV_KEY_DATA, help_info_key);
+	help_info = (Help_info *) xv_get(client, XV_KEY_DATA, (Attr_attribute)help_info_key);
 	if (help_info) {
 	    if (help_info->help_image) {
 		xv_destroy(help_info->help_image);
@@ -235,10 +241,10 @@
 
     if (!help_info_key)
 	help_info_key = xv_unique_key();
-    help_info = (Help_info *) xv_get(screen, XV_KEY_DATA, help_info_key);
+    help_info = (Help_info *) xv_get(screen, XV_KEY_DATA, (Attr_attribute)help_info_key);
     if (!help_info) {
 	help_info = xv_alloc(Help_info);
-	xv_set(screen, XV_KEY_DATA, help_info_key, help_info, 0);
+	xv_set(screen, XV_KEY_DATA, (Attr_attribute)help_info_key, help_info, NULL);
     }
     /* destroy the cached help_image if the depth no longer matches */
     if (help_info->help_image && 
@@ -252,7 +258,7 @@
 			                  XV_WIDTH, 199,
 			                  XV_HEIGHT, 133,
 			                  SERVER_IMAGE_DEPTH, xv_depth(info),
-			                  0);
+			                  NULL);
     }
 
     /* Fill magnifying glass with client window's background color */
@@ -359,27 +365,27 @@
 
     if (!help_info_key)
 	help_info_key = xv_unique_key();
-    help_info = (Help_info *) xv_get(screen, XV_KEY_DATA, help_info_key);
+    help_info = (Help_info *) xv_get(screen, XV_KEY_DATA, (Attr_attribute)help_info_key);
     if (!help_info) {
 	help_info = xv_alloc(Help_info);
-	xv_set(screen, XV_KEY_DATA, help_info_key, help_info, 0);
+	xv_set(screen, XV_KEY_DATA, (Attr_attribute)help_info_key, help_info, NULL);
     }
 
     /* Change to busy pointer */
     if (!help_info->busy_pointer) {
-	help_info->busy_pointer = xv_get(server, XV_KEY_DATA, CURSOR_BUSY_PTR);
+	help_info->busy_pointer = xv_get(server, XV_KEY_DATA, (Attr_attribute)CURSOR_BUSY_PTR);
 	if (!help_info->busy_pointer) {
 	    help_info->busy_pointer = xv_create(screen, CURSOR,
 				     CURSOR_SRC_CHAR, OLC_BUSY_PTR,
 				     CURSOR_MASK_CHAR, OLC_BUSY_MASK_PTR,
-				     0);
+				     NULL);
 	    xv_set(server,
-		   XV_KEY_DATA, CURSOR_BUSY_PTR, help_info->busy_pointer,
-		   0);
+		   XV_KEY_DATA, (Attr_attribute)CURSOR_BUSY_PTR, help_info->busy_pointer,
+		   NULL);
 	}
     }
     current_pointer = xv_get(client_window, WIN_CURSOR);
-    xv_set(client_window, WIN_CURSOR, help_info->busy_pointer, 0);
+    xv_set(client_window, WIN_CURSOR, help_info->busy_pointer, NULL);
 
     length = STRLEN(application_name);
 
@@ -406,24 +412,24 @@
 	    /* No frame: may be a menu, in which case client_frame
 	     * can be found in XV_KEY_DATA WIN_FRAME.
 	     */
-	    client_frame = xv_get(client_window, XV_KEY_DATA, WIN_FRAME);
+	    client_frame = xv_get(client_window, XV_KEY_DATA, (Attr_attribute)WIN_FRAME);
 	if (!client_frame) {
 	    help_request_failed(client_window, client_data,
 		XV_MSG("No frame associated with this window"));
-	    xv_set(client_window, WIN_CURSOR, current_pointer, 0);
+	    xv_set(client_window, WIN_CURSOR, current_pointer, NULL);
 	    return XV_ERROR;
 	}
 	root_window = xv_get(screen, XV_ROOT);
 	help_info->help_frame = xv_create(client_frame, FRAME_HELP,
 					  WIN_PARENT, root_window,
-					  XV_KEY_DATA, help_info_key, help_info,
+					  XV_KEY_DATA, (Attr_attribute)help_info_key, help_info,
 #ifdef OW_I18N
 			                  XV_LABEL_WCS, client_name,
 					  WIN_USE_IM, FALSE,
 #else
 			                  XV_LABEL, client_name,
 #endif /* OW_I18N */
-			                  0);
+			                  NULL);
 	help_frame_rect = *(Rect *) xv_get(help_info->help_frame, XV_RECT);
 	help_frame_rect.r_left = 0;
 	help_frame_rect.r_top = 0;
@@ -441,14 +447,14 @@
 							   * scrolling */
 				TEXTSW_DISABLE_LOAD, TRUE,
 				TEXTSW_READ_ONLY, TRUE,
-				0);
-	textsw_view = xv_get(help_info->help_textsw, OPENWIN_NTH_VIEW, 0);
+				NULL);
+	textsw_view = xv_get(help_info->help_textsw, OPENWIN_NTH_VIEW, NULL);
 	xv_set(textsw_view,
 	       XV_HELP_DATA, "xview:helpWindow",
-	       0);
+	       NULL);
 	help_info->help_textsw_sb = xv_get(help_info->help_textsw,
 	    OPENWIN_VERTICAL_SCROLLBAR, textsw_view);
-	xv_set(help_info->help_textsw_sb, SCROLLBAR_SPLITTABLE, FALSE, 0);
+	xv_set(help_info->help_textsw_sb, SCROLLBAR_SPLITTABLE, FALSE, NULL);
 	mglass_panel = xv_create(help_info->help_frame, PANEL,
 			       XV_X, 0,
 			       XV_Y, 0,
@@ -456,23 +462,23 @@
 			       XV_HEIGHT,
 				   xv_get(help_info->help_textsw, XV_HEIGHT),
 			       XV_HELP_DATA, "xview:helpWindow",
-			       0);
+			       NULL);
 	help_info->mglass_msg = xv_create(mglass_panel, PANEL_MESSAGE,
 	    XV_HELP_DATA, "xview:helpMagnifyingGlass",
-	    0);
+	    NULL);
 	more_help_panel = xv_create(help_info->help_frame, PANEL,
 	    XV_X, 0,
 	    WIN_BELOW, help_info->help_textsw,
 	    XV_WIDTH,
 		199+ xv_get(help_info->help_textsw, XV_WIDTH),
 	    XV_HELP_DATA, "xview:helpWindow",
-	    0);
+	    NULL);
 	help_info->more_help_button = xv_create(more_help_panel, PANEL_BUTTON,
 	    XV_X, 199 + MORE_BUTTON_OFFSET,
 	    PANEL_LABEL_STRING, XV_MSG("More"),
 	    PANEL_NOTIFY_PROC, more_help_proc,
 	    XV_SHOW, FALSE,
-	    0);
+	    NULL);
 	window_fit_height(more_help_panel);
 	window_fit(help_info->help_frame);
     } else {
@@ -485,7 +491,7 @@
 #else
 	       XV_LABEL, client_name,
 #endif
-	       0);
+	       NULL);
 	textsw_reset(help_info->help_textsw, 0, 0);
     }
 
@@ -496,13 +502,13 @@
 			                    XV_HEIGHT, 133,
 			                    SERVER_IMAGE_DEPTH, 1,
 				            SERVER_IMAGE_BITS, mglass_data,
-				            0);
+				            NULL);
 	help_info->mglass_stencil_image = xv_create(screen, SERVER_IMAGE,
 	    XV_WIDTH, 199,
 	    XV_HEIGHT, 133,
 	    SERVER_IMAGE_DEPTH, 1,
 	    SERVER_IMAGE_BITS, mglass_mask_data,
-	    0);
+	    NULL);
     }
     if (!help_info->help_stencil_gc) {
 	DRAWABLE_INFO_MACRO(mglass_panel, dst_info);
@@ -539,25 +545,25 @@
 
     xv_set(help_info->more_help_button,
 	   XV_SHOW,	more_help_cmd ? TRUE : FALSE,
-	   XV_KEY_DATA, MORE_HELP_KEY, more_help_cmd,
-	   0);
+	   XV_KEY_DATA, (Attr_attribute)MORE_HELP_KEY, more_help_cmd,
+	   NULL);
 
     for (i = 0; text; i++) {
 	(void) textsw_insert(help_info->help_textsw, text, strlen(text));
 	text = xv_help_get_text();
     }
-    xv_set(help_info->help_textsw, TEXTSW_FIRST, 0, 0);
+    xv_set(help_info->help_textsw, TEXTSW_FIRST, 0, NULL);
 
-    xv_set(help_info->help_textsw_sb, XV_SHOW, i > HELPTEXTLINES, 0);
+    xv_set(help_info->help_textsw_sb, XV_SHOW, i > HELPTEXTLINES, NULL);
 
     /* Show window, in front of all other windows */
     xv_set(help_info->help_frame,
 	   XV_SHOW, TRUE,
 	   WIN_FRONT,
-	   0);
+	   NULL);
 
     /* Restore pointer */
-    xv_set(client_window, WIN_CURSOR, current_pointer, 0);
+    xv_set(client_window, WIN_CURSOR, current_pointer, NULL);
 
     return XV_OK;
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/help/help.h xview-3.2p1.4/lib/libxview/help/help.h
--- xview-3.2p1.4.orig/lib/libxview/help/help.h	2013-01-07 12:36:35.270645000 +0100
+++ xview-3.2p1.4/lib/libxview/help/help.h	2013-01-07 12:50:45.523178000 +0100
@@ -9,6 +9,8 @@
 #ifndef __xv_help_impl_h
 #define __xv_help_impl_h
 
+/* This file is NOT used */
+
 /*
  *Public Functions 
  */
diff -Naur xview-3.2p1.4.orig/lib/libxview/icon/icon_load.c xview-3.2p1.4/lib/libxview/icon/icon_load.c
--- xview-3.2p1.4.orig/lib/libxview/icon/icon_load.c	1993-06-29 07:16:20.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/icon/icon_load.c	2013-01-07 12:50:45.549759000 +0100
@@ -196,15 +196,17 @@
 		break;
 #endif
 	      default:
-		xv_error(NULL,
+		xv_error((Xv_object)NULL,
 			 ERROR_SEVERITY, ERROR_NON_RECOVERABLE,
 			 ERROR_STRING,
 			     XV_MSG("icon file header valid bits not 16 or 32"),
 			 ERROR_PKG, ICON,
-			 0);
+			 NULL);
+    		return (XV_ERROR);
 	    }
 	}
     }
+    return (XV_OK);
 }
 
 struct pixrect *
@@ -250,7 +252,7 @@
 
     fd = icon_open_header(from_file, error_msg, &header);
     if (fd == NULL)
-	return (NULL);
+	return (Server_image)NULL;
     /*
      * Allocate the memory pixrect and read the actual bits making up the icon.
      */
@@ -308,6 +310,7 @@
     icon->ic_textrect = rect_null;
     icon->ic_text = NULL;
     icon->ic_flags = 0;
+    return (XV_OK);
 }
 
 int
diff -Naur xview-3.2p1.4.orig/lib/libxview/icon/icon_obj.c xview-3.2p1.4/lib/libxview/icon/icon_obj.c
--- xview-3.2p1.4.orig/lib/libxview/icon/icon_obj.c	1993-06-29 07:16:21.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/icon/icon_obj.c	2013-01-07 12:50:45.583073000 +0100
@@ -168,9 +168,9 @@
     short label_changed = FALSE;
     short change_color = FALSE;
     
-    for (; *avlist; avlist = attr_next(avlist)) {
+    for (; (int)*avlist; avlist = attr_next(avlist)) {
 	arg1 = avlist[1];
-	switch (*avlist) {
+	switch ((int)*avlist) {
 
 	  case ICON_WIDTH:
 	    icon->ic_gfxrect.r_width = (short) arg1;
@@ -370,7 +370,7 @@
 {
     Xv_icon_info   *icon = ICON_PRIVATE(icon_public);
 
-    switch (attr) {
+    switch ((int)attr) {
 
       case ICON_WIDTH:
 	return (Xv_opaque) icon->ic_gfxrect.r_width;
@@ -480,6 +480,6 @@
     if ( valid_color )
       icon->workspace_pixel = color.pixel;
     else 
-      icon->workspace_pixel = (unsigned long) xv_get( xv_cms( info ), CMS_BACKGROUND_PIXEL );
+      icon->workspace_pixel = (unsigned int) xv_get( xv_cms( info ), CMS_BACKGROUND_PIXEL );
     XSetWindowBackground( display, xid, icon->workspace_pixel );
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/imcb/aux.c xview-3.2p1.4/lib/libxview/imcb/aux.c
--- xview-3.2p1.4.orig/lib/libxview/imcb/aux.c	1993-06-29 07:15:54.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/imcb/aux.c	2013-01-07 12:50:45.616951000 +0100
@@ -62,10 +62,10 @@
      * Create aux info structure 
      */
     if( !aux_info_create(client_data) ) {
-	xv_error( NULL,
+	xv_error((Xv_object)NULL,
 		ERROR_STRING,
 		XV_MSG("Aux callback: out of memory"),
-		0 );
+		NULL);
     }
     info = (AuxInfo *)AUX_UDATA_INFO(client_data);
 
@@ -138,7 +138,7 @@
 			PANEL_VALUE_WCS,		aux_text,
 			PANEL_NOTIFY_LEVEL,		PANEL_ALL,
 			PANEL_NOTIFY_PROC,		aux_post_event,
-			XV_KEY_DATA,	AUX_KEY_DATA,	info,
+			XV_KEY_DATA,	(Attr_attribute)AUX_KEY_DATA,	info,
 			NULL );
     }
     else if( aux_label ) {
@@ -149,7 +149,7 @@
 			PANEL_VALUE_STORED_LENGTH,	128,
                         PANEL_NOTIFY_LEVEL,             PANEL_ALL,
                         PANEL_NOTIFY_PROC,              aux_post_event,
-                        XV_KEY_DATA,    AUX_KEY_DATA,   info,
+                        XV_KEY_DATA,    (Attr_attribute)AUX_KEY_DATA,   info,
                         NULL );
     }
     else if ( aux_text ) {
@@ -160,7 +160,7 @@
 			PANEL_VALUE_STORED_LENGTH,	128,
                         PANEL_NOTIFY_LEVEL,             PANEL_ALL,
                         PANEL_NOTIFY_PROC,              aux_post_event,
-                        XV_KEY_DATA,    AUX_KEY_DATA,   info,
+                        XV_KEY_DATA,    (Attr_attribute)AUX_KEY_DATA,   info,
                         NULL );
     }
     else {
@@ -169,7 +169,7 @@
                         XV_Y,                           10,
                         PANEL_NOTIFY_LEVEL,             PANEL_ALL,
                         PANEL_NOTIFY_PROC,              aux_post_event,
-                        XV_KEY_DATA,    AUX_KEY_DATA,   info,
+                        XV_KEY_DATA,    (Attr_attribute)AUX_KEY_DATA,   info,
                         NULL );
     }
 
@@ -239,10 +239,10 @@
      */
 
 err_return:     /* xv-object creation failure */
-    xv_error( NULL,
+    xv_error((Xv_object)NULL,
 	ERROR_STRING,
 	XV_MSG("Aux callback: failed to create xv_object "),
-	0 );
+	NULL);
     /*
     return XIMCB_FatalError;
     */
@@ -467,7 +467,7 @@
 /*
 	     printf("width: %d, PANEL_VALUE_STORED_LENGTH: %d, PANEL_VALUE_DISPLAY_LENGTH: %d\n", width, stored_length, display_length);
 */
-             xv_set(item, PANEL_VALUE_DISPLAY_LENGTH, n, 0);
+             xv_set(item, PANEL_VALUE_DISPLAY_LENGTH, n, NULL);
 
 	     /* need to reset the rect information for frame info*/
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/imcb/luc.c xview-3.2p1.4/lib/libxview/imcb/luc.c
--- xview-3.2p1.4.orig/lib/libxview/imcb/luc.c	1993-06-29 07:15:55.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/imcb/luc.c	2013-01-07 12:50:45.649511000 +0100
@@ -156,10 +156,10 @@
     }
 
     if ((info = luc_info_create(client_data)) == NULL) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING,
 		 XV_MSG("luc: out of memory"),
-		 0);
+		 NULL);
 	return;
     }
 
@@ -179,7 +179,7 @@
     if (lfi->canvas == NULL)
 	goto err_return;
     (void) xv_set(lfi->canvas,
-			XV_KEY_DATA, LUC_KEY,	info,
+			XV_KEY_DATA, (Attr_attribute)LUC_KEY,	info,
 			NULL);
 #else /* USE_CANVAS */
     if (lfi->panel == NULL)
@@ -197,7 +197,7 @@
 				PANEL_CHOOSE_ONE,       TRUE,
 				PANEL_EVENT_PROC,	ignore_mouse_handler,
 #ifdef MOUSE_SUPPORT
-				XV_KEY_DATA,            LUC_KEY, info,
+				XV_KEY_DATA,            (Attr_attribute)LUC_KEY, info,
 #endif
 				NULL);
     if (lfi->panel_item == NULL)
@@ -216,10 +216,10 @@
 
 
 err_return:     /* xv-object creation failure */
-    xv_error( NULL,
+    xv_error((Xv_object)NULL,
 	ERROR_STRING,
 	XV_MSG("luc: failed to create xv_object"),
-	0 );
+	NULL);
     return;
 }
 
@@ -248,7 +248,7 @@
                         PANEL_CHOOSE_ONE,       TRUE,
                         PANEL_EVENT_PROC,       ignore_mouse_handler,
 #ifdef MOUSE_SUPPORT
-                        XV_KEY_DATA,            LUC_KEY, info,
+                        XV_KEY_DATA,            (Attr_attribute)LUC_KEY, info,
 
 #endif
                         NULL);
@@ -329,7 +329,7 @@
 		      NULL);
     }
 
-    (void) xv_set(info->frame_info->panel_item, PANEL_VALUE, 0, 0);
+    (void) xv_set(info->frame_info->panel_item, PANEL_VALUE, 0L, NULL);
 #endif /* USE_CANVAS */
 
     info->current = 1;   /* current choice nember */
@@ -449,7 +449,7 @@
     }
 
     (void) xv_set(lfi->canvas,
-		  XV_KEY_DATA, LUC_KEY,	NULL,
+		  XV_KEY_DATA, (Attr_attribute)LUC_KEY,	NULL,
 		  NULL);
     switch (lfi->lfs) {
 	default:
@@ -943,7 +943,7 @@
 		wscat(buf, blank);
 */
 	(void) xv_set(info->frame_info->panel_item,
-		PANEL_CHOICE_STRING_WCS,	count_minus_1, buf,
+		PANEL_CHOICE_STRING_WCS, (Attr_attribute)count_minus_1, buf,
 		NULL);
 	count_minus_1++;
     	choice ++;
@@ -951,11 +951,11 @@
 
     if (info->draw->n_choices > info->num) {
     	(void) xv_set(info->frame_info->panel_item,
-                PANEL_CHOICE_STRING, count_minus_1++ ,
+                PANEL_CHOICE_STRING,  (Attr_attribute)count_minus_1++ ,
 	 	XV_MSG("^N: NEXT"),
                 NULL);
     	(void) xv_set(info->frame_info->panel_item,
-                PANEL_CHOICE_STRING, count_minus_1++ , 
+                PANEL_CHOICE_STRING,  (Attr_attribute)count_minus_1++ , 
 		XV_MSG("^P: PREVIOUS"),
                 NULL);
     }
@@ -1100,7 +1100,7 @@
     }
 
 #ifndef USE_CANVAS
-    (void) xv_set(info->frame_info->panel_item, PANEL_VALUE, info->current-1, NULL);
+    (void) xv_set(info->frame_info->panel_item, PANEL_VALUE, (long)info->current-1, NULL);
 #endif
 
 }
@@ -1173,7 +1173,7 @@
                 PANEL_CHOOSE_ONE,       TRUE,
 		PANEL_EVENT_PROC,	ignore_mouse_handler,
 #ifdef MOUSE_SUPPORT
-		XV_KEY_DATA,            LUC_KEY, info,
+		XV_KEY_DATA,            (Attr_attribute)LUC_KEY, info,
 #endif
                 NULL);
 
@@ -1187,7 +1187,7 @@
 		NULL);
     luc_syncup(luc_check_map, lfi);
 
-    (void) xv_set(lfi->panel_item, PANEL_VALUE, 0, 0);
+    (void) xv_set(lfi->panel_item, PANEL_VALUE, 0L, NULL);
 #endif /* USE_CANVAS */
 
     info->current = 1;   /* current choice nember */
@@ -1206,7 +1206,7 @@
 {
     register LucInfo	*info;
 
-    info = (LucInfo *) xv_get(item, XV_KEY_DATA, LUC_KEY);
+    info = (LucInfo *) xv_get(item, XV_KEY_DATA, (Attr_attribute)LUC_KEY);
 
     info->current = info->first + value + 1;
     dprintf((stderr , "Mouse selection was %d\n" , info->current));
@@ -1359,7 +1359,7 @@
 						NULL,
 		WIN_CONSUME_X_EVENT_MASK,	StructureNotifyMask,
 		WIN_EVENT_PROC,			luc_win_event_proc,
-		XV_KEY_DATA, LUC_WIN_KEY,	lfi,
+		XV_KEY_DATA, (Attr_attribute)LUC_WIN_KEY,	lfi,
 		NULL);
 	if (lfi->frame == NULL)
 	    return NULL;
@@ -1527,7 +1527,7 @@
 
 
     dprintf((stderr, "luc_repaint\n"));
-    if ((info = (LucInfo *) xv_get(canvas, XV_KEY_DATA, LUC_KEY)) == NULL) {
+    if ((info = (LucInfo *) xv_get(canvas, XV_KEY_DATA, (Attr_attribute)LUC_KEY)) == NULL) {
 	/*
 	 * Has been destroyed before actually shown to the screen.
 	 */
@@ -1592,7 +1592,7 @@
     LucFrameState	 new;
 
 
-    lfi = (LucFrameInfo *) xv_get(window, XV_KEY_DATA, LUC_WIN_KEY);
+    lfi = (LucFrameInfo *) xv_get(window, XV_KEY_DATA, (Attr_attribute)LUC_WIN_KEY);
     dprintf((stderr, "event_proc: action %d, lfs = %d, Xevent = %d\n",
 	     event_action(event), lfi->lfs, event_xevent(event)->type));
     new = lfi->lfs;
diff -Naur xview-3.2p1.4.orig/lib/libxview/io_stream/file_strms.c xview-3.2p1.4/lib/libxview/io_stream/file_strms.c
--- xview-3.2p1.4.orig/lib/libxview/io_stream/file_strms.c	1993-06-29 07:15:07.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/io_stream/file_strms.c	2013-01-07 12:50:45.687709000 +0100
@@ -12,12 +12,13 @@
 
 #include <xview/xv_error.h>
 #include <xview_private/io_stream.h>
+#include <stdio.h>	/* fgetc() */
 
 /* STREAM FROM FILE */
 
 #define GetFISData struct xv_file_input_stream_data *data = (struct xv_file_input_stream_data*) in->client_data
 
-static struct xv_file_input_stream_data {
+struct xv_file_input_stream_data {
     FILE           *fp;
     int             lineno;
 };
@@ -130,9 +131,9 @@
     }
     value = (STREAM *) xv_malloc(sizeof(STREAM));
     if (value == NULL) {	/* malloc can fail */
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_SEVERITY, ERROR_SYSTEM,
-		 0);
+		 NULL);
 	return ((STREAM *)NULL);
     }
     value->stream_type = Input;
@@ -141,9 +142,9 @@
     data = (struct xv_file_input_stream_data *) xv_malloc(
 				     sizeof(struct xv_file_input_stream_data));
     if (data == NULL) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_SEVERITY, ERROR_SYSTEM,
-		 0);
+		 NULL);
 	return ((STREAM *)NULL);
     }
     data->fp = fp;
@@ -156,7 +157,7 @@
 
 #define GetFOSData struct xv_file_output_stream_data *data = (struct xv_file_output_stream_data*) out->client_data
 
-static struct xv_file_output_stream_data {
+struct xv_file_output_stream_data {
     FILE           *fp;
     int             lineno;
 };
@@ -237,9 +238,9 @@
     }
     value = (STREAM *) xv_malloc(sizeof(STREAM));
     if (value == NULL) {	/* malloc can fail */
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_SEVERITY, ERROR_SYSTEM,
-		 0);
+		 NULL);
 	return ((STREAM *)NULL);
     }
     value->stream_type = Output;
@@ -248,9 +249,9 @@
     data = (struct xv_file_output_stream_data *) xv_malloc(
 				    sizeof(struct xv_file_output_stream_data));
     if (data == NULL) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_SEVERITY, ERROR_SYSTEM,
-		 0);
+		 NULL);
 	return ((STREAM *)NULL);
     }
     data->fp = fp;
diff -Naur xview-3.2p1.4.orig/lib/libxview/io_stream/input.c xview-3.2p1.4/lib/libxview/io_stream/input.c
--- xview-3.2p1.4.orig/lib/libxview/io_stream/input.c	2013-01-07 12:36:33.456201000 +0100
+++ xview-3.2p1.4/lib/libxview/io_stream/input.c	2013-01-07 13:23:36.786622000 +0100
@@ -13,6 +13,7 @@
 #include <xview_private/i18n_impl.h>
 #include <xview/xv_error.h>
 #include <xview_private/io_stream.h>
+#include <string.h>		/* strlen() */
 
 #define Get_Input_Ops \
 	struct input_ops_vector *ops;\
@@ -22,7 +23,11 @@
 		XV_MSG("input stream not of type input"), 0); \
 	ops = in->ops.input_ops
 
+#ifdef __STDC__
+static char	*stream_getstring(char *s, int n, STREAM *in, Bool include_newline);
+#else
 static char	*stream_getstring();
+#endif
 
 /* GENERIC INPUT FUNCTIONS */
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/io_stream/othr_strms.c xview-3.2p1.4/lib/libxview/io_stream/othr_strms.c
--- xview-3.2p1.4.orig/lib/libxview/io_stream/othr_strms.c	1993-06-29 07:15:05.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/io_stream/othr_strms.c	2013-01-07 12:50:45.760806000 +0100
@@ -17,7 +17,7 @@
 
 #define GetFCSData struct xv_filter_comments_stream_data *data = (struct xv_filter_comments_stream_data*) in->client_data
 
-static struct xv_filter_comments_stream_data {
+struct xv_filter_comments_stream_data {
     Bool            backed_up;
     char            backup, lastchar;
 };
@@ -135,7 +135,7 @@
 
     value = (STREAM *) xv_malloc(sizeof(STREAM));
     if (value == NULL) {
-	xv_error((Xv_opaque)in,
+	xv_error((Xv_object)in,
 		 ERROR_LAYER, ERROR_SYSTEM,
 		 0);
 	return ((STREAM *)NULL);
@@ -147,9 +147,9 @@
     data = (struct xv_filter_comments_stream_data *) xv_malloc(
 				sizeof(struct xv_filter_comments_stream_data));
     if (data == NULL) {
-	xv_error((Xv_opaque)in,
+	xv_error((Xv_object)in,
 		 ERROR_LAYER, ERROR_SYSTEM,
-		 0);
+		 NULL);
 	return ((STREAM *)NULL);
     }
     data->backed_up = False;
diff -Naur xview-3.2p1.4.orig/lib/libxview/io_stream/output.c xview-3.2p1.4/lib/libxview/io_stream/output.c
--- xview-3.2p1.4.orig/lib/libxview/io_stream/output.c	1993-06-29 07:15:06.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/io_stream/output.c	2013-01-07 12:50:45.786321000 +0100
@@ -17,11 +17,11 @@
 #define Get_Output_Ops \
 	struct output_ops_vector *ops;\
 	if (out->stream_type != Output) \
-	    xv_error(NULL, \
+	    xv_error((Xv_object)NULL, \
 		ERROR_SEVERITY, ERROR_NON_RECOVERABLE, \
 		ERROR_STRING, \
 		XV_MSG("output stream not of type output"), \
-		0); \
+		NULL); \
 	ops = out->ops.output_ops
 
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/io_stream/str_strms.c xview-3.2p1.4/lib/libxview/io_stream/str_strms.c
--- xview-3.2p1.4.orig/lib/libxview/io_stream/str_strms.c	1993-06-29 07:15:06.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/io_stream/str_strms.c	2013-01-07 12:50:45.810183000 +0100
@@ -12,12 +12,13 @@
 
 #include <xview/xv_error.h>
 #include <xview_private/io_stream.h>
+#include <stdlib.h>		/* free() */
 
 /* STREAM FROM STRING */
 
 #define GetSISData struct string_input_stream_data	*data = (struct string_input_stream_data*) in->client_data
 
-static struct string_input_stream_data {
+struct string_input_stream_data {
     char           *string;
     int             charpos;
 };
@@ -119,9 +120,9 @@
 
 	value = (STREAM *) xv_malloc(sizeof(STREAM));
 	if (value == NULL) {	/* malloc can fail */
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		     ERROR_LAYER, ERROR_SYSTEM,
-		     0);
+		     NULL);
 	    return ((STREAM *)NULL);
 	}
 	value->stream_type = Input;
@@ -130,9 +131,9 @@
 	data = (struct string_input_stream_data *) xv_malloc(
 				   sizeof(struct string_input_stream_data));
 	if (data == NULL) {
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		     ERROR_LAYER, ERROR_SYSTEM,
-		     0);
+		     NULL);
 	    return ((STREAM *)NULL);
 	}
 	data->string = s;
@@ -148,7 +149,7 @@
 
 #define GetSOSData struct string_output_stream_data *data = (struct string_output_stream_data*) out->client_data
 
-static struct string_output_stream_data {
+struct string_output_stream_data {
     char           *string;
     int             charpos;
 };
@@ -213,9 +214,9 @@
 
 	value = (STREAM *) xv_malloc(sizeof(STREAM));
 	if (value == NULL) {	/* malloc can fail */
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		     ERROR_LAYER, ERROR_SYSTEM,
-		     0);
+		     NULL);
 	    return ((STREAM *)NULL);
 	}
 	value->stream_type = Output;
@@ -224,9 +225,9 @@
 	data = (struct string_output_stream_data *) xv_malloc(
 				  sizeof(struct string_output_stream_data));
 	if (data == NULL) {
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		     ERROR_LAYER, ERROR_SYSTEM,
-		     0);
+		     NULL);
 	    return ((STREAM *)NULL);
 	}
 	data->string = s;
diff -Naur xview-3.2p1.4.orig/lib/libxview/menu/om_compat.c xview-3.2p1.4/lib/libxview/menu/om_compat.c
--- xview-3.2p1.4.orig/lib/libxview/menu/om_compat.c	1993-06-29 07:16:24.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/menu/om_compat.c	2013-01-07 12:50:45.835996000 +0100
@@ -42,9 +42,9 @@
         va_end(args);
     }
     else
-        avlist[0] = NULL;
+        avlist[0] = (Attr_attribute)NULL;
 
-    menu = (Menu) xv_create_avlist(NULL, MENU, avlist);
+    menu = (Menu) xv_create_avlist((Xv_object)NULL, MENU, avlist);
     return menu;
 }
 
@@ -67,9 +67,9 @@
         va_end(valist);
     } 
     else 
-        avlist[0] = NULL; 
+        avlist[0] = (Attr_attribute)NULL; 
 
-    return (Menu_item) xv_create_avlist(NULL, MENUITEM, avlist);
+    return (Menu_item) xv_create_avlist((Xv_object)NULL, MENUITEM, avlist);
 }
 
 Sv1_public      Xv_opaque
diff -Naur xview-3.2p1.4.orig/lib/libxview/menu/om_get.c xview-3.2p1.4/lib/libxview/menu/om_get.c
--- xview-3.2p1.4.orig/lib/libxview/menu/om_get.c	1993-06-29 07:16:23.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/menu/om_get.c	2013-01-07 12:50:45.865239000 +0100
@@ -39,11 +39,11 @@
     Attr_attribute  attr;
     va_list         args;
 {
-    Xv_opaque       v = NULL;
+    Xv_opaque       v = XV_NULL;
     int             value;
     register Xv_menu_info *m = MENU_PRIVATE(menu_public);
 
-    switch (attr) {
+    switch ((int)attr) {
 
       case MENU_NITEMS:
 	v = (Xv_opaque) m->nitems;
@@ -68,7 +68,7 @@
 	break;
 
       case MENU_PARENT:
-	v = NULL;
+	v = XV_NULL;
 	if (m->parent != NULL) {
 	    v = MENU_ITEM_PUBLIC(m->parent);
 	}
@@ -109,11 +109,11 @@
 	break;
 
       case MENU_FIRST_EVENT:
-	v = m->group_info ? (Xv_opaque) & m->group_info->first_event : NULL;
+	v = m->group_info ? (Xv_opaque) & m->group_info->first_event : XV_NULL;
 	break;
 
       case MENU_LAST_EVENT:
-	v = m->group_info ? (Xv_opaque) & m->group_info->last_event : NULL;
+	v = m->group_info ? (Xv_opaque) & m->group_info->last_event : XV_NULL;
 	break;
 
       case MENU_NOTIFY_PROC:
@@ -198,10 +198,10 @@
     Attr_attribute  attr;
     va_list         args;
 {
-    Xv_opaque       v = NULL;
+    Xv_opaque       v = XV_NULL;
     Xv_menu_item_info *mi = MENU_ITEM_PRIVATE(menu_item_public);
 
-    switch (attr) {
+    switch ((int)attr) {
 
       case XV_FONT:
 	v = (Xv_opaque) mi->image.font;
@@ -212,7 +212,7 @@
 	break;
 
       case MENU_PARENT:
-	v = NULL;
+	v = XV_NULL;
 	if (mi->parent != NULL) {
 	    v = MENU_PUBLIC(mi->parent);
 	}
diff -Naur xview-3.2p1.4.orig/lib/libxview/menu/om_impl.h xview-3.2p1.4/lib/libxview/menu/om_impl.h
--- xview-3.2p1.4.orig/lib/libxview/menu/om_impl.h	2013-01-07 12:36:35.002095000 +0100
+++ xview-3.2p1.4/lib/libxview/menu/om_impl.h	2013-01-07 12:50:45.894041000 +0100
@@ -34,8 +34,12 @@
 #endif
 
 #ifndef NULL
+#ifdef __STDC__
+#define	NULL	((void *))
+#else
 #define NULL	0
 #endif
+#endif
 
 #define imax(a, b) ((int)(b) > (int)(a) ? (int)(b) : (int)(a))
 #define range(v, min, max) ((v) >= (min) && (v) <= (max))
@@ -299,5 +303,10 @@
 
 }  Xv_menu_item_info;
 
+#ifdef __STDC__
+Pkg_private int compute_item_size(Xv_menu_info *menu, struct image *std_image, int *status, int call_gen_proc);
+#else
+Pkg_private int compute_item_size();
+#endif
 
 #endif /* _xview_walkmenu_impl_h_already_included */
diff -Naur xview-3.2p1.4.orig/lib/libxview/menu/om_public.c xview-3.2p1.4/lib/libxview/menu/om_public.c
--- xview-3.2p1.4.orig/lib/libxview/menu/om_public.c	2013-01-07 12:36:35.121390000 +0100
+++ xview-3.2p1.4/lib/libxview/menu/om_public.c	2013-01-07 12:50:45.925917000 +0100
@@ -103,6 +103,7 @@
 static void menu_create_pin_window();
 static int menu_group_info_key;
 static Xv_opaque menu_return_result();
+static void pin_choice_notify_proc(Panel_item item, int value, Event *event);
 
 /* Cache the standard menu data obtained from the defaults database */
 static Xv_menu_info *m_cache;
@@ -160,7 +161,7 @@
 	return;
     }
     menu = MENU_PRIVATE(menu_public);
-    server = xv_get(menu_public, XV_OWNER);
+    server = (Xv_Server)xv_get(menu_public, XV_OWNER);
     if (!server)
 	server = xv_default_server;
     if (server != XV_SERVER_FROM_WINDOW(win)) {
@@ -177,7 +178,7 @@
     va_end(valist);
 
     for (; *avlist; avlist = attr_next(avlist)) {
-	switch (avlist[0]) {
+	switch ((int)avlist[0]) {
 
 	  case MENU_ENABLE_RECT:
 	    enable_rectp = (Rect *) avlist[1];
@@ -212,7 +213,7 @@
      * Grab all input and disable anybody but us from writing to screen while
      * we are violating window overlapping.
      */
-    if (XGrabPointer(display, xv_get(win, XV_XID),
+    if (XGrabPointer(display, (int)xv_get(win, XV_XID),
 		     False,	/* owner events: report events relative to
 				 * grab window */
 		     ButtonPressMask | ButtonReleaseMask |
@@ -223,14 +224,14 @@
 		     0,		/* cursor: use default window cursor */
 		     CurrentTime)	/* time */
 	!=GrabSuccess) {
-	xv_error(0,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING, 
 		    XV_MSG("menu_show: unable to grab pointer"),
 		 ERROR_PKG, MENU,
-		 0);
+		 NULL);
 	goto menu_show_error;
     }
-    if (XGrabKeyboard(display, xv_get(win, XV_XID),
+    if (XGrabKeyboard(display, (int)xv_get(win, XV_XID),
 		     False,	/* owner events: report events relative to
 				 * grab window */
 		     GrabModeAsync,	/* pointer mode */
@@ -257,11 +258,11 @@
     menu->state = MENU_STATE_INIT;
     if (!menu_active_menu_key)
 	menu_active_menu_key = xv_unique_key();
-    xv_set(server, XV_KEY_DATA, menu_active_menu_key, menu, 0);
+    xv_set(server, XV_KEY_DATA, (Attr_attribute)menu_active_menu_key, menu, NULL);
     if (!menu_group_info_key)
 	menu_group_info_key = xv_unique_key();
     group_info = (Xv_menu_group_info *) xv_get(server,
-	XV_KEY_DATA, menu_group_info_key);
+	XV_KEY_DATA, (Attr_attribute)menu_group_info_key);
     if (!group_info) {
 	/* Allocate and initialize menu group information */
 	group_info = (Xv_menu_group_info *) xv_malloc(sizeof(Xv_menu_group_info));
@@ -279,7 +280,7 @@
 #endif
 	    goto menu_show_error;
 	}
-	xv_set(server, XV_KEY_DATA, menu_group_info_key, group_info, 0);
+	xv_set(server, XV_KEY_DATA, (Attr_attribute)menu_group_info_key, group_info, NULL);
 	group_info->server = server;
 	group_info->three_d_override = FALSE;
     }
@@ -406,7 +407,7 @@
 			     WIN_IS_IN_LOOP ? NOTIFY_IMMEDIATE :
                              NOTIFY_SAFE);
     m->group_info = NULL;
-    xv_set(server, XV_KEY_DATA, menu_active_menu_key, NULL, 0);
+    xv_set(server, XV_KEY_DATA, (Attr_attribute)menu_active_menu_key, NULL, NULL);
 }
 
 
@@ -501,7 +502,7 @@
 		 ERROR_STRING, 
 		    XV_MSG("Unknown menu type"),
 		 ERROR_PKG, MENU,
-		 0);
+		 NULL);
     }
 
     for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
@@ -528,7 +529,7 @@
 	}	    
     }
 
-    (void) xv_set(object, XV_RESET_REF_COUNT, 0);	/* Mark as ref counted. */
+    (void) xv_set(object, XV_RESET_REF_COUNT, NULL);	/* Mark as ref counted. */
 
     return (int) XV_OK;
 }
@@ -549,7 +550,7 @@
 		 ERROR_STRING, 
 		    XV_MSG("Menu_create_item: unable to allocate menu_item"),
 		 ERROR_PKG, MENU,
-		 0);
+		 NULL);
 	return (int) XV_ERROR;
     }
     mi->color_index = -1;
@@ -639,8 +640,8 @@
 	    else
 		i = m->selected_position - 1;
 	    xv_set(mi->panel_item_handle,
-		   PANEL_VALUE, i,
-		   0);
+		   PANEL_VALUE, (long)i,
+		   NULL);
 	}
 	break;
 
@@ -657,7 +658,7 @@
 		    toggle_value |= mask;
 		mask <<= 1;
 	    }
-	    xv_set(mi->panel_item_handle, PANEL_VALUE, toggle_value, 0);
+	    xv_set(mi->panel_item_handle, PANEL_VALUE, (long)toggle_value, NULL);
 	}
 	break;
 
@@ -717,10 +718,10 @@
     Xv_opaque       v;
 
     if (!menu_item_public)
-	return NULL;
+	return XV_NULL;
     mi = MENU_ITEM_PRIVATE(menu_item_public);
     if (!mi->pullright)
-	return NULL;
+	return XV_NULL;
 
 
     m = mi->parent;
@@ -860,7 +861,7 @@
     Xv_menu_info   *m_base;
 
     if (!menu_public)
-	return NULL;
+	return XV_NULL;
 
     m_base = MENU_PRIVATE(menu_public);
 
@@ -876,8 +877,8 @@
 		     ERROR_STRING,
 		         XV_MSG("menu_find: menu's gen_proc failed to generate a menu"),
 		     ERROR_PKG, MENU,
-		     0);
-	    return NULL;
+		     NULL);
+	    return XV_NULL;
 	}
     } else {
 	m = m_base;
@@ -894,12 +895,12 @@
 			 ERROR_STRING,
 			     XV_MSG("menu_find: menu item's gen_proc failed to generate a menu item"),
 			 ERROR_PKG, MENU,
-			 0);
+			 NULL);
 		goto exit;
 	    }
 	}
 	for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-	    switch (attrs[0]) {
+	    switch ((int)attrs[0]) {
 
 	      case MENU_ACTION:/* & case MENU_NOTIFY_PROC: */
 		correct = mi->notify_proc == (Xv_opaque(*) ()) attrs[1];
@@ -1017,7 +1018,7 @@
     if (gen_proc)
 	(gen_proc) (menu_public, MENU_DISPLAY_DONE);
 
-    return mi ? MENU_ITEM_PUBLIC(mi) : NULL;
+    return mi ? MENU_ITEM_PUBLIC(mi) : XV_NULL;
 }
 
 
@@ -1093,7 +1094,7 @@
 	    if (mi->panel_item_handle)
 		xv_set(mi->panel_item_handle,
 		       PANEL_ITEM_MENU, mi->value,
-		       0);
+		       NULL);
 	}
     }
 
@@ -1101,15 +1102,15 @@
     default_panel_item =
 	menu->item_list[menu->default_position - 1]->panel_item_handle;
     if (default_panel_item) {
-	panel = xv_get(default_panel_item, XV_OWNER);
-	xv_set(panel, PANEL_DEFAULT_ITEM, default_panel_item, 0);
+	panel = (Panel)xv_get(default_panel_item, XV_OWNER);
+	xv_set(panel, PANEL_DEFAULT_ITEM, default_panel_item, NULL);
     }
 
     /* Set the pin window's position if the window has not already
      * been shown.
      */
     frame_rect = (Rect *) xv_get(menu->pin_window, XV_RECT);
-    if (xv_get(menu->pin_window, XV_KEY_DATA, XV_SHOW) != TRUE) {
+    if ((int)xv_get(menu->pin_window, XV_KEY_DATA, (Attr_attribute)XV_SHOW) != TRUE) {
 	frame_rect->r_left = x;
 	frame_rect->r_top = y;
 #ifdef  OW_I18N
@@ -1122,7 +1123,7 @@
     }
     menu->pin_window_rect.r_width = frame_rect->r_width;
     menu->pin_window_rect.r_height = frame_rect->r_height;
-    xv_set(menu->pin_window, XV_RECT, frame_rect, 0);
+    xv_set(menu->pin_window, XV_RECT, frame_rect, NULL);
 
     /* Show the pin window.  Set a flag saying that the window has now
      * been shown.
@@ -1131,8 +1132,8 @@
     xv_set(menu->pin_window,
 	   FRAME_CMD_PUSHPIN_IN, TRUE,
 	   XV_SHOW, TRUE,
-	   XV_KEY_DATA, XV_SHOW, TRUE,
-	   0);
+	   XV_KEY_DATA, (Attr_attribute)XV_SHOW, (Attr_attribute)TRUE,
+	   NULL);
 }
 
 static void
@@ -1146,10 +1147,10 @@
     Menu_item       menu_item;
     void            (*notify_proc) ();
 
-    menu = (Menu) xv_get(item, XV_KEY_DATA, MENU_KEY);
-    menu_item = (Menu_item) xv_get(item, XV_KEY_DATA, MENU_ITEM_KEY);
-    notify_proc = (void (*) ()) xv_get(item, XV_KEY_DATA, MENU_NOTIFY_PROC);
-    gen_proc = (Menu_item (*) ()) xv_get(item, XV_KEY_DATA, MENU_GEN_PROC);
+    menu = (Menu) xv_get(item, XV_KEY_DATA, (Attr_attribute)MENU_KEY);
+    menu_item = (Menu_item) xv_get(item, XV_KEY_DATA, (Attr_attribute)MENU_ITEM_KEY);
+    notify_proc = (void (*) ()) xv_get(item, XV_KEY_DATA, (Attr_attribute)MENU_NOTIFY_PROC);
+    gen_proc = (Menu_item (*) ()) xv_get(item, XV_KEY_DATA, (Attr_attribute)MENU_GEN_PROC);
 
     /* Fake a MENU_FIRST_EVENT */
     m = MENU_PRIVATE(menu);
@@ -1164,7 +1165,7 @@
     if (gen_proc)
 	(void) gen_proc(menu_item, MENU_NOTIFY_DONE);
     if (panel_item_destroy_flag != 2)
-        xv_set(item, PANEL_NOTIFY_STATUS, m->notify_status, 0);
+        xv_set(item, PANEL_NOTIFY_STATUS, m->notify_status, NULL);
 
     xv_free(m->group_info);
 }
@@ -1184,7 +1185,7 @@
     int		    menu_item_index = 0;
     Xv_menu_item_info *mi = NULL;
 
-    menu = (Menu) xv_get(item, XV_KEY_DATA, MENU_KEY);
+    menu = (Menu) xv_get(item, XV_KEY_DATA, (Attr_attribute)MENU_KEY);
     m = MENU_PRIVATE(menu);
     if (m->item_list[0]->title)
 	menu_item_index++;
@@ -1209,11 +1210,11 @@
     mi = m->item_list[menu_item_index];
     if (mi) {
 	xv_set(item,
-	       XV_KEY_DATA, MENU_ITEM_KEY, MENU_ITEM_PUBLIC(mi),
-	       XV_KEY_DATA, MENU_GEN_PROC, mi->gen_proc,
-	       XV_KEY_DATA, MENU_NOTIFY_PROC,
+	       XV_KEY_DATA, (Attr_attribute)MENU_ITEM_KEY, MENU_ITEM_PUBLIC(mi),
+	       XV_KEY_DATA, (Attr_attribute)MENU_GEN_PROC, mi->gen_proc,
+	       XV_KEY_DATA, (Attr_attribute)MENU_NOTIFY_PROC,
 			mi->notify_proc ? mi->notify_proc : m->notify_proc,
-	       0);
+	       NULL);
 	pin_button_notify_proc(item, event);
     }
 }
@@ -1224,7 +1225,7 @@
     Panel           panel;
     Xv_menu_info   *menu;
 {
-    Panel_item	    choice_item = NULL;	/* choice or toggle item */
+    Panel_item	    choice_item = (Panel_item)NULL;	/* choice or toggle item */
     int		    choice_nbr = 0;
     int             i;
     int		    label_width;
@@ -1242,31 +1243,31 @@
 #endif /* OW_I18N */
 	   PANEL_LAYOUT, PANEL_VERTICAL,
 	   PANEL_ITEM_Y_GAP, menu->default_image.margin,
-	   0);
+	   NULL);
     }
     else  {
         xv_set(panel,
 	   PANEL_LAYOUT, PANEL_VERTICAL,
 	   PANEL_ITEM_Y_GAP, menu->default_image.margin,
-	   0);
+	   NULL);
     }
 
     if (menu->class == MENU_CHOICE)
-	choice_item = xv_create(panel, PANEL_CHOICE,
+	choice_item = (Panel_item)xv_create(panel, PANEL_CHOICE,
 				PANEL_ITEM_COLOR, menu->color_index,
 				PANEL_LAYOUT, PANEL_VERTICAL,
 				PANEL_CHOICE_NCOLS, menu->ncols,
 				XV_HELP_DATA,
 				    xv_get(MENU_PUBLIC(menu), XV_HELP_DATA),
-				0);
+				NULL);
     else if (menu->class == MENU_TOGGLE)
-	choice_item = xv_create(panel, PANEL_TOGGLE,
+	choice_item = (Panel_item)xv_create(panel, PANEL_TOGGLE,
 				PANEL_ITEM_COLOR, menu->color_index,
 				PANEL_LAYOUT, PANEL_VERTICAL,
 				PANEL_CHOICE_NCOLS, menu->ncols,
 				XV_HELP_DATA,
 				    xv_get(MENU_PUBLIC(menu), XV_HELP_DATA),
-				0);
+				NULL);
 
     /* decide how many rows should be on the panel */
     if ( menu->ncols_fixed )
@@ -1318,7 +1319,7 @@
 			  PANEL_MENU_ITEM, TRUE,
 			  XV_HELP_DATA, xv_get(MENU_ITEM_PUBLIC(mi), XV_HELP_DATA),
 			  PANEL_NEXT_COL, -1,
-			  0);
+			  NULL);
 	    } else
 		mi->panel_item_handle = xv_create(panel, PANEL_BUTTON,
 			  PANEL_INACTIVE, mi->inactive | mi->no_feedback,
@@ -1326,7 +1327,7 @@
 			  PANEL_LABEL_WIDTH, label_width,
 			  PANEL_MENU_ITEM, TRUE,
 			  XV_HELP_DATA, xv_get(MENU_ITEM_PUBLIC(mi), XV_HELP_DATA),
-			  0);
+			  NULL);
 
 	    if ( (i % num_rows) == 0 )
 		start_new_column = TRUE;
@@ -1335,67 +1336,69 @@
 	    if (choice_item)
 		xv_set(choice_item,
 		       PANEL_CHOICE_IMAGE, choice_nbr++, mi->image.svr_im,
-		       0);
+		       NULL);
 	    else
 		xv_set(mi->panel_item_handle,
 		       PANEL_LABEL_IMAGE, mi->image.svr_im,
-		       0);
+		       NULL);
 #ifdef  OW_I18N
 	} else if (_xv_is_string_attr_exist_nodup(&mi->image.string)) {
 	    _xv_use_pswcs_value_nodup(&mi->image.string);
 	    if (choice_item)
 		xv_set(choice_item,
                        PANEL_CHOICE_STRING_WCS,
-				choice_nbr++,
-				mi->image.string.pswcs.value,
-		       0);
+				(Attr_attribute)choice_nbr++,
+				(Attr_attribute)mi->image.string.pswcs.value,
+		       NULL);
 	    else
 		xv_set(mi->panel_item_handle,
                        PANEL_LABEL_STRING_WCS,	mi->image.string.pswcs.value,
-		       0);
+		       NULL);
 #else
 	} else if (mi->image.string) {
 	    if (choice_item)
 		xv_set(choice_item,
-		       PANEL_CHOICE_STRING, choice_nbr++, mi->image.string,
-		       0);
+		       PANEL_CHOICE_STRING,
+		       		(Attr_attribute)choice_nbr++,
+		       		(Attr_attribute)mi->image.string,
+		       NULL);
 	    else
 		xv_set(mi->panel_item_handle,
 		       PANEL_LABEL_STRING, mi->image.string,
-		       0);
+		       NULL);
 #endif /* OW_I18N */
 	} else
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		     ERROR_SEVERITY, ERROR_NON_RECOVERABLE,
 		     ERROR_STRING,
 			 XV_MSG("menu item does not have a string or image"),
 		     ERROR_PKG, MENU,
-		     0);
+		     NULL);
 	if (mi->pullright) {
 	    if (mi->gen_pullright)
 		mi->value = (mi->gen_pullright) (MENU_ITEM_PUBLIC(mi),
 						 MENU_DISPLAY);
 	    xv_set(mi->panel_item_handle,
 		   PANEL_ITEM_MENU, mi->value,
-		   0);
+		   NULL);
 	} else {
 	    if (choice_item)
 		xv_set(choice_item,
 		   PANEL_NOTIFY_PROC, pin_choice_notify_proc,
-		   XV_KEY_DATA, MENU_KEY, MENU_PUBLIC(menu),
-		   XV_KEY_DATA, MENU_NOTIFY_PROC,
+		   XV_KEY_DATA, (Attr_attribute)MENU_KEY, MENU_PUBLIC(menu),
+		   XV_KEY_DATA, (Attr_attribute)MENU_NOTIFY_PROC,
 			mi->notify_proc ? mi->notify_proc : menu->notify_proc,
-		   XV_KEY_DATA, MENU_GEN_PROC, mi->gen_proc,
-		   0);
+		   XV_KEY_DATA, (Attr_attribute)MENU_GEN_PROC, mi->gen_proc,
+		   NULL);
 	    else
 		xv_set(mi->panel_item_handle,
 		   PANEL_NOTIFY_PROC, pin_button_notify_proc,
-		   XV_KEY_DATA, MENU_KEY, MENU_PUBLIC(menu),
-		   XV_KEY_DATA, MENU_ITEM_KEY, MENU_ITEM_PUBLIC(mi),
-		   XV_KEY_DATA, MENU_NOTIFY_PROC,
+		   XV_KEY_DATA, (Attr_attribute)MENU_KEY, MENU_PUBLIC(menu),
+		   XV_KEY_DATA, (Attr_attribute)MENU_ITEM_KEY, MENU_ITEM_PUBLIC(mi),
+		   XV_KEY_DATA, (Attr_attribute)MENU_NOTIFY_PROC,
 			mi->notify_proc ? mi->notify_proc : menu->notify_proc,
-		   XV_KEY_DATA, MENU_GEN_PROC, mi->gen_proc,
-		   0);
+		   XV_KEY_DATA, (Attr_attribute)MENU_GEN_PROC, mi->gen_proc,
+		   NULL);
 	}
     }
     if (menu->class == MENU_CHOICE) {
@@ -1404,7 +1407,7 @@
 		break;
 	if (menu->item_list[0]->title)
 	    i--;
-	xv_set(choice_item, PANEL_VALUE, i, 0);
+	xv_set(choice_item, PANEL_VALUE, (long)i, NULL);
     } else if (menu->class == MENU_TOGGLE) {
 	i = 0;
 	if (menu->item_list[0]->title)
@@ -1416,10 +1419,10 @@
 		toggle_value |= mask;
 	    mask <<= 1;
 	}
-	xv_set(choice_item, PANEL_VALUE, toggle_value, 0);
+	xv_set(choice_item, PANEL_VALUE, (long)toggle_value, NULL);
     }
 
-    xv_set(panel, WIN_FIT_HEIGHT, 1, WIN_FIT_WIDTH, 1, 0);
+    xv_set(panel, WIN_FIT_HEIGHT, 1, WIN_FIT_WIDTH, 1, NULL);
 }
 
 
@@ -1452,7 +1455,7 @@
                                 XV_SHOW, FALSE,
                                 WIN_PARENT, xv_get(parent_frame, XV_ROOT),
                                 XV_VISUAL, menu->group_info->vinfo->visual,
-                                0);
+                                NULL);
     }
     else {
           cmd_frame = xv_create(parent_frame, FRAME_CMD,
@@ -1464,7 +1467,7 @@
 #endif /* OW_I18N */
                                 XV_SHOW, FALSE,
                                 WIN_PARENT, xv_get(parent_frame, XV_ROOT),
-                                0);
+                                NULL);
     }
     panel = xv_get(cmd_frame, FRAME_CMD_PANEL);
     if (menu->group_info && menu->group_info->three_d) {
@@ -1477,13 +1480,13 @@
 	    xv_set(panel,
 		   WIN_COLOR_INFO, xv_get(menu->group_info->client_window,
 		       WIN_COLOR_INFO),
-		   0);
+		   NULL);
     }
     xv_set(panel,
 	   XV_HELP_DATA, xv_get(menu_public, XV_HELP_DATA),
-	   0);
+	   NULL);
     menu_create_pin_panel_items(panel, menu);
-    xv_set(cmd_frame, WIN_FIT_HEIGHT, 0, WIN_FIT_WIDTH, 0, 0);
+    xv_set(cmd_frame, WIN_FIT_HEIGHT, 0, WIN_FIT_WIDTH, 0, NULL);
     menu_set_pin_window(menu, cmd_frame);
 }
 
@@ -1492,7 +1495,7 @@
 menu_save_pin_window_rect(win)
     Xv_Window	    win;
 {
-    Xv_menu_info   *m = (Xv_menu_info *) xv_get(win, XV_KEY_DATA, MENU_MENU);
+    Xv_menu_info   *m = (Xv_menu_info *) xv_get(win, XV_KEY_DATA, (Attr_attribute)MENU_MENU);
 
     if (m)
 	frame_get_rect(win, &m->pin_window_rect);
@@ -1513,7 +1516,7 @@
     if (event_action(event) == ACTION_DISMISS) {
 	menu_save_pin_window_rect(win);
     } else if (event_action(event) == ACTION_CLOSE) {
-	m = (Xv_menu_info *) xv_get(win, XV_KEY_DATA, MENU_MENU);
+	m = (Xv_menu_info *) xv_get(win, XV_KEY_DATA, (Attr_attribute)MENU_MENU);
 	if (m) {
 	    m->item_list[0]->inactive = FALSE;
 		/* first menu item is pushpin-title */
@@ -1604,7 +1607,7 @@
 	     * Get group info cached on server
 	     */
             group_info = (Xv_menu_group_info *) xv_get(server,
-	                XV_KEY_DATA, menu_group_info_key);
+	                XV_KEY_DATA, (Attr_attribute)menu_group_info_key);
 
             if (!group_info) {
 	        /* Allocate and initialize menu group information */
@@ -1616,7 +1619,7 @@
 		         ERROR_PKG, MENU,
 		         0);
 	        }
-	        xv_set(server, XV_KEY_DATA, menu_group_info_key, group_info, 0);
+	        xv_set(server, XV_KEY_DATA, (Attr_attribute)menu_group_info_key, group_info, NULL);
 	        group_info->server = server;
             }
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/menu/om_render.c xview-3.2p1.4/lib/libxview/menu/om_render.c
--- xview-3.2p1.4.orig/lib/libxview/menu/om_render.c	2013-01-07 12:36:48.106481000 +0100
+++ xview-3.2p1.4/lib/libxview/menu/om_render.c	2013-01-07 12:50:45.978635000 +0100
@@ -35,6 +35,7 @@
 #include <xview/window.h>
 #include <xview/win_input.h>
 #include <xview/win_struct.h>
+#include <xview_private/windowimpl.h>
 
 
 #include <X11/Xlib.h>
@@ -198,17 +199,17 @@
      */
     if (gen_proc = menu->gen_proc) {
 	gen_menu = gen_proc(MENU_PUBLIC(menu), MENU_DISPLAY);
-	if (gen_menu == NULL) {
+	if (gen_menu == (Menu)NULL) {
 	    xv_error((Xv_opaque) menu,
 		     ERROR_STRING,
 		       XV_MSG("menu_render: menu's gen_proc failed to generate a menu"),
 		     ERROR_PKG, MENU,
-		     0);
+		     NULL);
 	    cleanup(menu, CLEANUP_ABORT);
 	    return;
 	}
 	m = MENU_PRIVATE(gen_menu);
-	xv_set(group->server, XV_KEY_DATA, menu_active_menu_key, m, 0);
+	xv_set(group->server, XV_KEY_DATA, (Attr_attribute)menu_active_menu_key, m, NULL);
 	m->busy_proc = menu->busy_proc;
 	m->done_proc = menu->done_proc;
 	m->enable_rect = menu->enable_rect;
@@ -221,9 +222,9 @@
 	m->group_info = group;
 	m->menu_mark = 0;
 	xv_set(gen_menu,
-	       XV_KEY_DATA, PANEL_BUTTON,
-	           xv_get(MENU_PUBLIC(menu), XV_KEY_DATA, PANEL_BUTTON),
-	       0);
+	       XV_KEY_DATA, (Attr_attribute)PANEL_BUTTON,
+	           xv_get(MENU_PUBLIC(menu), XV_KEY_DATA, (Attr_attribute)PANEL_BUTTON),
+	       NULL);
     } else {
 	m = menu;
     }
@@ -242,19 +243,19 @@
 	    m->group_info->three_d ? FALSE : TRUE, /* borders */
             m->group_info->vinfo->visual, &new_window);
 	if (!m->window) {
-	    xv_error(0,
+	    xv_error((Xv_object)NULL,
 		     ERROR_STRING,
 		         XV_MSG("menu_create: unable to allocate menu window"),
 		     ERROR_PKG, MENU,
-		     0);
+		     NULL);
 	    cleanup(m, CLEANUP_ABORT);
 	    return;
 	}
 	if (!new_window)
 	    used_window_rect = *(Rect *)xv_get(m->window, XV_RECT);
 	xv_set(m->window,
-	       XV_KEY_DATA, MENU_WINDOW_MENU, m,
-	       0);
+	       XV_KEY_DATA, (Attr_attribute)MENU_WINDOW_MENU, m,
+	       NULL);
         /* fix to make xv_window_loop work for menus */
         if (WIN_IS_IN_LOOP)
             notify_interpose_event_func(m->window,
@@ -276,7 +277,7 @@
 		FONT_FAMILY, family,
 		FONT_STYLE, FONT_STYLE_BOLD,
 		FONT_SIZE, (size) ? size : FONT_SIZE_DEFAULT,
-		0);
+		NULL);
 	if (!m->default_image.bold_font)
 	    m->default_image.bold_font = m->default_image.font;
     }
@@ -291,7 +292,7 @@
     DRAWABLE_INFO_MACRO(m->window, menu_window_info);
     if (m->group_info->vinfo->visual ==
 			      (Visual *)xv_get(group->client_window, XV_VISUAL))
-        xv_set(m->window, WIN_COLOR_INFO, color_info, 0);
+        xv_set(m->window, WIN_COLOR_INFO, color_info, NULL);
 
 #if 1
     /* martin-2.buck@student.uni-ulm.de */
@@ -312,7 +313,7 @@
 	        m->ginfo = xv_init_olgx(m->window, &m->group_info->three_d,
 				    m->default_image.font);
 	    }
-	xv_set(m->window, WIN_BACKGROUND_COLOR, 0, 0);
+	xv_set(m->window, WIN_BACKGROUND_COLOR, 0, NULL);
     }
 #if 1
     /* martin-2.buck@student.uni-ulm.de */
@@ -331,20 +332,20 @@
                 menu_shadow_event_proc, FALSE,
                 group->vinfo->visual, &new_window);							
             if (!m->shadow_window) {
-                xv_error(0,
+                xv_error((Xv_object)NULL,
                          ERROR_STRING,
                              XV_MSG("menu_create: unable to allocate shadow window"),
                          ERROR_PKG, MENU,
-                         0);
+                         NULL);
                 cleanup(m, CLEANUP_ABORT);
                 return;
             }
             xv_set(m->shadow_window,
-                   XV_KEY_DATA, MENU_SHADOW_MENU, m,
-                   0);
+                   XV_KEY_DATA, (Attr_attribute)MENU_SHADOW_MENU, m,
+                   NULL);
 	} 
 	if (xv_depth(client_window_info) > 1) {
-	    xv_set(m->shadow_window, WIN_COLOR_INFO, color_info, 0);
+	    xv_set(m->shadow_window, WIN_COLOR_INFO, color_info, NULL);
 	}
     }
 
@@ -487,9 +488,9 @@
      * Define the menu and shadow window dimensions.  Note: shadow rect width &
      * height = menu rect width & height
      */
-    xv_set(m->window, XV_RECT, &m->fs_menurect, 0);
+    xv_set(m->window, XV_RECT, &m->fs_menurect, NULL);
     if (!m->group_info->three_d)
-	xv_set(m->shadow_window, XV_RECT, &shadowrect, 0);
+	xv_set(m->shadow_window, XV_RECT, &shadowrect, NULL);
 
     XFlush(XV_DISPLAY_FROM_WINDOW(m->window));
 
@@ -511,12 +512,12 @@
      */
     if (!m->group_info->three_d) {
 	/* Note: Shadow window must be mapped before menu window.  */
-	xv_set(m->shadow_window, XV_SHOW, TRUE, 0);
+	xv_set(m->shadow_window, XV_SHOW, TRUE, NULL);
     }
-    xv_set(m->window, XV_SHOW, TRUE, 0);
+    xv_set(m->window, XV_SHOW, TRUE, NULL);
 
     if (xv_get(xv_server(root_window_info), SERVER_JOURNALLING))
-	xv_set(xv_server(root_window_info), SERVER_JOURNAL_SYNC_EVENT, 1, 0);
+	xv_set(xv_server(root_window_info), SERVER_JOURNAL_SYNC_EVENT, 1, NULL);
 
     if (m->group_info->depth <= 1) {
 	/*
@@ -1229,7 +1230,7 @@
 	DRAWABLE_INFO_MACRO(root_window, info);
 	if (m->window) {
 	    /* Note: Menu window must be unmapped before shadow window */
-	    xv_set(m->window, XV_SHOW, FALSE, 0);
+	    xv_set(m->window, XV_SHOW, FALSE, NULL);
 	    m->active = FALSE;
 	    screen_set_cached_window_busy(xv_screen(info), m->window, FALSE);
             /* fix to make xv_window_loop work for menus */
@@ -1240,13 +1241,13 @@
 	    m->window = NULL;
 	}
 	if (m->shadow_window) {
-	    xv_set(m->shadow_window, XV_SHOW, FALSE, 0);
+	    xv_set(m->shadow_window, XV_SHOW, FALSE, NULL);
 	    screen_set_cached_window_busy(xv_screen(info), m->shadow_window,
 					  FALSE);
 	    m->shadow_window = NULL;
 	}
 	if (xv_get(xv_server(info), SERVER_JOURNALLING))
-	    xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1, 0);
+	    xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1, NULL);
 	--m->group_info->depth;
 	if (m->gen_items)
 	    destroy_gen_items(m);
@@ -1811,8 +1812,8 @@
 
     /* Active menu is now the submenu */
     xv_set(mi->parent->group_info->server,
-	   XV_KEY_DATA, menu_active_menu_key, m,
-	   0);
+	   XV_KEY_DATA, (Attr_attribute)menu_active_menu_key, m,
+	   NULL);
     mi->parent->group_info->selected_menu = m;
 
     /* Ensure default image fonts valid */
@@ -1857,8 +1858,8 @@
 
     /* Active menu is now the parent of this submenu */
     xv_set(m->group_info->server,
-           XV_KEY_DATA, menu_active_menu_key, parent_menu,
-	   0);
+           XV_KEY_DATA, (Attr_attribute)menu_active_menu_key, parent_menu,
+	   NULL);
 
     /* Clean up the parent menu */
     switch (m->status) {
@@ -2031,7 +2032,7 @@
     if (color_index >= 0) {
         save_black = olgx_get_single_color(m->ginfo, OLGX_BLACK);
         olgx_set_single_color(m->ginfo, OLGX_BLACK,
-    			      xv_get(xv_cms(info), CMS_PIXEL, color_index),
+    			      (unsigned int)xv_get(xv_cms(info), CMS_PIXEL, color_index),
 			      OLGX_SPECIAL);
     }	
     if (mi->image.font && mi->image.font != m->default_image.font)
@@ -2286,7 +2287,7 @@
 {
     register Xv_menu_info *m;
 
-    m = (Xv_menu_info *) xv_get(window, XV_KEY_DATA, MENU_WINDOW_MENU);
+    m = (Xv_menu_info *) xv_get(window, XV_KEY_DATA, (Attr_attribute)MENU_WINDOW_MENU);
     if (!m || !m->group_info)
 	return;
     if (m->group_info->client_window && event_id(event) == WIN_REPAINT)
@@ -2301,7 +2302,7 @@
 {
     Xv_menu_info   *m;
 
-    m = (Xv_menu_info *) xv_get(window, XV_KEY_DATA, MENU_SHADOW_MENU);
+    m = (Xv_menu_info *) xv_get(window, XV_KEY_DATA, (Attr_attribute)MENU_SHADOW_MENU);
     if (!m || !m->group_info)
 	return;
     if (m->group_info->client_window && event_id(event) == WIN_REPAINT)
@@ -2500,7 +2501,7 @@
     xid = xv_xid(info);
 
     /* Create the shadow's 75% gray pattern Graphics Context */
-    shadow_gc = (GC) xv_get(screen, XV_KEY_DATA, MENU_SHADOW_GC);
+    shadow_gc = (GC) xv_get(screen, XV_KEY_DATA, (Attr_attribute)MENU_SHADOW_GC);
     if (!shadow_gc) {
 	gc_value.foreground = xv_fg(info);
 	gc_value.background = xv_bg(info);
@@ -2513,14 +2514,14 @@
 	    GCForeground | GCBackground | GCFunction | GCPlaneMask |
 	    GCStipple | GCFillStyle, &gc_value);
 	if (!shadow_gc) {
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		     ERROR_STRING,
 		       XV_MSG("menu_create: unable to create shadow Graphics Context"),
 		     ERROR_PKG, MENU,
-		     0);
+		     NULL);
 	    return;
 	}
-	xv_set(screen, XV_KEY_DATA, MENU_SHADOW_GC, shadow_gc, 0);
+	xv_set(screen, XV_KEY_DATA, (Attr_attribute)MENU_SHADOW_GC, shadow_gc, NULL);
     }
 
     /* Fill in shadow window with shadow pattern */
@@ -2585,7 +2586,7 @@
     int		    row;
 
     m = (Xv_menu_info *) xv_get(XV_SERVER_FROM_WINDOW(win),
-	XV_KEY_DATA, menu_active_menu_key);
+	XV_KEY_DATA, (Attr_attribute)menu_active_menu_key);
     if (!m)
 	return (notify_next_event_func(win, (Notify_event)event, arg, type));
 
@@ -2676,7 +2677,7 @@
 	    /* Find the menu item under the pointer */
 	    help_item = find_item_nbr(m, event, &row, &column);
 	    if (help_item > m->nitems)
-		help_item = NULL;	/* inside the menu, but not no menu items */
+		help_item = 0;	/* inside the menu, but not no menu items */
 	    /* Get the help data string for the menu item */
 	    help_data = NULL;
 	    if (help_item)
@@ -2692,9 +2693,9 @@
 	event->ie_locy -= m->menurect.r_top;
 	/* Show help for menu item under the pointer */
 	xv_set(m->window,
-	    XV_KEY_DATA, WIN_FRAME,
+	    XV_KEY_DATA, (Attr_attribute)WIN_FRAME,
 		xv_get(m->group_info->client_window, WIN_FRAME),
-	    0);
+	    NULL);
 
 	/*
 	 * Instead of calling xv_help_show, we: 
@@ -2746,12 +2747,12 @@
 		       WIN_MOUSE_XY,
 			   m->pushpin_rect.r_left - m->menurect.r_left,
 			   m->pushpin_rect.r_top - m->menurect.r_top,
-		       0);
+		       NULL);
 	    } else {
 		compute_menu_item_paint_rect(m, m->curitem, &rect, &mi_top);
 		xv_set(m->window,
 		       WIN_MOUSE_XY, rect.r_left + 1, mi_top,
-		       0);
+		       NULL);
 	    }
 	}
 	return (NOTIFY_DONE);
@@ -2785,7 +2786,7 @@
 	    if (!m->group_info)
 		return (NOTIFY_DONE);	/* menu_done executed */
 	    m = (Xv_menu_info *) xv_get(m->group_info->server,
-					XV_KEY_DATA, menu_active_menu_key);
+					XV_KEY_DATA, (Attr_attribute)menu_active_menu_key);
 	} while (!keyboard_event && m && m->status == MENU_STATUS_PARENT);
 
     if (m
diff -Naur xview-3.2p1.4.orig/lib/libxview/menu/om_set.c xview-3.2p1.4/lib/libxview/menu/om_set.c
--- xview-3.2p1.4.orig/lib/libxview/menu/om_set.c	1993-06-29 07:16:24.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/menu/om_set.c	2013-01-07 12:50:46.047325000 +0100
@@ -12,12 +12,16 @@
 
 /* --------------------------------------------------------------------- */
 #include <sys/types.h>
+#ifdef __linux__
+#include <ctype.h>			/* isascii() */
+#endif
 #include <xview_private/om_impl.h>
 #include <xview_private/draw_impl.h>
 #include <xview_private/fm_impl.h>
 #include <xview/font.h>
 #include <xview/notify.h>
 #include <xview/panel.h>
+#include <xview_private/windowimpl.h>
 
 /* -------------------------------------------------------------------- */
 
@@ -94,9 +98,9 @@
     struct image        *std_image;
     int                 status;
 
-    for (; *attrs; attrs = attr_next(attrs)) {
+    for (; (int)*attrs; attrs = attr_next(attrs)) {
 	bad_attr = FALSE;
-	switch (attrs[0]) {
+	switch ((int)attrs[0]) {
 
 	  case MENU_ACTION_IMAGE:
 	  case MENU_ACTION_ITEM:
@@ -117,8 +121,8 @@
 #endif /* OW_I18N */
 	    if (m->nitems < m->max_nitems || extend_item_list(m)) {
 		m->item_list[m->nitems++] = MENU_ITEM_PRIVATE(
-						   xv_create(NULL, MENUITEM,
-			    MENU_RELEASE, attrs[0], attrs[1], attrs[2], 0));
+						   xv_create((Xv_object)NULL, MENUITEM,
+			    MENU_RELEASE, attrs[0], attrs[1], attrs[2], NULL));
 	    }
 	    break;
 
@@ -129,9 +133,9 @@
 #endif /* OW_I18N */
             if (m->nitems < m->max_nitems || extend_item_list(m)) {
                 m->item_list[m->nitems++] = MENU_ITEM_PRIVATE(
-                                                   xv_create(NULL, MENUITEM,
+                                                   xv_create((Xv_object)NULL, MENUITEM,
                             MENU_RELEASE, attrs[0], attrs[1], attrs[2], 
-				attrs[3],0));
+				attrs[3],NULL));
             }
             break;
           /* ACC_XVIEW */
@@ -268,11 +272,11 @@
 	  case XV_FONT:
 	    *attrs = ATTR_NOP(*attrs);
             if (m->default_image.font) {
-                xv_set(m->default_image.font, XV_DECREMENT_REF_COUNT, 0);
+                xv_set(m->default_image.font, XV_DECREMENT_REF_COUNT, NULL);
             }
             m->default_image.font = attrs[1];
             if (m->default_image.font) {
-                xv_set(m->default_image.font, XV_INCREMENT_REF_COUNT, 0);
+                xv_set(m->default_image.font, XV_INCREMENT_REF_COUNT, NULL);
             }
             m->default_image.width = m->default_image.height = 0;
 	    break;
@@ -310,10 +314,10 @@
 		while (*a) {
 		    if (m->nitems < m->max_nitems || extend_item_list(m)) {
 			m->item_list[m->nitems] = MENU_ITEM_PRIVATE(
-						   xv_create(NULL, MENUITEM,
+						   xv_create((Xv_object)NULL, MENUITEM,
 							     MENU_RELEASE,
 						      MENU_IMAGE_ITEM, *a++,
-							 m->nitems + 1, 0));
+							 m->nitems + 1, NULL));
 		    }
 		    m->nitems++;
 		}
@@ -357,9 +361,9 @@
 	  case MENU_ITEM:
 	    if (m->nitems < m->max_nitems || extend_item_list(m)) {
 		m->item_list[m->nitems] = MENU_ITEM_PRIVATE(xv_create_avlist(
-						NULL, MENUITEM, &attrs[1]));
+						XV_NULL, MENUITEM, &attrs[1]));
 	    }
-	    (void) xv_set(MENU_ITEM_PUBLIC(m->item_list[m->nitems++]), MENU_RELEASE, 0);
+	    (void) xv_set(MENU_ITEM_PUBLIC(m->item_list[m->nitems++]), MENU_RELEASE, NULL);
 	    repin = TRUE;
 	    break;
 
@@ -394,7 +398,7 @@
 	    break;
 
 	  case MENU_PIN:
-	    if (attrs[1]) {
+	    if ((int)attrs[1]) {
 		if (!m->pin)
 		    menu_add_pin(m);
 	    } else if (m->pin) {
@@ -507,12 +511,12 @@
                 while (*a) {
                     if (m->nitems < m->max_nitems || extend_item_list(m)) {
                         m->item_list[m->nitems] = MENU_ITEM_PRIVATE(
-                                                   xv_create(NULL, MENUITEM,
+                                                   xv_create((Xv_object)NULL, MENUITEM,
                                                              MENU_RELEASE,
-                                        (attrs[0] == MENU_STRINGS) ?
+                                        ((int)attrs[0] == MENU_STRINGS) ?
                                                            MENU_STRING_ITEM :
                                                            MENU_STRING_ITEM_WCS,
-						*a++, m->nitems + 1, 0));
+						*a++, m->nitems + 1, NULL));
                     }
                     m->nitems++;
                 }
@@ -527,12 +531,12 @@
                 while (*a) {
                     if (m->nitems < m->max_nitems || extend_item_list(m)) {
                         m->item_list[m->nitems] = MENU_ITEM_PRIVATE(
-                                                   xv_create(NULL, MENUITEM,
+                                                   xv_create((Xv_object)NULL, MENUITEM,
 							     XV_INSTANCE_NAME, *a,
                                                              MENU_RELEASE,
-                                        (attrs[0] == MENU_STRINGS_AND_ACCELERATORS) ?
+                                        ((int)attrs[0] == MENU_STRINGS_AND_ACCELERATORS) ?
                                                            MENU_STRING_AND_ACCELERATOR:
-                                                           MENU_STRING_AND_ACCELERATOR_WCS,                                                *a++, *a++, 0));
+                                                           MENU_STRING_AND_ACCELERATOR_WCS,                                                *a++, *a++, NULL));
                     }
                     m->nitems++; 
                 }
@@ -547,10 +551,10 @@
 		while (*a) {
 		    if (m->nitems < m->max_nitems || extend_item_list(m)) {
 			m->item_list[m->nitems] = MENU_ITEM_PRIVATE(
-						   xv_create(NULL, MENUITEM,
+						   xv_create((Xv_object)NULL, MENUITEM,
 							     MENU_RELEASE,
 							   MENU_STRING_ITEM,
-						   *a++, m->nitems + 1, 0));
+						   *a++, m->nitems + 1, NULL));
 		    }
 		    m->nitems++;
 		}
@@ -565,11 +569,11 @@
                 while (*a) {
                     if (m->nitems < m->max_nitems || extend_item_list(m)) {
                         m->item_list[m->nitems] = MENU_ITEM_PRIVATE(
-                                                   xv_create(NULL, MENUITEM,
+                                                   xv_create((Xv_object)NULL, MENUITEM,
                                                 XV_INSTANCE_NAME, *a,
                                                 MENU_RELEASE,
                                                 MENU_STRING_AND_ACCELERATOR,
-                                                *a++,  *a++, 0));
+                                                *a++,  *a++, NULL));
                     }
                     m->nitems++;
                 }
@@ -596,7 +600,7 @@
                         MENU_STRING :
                         MENU_TITLE_ITEM_WCS == (Menu_attribute) attrs[0] ?
                             MENU_STRING_WCS : MENU_IMAGE,
-                       attrs[1], 0);
+                       attrs[1], NULL);
             break;
 #else
 	  case MENU_TITLE_ITEM:
@@ -609,7 +613,7 @@
 		xv_set(MENU_ITEM_PUBLIC(m->item_list[0]),
 		       MENU_TITLE_ITEM == (Menu_attribute) attrs[0] ?
 			   MENU_STRING : MENU_IMAGE,
-		       attrs[1], 0);
+		       attrs[1], NULL);
 	    break;
 #endif /* OW_I18N */
 
@@ -631,20 +635,20 @@
 		    (void) sprintf(dummy,
 			   XV_MSG("Invalid argument for attribute MENU_LINE_AFTER_ITEM: %d"),
 				   (int) attrs[1]);
-		    xv_error(NULL,
+		    xv_error((Xv_object)NULL,
 			     ERROR_STRING, dummy,
 			     ERROR_PKG, MENU,
-			     0);
+			     NULL);
 		}
 	    }
 	    break;
 
 	  case MENU_CLASS:
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		 ERROR_STRING, 
 		    XV_MSG("MENU_CLASS attribute is get-only"),
 		 ERROR_PKG, MENU,
-		 0);
+		 NULL);
 	    break;
 	
 	  default:
@@ -679,14 +683,14 @@
 
     for (; *attrs; attrs = attr_next(attrs)) {
 	bad_attr = FALSE;
-	switch (attrs[0]) {
+	switch ((int)attrs[0]) {
 
 	  case MENU_ACTION:	/* == MENU_ACTION_PROC == MENU_NOTIFY_PROC */
 	    mi->notify_proc = (Xv_opaque(*) ()) attrs[1];
 	    if (mi->parent && mi->parent->pin_window && mi->panel_item_handle) {
 		xv_set(mi->panel_item_handle,
-		       XV_KEY_DATA, MENU_NOTIFY_PROC, mi->notify_proc,
-		       0);
+		       XV_KEY_DATA, (Attr_attribute)MENU_NOTIFY_PROC, mi->notify_proc,
+		       NULL);
 	    }
 	    break;
 
@@ -695,7 +699,7 @@
           case MENU_ACTION_ITEM_WCS:
             if (mi->image.free_string)
 		_xv_free_string_attr_nodup(&mi->image.string);
-	    if (attrs[0] == MENU_ACTION_ITEM)
+	    if ((int)attrs[0] == MENU_ACTION_ITEM)
 	        _xv_set_mbs_attr_nodup(&mi->image.string,
 				       (char *) attrs[1]);
 	    else
@@ -707,8 +711,8 @@
 		_xv_use_pswcs_value_nodup(&mi->image.string);
 		xv_set(mi->panel_item_handle,
                        PANEL_LABEL_STRING_WCS,	mi->image.string.pswcs.value,
-                       XV_KEY_DATA, MENU_NOTIFY_PROC, mi->notify_proc,
-                       0);
+                       XV_KEY_DATA, (Attr_attribute)MENU_NOTIFY_PROC, mi->notify_proc,
+                       NULL);
             }
             break;
 
@@ -727,7 +731,7 @@
 		}
 	    }
 
-	    if (attrs[0] == MENU_ACTION_ACCELERATOR){
+	    if ((int)attrs[0] == MENU_ACTION_ACCELERATOR){
 	        _xv_set_mbs_attr_nodup(&mi->image.string,
 				       (char *) attrs[1]);
 	        _xv_set_mbs_attr_dup(&mi->menu_acc,
@@ -747,8 +751,8 @@
 		_xv_use_pswcs_value_nodup(&mi->image.string);
 	        xv_set(mi->panel_item_handle,
                        PANEL_LABEL_STRING_WCS, mi->image.string.pswcs.value,
-                       XV_KEY_DATA, MENU_NOTIFY_PROC, mi->notify_proc,
-                       0);
+                       XV_KEY_DATA, (Attr_attribute)MENU_NOTIFY_PROC, mi->notify_proc,
+                       NULL);
             }  
             break;
 	  }
@@ -762,8 +766,8 @@
 	    if (mi->parent && mi->parent->pin_window && mi->panel_item_handle) {
 		xv_set(mi->panel_item_handle,
 		       PANEL_LABEL_STRING, mi->image.string,
-		       XV_KEY_DATA, MENU_NOTIFY_PROC, mi->notify_proc,
-		       0);
+		       XV_KEY_DATA, (Attr_attribute)MENU_NOTIFY_PROC, mi->notify_proc,
+		       NULL);
 	    }
 	    break;
 
@@ -788,8 +792,8 @@
             if (mi->parent && mi->parent->pin_window && mi->panel_item_handle) {
 	        xv_set(mi->panel_item_handle,
                        PANEL_LABEL_STRING, mi->image.string,
-                       XV_KEY_DATA, MENU_NOTIFY_PROC, mi->notify_proc,
-                       0);
+                       XV_KEY_DATA, (Attr_attribute)MENU_NOTIFY_PROC, mi->notify_proc,
+                       NULL);
             }  
             break;
 	  }
@@ -803,7 +807,7 @@
           case MENU_STRING_ITEM_WCS:
             if (mi->image.free_string)
 	        _xv_free_string_attr_nodup(&mi->image.string);
-	    if (attrs[0] == MENU_STRING_ITEM)
+	    if ((int)attrs[0] == MENU_STRING_ITEM)
 		_xv_set_mbs_attr_nodup(&mi->image.string,
 				       (char *) attrs[1]);
 	    else
@@ -815,7 +819,7 @@
 		_xv_use_pswcs_value_nodup(&mi->image.string);
                 xv_set(mi->panel_item_handle,
                        PANEL_LABEL_STRING_WCS,	mi->image.string.pswcs.value,
-                       0);
+                       NULL);
             }
             break;
 
@@ -833,7 +837,7 @@
 	            _xv_free_ps_string_attr_dup(&mi->menu_acc);
 	        }
 	    }
-            if (attrs[0] == MENU_STRING_AND_ACCELERATOR){
+            if ((int)attrs[0] == MENU_STRING_AND_ACCELERATOR){
               _xv_set_mbs_attr_nodup(&mi->image.string,
                                        (char *) attrs[1]);
 	      _xv_set_mbs_attr_dup(&mi->menu_acc,
@@ -853,7 +857,7 @@
 			_xv_use_pswcs_value_nodup(&mi->image.string);
 			xv_set(mi->panel_item_handle,
                        		PANEL_LABEL_STRING_WCS, mi->image.string.pswcs.value,
-                       		0);
+                       		NULL);
             }
             break;
           }
@@ -869,7 +873,7 @@
 	       	_xv_free_ps_string_attr_dup(&mi->menu_acc);
 	    }
 
-            if (attrs[0] == MENU_ACCELERATOR){
+            if ((int)attrs[0] == MENU_ACCELERATOR){
 
 	    	if ((char *)attrs[1])  {
                 	_xv_set_mbs_attr_dup(&mi->menu_acc,
@@ -897,7 +901,7 @@
 	    if (mi->parent && mi->parent->pin_window && mi->panel_item_handle) {
 		xv_set(mi->panel_item_handle,
 		       PANEL_LABEL_STRING, mi->image.string,
-		       0);
+		       NULL);
 	    }
 	    break;
 
@@ -920,7 +924,7 @@
 	    }
             if (mi->parent && mi->parent->pin_window && mi->panel_item_handle) {                xv_set(mi->panel_item_handle,
                        PANEL_LABEL_STRING, mi->image.string,
-                       0);
+                       NULL);
             }
             break;
           }
@@ -956,8 +960,8 @@
 	    if (mi->parent && mi->parent->pin_window && mi->panel_item_handle) {
 		xv_set(mi->panel_item_handle,
 		       PANEL_LABEL_IMAGE, mi->image.svr_im,
-		       XV_KEY_DATA, MENU_NOTIFY_PROC, mi->notify_proc,
-		       0);
+		       XV_KEY_DATA, (Attr_attribute)MENU_NOTIFY_PROC, mi->notify_proc,
+		       NULL);
 	    }
 	    break;
 
@@ -970,7 +974,7 @@
 	    if (mi->parent && mi->parent->pin_window && mi->panel_item_handle) {
 		xv_set(mi->panel_item_handle,
 		       PANEL_LABEL_IMAGE, mi->image.svr_im,
-		       0);
+		       NULL);
 	    }
 	    break;
 
@@ -1015,11 +1019,11 @@
 	  case XV_FONT:
 	    *attrs = ATTR_NOP(*attrs);
             if (mi->image.font) {
-                (void) xv_set(mi->image.font, XV_DECREMENT_REF_COUNT, 0);
+                (void) xv_set(mi->image.font, XV_DECREMENT_REF_COUNT, NULL);
             }
             mi->image.font = attrs[1];
             if (mi->image.font) {
-                (void) xv_set(mi->image.font, XV_INCREMENT_REF_COUNT, 0);
+                (void) xv_set(mi->image.font, XV_INCREMENT_REF_COUNT, NULL);
             }
             mi->image.width = mi->image.height = 0;
 	    break;
@@ -1037,7 +1041,7 @@
 	    if (mi->parent && mi->parent->pin_window && mi->panel_item_handle) {
 		xv_set(mi->panel_item_handle,
 		       PANEL_LABEL_IMAGE, mi->image.svr_im,
-		       0);
+		       NULL);
 	    }
 	    break;
 
@@ -1057,7 +1061,7 @@
 		_xv_use_pswcs_value_nodup(&mi->image.string);
                 xv_set(mi->panel_item_handle,
                        PANEL_LABEL_STRING_WCS,	mi->image.string.pswcs.value,
-                       0);
+                       NULL);
             }
             break;
 
@@ -1071,7 +1075,7 @@
 	    if (mi->parent && mi->parent->pin_window && mi->panel_item_handle) {
 		xv_set(mi->panel_item_handle,
 		       PANEL_LABEL_STRING, mi->image.string,
-		       0);
+		       NULL);
 	    }
 	    break;
 #endif /* OW_I18N */
@@ -1093,7 +1097,7 @@
 	    if (mi->parent && mi->parent->pin_window && mi->panel_item_handle) {
 		xv_set(mi->panel_item_handle,
 		       PANEL_LABEL_IMAGE, mi->image.svr_im,
-		       0);
+		       NULL);
 	    }
 	    mi->mark_type |= OLGX_HORIZ_MENU_MARK;
 	    break;
@@ -1103,7 +1107,7 @@
           case MENU_GEN_PULLRIGHT_ITEM_WCS:
             if (mi->image.free_string)
 		_xv_free_string_attr_nodup(&mi->image.string);
-	    if (attrs[0] == MENU_GEN_PULLRIGHT_ITEM)
+	    if ((int)attrs[0] == MENU_GEN_PULLRIGHT_ITEM)
 		_xv_set_mbs_attr_nodup(&mi->image.string, (char *) attrs[1]);
 	    else
 		_xv_set_wcs_attr_nodup(&mi->image.string,
@@ -1116,7 +1120,7 @@
 		_xv_use_pswcs_value_nodup(&mi->image.string);
                 xv_set(mi->panel_item_handle,
                        PANEL_LABEL_STRING_WCS,	mi->image.string.pswcs.value,
-                       0);
+                       NULL);
             }
             break;
 
@@ -1132,7 +1136,7 @@
 	    if (mi->parent && mi->parent->pin_window && mi->panel_item_handle) {
 		xv_set(mi->panel_item_handle,
 		       PANEL_LABEL_STRING, mi->image.string,
-		       0);
+		       NULL);
 	    }
 	    mi->mark_type |= OLGX_HORIZ_MENU_MARK;
 	    break;
@@ -1146,7 +1150,7 @@
 	    if (mi->parent && mi->parent->pin_window && mi->panel_item_handle) {
 		xv_set(mi->panel_item_handle,
 		       PANEL_LABEL_IMAGE, mi->image.svr_im,
-		       0);
+		       NULL);
 	    }
 	    break;
 
@@ -1157,7 +1161,7 @@
 		    mi->panel_item_handle) {
 		    xv_set(mi->panel_item_handle,
 			   PANEL_INACTIVE, mi->inactive,
-			   0);
+			   NULL);
 		}
 	    }
 	    break;
@@ -1174,7 +1178,7 @@
 	    if (mi->parent && mi->parent->pin_window && mi->panel_item_handle) {
 		xv_set(mi->panel_item_handle,
 		       PANEL_ITEM_MENU, mi->value,
-		       0);
+		       NULL);
 	    }
 	    mi->mark_type |= OLGX_HORIZ_MENU_MARK;
 	    break;
@@ -1190,7 +1194,7 @@
 		xv_set(mi->panel_item_handle,
 		       PANEL_LABEL_IMAGE, mi->image.svr_im,
 		       PANEL_ITEM_MENU, mi->value,
-		       0);
+		       NULL);
 	    }
 	    mi->mark_type |= OLGX_HORIZ_MENU_MARK;
 	    break;
@@ -1213,7 +1217,7 @@
                 xv_set(mi->panel_item_handle,
                        PANEL_LABEL_STRING_WCS,	mi->image.string.pswcs.value,
                        PANEL_ITEM_MENU,		mi->value,
-                       0);
+                       NULL);
             }
             break;
 
@@ -1229,7 +1233,7 @@
 		xv_set(mi->panel_item_handle,
 		       PANEL_LABEL_STRING, mi->image.string,
 		       PANEL_ITEM_MENU, mi->value,
-		       0);
+		       NULL);
 	    }
 	    mi->mark_type |= OLGX_HORIZ_MENU_MARK;
 	    break;
@@ -1263,7 +1267,7 @@
 		_xv_use_pswcs_value_nodup(&mi->image.string);
                 xv_set(mi->panel_item_handle,
                        PANEL_LABEL_STRING_WCS,	mi->image.string.pswcs.value,
-                       0);
+                       NULL);
             }
             break;
           
@@ -1276,7 +1280,7 @@
 	    if (mi->parent && mi->parent->pin_window && mi->panel_item_handle) {
 		xv_set(mi->panel_item_handle,
 		       PANEL_LABEL_STRING, mi->image.string,
-		       0);
+		       NULL);
 	    }
 	    break;
 #endif /* OW_I18N */
@@ -1292,7 +1296,7 @@
 	    if (mi->parent && mi->parent->pin_window && mi->panel_item_handle) {
 		xv_set(mi->panel_item_handle,
 		       PANEL_ITEM_MENU, NULL,
-		       0);
+		       NULL);
 	    }
 	    break;
 
@@ -1310,10 +1314,10 @@
 		    (void) sprintf(dummy,
 			   XV_MSG("Invalid argument for attribute MENU_LINE_AFTER_ITEM: %d"),
 				   (int) attrs[1]);
-		    xv_error(NULL,
+		    xv_error((Xv_object)NULL,
 			     ERROR_STRING, dummy,
 			     ERROR_PKG, MENU,
-			     0);
+			     NULL);
 		}
 	    }
 	    break;
@@ -1463,7 +1467,7 @@
 {
     m->pin_window = pin_window;
     if (m->pin_window) {
-	xv_set(m->pin_window, XV_KEY_DATA, MENU_MENU, m, 0);
+	xv_set(m->pin_window, XV_KEY_DATA, (Attr_attribute)MENU_MENU, m, NULL);
         /* fix to make xv_window_loop work for menus */
         if (WIN_IS_IN_LOOP)
             window_set_tree_flag(m->pin_window, NULL, FALSE, TRUE);
@@ -1586,18 +1590,18 @@
 	m->nitems++;
 	for (i = m->nitems - 1; i > 0; i--)
 	    m->item_list[i] = m->item_list[i - 1];
-	menu_item = xv_create(NULL, MENUITEM,
+	menu_item = xv_create((Xv_object)NULL, MENUITEM,
 			      MENU_FEEDBACK, FALSE,
 			      MENU_RELEASE,
 			      MENU_TITLE,
 			      MENU_NOTIFY_PROC, menu_return_no_value,
-			      0);
+			      NULL);
 	m->item_list[0] = MENU_ITEM_PRIVATE(menu_item);
 	if (type)
 	    xv_set(menu_item,
 		   type, arg1,
 		   MENU_LINE_AFTER_ITEM, MENU_HORIZONTAL_LINE,
-		   0);
+		   NULL);
 	if (m->default_position == 1)
 	    m->default_position++;
     }
@@ -1617,7 +1621,7 @@
 	    if (m->class == MENU_COMMAND) {
 		xv_set(m->item_list[i]->panel_item_handle,
 		       PANEL_ITEM_MENU, NULL,
-		       0);
+		       NULL);
 		xv_destroy(m->item_list[i]->panel_item_handle);
 	    } else if (!panel_item_destroyed) {
 		xv_destroy(m->item_list[i]->panel_item_handle);
@@ -1817,7 +1821,7 @@
 		            acc_string ? acc_string : "NULL");
 #endif /* OW_I18N */
 
-                        xv_error(NULL, ERROR_STRING, i18n_str, NULL);
+                        xv_error((Xv_object)NULL, ERROR_STRING, i18n_str, NULL);
 		    }
 		    else  {
                         menu_set_key_qual(menu, item, TRUE, keysym, 
@@ -1850,7 +1854,7 @@
 		        acc_string ? acc_string : "NULL");
 #endif /* OW_I18N */
 
-                    xv_error(NULL, ERROR_STRING, i18n_str, 0);
+                    xv_error((Xv_object)NULL, ERROR_STRING, i18n_str, NULL);
 		}
 
 		/*
diff -Naur xview-3.2p1.4.orig/lib/libxview/menu/omi_impl.h xview-3.2p1.4/lib/libxview/menu/omi_impl.h
--- xview-3.2p1.4.orig/lib/libxview/menu/omi_impl.h	2013-01-07 12:36:34.489395000 +0100
+++ xview-3.2p1.4/lib/libxview/menu/omi_impl.h	2013-01-07 12:50:46.111445000 +0100
@@ -34,8 +34,12 @@
 #endif
 
 #ifndef NULL
+#ifdef __STDC__
+#define	NULL	((void *))
+#else
 #define NULL	0
 #endif
+#endif
 
 /* ACC_XVIEW */
 #define LABEL		1
diff -Naur xview-3.2p1.4.orig/lib/libxview/menu/openmenu.h xview-3.2p1.4/lib/libxview/menu/openmenu.h
--- xview-3.2p1.4.orig/lib/libxview/menu/openmenu.h	2013-01-07 12:36:34.667591000 +0100
+++ xview-3.2p1.4/lib/libxview/menu/openmenu.h	2013-01-07 12:50:46.148019000 +0100
@@ -64,7 +64,7 @@
 #define ATTR_MENU_ITEM			ATTR_OPAQUE
 #define ATTR_MENU_ITEM_PAIR		ATTR_INT_PAIR
 /* Alpha compatibility, mbuck@debian.org */
-#if defined(__alpha)
+#if defined(__alpha) || defined(__x86_64__) || defined(__ia64__) || defined(_XV_API_BROKEN_64BIT)
 #define ATTR_STRING_VALUE_PAIR		ATTR_OPAQUE_PAIR
 #define ATTR_IMAGE_VALUE_PAIR		ATTR_OPAQUE_PAIR
 #define ATTR_STRING_MENU_PAIR		ATTR_OPAQUE_PAIR
@@ -119,7 +119,7 @@
 	MENU_FEEDBACK		= MENU_ATTR(ATTR_BOOLEAN,		 33), 
 /*--G*/	MENU_FIRST_EVENT	= MENU_ATTR(ATTR_NO_VALUE,		 36), 
 /* Alpha compatibility, mbuck@debian.org */
-#if defined(__alpha)
+#if defined(__alpha) || defined(__x86_64__) || defined(__ia64__) || defined(_XV_API_BROKEN_64BIT)
 	MENU_GEN_PIN_WINDOW	= MENU_ATTR(ATTR_OPAQUE_PAIR, 		 39),
 #else
 	MENU_GEN_PIN_WINDOW	= MENU_ATTR(ATTR_INT_PAIR, 		 39),
@@ -202,7 +202,12 @@
 	MENU_IE			= MENU_ATTR(ATTR_INT, 			216), 
 	MENU_LINE_AFTER_ITEM	= MENU_ATTR(ATTR_INT,			219),
 	MENU_POS		= MENU_ATTR(ATTR_INT_PAIR, 		222), 
+	/* MENU_POSITION_RECT should really be ATTR_OPAQUE */
+#if defined(__x86_64__) || defined(__ia64__) || defined(_XV_API_BROKEN_64BIT)
+	MENU_POSITION_RECT	= MENU_ATTR(ATTR_OPAQUE,		225),
+#else
 	MENU_POSITION_RECT	= MENU_ATTR(ATTR_INT,			225),
+#endif
 	MENU_PULLDOWN		= MENU_ATTR(ATTR_INT, 			228),
 	MENU_SHADOW_MENU	= MENU_ATTR(ATTR_OPAQUE,		230),
 	MENU_SHADOW_GC		= MENU_ATTR(ATTR_OPAQUE,		231),
diff -Naur xview-3.2p1.4.orig/lib/libxview/misc/db_conv.c xview-3.2p1.4/lib/libxview/misc/db_conv.c
--- xview-3.2p1.4.orig/lib/libxview/misc/db_conv.c	1993-06-29 07:16:29.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/misc/db_conv.c	2013-01-07 12:50:46.178507000 +0100
@@ -92,7 +92,7 @@
 	    if (chr1 != chr2)
 		break;
   	}
-	if (chr1 == NULL) {
+	if (chr1 == (char)NULL) {
 	    *to_value = (i % 2) ? False : True;
 	    return(XV_OK);
 	}
diff -Naur xview-3.2p1.4.orig/lib/libxview/misc/demorandom.c xview-3.2p1.4/lib/libxview/misc/demorandom.c
--- xview-3.2p1.4.orig/lib/libxview/misc/demorandom.c	1993-06-29 07:16:29.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/misc/demorandom.c	2013-01-07 12:50:46.209019000 +0100
@@ -33,7 +33,7 @@
     0052022, 0022564, 0135512, 0021760, 0006743, 0006451, 0067445, 0106210, 0025417,
     0066566, 0062723, 0124224, 0144643, 0164502, 0025342, 0003521, 0024050,
 };
-static
+static int
 demo_random()
 {
     if (I == Pm1)
@@ -48,14 +48,18 @@
     return (Table[I]);
 }
 
+int
 xv_initrandom(r)
+    int r;
 {
-    register        i;
+    register int	i;
     for (i = 0; i != P; i++)
 	Table[i] ^= r;
 }
 
+int
 xv_random(i, j)
+    int i, j;
 {
     int             k;
     k = demo_random() % (j - i + 1);
@@ -64,10 +68,11 @@
     return (k + i);
 }
 
+int
 xv_sqroot(a)
-    register        a;
+    register int	a;
 {
-    register        x, y;
+    register int	x, y;
     if (a <= 0)
 	return (0);
     for (y = a, x = 1; y != 0; y >>= 2, x <<= 1);
diff -Naur xview-3.2p1.4.orig/lib/libxview/misc/drop.c xview-3.2p1.4/lib/libxview/misc/drop.c
--- xview-3.2p1.4.orig/lib/libxview/misc/drop.c	2013-01-07 12:36:29.985039000 +0100
+++ xview-3.2p1.4/lib/libxview/misc/drop.c	2013-01-07 12:50:46.235117000 +0100
@@ -9,13 +9,19 @@
 #include <xview/seln.h>
 #include <xview/dragdrop.h>
 #include <xview_private/portable.h>
-#ifdef SVR4 
+#if defined(SVR4) || defined(__linux__)
 #include <stdlib.h> 
 #endif /* SVR4 */
 
 #define DD_FAILED  -1
 
+#ifdef __STDC__
+static int HandleNewDrop(Event *ev, XClientMessageEvent *cM, Xv_window window, char *buffer, unsigned int bsize);
+#else
 static int HandleNewDrop();
+#endif
+
+Xv_object win_data();
 
 int
 xv_decode_drop(ev, buffer, bsize)
@@ -42,7 +48,7 @@
 				       	/* Dig out the ClientMessage event. */
     cM = (XClientMessageEvent *)event_xevent(ev);
 
-    if ((window = win_data(cM->display, cM->window)) == NULL)
+    if ((window = win_data(cM->display, cM->window)) == (Xv_window)NULL)
 	return (DD_FAILED);
 
     if (cM->message_type == xv_get(XV_SERVER_FROM_WINDOW(window), SERVER_ATOM,
@@ -112,7 +118,6 @@
     unsigned int 	 bsize;
 {
     Selection_requestor  sel;
-    Xv_drop_site	 ds;
     char 		*buf;
     int			 length,
 			 format,
@@ -121,7 +126,7 @@
     sel = xv_create(window, SELECTION_REQUESTOR,
 				SEL_TYPE,	XA_STRING,
 				SEL_TIME,	&event_time(ev),
-				0);
+				NULL);
 
     (void)dnd_decode_drop(sel, ev);
 
@@ -143,8 +148,11 @@
                                  */
     if (event_action(ev) == ACTION_DRAG_MOVE && !NoDelete) {
         int length, format;
-        xv_set(sel, SEL_TYPE_NAME, "DELETE", 0);
+        xv_set(sel, SEL_TYPE_NAME, "DELETE", NULL);
         (void)xv_get(sel, SEL_DATA, &length, &format);
     }
     dnd_done(sel);
+
+    /* FIXME - return value? */
+    return 0;
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/misc/expandname.c xview-3.2p1.4/lib/libxview/misc/expandname.c
--- xview-3.2p1.4.orig/lib/libxview/misc/expandname.c	2013-01-07 12:36:30.352215000 +0100
+++ xview-3.2p1.4/lib/libxview/misc/expandname.c	2013-01-07 12:50:46.265495000 +0100
@@ -45,12 +45,18 @@
 #define MAXCHAR 255
 #define NOSTR   ((char *) 0)
 
+#ifdef __linux__
+#include <stdlib.h>
+#else
 char           *getenv();
+#endif
 struct namelist *xv_mk_0list();
 struct namelist *xv_mk_1list();
 
 struct namelist *makelist();
 
+static int xv_anyof();
+
 static char    *Default_Shell = "/bin/sh";
 
 #undef NCARGS
@@ -129,9 +135,9 @@
     ;
     status &= 0377;
     if (status != 0 && status != SIGPIPE) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING, XV_MSG("\"Echo\" failed"),
-		 0);
+		 NULL);
 	return (NONAMES);
     }
     if (length == 0) {
@@ -143,9 +149,9 @@
 	(void) sprintf(dummy, 
 			XV_MSG("Buffer overflow (> %d)  expanding \"%s\""),
 		       NCARGS, name);
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING, dummy,
-		 0);
+		 NULL);
 	return (NONAMES);
     }
     xnames[length] = '\0';
@@ -156,6 +162,7 @@
 }
 
 
+static int
 xv_anyof(s1, s2)
     register char  *s1, *s2;
 {
@@ -188,10 +195,10 @@
     result = (struct namelist *)
 	xv_malloc(sizeof(int) + sizeof(char *));
     if (result == NONAMES) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_LAYER, ERROR_SYSTEM,
 		 ERROR_STRING, XV_MSG("in xv_expand_name"),
-		 0);
+		 NULL);
     } else {
 	result->count = 0;
 	result->names[0] = NOSTR;
@@ -210,10 +217,10 @@
 	xv_malloc((unsigned)
 	       sizeof(int) + 2 * sizeof(char *) + strlen(str) +1);
     if (result == NONAMES) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_LAYER, ERROR_SYSTEM,
 		 ERROR_STRING, XV_MSG("in xv_expand_name"),
-		 0);
+		 NULL);
     } else {
 	result->count = 1;
 	result->names[0] = (char *) (&result->names[2]);
@@ -247,10 +254,10 @@
 	xv_malloc((unsigned)
 	       sizeof(int) + (count + 1) *sizeof(char *) + len);
     if (result == NONAMES) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_LAYER, ERROR_SYSTEM,
 		 ERROR_STRING, XV_MSG("in xv_expand_name"),
-		 0);
+		 NULL);
     } else {
 	result->count = count;
 	cp = (char *) (&result->names[count + 1]);
diff -Naur xview-3.2p1.4.orig/lib/libxview/misc/getlogindr.c xview-3.2p1.4/lib/libxview/misc/getlogindr.c
--- xview-3.2p1.4.orig/lib/libxview/misc/getlogindr.c	2013-01-07 12:36:30.465366000 +0100
+++ xview-3.2p1.4/lib/libxview/misc/getlogindr.c	2013-01-07 12:50:46.292398000 +0100
@@ -19,11 +19,16 @@
 #include <pwd.h>
 #include <xview_private/i18n_impl.h>
 #include <xview/xv_error.h>
+#ifdef __linux__
+#include <unistd.h>
+#include <stdlib.h>			/* getenv() */
+#else
+extern char    *getlogin(), *getenv();
+#endif
 
 char           *
 xv_getlogindir()
 {
-    extern char    *getlogin(), *getenv();
 #ifndef __linux__
     extern struct passwd *getpwnam(), *getpwuid();
 #endif
@@ -39,17 +44,17 @@
     else
 	passwdent = getpwnam(loginname);
     if (passwdent == NULL) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING,
 		     XV_MSG("xv_getlogindir: couldn't find user in password file"),
-		 0);
+		 NULL);
 	return (NULL);
     }
     if (passwdent->pw_dir == NULL) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING,
 		     XV_MSG("xv_getlogindir: no home directory in password file"),
-		 0);
+		 NULL);
 	return (NULL);
     }
     return (passwdent->pw_dir);
diff -Naur xview-3.2p1.4.orig/lib/libxview/misc/gettext.c xview-3.2p1.4/lib/libxview/misc/gettext.c
--- xview-3.2p1.4.orig/lib/libxview/misc/gettext.c	2013-01-07 12:36:30.191008000 +0100
+++ xview-3.2p1.4/lib/libxview/misc/gettext.c	2013-01-07 15:05:48.576899000 +0100
@@ -7,12 +7,18 @@
 #endif
 #endif
 
+#ifdef __linux__
+#include <stdio.h>
+#include <stdlib.h>
+#include <unistd.h>            /* close() */
+#endif
 #include <string.h>
 #include <xview_private/gettext.h>
 
 char * dgettext(char *, char *), *bindtextdomain();
-static char *_gettext();
-char *fgets(), *getenv();
+/* static char *_gettext(); */
+/* char *fgets(), *getenv(); */
+static char *_gettext(struct message_so messages, char *key_string);
 #if !defined(__linux__) || !defined(__GLIBC__)
 caddr_t mmap();
 #endif
@@ -295,7 +301,7 @@
     char *current_binding;
     char *msgptr, *openwinhome = NULL;
     static int gotenv = 0;
-    static int shunt = 0;
+    static char *shunt = (char *)NULL;
 
     struct stat statbuf;
     int	fd = -1;
@@ -304,7 +310,7 @@
     int   msg_inc;
 
     if (!gotenv) {
-	shunt = (int)getenv("SHUNT_GETTEXT");
+	shunt = getenv("SHUNT_GETTEXT");
 	gotenv = 1;
     }
     if (shunt)
diff -Naur xview-3.2p1.4.orig/lib/libxview/misc/hashfn.c xview-3.2p1.4/lib/libxview/misc/hashfn.c
--- xview-3.2p1.4.orig/lib/libxview/misc/hashfn.c	1993-06-29 07:16:31.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/misc/hashfn.c	2013-01-07 12:50:46.370110000 +0100
@@ -17,6 +17,9 @@
 #define hashfn_c
 
 #include <xview_private/hashfn.h>
+#ifdef __linux__
+#include <stdlib.h>		/* malloc() */
+#endif
 
 /*
  * hashfn_new_table(size, hash_fn, cmp_fn) -- create a new hash table object
diff -Naur xview-3.2p1.4.orig/lib/libxview/misc/i18n_impl.h xview-3.2p1.4/lib/libxview/misc/i18n_impl.h
--- xview-3.2p1.4.orig/lib/libxview/misc/i18n_impl.h	2013-01-07 12:36:30.517875000 +0100
+++ xview-3.2p1.4/lib/libxview/misc/i18n_impl.h	2013-01-07 12:50:46.396517000 +0100
@@ -30,7 +30,11 @@
 #define LC_MESSAGES LC_RESPONSE
 #endif
 
+#ifdef __STDC__
+extern char	*dgettext(char *, char *);
+#else
 extern char	*dgettext();
+#endif
 
 #define XV_I18N_MSG(d,s)	(dgettext(d,s))
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/misc/portable.h xview-3.2p1.4/lib/libxview/misc/portable.h
--- xview-3.2p1.4.orig/lib/libxview/misc/portable.h	2013-01-07 12:36:29.828302000 +0100
+++ xview-3.2p1.4/lib/libxview/misc/portable.h	2013-01-07 12:50:46.420194000 +0100
@@ -50,6 +50,7 @@
 #endif
 
 #if defined(SVR4) || defined(__linux__)
+#include <string.h>
 #define XV_BCOPY(a,b,c) memmove(b,a,c)
 #define XV_BZERO(a,b) memset(a,0,b)
 #define XV_INDEX(a,b) strchr(a,b)
diff -Naur xview-3.2p1.4.orig/lib/libxview/misc/quark.c xview-3.2p1.4/lib/libxview/misc/quark.c
--- xview-3.2p1.4.orig/lib/libxview/misc/quark.c	2013-01-07 12:36:30.405834000 +0100
+++ xview-3.2p1.4/lib/libxview/misc/quark.c	2013-01-07 15:07:34.947789000 +0100
@@ -16,7 +16,11 @@
 #include  <xview/xview.h>
 #include  <xview/pkg.h>
 
+#ifdef __STDC__
+static Xv_opaque resource_type_conv(char *str, Attr_base_cardinality xv_type, Xv_opaque def_val);
+#else
 static Xv_opaque resource_type_conv();
+#endif
 
 /* 
  *    Utilities to deal with quark lists and such.
@@ -28,7 +32,7 @@
     register int    i;  
 
     if (qlist == NULL)
-	return(NULL);
+	return XV_NULL;
     
     for (i = 0; qlist[i] != NULLQUARK; i++) 
                 ;
diff -Naur xview-3.2p1.4.orig/lib/libxview/misc/sun.h xview-3.2p1.4/lib/libxview/misc/sun.h
--- xview-3.2p1.4.orig/lib/libxview/misc/sun.h	1993-06-29 07:16:32.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/misc/sun.h	2013-01-07 12:50:46.485594000 +0100
@@ -13,6 +13,17 @@
 #include <sys/types.h>
 #include <stdio.h> 
 
+#if defined(__x86_64__) || defined(__ia64__) || defined(_XV_API_BROKEN_64BIT)
+
+#ifndef FALSE
+#define FALSE 0L
+#endif
+#ifndef TRUE
+#define TRUE 1L
+#endif
+
+#else
+
 #ifndef FALSE
 #define FALSE 0
 #endif
@@ -20,6 +31,8 @@
 #define TRUE 1
 #endif
 
+#endif
+
 #ifndef Bool_DEFINED
 #define Bool int
 #define True 1
diff -Naur xview-3.2p1.4.orig/lib/libxview/misc/windowloop.c xview-3.2p1.4/lib/libxview/misc/windowloop.c
--- xview-3.2p1.4.orig/lib/libxview/misc/windowloop.c	1993-06-29 07:16:33.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/misc/windowloop.c	2013-01-07 12:50:46.509096000 +0100
@@ -15,6 +15,8 @@
 #include <xview/frame.h>
 #include <xview/fullscreen.h>
 
+Xv_object input_readevent();
+
 static short    no_return /* = FALSE */ ;
 static Xv_opaque return_value;
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/misc/xv_deaf.c xview-3.2p1.4/lib/libxview/misc/xv_deaf.c
--- xview-3.2p1.4.orig/lib/libxview/misc/xv_deaf.c	1993-06-29 07:16:33.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/misc/xv_deaf.c	2013-01-07 12:50:46.533726000 +0100
@@ -45,13 +45,14 @@
  * 'on' is True. Otherwise, it restores their original input
  * state.
  */
+int
 xv_deaf(parent, on)
 Xv_window	parent;
 Bool		on;
 {
     Xv_server   	server;
     Xv_screen   	screen;
-    Xv_cursor		busyPointer = NULL;
+    Xv_cursor		busyPointer = (Xv_cursor)NULL;
 
     screen = xv_get(parent, XV_SCREEN);
     server = xv_get(screen, SCREEN_SERVER);
@@ -60,7 +61,7 @@
      * Check if busy pointer has been created on server
      * already
      */
-    busyPointer = xv_get(server, XV_KEY_DATA, CURSOR_BUSY_PTR);
+    busyPointer = xv_get(server, XV_KEY_DATA, (Attr_attribute)CURSOR_BUSY_PTR);
 
     /*
      * If it hasn't, create and store it on server as key data
@@ -70,14 +71,14 @@
 				CURSOR_SRC_CHAR, OLC_BUSY_PTR, 
                                 CURSOR_MASK_CHAR, OLC_BUSY_MASK_PTR,
                                 NULL);
-        xv_set(server, XV_KEY_DATA, CURSOR_BUSY_PTR, busyPointer, 0);
+        xv_set(server, XV_KEY_DATA, (Attr_attribute)CURSOR_BUSY_PTR, busyPointer, NULL);
     }
 
     if (window_set_tree_flag(parent, busyPointer, TRUE, on) != XV_OK)  {
         xv_error(parent,
                 ERROR_STRING, 
                 XV_MSG("xv_deaf:attempt to make windows deaf/hear failed"), 
-                0);
+                NULL);
         return(XV_ERROR);
     }
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/misc/xv_util.c xview-3.2p1.4/lib/libxview/misc/xv_util.c
--- xview-3.2p1.4.orig/lib/libxview/misc/xv_util.c	1993-06-29 07:16:34.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/misc/xv_util.c	2013-01-07 12:50:46.558121000 +0100
@@ -33,7 +33,11 @@
 extern void *valloc(), *malloc(), *calloc(), *realloc();
 #else
 static char *save;
+#ifdef __linux__
+#include <stdlib.h>
+#else
 extern char *valloc(), *malloc(), *calloc(), *realloc();
+#endif
 #endif /* ultrix */
 
 #endif /* XV_USE_ALLOC_FUNCS */
@@ -42,6 +46,8 @@
 
 #ifdef USE_UNAME
 #include <sys/utsname.h>
+#else
+#include <unistd.h>
 #endif
 
 /*
@@ -65,7 +71,7 @@
     buf[len] = '\0';
 #else
     buf[0] = '\0';
-    (void) gethostname (buf, maxlen);
+    (void) gethostname (buf, (size_t)maxlen);
     buf [maxlen - 1] = '\0';
     len = strlen(buf);
 #endif
diff -Naur xview-3.2p1.4.orig/lib/libxview/misc/xv_win_lp.c xview-3.2p1.4/lib/libxview/misc/xv_win_lp.c
--- xview-3.2p1.4.orig/lib/libxview/misc/xv_win_lp.c	1997-04-28 14:45:35.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/misc/xv_win_lp.c	2013-01-07 12:50:46.585912000 +0100
@@ -48,7 +48,7 @@
 */
 
     if (!frame)  {
-        xv_error(NULL,
+        xv_error((Xv_object)NULL,
             ERROR_STRING, 
             XV_MSG("xv_window_loop() : NULL frame passed."),
             NULL);
@@ -100,7 +100,7 @@
     if (!display)  {
         display = (Display *)xv_get(xv_default_server, XV_DISPLAY);
         if (!display)  {
-            xv_error(NULL,
+            xv_error((Xv_object)NULL,
                 ERROR_STRING, 
                 XV_MSG("xv_window_loop() : Cannot get handle to display"),
             NULL);
diff -Naur xview-3.2p1.4.orig/lib/libxview/misc/xview.h xview-3.2p1.4/lib/libxview/misc/xview.h
--- xview-3.2p1.4.orig/lib/libxview/misc/xview.h	1993-06-29 07:16:34.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/misc/xview.h	2013-01-07 12:50:46.611420000 +0100
@@ -10,6 +10,22 @@
 #define xview_xview_DEFINED
 
 /*
+ * Make sure NULL is something reasonable
+ */
+
+#ifdef __GNUC__
+#include <stddef.h>
+#endif
+
+#ifndef NULL
+#ifdef __STDC__
+#define NULL	((void *)0)
+#else
+#define NULL	0
+#endif
+#endif
+
+/*
  ***********************************************************************
  *			Include Files
  ***********************************************************************
diff -Naur xview-3.2p1.4.orig/lib/libxview/notice/notice.c xview-3.2p1.4/lib/libxview/notice/notice.c
--- xview-3.2p1.4.orig/lib/libxview/notice/notice.c	1993-06-29 07:16:38.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/notice/notice.c	2013-01-07 12:50:46.656716000 +0100
@@ -84,11 +84,11 @@
     Notice_info 	*notice;
 
     if (!client_window) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING,
 	     XV_MSG("NULL parent window passed to NOTICE. Not allowed."),
 	         ERROR_PKG, NOTICE,
-		 0);
+		 NULL);
 	return (XV_ERROR);
     }
 
@@ -101,10 +101,10 @@
      */
     notice = (Notice_info *) xv_calloc(1, sizeof(Notice_info));
     if (!notice) {
-        xv_error(NULL,
+        xv_error((Xv_object)NULL,
             ERROR_STRING, XV_MSG("Malloc failed."),
 	    ERROR_PKG, NOTICE,
-        0);
+        NULL);
         return (XV_ERROR);
     }
 
@@ -264,11 +264,11 @@
 
     pi = (notice_buttons_handle) xv_calloc(1, sizeof(struct notice_buttons));
     if (!pi) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 	         ERROR_STRING,
 	     XV_MSG("calloc failed in notice_create_button_struct()."),
 	         ERROR_PKG, NOTICE,
-		 0);
+		 NULL);
     } else {
 	pi->is_yes = (int)FALSE;
     }
@@ -286,11 +286,11 @@
 
     pi = (notice_msgs_handle) xv_calloc(1, sizeof(struct notice_msgs));
     if (!pi) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 	         ERROR_STRING,
 	     XV_MSG("calloc failed in notice_create_msg_struct()."),
 	         ERROR_PKG, NOTICE,
-		 0);
+		 NULL);
     }
     return pi;
 }
@@ -367,7 +367,7 @@
 /*
  * Update notice xy position
  */
-Pkg_private int
+Pkg_private void
 notice_update_xy(notice)
 Notice_info	*notice;
 {
@@ -385,7 +385,7 @@
 {
     Notice_info			*notice_info = (Notice_info *)xv_get(item, 
 						XV_KEY_DATA, 
-						notice_context_key, NULL);
+						(Attr_attribute)notice_context_key, NULL);
     Xv_Notice			notice = NOTICE_PUBLIC(notice_info);
     struct notice_buttons	*buttons = notice_info->button_info;
     struct notice_buttons	*cur;
@@ -465,7 +465,7 @@
 	 * client_window not Frame
 	 * Get it's WIN_FRAME
 	 */
-        owner_window = xv_get(client_window, WIN_FRAME);
+        owner_window = (Xv_window)xv_get(client_window, WIN_FRAME);
 
 	if (owner_window)  {
             if (!xv_get(owner_window, XV_IS_SUBTYPE_OF, FRAME_CLASS))  {
@@ -484,7 +484,7 @@
 	     * Get WIN_FRAME as key data
 	     * This case applies to menus
 	     */
-            owner_window = xv_get(client_window, XV_KEY_DATA, WIN_FRAME);
+            owner_window = (Xv_window)xv_get(client_window, XV_KEY_DATA, (Attr_attribute)WIN_FRAME);
 
 	    if (owner_window)  {
                 if (!xv_get(owner_window, XV_IS_SUBTYPE_OF, FRAME_CLASS))  {
@@ -500,9 +500,9 @@
 		/*
 		 * Traverse XV_OWNER links until find Frame
 		 */
-	        for (frame_obj = xv_get(client_window, XV_OWNER);
+	        for (frame_obj = (Frame)xv_get(client_window, XV_OWNER);
 		     frame_obj; 
-		     frame_obj = xv_get(frame_obj, XV_OWNER) )  {
+		     frame_obj = (Frame)xv_get(frame_obj, XV_OWNER) )  {
 		    if (xv_get(frame_obj, XV_IS_SUBTYPE_OF, FRAME_CLASS))  {
 			/*
 			 * break out of loop when find a Frame
diff -Naur xview-3.2p1.4.orig/lib/libxview/notice/notice.h xview-3.2p1.4/lib/libxview/notice/notice.h
--- xview-3.2p1.4.orig/lib/libxview/notice/notice.h	1993-06-29 07:16:38.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/notice/notice.h	2013-01-07 12:50:46.685274000 +0100
@@ -47,7 +47,11 @@
 #define NOTICE_ATTR(type, ordinal)	ATTR(ATTR_PKG_NOTICE, type, ordinal)
 #define NOTICE_ATTR_LIST(ltype, type, ordinal) \
 	NOTICE_ATTR(ATTR_LIST_INLINE((ltype), (type)), (ordinal))
+#if defined(__x86_64__) || defined(__ia64__) || defined(_XV_API_BROKEN_64BIT)
+#define NOTICE_BUTTON_VALUE_PAIR	ATTR_OPAQUE_PAIR
+#else
 #define NOTICE_BUTTON_VALUE_PAIR	ATTR_INT_PAIR
+#endif
 
 
 /*
diff -Naur xview-3.2p1.4.orig/lib/libxview/notice/notice_dstry.c xview-3.2p1.4/lib/libxview/notice/notice_dstry.c
--- xview-3.2p1.4.orig/lib/libxview/notice/notice_dstry.c	1993-06-29 07:16:39.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/notice/notice_dstry.c	2013-01-07 12:50:46.712970000 +0100
@@ -45,7 +45,7 @@
 	 */
 	if (notice->sub_frame)  {
 	    xv_set(notice->sub_frame, 
-		XV_KEY_DATA, notice_context_key, NULL, 
+		XV_KEY_DATA, (Attr_attribute)notice_context_key, NULL, 
 		NULL);
             xv_destroy_safe(notice->sub_frame);
 	    notice->sub_frame = (Frame)NULL;
diff -Naur xview-3.2p1.4.orig/lib/libxview/notice/notice_itm.c xview-3.2p1.4/lib/libxview/notice/notice_itm.c
--- xview-3.2p1.4.orig/lib/libxview/notice/notice_itm.c	1993-06-29 07:16:39.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/notice/notice_itm.c	2013-01-07 12:50:46.747278000 +0100
@@ -54,7 +54,7 @@
 
     xEvent = event_xevent(event);
     notice = (Notice_info *)xv_get(window, 
-			XV_KEY_DATA, notice_context_key, 
+			XV_KEY_DATA, (Attr_attribute)notice_context_key, 
 		        NULL);
 
     /*
@@ -157,7 +157,7 @@
      * Get notice private data hanging off subframe
      */
     notice = (Notice_info *)xv_get(sub_frame, 
-			XV_KEY_DATA, notice_context_key, 
+			XV_KEY_DATA, (Attr_attribute)notice_context_key, 
 		        NULL);
 
     if (!notice)  {
@@ -289,9 +289,9 @@
 #ifdef OW_I18N
 			WIN_USE_IM, FALSE,
 #endif
-			XV_KEY_DATA, notice_context_key, notice,
+			XV_KEY_DATA, (Attr_attribute)notice_context_key, notice,
 			XV_HELP_DATA, "xview:notice",
-                        0);
+                        NULL);
 
 	/*
 	 * Do not grab SELECT button on notice frame
diff -Naur xview-3.2p1.4.orig/lib/libxview/notice/notice_ol.c xview-3.2p1.4/lib/libxview/notice/notice_ol.c
--- xview-3.2p1.4.orig/lib/libxview/notice/notice_ol.c	1993-06-29 07:16:39.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/notice/notice_ol.c	2013-01-07 12:50:46.776600000 +0100
@@ -37,7 +37,6 @@
 /*
  * Public routines - these routines are private to the notice pkg
  */
-Pkg_private int		notice_subframe_layout();
 Pkg_private int		notice_determine_font();
 Pkg_private void	notice_draw_borders();
 Pkg_private int		notice_center();
@@ -45,11 +44,11 @@
 Pkg_private void	notice_layout();
 Pkg_private void	notice_drawbox();
 Pkg_private void	notice_do_buttons();
-
+Pkg_private void	notice_button_panel_proc(Panel_item item, Event *event);
 /*
  * Private/static routines - these routines are private to this file
  */
-static int		notice_position_items();
+static void		notice_position_items();
 static int		notice_offset_from_baseline();
 
 /*
@@ -82,7 +81,7 @@
 /*
  * Routine to create sub_frame and panels
  */
-Pkg_private int
+Pkg_private void
 notice_subframe_layout(notice, do_msg, do_butt)
 Notice_info	*notice;
 Bool		do_msg;
@@ -156,7 +155,7 @@
          * Set zero length property on notice frame so that the ptr is not warped.
          */
         win_change_property(notice->sub_frame, 
-                    SERVER_WM_DEFAULT_BUTTON, XA_INTEGER, 32,  NULL, 0);
+                    SERVER_WM_DEFAULT_BUTTON, XA_INTEGER, 32,  NULL, NULL);
     }
 
     notice->need_layout = 0;
@@ -165,7 +164,7 @@
 /*
  * Routine to create and arrange panel items
  */
-static int
+static void
 notice_position_items(notice, do_msg, do_butt)
 Notice_info	*notice;
 Bool		do_msg;
@@ -264,7 +263,7 @@
                     PANEL_LABEL_STRING,	curButton->string,
 #endif /* OW_I18N */
                     PANEL_NOTIFY_PROC,	notice_button_panel_proc,
-	            XV_KEY_DATA, 	notice_context_key, notice,
+	            XV_KEY_DATA, 	(Attr_attribute)notice_context_key, notice,
                     NULL);
 	    }
 	    else  {
@@ -276,7 +275,7 @@
                     PANEL_LABEL_STRING,	curButton->string,
 #endif /* OW_I18N */
                     PANEL_NOTIFY_PROC,	notice_button_panel_proc,
-	            XV_KEY_DATA, 	notice_context_key, notice,
+	            XV_KEY_DATA, 	(Attr_attribute)notice_context_key, notice,
 		    XV_HELP_DATA, "xview:notice",
                     NULL);
 	    }
@@ -877,16 +876,16 @@
     display = xv_display(info);
     d = xv_xid(info);
 
-    notice = (notice_handle)xv_get(pw, XV_KEY_DATA, notice_context_key);
+    notice = (notice_handle)xv_get(pw, XV_KEY_DATA, (Attr_attribute)notice_context_key);
 
     rect = *rectp;
 
     /*
      * Determine which colors to use
      */
-    cms = xv_get(pw, WIN_CMS);
-    bg2 = xv_get(cms, CMS_PIXEL, 1);
-    bg3 = xv_get(cms, CMS_PIXEL, 2);
+    cms = (Cms)xv_get(pw, WIN_CMS);
+    bg2 = (unsigned int)xv_get(cms, CMS_PIXEL, 1);
+    bg3 = (unsigned int)xv_get(cms, CMS_PIXEL, 2);
 
     /*
      * Most of the code here is straight out from libxvin/pw/pw_plygon2.c
@@ -1112,11 +1111,11 @@
 	     * If all the above fails, return error code
 	     */
 	    if (!default_font) {
-	        xv_error(NULL,
+	        xv_error((Xv_object)NULL,
 	                ERROR_STRING,
 	        XV_MSG("Unable to find \"fixed\" font."),
 	                 ERROR_PKG, NOTICE,
-	                0);
+	                NULL);
 	        return (XV_ERROR);
 	    }
 	}
@@ -1168,15 +1167,15 @@
     DRAWABLE_INFO_MACRO(window, info);
     display = xv_display(info);
     w = xv_xid(info);
-    notice = (notice_handle)xv_get(window, XV_KEY_DATA, notice_context_key);
+    notice = (notice_handle)xv_get(window, XV_KEY_DATA, (Attr_attribute)notice_context_key);
 
     /*
      * Get Cms, pixel values
      */
     cms = xv_get(window, WIN_CMS, NULL);
-    bg3 = xv_get(cms, CMS_PIXEL, 2, NULL);
-    white = xv_get(cms, CMS_PIXEL, 3, NULL);
-    fg = xv_get(cms, CMS_FOREGROUND_PIXEL, NULL);
+    bg3 = (unsigned int)xv_get(cms, CMS_PIXEL, 2, NULL);
+    white = (unsigned int)xv_get(cms, CMS_PIXEL, 3, NULL);
+    fg = (unsigned int)xv_get(cms, CMS_FOREGROUND_PIXEL, NULL);
 
     /*
      ****************************
@@ -1332,7 +1331,7 @@
     XFontStruct		*x_font_info;
 #endif /* OW_I18N */
 
-    if (font == NULL)
+    if (font == (Xv_Font)NULL)
 	return (0);
 
 #ifdef OW_I18N
diff -Naur xview-3.2p1.4.orig/lib/libxview/notice/notice_pt.c xview-3.2p1.4/lib/libxview/notice/notice_pt.c
--- xview-3.2p1.4.orig/lib/libxview/notice/notice_pt.c	2013-01-07 12:36:48.201125000 +0100
+++ xview-3.2p1.4/lib/libxview/notice/notice_pt.c	2013-01-07 12:50:46.819845000 +0100
@@ -63,6 +63,11 @@
 static void     notice_copy_event();
 static Xv_window	notice_get_focus_win();
 static int	notice_show_focus_win();
+#ifdef __STDC__
+static int	notice_quadrant(Rect notice_screen_rect, int x, int y);
+#else
+static int	notice_quadrant();
+#endif
 
 /*
  * --------------------------- STATICS ------------------------------
@@ -104,22 +109,22 @@
     AVLIST_DECL;
 
     if (!client_window) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING,
 	     XV_MSG("NULL parent window passed to notice_prompt(). Not allowed."),
 	         ERROR_PKG, NOTICE,
-		 0);
+		 NULL);
 	return (NOTICE_FAILED);
     }
 #ifndef DISABLE_NOTICES
     notice = (struct notice *) xv_calloc(1, sizeof(struct notice));
 
     if (!notice) {
-        xv_error(NULL,
+        xv_error((Xv_object)NULL,
             ERROR_STRING, 
 	    XV_MSG("Malloc failed."),
 	    ERROR_PKG, NOTICE,
-            0);
+            NULL);
 
         return (NOTICE_FAILED);
     }
@@ -149,7 +154,7 @@
 
     notice->event = (Event *) event;
     notice->client_window = client_window;
-    notice->owner_window = notice->fullscreen_window = NULL;
+    notice->owner_window = notice->fullscreen_window = (Xv_Window)NULL;
 
     VA_START(valist, event);
     MAKE_AVLIST(valist, avlist);
@@ -194,7 +199,7 @@
 {
     register Xv_Drawable_info 	*info;
     notice_buttons_handle 	button;
-    Cms				cms = NULL;
+    Cms				cms = (Cms)NULL;
     notice_buttons_handle 	current_button = NULL;
     notice_buttons_handle 	prev_button = NULL;
     notice_buttons_handle 	default_button = NULL;
@@ -223,7 +228,7 @@
     Fullscreen			fs;
     Rect			notice_screen_rect;
     Xv_Window       		client_window = notice->client_window;
-    Xv_Window       		focus_window = NULL;
+    Xv_Window       		focus_window = (Xv_Window)NULL;
     int      			leftoff, topoff;
     int				mouseless = FALSE, first_repaint_set = FALSE;
 
@@ -288,9 +293,9 @@
 	    WIN_CMS, cms,
 	    XV_VISUAL, xv_get(cms, XV_VISUAL),
 	    XV_FONT, notice->notice_font,
-	    XV_KEY_DATA, notice_context_key, notice,
+	    XV_KEY_DATA, (Attr_attribute)notice_context_key, notice,
 	    XV_SHOW, FALSE,
-	    0);
+	    NULL);
 
         ginfo = notice->ginfo = xv_init_olgx(notice_window, &three_d,
 			 xv_get(notice_window, XV_FONT));
@@ -384,7 +389,7 @@
 	    XV_HEIGHT, rect.r_height + PANE_NOTICE_DIFF(NOTICE_IS_TOPLEVEL, notice->scale) + 
 			topoff,
 	    XV_SHOW, TRUE,
-	    0);
+	    NULL);
 
     /*
      * BUG: Should wait for notice window to map
@@ -401,8 +406,8 @@
 		WIN_UP_ASCII_EVENTS,
 		LOC_WINENTER, LOC_WINEXIT,
 		LOC_DRAG, LOC_MOVE,
-		0,
-	    0);
+		NULL,
+	    NULL);
     if (fs) {
 	notice->fullscreen = fs;
     } else {
@@ -410,7 +415,7 @@
     }
 
     if (xv_get(xv_server(info), SERVER_JOURNALLING))
-	(void) xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1, 0);
+	(void) xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1, NULL);
 
     (void) notice_do_bell(notice);
 
@@ -450,7 +455,7 @@
 		y = top_placement + curr->button_rect.r_top + 
 			(curr->button_rect.r_height/2);
 			
-		(void) xv_set(root_window, WIN_MOUSE_XY, x, y, 0);
+		(void) xv_set(root_window, WIN_MOUSE_XY, x, y, NULL);
 		break;
 	    }
     }
@@ -477,7 +482,7 @@
     trigger = notice->default_input_code;
 
     if (xv_get(xv_server(info), SERVER_JOURNALLING))
-	(void) xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1, 0);
+	(void) xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1, NULL);
 
     prev_button = notice->button_info;
 
@@ -888,7 +893,7 @@
 
 Done:
     if (xv_get(xv_server(info), SERVER_JOURNALLING))
-	(void) xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1, 0);
+	(void) xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1, NULL);
     (void) xv_destroy(fs);
 
     result = notice->result;
@@ -917,7 +922,7 @@
 	if (notice->focus_specified) {
 	    (void) xv_set(root_window, WIN_MOUSE_XY,
 			  old_mousex, old_mousey,
-			  0);
+			  NULL);
 	} else {
 	    (void) xv_set(root_window, WIN_MOUSE_XY, old_mousex, old_mousey, 0);
 	}
@@ -1168,14 +1173,14 @@
 
 
     DRAWABLE_INFO_MACRO(focus_window, info);
-    gc = (GC) xv_get(focus_window, XV_KEY_DATA, FRAME_FOCUS_GC);
+    gc = (GC) xv_get(focus_window, XV_KEY_DATA, (Attr_attribute)FRAME_FOCUS_GC);
     if (!gc) {
         /* Create the Graphics Context for the Focus Window */
 	/* THIS IS ALSO DONE IN frame_focus_win_event_proc() in fm_input.c*/
         gc_values.fill_style = FillOpaqueStippled;
         gc = XCreateGC(xv_display(info), xv_xid(info), GCFillStyle,
                             &gc_values);
-        xv_set(focus_window, XV_KEY_DATA, FRAME_FOCUS_GC, gc, 0);
+        xv_set(focus_window, XV_KEY_DATA, (Attr_attribute)FRAME_FOCUS_GC, gc, NULL);
     }
 
     DRAWABLE_INFO_MACRO(fs_win, info);
@@ -1185,7 +1190,7 @@
         gc_values.foreground = xv_bg(info);
     }
     else  {
-        image = xv_get(focus_window, XV_KEY_DATA, FRAME_FOCUS_UP_IMAGE);
+        image = xv_get(focus_window, XV_KEY_DATA, (Attr_attribute)FRAME_FOCUS_UP_IMAGE);
         DRAWABLE_INFO_MACRO(image, image_info);
         gc_values.fill_style = FillOpaqueStippled;
         gc_values.stipple = xv_xid(image_info);
diff -Naur xview-3.2p1.4.orig/lib/libxview/notice/notice_set.c xview-3.2p1.4/lib/libxview/notice/notice_set.c
--- xview-3.2p1.4.orig/lib/libxview/notice/notice_set.c	2013-01-07 12:36:29.293939000 +0100
+++ xview-3.2p1.4/lib/libxview/notice/notice_set.c	2013-01-07 12:50:46.856223000 +0100
@@ -64,7 +64,7 @@
     for (; *avlist; avlist = attr_next(avlist)) {
         value = (caddr_t) avlist[1];
 	bad_attr = FALSE;
-	switch (avlist[0]) {
+	switch ((int)avlist[0]) {
 
 	/*
 	 * GENERIC NOTICE ATTRIBUTES
@@ -146,11 +146,11 @@
                 if (!yes_button_seen) {
                     yes_button_seen = TRUE;
                 } else {
-                    (void) xv_error(NULL,
+                    (void) xv_error((Xv_object)NULL,
                                     ERROR_STRING, 
 				    XV_MSG("Only one NOTICE_BUTTON_YES attr allowed. Attr ignored."),
 				    ERROR_PKG, NOTICE,
-                                    0);
+                                    NULL);
                     break;
                 }
 
@@ -174,7 +174,7 @@
                     (void) notice_add_button_to_list(notice, button);
                 }
 
-                if (avlist[0] == NOTICE_BUTTON_YES)
+                if ((int)avlist[0] == NOTICE_BUTTON_YES)
                   button->string = (wchar_t *)_xv_mbstowcsdup((char *)avlist[1]);
                 else
                   button->string = XV_STRSAVE((CHAR *) avlist[1]);
@@ -193,11 +193,11 @@
                 if (!no_button_seen) {
                     no_button_seen = TRUE;
                 } else {
-                    xv_error(NULL,
+                    xv_error((Xv_object)NULL,
                              ERROR_STRING,
                     	     XV_MSG("Only one NOTICE_BUTTON_NO attr allowed. Attr ignored."),
 			     ERROR_PKG, NOTICE,
-                             0);
+                             NULL);
                     break;
                 }
 
@@ -216,7 +216,7 @@
                     (void) notice_add_button_to_list(notice, button);
                 }
 
-                if( avlist[0] == NOTICE_BUTTON_NO )
+                if((int)avlist[0] == NOTICE_BUTTON_NO )
                   button->string = (wchar_t *)_xv_mbstowcsdup((char *)avlist[1]);
                 else
                   button->string = XV_STRSAVE((CHAR *) avlist[1]);
@@ -248,7 +248,7 @@
                     (void) notice_add_button_to_list(notice, button);
                 }
 
-                if( avlist[0] == NOTICE_BUTTON )
+                if((int)avlist[0] == NOTICE_BUTTON )
                   button->string = (wchar_t *)_xv_mbstowcsdup((char *)avlist[1]);
                 else
                   button->string = XV_STRSAVE((CHAR *) avlist[1]);
@@ -279,11 +279,11 @@
             if (!yes_button_seen) {
                 yes_button_seen = TRUE;
             } else {
-                (void) xv_error(NULL,
+                (void) xv_error((Xv_object)NULL,
                             ERROR_STRING,
                             XV_MSG("Only one NOTICE_BUTTON_YES attr allowed. Attr ignored."),
                             ERROR_PKG, NOTICE,
-                            0);
+                            NULL);
                 break;
             }
 
@@ -334,11 +334,11 @@
             if (!no_button_seen) {
                 no_button_seen = TRUE;
             } else {
-                xv_error(NULL,
+                xv_error((Xv_object)NULL,
                     ERROR_STRING,
                     XV_MSG("Only one NOTICE_BUTTON_NO attr allowed. Attr ignored."),
                     ERROR_PKG, NOTICE,
-                    0);
+                    NULL);
                 break;
             }
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/notice/noticeimpl.h xview-3.2p1.4/lib/libxview/notice/noticeimpl.h
--- xview-3.2p1.4.orig/lib/libxview/notice/noticeimpl.h	2013-01-07 12:36:29.152565000 +0100
+++ xview-3.2p1.4/lib/libxview/notice/noticeimpl.h	2013-01-07 12:50:46.890707000 +0100
@@ -185,12 +185,16 @@
 Pkg_private void			notice_button_panel_proc();
 Pkg_private int				notice_determine_font();
 Pkg_private int				notice_center();
-Pkg_private int				notice_subframe_layout();
+Pkg_private void			notice_subframe_layout();
 Pkg_private int				notice_text_width();
 Pkg_private int				notice_button_width();
 Pkg_private int				notice_get_owner_frame();
 Pkg_private notice_buttons_handle	notice_create_button_struct();
 Pkg_private notice_msgs_handle		notice_create_msg_struct();
+Pkg_private void			notice_update_xy(Notice_info *notice);
+Pkg_private int				notice_block_popup(Notice_info *notice);
+Pkg_private int				notice_do_show(Notice_info *notice);
+Pkg_private int				notice_create_base(Notice_info *notice);
 
 Pkg_private Xv_opaque	notice_set_avlist();
 Pkg_private Xv_opaque	notice_generic_set();
diff -Naur xview-3.2p1.4.orig/lib/libxview/notify/ndet.h xview-3.2p1.4/lib/libxview/notify/ndet.h
--- xview-3.2p1.4.orig/lib/libxview/notify/ndet.h	2013-01-07 12:36:23.851251000 +0100
+++ xview-3.2p1.4/lib/libxview/notify/ndet.h	2013-01-07 12:50:46.920306000 +0100
@@ -188,20 +188,22 @@
 extern	Notify_func ndet_get_func();	/* (Notify_client nclient,
 					    NTFY_TYPE type, NTFY_DATA data,
 					    int use_data) */
-extern	ndet_check_fd();		/* Returns 0 if all OK else -1 and
+extern	int ndet_check_fd(int fd);	/* Returns 0 if all OK else -1 and
 					   sets notify_errno to NOTIFY_BADF
 					   (int fd) */
 
-extern	ndet_check_sig();		/* Returns 0 if all OK else -1 and sets
+extern	int ndet_check_sig(int sig);	/* Returns 0 if all OK else -1 and sets
 					   notify_errno to NOTIFY_BAD_SIGNAL
 					   (int sig) */
-extern	ndet_check_mode();		/* Returns 0 if all OK else -1 and sets
+extern	int ndet_check_mode(Notify_signal_mode mode, NTFY_TYPE *type_ptr);
+					/* Returns 0 if all OK else -1 and sets
 					   notify_errno to NOTIFY_INVAL.  Sets
 					   type_ptr if not null.
 					   (Notify_signal_mode mode,
 					    NTFY_TYPE *type_ptr) */
 
-extern	ndet_check_which();		/* Turn itimer which into type.
+extern	int ndet_check_which(int which, NTFY_TYPE *type_ptr);
+					/* Turn itimer which into type.
 					   Returns 0 if all OK else -1 and sets
 					   notify_errno to NOTIFY_INVAL.  Sets
 					   type_ptr if not null.
diff -Naur xview-3.2p1.4.orig/lib/libxview/notify/nint_next.c xview-3.2p1.4/lib/libxview/notify/nint_next.c
--- xview-3.2p1.4.orig/lib/libxview/notify/nint_next.c	2013-01-07 12:36:24.413656000 +0100
+++ xview-3.2p1.4/lib/libxview/notify/nint_next.c	2013-01-07 12:50:46.951845000 +0100
@@ -40,7 +40,7 @@
 	stack_cond->func_next + 1 > NTFY_FUNCS_MAX ||
 	stack_cond->type != type ||
 /* Alpha compatibility, mbuck@debian.org */
-#if defined(__alpha)
+#if defined(__alpha) || defined(_XV_API_BROKEN_64BIT)
 	stack_cond->data.an_u_int != (unsigned long) nclient) {
 #else
 	stack_cond->data.an_u_int != (u_int) nclient) {
diff -Naur xview-3.2p1.4.orig/lib/libxview/notify/nint_stack.c xview-3.2p1.4/lib/libxview/notify/nint_stack.c
--- xview-3.2p1.4.orig/lib/libxview/notify/nint_stack.c	2013-01-07 12:36:25.163445000 +0100
+++ xview-3.2p1.4/lib/libxview/notify/nint_stack.c	2013-01-07 12:50:46.983483000 +0100
@@ -66,7 +66,7 @@
      * consistency checking later.
      */
 /* Alpha compatibility, mbuck@debian.org */
-#if defined(__alpha)
+#if defined(__alpha) || defined(_XV_API_BROKEN_64BIT)
     stack_cond->data.an_u_int = (unsigned long) client->nclient;
 #else
     stack_cond->data.an_u_int = (u_int) client->nclient;
diff -Naur xview-3.2p1.4.orig/lib/libxview/notify/ntfy.h xview-3.2p1.4/lib/libxview/notify/ntfy.h
--- xview-3.2p1.4.orig/lib/libxview/notify/ntfy.h	2013-01-07 12:36:22.510187000 +0100
+++ xview-3.2p1.4/lib/libxview/notify/ntfy.h	2013-01-07 12:50:47.015714000 +0100
@@ -138,7 +138,7 @@
 					   NTFY_EXCEPTION */
 		int	signal;		/* NTFY_*_SIGNAL */
 /* Alpha compatibility, mbuck@debian.org */
-#if defined(__alpha)
+#if defined(__alpha) || defined(__x86_64__) || defined(__ia64__) || defined(_XV_API_BROKEN_64BIT)
 		unsigned long an_u_int;
 #else
 		u_int	an_u_int;	/* Generic unsigned int used for
diff -Naur xview-3.2p1.4.orig/lib/libxview/notify/ntfy_debug.c xview-3.2p1.4/lib/libxview/notify/ntfy_debug.c
--- xview-3.2p1.4.orig/lib/libxview/notify/ntfy_debug.c	1993-06-29 07:18:17.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/notify/ntfy_debug.c	2013-01-07 12:50:47.058213000 +0100
@@ -18,6 +18,7 @@
 #include <xview_private/i18n_impl.h>
 #include <xview/xv_error.h>
 #include <xview_private/ntfy.h>
+#include <stdlib.h>			/* free(), getenv() */
 
 pkg_private_data int ntfy_errno_no_print;
 pkg_private_data int ntfy_warning_print;
@@ -33,7 +34,6 @@
     if ((!ntfy_errno_no_print) && error != NOTIFY_OK)
 	notify_perror("Notifier error");
     if (!ntfy_errno_abort_init) {
-	extern char    *getenv();
 	char           *str = getenv("Notify_error_ABORT");
 
 	if (str && (str[0] == 'y' || str[0] == 'Y'))
@@ -62,9 +62,9 @@
 
     error_string = xv_malloc(strlen("Notifier internal error (code #999)") + 1);
     sprintf(error_string, "Notifier internal error (code #%d)", code);
-    xv_error(NULL,
+    xv_error((Xv_object)NULL,
 	     ERROR_STRING, error_string,
-	     0);
+	     NULL);
     free(error_string);
 }
 
@@ -78,8 +78,8 @@
 			  + 2);
     strcpy(error_string, XV_MSG("Notifier fatal error: "));
     strcat(error_string, msg);
-    xv_error(NULL,
+    xv_error((Xv_object)NULL,
 	     ERROR_STRING, error_string,
-	     0);
+	     NULL);
     free(error_string);
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/notify/ntfy_dump.c xview-3.2p1.4/lib/libxview/notify/ntfy_dump.c
--- xview-3.2p1.4.orig/lib/libxview/notify/ntfy_dump.c	1993-06-29 07:18:16.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/notify/ntfy_dump.c	2013-01-07 12:50:47.083772000 +0100
@@ -145,7 +145,7 @@
     }
     /* Copy function list, if appropriate */
     if (cond->func_count > 1) {
-	(void) fprintf(data->file, "\n\t\tfunctions: %lx %lx %lx %lx",
+	(void) fprintf(data->file, "\n\t\tfunctions: %lx %lx %lx %lx %lx",
 		       cond->callout.functions[0],
 		       cond->callout.functions[1],
 		       cond->callout.functions[2],
diff -Naur xview-3.2p1.4.orig/lib/libxview/notify/ntfyperror.c xview-3.2p1.4/lib/libxview/notify/ntfyperror.c
--- xview-3.2p1.4.orig/lib/libxview/notify/ntfyperror.c	1993-06-29 07:18:10.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/notify/ntfyperror.c	2013-01-07 12:50:47.113875000 +0100
@@ -70,7 +70,7 @@
 	msg = XV_MSG("Unknown notifier error");
     }
     (void) sprintf(dummy, "%s: %s", str, msg);
-    xv_error(NULL,
+    xv_error((Xv_object)NULL,
 	     ERROR_STRING, dummy,
-	     0);
+	     NULL);
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/notify/sys_select.c xview-3.2p1.4/lib/libxview/notify/sys_select.c
--- xview-3.2p1.4.orig/lib/libxview/notify/sys_select.c	2013-01-07 12:36:22.965857000 +0100
+++ xview-3.2p1.4/lib/libxview/notify/sys_select.c	2013-01-07 12:50:47.145579000 +0100
@@ -32,7 +32,8 @@
 #include <errno.h>		/* For debugging */
 #include <stdio.h>		/* For debugging */
 
-extern          errno;
+#include <errno.h>
+/*extern          errno;*/
 
 #ifndef NULL
 #define NULL	0
diff -Naur xview-3.2p1.4.orig/lib/libxview/openwin/openwin.c xview-3.2p1.4/lib/libxview/openwin/openwin.c
--- xview-3.2p1.4.orig/lib/libxview/openwin/openwin.c	2013-01-07 12:36:30.938555000 +0100
+++ xview-3.2p1.4/lib/libxview/openwin/openwin.c	2013-01-07 12:50:47.172087000 +0100
@@ -174,7 +174,7 @@
     Xv_Window       child;
     Window_layout_op op;
 /* Alpha compatibility, mbuck@debian.org, FIXME: I don't understand this */
-#if defined(__alpha)
+#if defined(__alpha) || defined(_XV_API_BROKEN_64BIT)
     unsigned long   d1, d2, d3, d4, d5;
 #else
     int             d1, d2, d3, d4, d5;
diff -Naur xview-3.2p1.4.orig/lib/libxview/openwin/openwin.h xview-3.2p1.4/lib/libxview/openwin/openwin.h
--- xview-3.2p1.4.orig/lib/libxview/openwin/openwin.h	1993-06-29 07:16:41.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/openwin/openwin.h	2013-01-07 12:50:47.199598000 +0100
@@ -53,7 +53,7 @@
 
 #define	OPENWIN_EACH_VIEW(openwin, view)	\
    {int _view_cnt = 0; 				\
-   while (((view) = (Xv_Window) xv_get((openwin), OPENWIN_NTH_VIEW, _view_cnt++)) != NULL) { 					\
+   while (((view) = (Xv_Window) xv_get((openwin), OPENWIN_NTH_VIEW, _view_cnt++)) != (Xv_Window)NULL) { 					\
 
 #define	OPENWIN_END_EACH	}}
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/openwin/ow_evt.c xview-3.2p1.4/lib/libxview/openwin/ow_evt.c
--- xview-3.2p1.4.orig/lib/libxview/openwin/ow_evt.c	2013-01-07 12:36:30.655880000 +0100
+++ xview-3.2p1.4/lib/libxview/openwin/ow_evt.c	2013-01-07 12:50:47.225012000 +0100
@@ -90,7 +90,7 @@
 	{
 	    /* clear the damaged area */
 	    Openwin_view_info *view = (Openwin_view_info *) xv_get(window_public,
-				     XV_KEY_DATA, openwin_view_context_key);
+				     XV_KEY_DATA, (Attr_attribute)openwin_view_context_key);
 
 	    if (STATUS(view->owin, auto_clear)) {
 		openwin_clear_damage(window_public, win_get_damage(window_public));
@@ -100,35 +100,35 @@
       case ACTION_SPLIT_HORIZONTAL:
 	{
 	    Openwin_view_info *view = (Openwin_view_info *) xv_get(window_public,
-				     XV_KEY_DATA, openwin_view_context_key);
+				     XV_KEY_DATA, (Attr_attribute)openwin_view_context_key);
 
 	    xv_set(OPENWIN_PUBLIC(view->owin),
 		   OPENWIN_SPLIT,
 		   OPENWIN_SPLIT_VIEW, view->view,
 		   OPENWIN_SPLIT_DIRECTION, OPENWIN_SPLIT_HORIZONTAL,
 		   OPENWIN_SPLIT_POSITION, (int) arg,
-		   0,
-		   0);
+		   NULL,
+		   NULL);
 	    break;
 	}
       case ACTION_SPLIT_VERTICAL:
 	{
 	    Openwin_view_info *view = (Openwin_view_info *) xv_get(window_public,
-				     XV_KEY_DATA, openwin_view_context_key);
+				     XV_KEY_DATA, (Attr_attribute)openwin_view_context_key);
 
 	    xv_set(OPENWIN_PUBLIC(view->owin),
 		   OPENWIN_SPLIT,
 		   OPENWIN_SPLIT_VIEW, view->view,
 		   OPENWIN_SPLIT_DIRECTION, OPENWIN_SPLIT_VERTICAL,
 		   OPENWIN_SPLIT_POSITION, (int) arg,
-		   0,
-		   0);
+		   NULL,
+		   NULL);
 	    break;
 	}
       case ACTION_SPLIT_DESTROY:
 	{
 	    Openwin_view_info *view = (Openwin_view_info *) xv_get(window_public,
-				     XV_KEY_DATA, openwin_view_context_key);
+				     XV_KEY_DATA, (Attr_attribute)openwin_view_context_key);
 
 #ifdef SELECTABLE_VIEWS
 	    if (view->owin->seln_view != NULL)
diff -Naur xview-3.2p1.4.orig/lib/libxview/openwin/ow_get.c xview-3.2p1.4/lib/libxview/openwin/ow_get.c
--- xview-3.2p1.4.orig/lib/libxview/openwin/ow_get.c	2013-01-07 12:36:30.982024000 +0100
+++ xview-3.2p1.4/lib/libxview/openwin/ow_get.c	2013-01-07 12:50:47.255429000 +0100
@@ -44,7 +44,7 @@
     Openwin_view_info *view;
     Xv_opaque v = 0;
 
-    switch (attr) {
+    switch ((int)attr) {
       case OPENWIN_NTH_VIEW:
 	view = openwin_nth_view(owin, va_arg(valist, int));
 	if (view != NULL) {
@@ -68,7 +68,7 @@
 	break;
       case OPENWIN_VERTICAL_SCROLLBAR:
 	view = (Openwin_view_info *) xv_get(va_arg(valist, Xv_Window),
-					    XV_KEY_DATA, openwin_view_context_key);
+					    XV_KEY_DATA, (Attr_attribute)openwin_view_context_key);
 	if ((view == NULL) && ((view = openwin_nth_view(owin, 0)) == NULL))
 	  v = (Xv_opaque) NULL;
 	else 
@@ -76,7 +76,7 @@
 	break;
       case OPENWIN_HORIZONTAL_SCROLLBAR:
 	view = (Openwin_view_info *) xv_get(va_arg(valist, Xv_Window), 
-					    XV_KEY_DATA, openwin_view_context_key);
+					    XV_KEY_DATA, (Attr_attribute)openwin_view_context_key);
 	if ((view == NULL) && ((view = openwin_nth_view(owin, 0)) == NULL))
 	  v = (Xv_opaque) NULL;
 	else
@@ -121,6 +121,7 @@
       default:
 	xv_check_bad_attr(OPENWIN, attr);
 	*get_status = XV_ERROR;
+	break;
     }
     return(v);
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/openwin/ow_rescale.c xview-3.2p1.4/lib/libxview/openwin/ow_rescale.c
--- xview-3.2p1.4.orig/lib/libxview/openwin/ow_rescale.c	1993-06-29 07:16:43.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/openwin/ow_rescale.c	2013-01-07 12:50:47.282993000 +0100
@@ -20,6 +20,7 @@
 
 #include <xview_private/ow_impl.h>
 #include <xview/font.h>
+#include <xview_private/windowimpl.h>
 
 /*
  * Package private functions
@@ -65,7 +66,9 @@
 	window_add_to_rect_list(rect_obj_list, view->view, &view->enclosing_rect, i);
 	i++;
     }
-    window_adjust_rects(rect_obj_list, num_views, parent_width, parent_height);
+    /* FIXME: arguments are messed up and I don't understand this */
+    /* window_adjust_rects(rect_obj_list, num_views, parent_width, parent_height);*/
+    window_adjust_rects(rect_obj_list, (Xv_Window)owin_public, num_views, parent_width, parent_height);
     i = 0;
     for (view = owin->views; view != NULL; view = view->next_view) {
 	if (!window_rect_equal_ith_obj(rect_obj_list, &new_rect, i))
diff -Naur xview-3.2p1.4.orig/lib/libxview/openwin/ow_set.c xview-3.2p1.4/lib/libxview/openwin/ow_set.c
--- xview-3.2p1.4.orig/lib/libxview/openwin/ow_set.c	2013-01-07 12:36:30.892096000 +0100
+++ xview-3.2p1.4/lib/libxview/openwin/ow_set.c	2013-01-07 12:50:47.309899000 +0100
@@ -39,6 +39,8 @@
 static void      ow_set_width();
 static void      ow_set_height();
 
+Attr_avlist attr_copy_avlist();
+
 /*-------------------Function Definitions-------------------*/
 
 /*
diff -Naur xview-3.2p1.4.orig/lib/libxview/openwin/ow_view.c xview-3.2p1.4/lib/libxview/openwin/ow_view.c
--- xview-3.2p1.4.orig/lib/libxview/openwin/ow_view.c	2013-01-07 12:36:30.701114000 +0100
+++ xview-3.2p1.4/lib/libxview/openwin/ow_view.c	2013-01-07 12:50:47.342965000 +0100
@@ -34,6 +34,12 @@
  * Declaration of Functions Defined in This File (in order):
  */
 
+#ifdef __STDC__
+static int openwin_check_view(Openwin_view_info *view);
+#else
+static int openwin_check_view();
+#endif
+
 void            openwin_create_initial_view();
 void            openwin_destroy_views();
 int             openwin_count_views();
@@ -161,7 +167,7 @@
     Openwin_view_info **view;
 {
     *view = NULL;
-    *view = (Openwin_view_info *) xv_get(window, XV_KEY_DATA, openwin_view_context_key);
+    *view = (Openwin_view_info *) xv_get(window, XV_KEY_DATA, (Attr_attribute)openwin_view_context_key);
     if (*view != NULL) {
 	return (XV_OK);
     } else {
@@ -262,7 +268,7 @@
 	if (direction == OPENWIN_SPLIT_HORIZONTAL) {
 	    sb = openwin_sb(new_view, SCROLLBAR_VERTICAL);
 	    xv_set(sb, SCROLLBAR_VIEW_START, 
-		   view_start / (int) xv_get(sb, SCROLLBAR_PIXELS_PER_UNIT), 0);
+		   view_start / (int) xv_get(sb, SCROLLBAR_PIXELS_PER_UNIT), NULL);
 	}
     }
     if ((sb = openwin_sb(view, SCROLLBAR_HORIZONTAL)) != NULL) {
@@ -270,7 +276,7 @@
 	if (direction == OPENWIN_SPLIT_VERTICAL) {
 	    sb = openwin_sb(new_view, SCROLLBAR_HORIZONTAL);
 	    xv_set(sb, SCROLLBAR_VIEW_START, 
-		   view_start / (int) xv_get(sb, SCROLLBAR_PIXELS_PER_UNIT), 0);
+		   view_start / (int) xv_get(sb, SCROLLBAR_PIXELS_PER_UNIT), NULL);
 	}
     }
 #ifdef SELECTABLE_VIEWS
@@ -475,7 +481,7 @@
 	      WIN_BORDER, xborders,
 	      XV_VISUAL, visual,
               WIN_CMS, cms,			       
-              XV_KEY_DATA, openwin_view_context_key, view,
+              XV_KEY_DATA, (Attr_attribute)openwin_view_context_key, view,
 	      NULL);
     } else {
 	/* parent/child registration process sets the data handle */
@@ -488,7 +494,7 @@
 	      WIN_BORDER, xborders,
 	      XV_VISUAL, visual,
               WIN_CMS, cms,			       
-	      XV_KEY_DATA, openwin_view_context_key, view,
+	      XV_KEY_DATA, (Attr_attribute)openwin_view_context_key, view,
 	      NULL);
 
 	/* if client toggled xborders redo rect placement */
@@ -496,7 +502,7 @@
 	    *r = view->enclosing_rect;
 	    openwin_view_rect_from_avail_rect(owin, view, r);
 	    if (!rect_equal(&view->enclosing_rect, r)) {
-		xv_set(view->view, WIN_RECT, r, 0);
+		xv_set(view->view, WIN_RECT, r, NULL);
 	    }
 	    /* no xborders is the default so if xborders is TRUE */
 	    /* and we each here assume client defaulted */
@@ -507,7 +513,7 @@
 	    /* This means a split can't override a border true */
 	    /* on create. No big deal since it is rare. */
 	    if (xborders) {
-		xv_set(view->view, WIN_BORDER, xborders, 0);
+		xv_set(view->view, WIN_BORDER, xborders, NULL);
 	    }
 	}
 	xv_free(owin->view_avlist);
@@ -795,12 +801,12 @@
 	xv_set(sb,
 	       WIN_PARENT, OPENWIN_PUBLIC(owin),
 	       XV_OWNER, OPENWIN_PUBLIC(owin),
-	       0);
+	       NULL);
     xv_set(sb,
 	   WIN_RECT, &sb_r,
 	   SCROLLBAR_DIRECTION, direction,
 	   SCROLLBAR_VIEW_LENGTH, view_length,
 	   SCROLLBAR_NOTIFY_CLIENT, view->view,
 	   XV_SHOW, TRUE,
-	   0);
+	   NULL);
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/item.c xview-3.2p1.4/lib/libxview/panel/item.c
--- xview-3.2p1.4.orig/lib/libxview/panel/item.c	1993-06-29 07:16:58.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/panel/item.c	2013-01-07 12:50:47.375956000 +0100
@@ -84,8 +84,8 @@
     /*
      * Parse xv_create attributes
      */
-    for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-	switch (attrs[0]) {
+    for (attrs = avlist; (int)*attrs; attrs = attr_next(attrs)) {
+	switch ((int)attrs[0]) {
 	  case PANEL_ITEM_X_GAP:
 	    ip->x_gap = (int) attrs[1];
 	    break;
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/item_get.c xview-3.2p1.4/lib/libxview/panel/item_get.c
--- xview-3.2p1.4.orig/lib/libxview/panel/item_get.c	1993-06-29 07:16:48.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/panel/item_get.c	2013-01-07 12:50:47.406410000 +0100
@@ -22,7 +22,7 @@
 {
     register Item_info *ip = ITEM_PRIVATE(item_public);
 
-    switch (which_attr) {
+    switch ((int)which_attr) {
       case PANEL_NEXT_ITEM:
 	return (Xv_opaque) (ip->next ? ITEM_PUBLIC(ip->next) : 0);
 
@@ -197,7 +197,7 @@
 
       case XV_OWNER:
 	return ((Xv_opaque) (ip->panel != NULL) ? PANEL_PUBLIC(ip->panel) :
-		NULL);
+		XV_NULL);
 
       case PANEL_BUSY:
 	return (Xv_opaque) busy(ip);
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/item_set.c xview-3.2p1.4/lib/libxview/panel/item_set.c
--- xview-3.2p1.4.orig/lib/libxview/panel/item_set.c	2013-01-07 12:36:13.841734000 +0100
+++ xview-3.2p1.4/lib/libxview/panel/item_set.c	2013-01-07 15:08:35.792792000 +0100
@@ -25,7 +25,7 @@
 Xv_private Graphics_info *xv_init_olgx();
 
 static void item_adjust_label_size();
-static fix_positions(Item_info *ip);
+static void fix_positions(Item_info *ip);
 
 extern Notify_value panel_base_event_handler();
 
@@ -85,7 +85,7 @@
 #ifdef ATTR_CONSUME_BUGS_FIXED
 	consumed = TRUE;
 #endif
-	switch (attrs[0]) {
+	switch ((int)attrs[0]) {
 
 	  case PANEL_EVENT_PROC:
 	    ip->ops.panel_op_handle_event = (void (*) ()) attrs[1];
@@ -685,7 +685,7 @@
 
 /* fix_positions - of label and value rects */
 
-static
+static void
 fix_positions(ip)
     register Item_info *ip;
 {
@@ -727,7 +727,7 @@
 }
 
 
-Pkg_private
+Pkg_private void
 panel_fix_label_position(ip)
     register Item_info *ip;
 {
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_ambtn.c xview-3.2p1.4/lib/libxview/panel/p_ambtn.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_ambtn.c	1993-06-29 07:17:04.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/panel/p_ambtn.c	2013-01-07 12:50:47.489299000 +0100
@@ -253,11 +253,11 @@
      * Abbreviated Menu Button's menu done proc.
      */
     xv_set(ip->menu,
-	   XV_KEY_DATA, PANEL_FIRST_ITEM, ip,
-	   XV_KEY_DATA, MENU_DONE_PROC, xv_get(ip->menu, MENU_DONE_PROC),
+	   XV_KEY_DATA, (Attr_attribute)PANEL_FIRST_ITEM, ip,
+	   XV_KEY_DATA, (Attr_attribute)MENU_DONE_PROC, xv_get(ip->menu, MENU_DONE_PROC),
 	   MENU_BUSY_PROC, ambtn_menu_busy_proc,
 	   MENU_DONE_PROC, ambtn_menu_done_proc,
-	   0);
+	   NULL);
 
     /* Show the menu */
     rect.r_width = 0;	/* paint menu flush left */
@@ -265,7 +265,7 @@
     menu_show(ip->menu, event_window(event), event,
 	      MENU_POSITION_RECT, &rect,
 	      MENU_PULLDOWN, TRUE,
-	      0);
+	      NULL);
 }
 
 
@@ -329,12 +329,12 @@
 
     frame = xv_get(PANEL_PUBLIC(ip->panel), WIN_FRAME);
     if (ip->panel->layout == PANEL_HORIZONTAL) {
-	xv_set(frame, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_UP, 0);
+	xv_set(frame, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_UP, NULL);
 	x = ip->value_rect.r_left + AMB_OFFSET +
 	    (ip->value_rect.r_width - AMB_OFFSET - FRAME_FOCUS_UP_WIDTH)/2;
 	y = ip->value_rect.r_top + ip->value_rect.r_height;
     } else {
-	xv_set(frame, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_RIGHT, 0);
+	xv_set(frame, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_RIGHT, NULL);
 	x = ip->value_rect.r_left - FRAME_FOCUS_RIGHT_WIDTH/2;
 	y = ip->value_rect.r_top +
 	    (ip->value_rect.r_height - FRAME_FOCUS_RIGHT_HEIGHT)/2;
@@ -357,7 +357,7 @@
 
     frame = xv_get(PANEL_PUBLIC(ip->panel), WIN_FRAME);
     focus_win = xv_get(frame, FRAME_FOCUS_WIN);
-    xv_set(focus_win, XV_SHOW, FALSE, 0);
+    xv_set(focus_win, XV_SHOW, FALSE, NULL);
 }
 
 
@@ -370,7 +370,7 @@
 {
     Item_info	   *ip;
     
-    ip = (Item_info *) xv_get(menu, XV_KEY_DATA, PANEL_FIRST_ITEM);
+    ip = (Item_info *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)PANEL_FIRST_ITEM);
     ambtn_paint_value(ip, OLGX_BUSY);
 }
 
@@ -383,15 +383,15 @@
     Item_info	   *ip;
     void          (*orig_done_proc) ();	/* original menu-done procedure */
     
-    ip = (Item_info *) xv_get(menu, XV_KEY_DATA, PANEL_FIRST_ITEM);
+    ip = (Item_info *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)PANEL_FIRST_ITEM);
     ambtn_paint_value(ip,
 	ip->panel->status.three_d ? OLGX_NORMAL : OLGX_ERASE | OLGX_NORMAL);
 
     /* Restore original menu done proc. */
-    orig_done_proc = (void (*) ()) xv_get(menu, XV_KEY_DATA, MENU_DONE_PROC);
+    orig_done_proc = (void (*) ()) xv_get(menu, XV_KEY_DATA, (Attr_attribute)MENU_DONE_PROC);
     xv_set(menu,
 	MENU_DONE_PROC, orig_done_proc,
-	0);
+	NULL);
 
     /* Invoke original menu done proc (if any) */
     if (orig_done_proc)
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_btn.c xview-3.2p1.4/lib/libxview/panel/p_btn.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_btn.c	2013-01-07 12:36:48.269400000 +0100
+++ xview-3.2p1.4/lib/libxview/panel/p_btn.c	2013-01-07 12:50:47.525134000 +0100
@@ -156,7 +156,7 @@
 
 	/* Get the Server Image or string of the default item */
 	submenu = ip->menu;
-	if ((default_menu = generate_menu(submenu)) == NULL)
+	if ((default_menu = generate_menu(submenu)) == (Menu)NULL)
 	    return;
 	default_menu_item = (Menu_item) xv_get(default_menu, MENU_DEFAULT_ITEM);
 	if (!default_menu_item)
@@ -205,7 +205,7 @@
 	    image_string(&image) = NULL;
 /* Alpha compatibility, mbuck@debian.org */
 #if 1
-	    label = (char *)"";
+	    label = (Xv_opaque)"";
 #else
 	    label = "";
 #endif
@@ -306,7 +306,7 @@
     if (ip->menu || action_select_is_down(event))
 	panel_paint_button_image(ip, &ip->label, inactive(ip), ip->menu, 0);
     if (ip->menu) {
-	if ((default_menu = generate_menu(ip->menu)) == NULL)
+	if ((default_menu = generate_menu(ip->menu)) == (Menu)NULL)
 	    return;
 	default_menu_item = (Menu_item) xv_get(default_menu, MENU_DEFAULT_ITEM);
 	if (!default_menu_item)
@@ -346,7 +346,7 @@
     ip->flags &= ~(INVOKED | BUSY_MODIFIED);
 
     if (ip->menu && dp->default_menu_item_inactive) {
-	xv_set(PANEL_PUBLIC(ip->panel), WIN_ALARM, 0);
+	xv_set(PANEL_PUBLIC(ip->panel), WIN_ALARM, NULL);
     } else {
 	/*
 	 * Repaint original button image with busy feedback.  Sync server to
@@ -384,7 +384,7 @@
     Item_info      *ip = ITEM_PRIVATE(item_public);
     Xv_Window       paint_window = event_window(event);
 
-    if (ip->menu == NULL || paint_window == NULL)
+    if (ip->menu == NULL || paint_window == (Xv_Window)NULL)
 	return;
 
     /*
@@ -398,14 +398,14 @@
      * Switch to button's color and menu done proc.
      */
     xv_set(ip->menu,
-	   XV_KEY_DATA, PANEL_BUTTON, ITEM_PUBLIC(ip),
-	   XV_KEY_DATA, MENU_BUSY_PROC, xv_get(ip->menu, MENU_BUSY_PROC),
-	   XV_KEY_DATA, MENU_DONE_PROC, xv_get(ip->menu, MENU_DONE_PROC),
-	   XV_KEY_DATA, MENU_COLOR, xv_get(ip->menu, MENU_COLOR),
+	   XV_KEY_DATA, (Attr_attribute)PANEL_BUTTON, ITEM_PUBLIC(ip),
+	   XV_KEY_DATA, (Attr_attribute)MENU_BUSY_PROC, xv_get(ip->menu, MENU_BUSY_PROC),
+	   XV_KEY_DATA, (Attr_attribute)MENU_DONE_PROC, xv_get(ip->menu, MENU_DONE_PROC),
+	   XV_KEY_DATA, (Attr_attribute)MENU_COLOR, xv_get(ip->menu, MENU_COLOR),
 	   MENU_BUSY_PROC, button_menu_busy_proc,
 	   MENU_DONE_PROC, button_menu_done_proc,
 	   MENU_COLOR, ip->color_index,
-	   0);
+	   NULL);
 
     /* Repaint the button in the invoked state */
     ip->flags |= INVOKED;
@@ -416,7 +416,7 @@
     menu_show(ip->menu, paint_window, event,
 	      MENU_POSITION_RECT, &ip->label_rect,
 	      MENU_PULLDOWN, ip->panel->layout == PANEL_HORIZONTAL,
-	      0);
+	      NULL);
 }
 
 
@@ -493,12 +493,12 @@
 
     frame = xv_get(PANEL_PUBLIC(ip->panel), WIN_FRAME);
     if (ip->panel->layout == PANEL_HORIZONTAL) {
-	xv_set(frame, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_UP, 0);
+	xv_set(frame, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_UP, NULL);
 	x = ip->rect.r_left +
 	    (ip->rect.r_width - FRAME_FOCUS_UP_WIDTH)/2;
 	y = ip->rect.r_top + ip->rect.r_height - FRAME_FOCUS_UP_HEIGHT/2;
     } else {
-	xv_set(frame, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_RIGHT, 0);
+	xv_set(frame, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_RIGHT, NULL);
 	x = ip->rect.r_left - FRAME_FOCUS_RIGHT_WIDTH/2;
 	y = ip->rect.r_top +
 	    (ip->rect.r_height - FRAME_FOCUS_RIGHT_HEIGHT)/2;
@@ -521,7 +521,7 @@
 
     frame = xv_get(PANEL_PUBLIC(ip->panel), WIN_FRAME);
     focus_win = xv_get(frame, FRAME_FOCUS_WIN);
-    xv_set(focus_win, XV_SHOW, FALSE, 0);
+    xv_set(focus_win, XV_SHOW, FALSE, NULL);
 }
 
 
@@ -531,7 +531,7 @@
 button_menu_busy_proc(menu)
     Menu	    menu;
 {
-    Panel_item	    item = xv_get(menu, XV_KEY_DATA, PANEL_BUTTON);
+    Panel_item	    item = xv_get(menu, XV_KEY_DATA, (Attr_attribute)PANEL_BUTTON);
     Item_info	   *ip = ITEM_PRIVATE(item);
 
     /* MENU-up: Menu is in Click-Move-Click mode.  Show button in busy state. */
@@ -548,7 +548,7 @@
 {
     void            (*orig_done_proc) ();	/* original menu-done
 						 * procedure */
-    Panel_item	    item = xv_get(menu, XV_KEY_DATA, PANEL_BUTTON);
+    Panel_item	    item = xv_get(menu, XV_KEY_DATA, (Attr_attribute)PANEL_BUTTON);
     Item_info	   *ip = ITEM_PRIVATE(item);
     Panel_info     *panel = ip->panel;
     Panel           panel_public = PANEL_PUBLIC(panel);
@@ -564,12 +564,12 @@
     panel->current = NULL;
 
     /* Restore menu color and original menu busy and done procs. */
-    orig_done_proc = (void (*) ()) xv_get(menu, XV_KEY_DATA, MENU_DONE_PROC);
+    orig_done_proc = (void (*) ()) xv_get(menu, XV_KEY_DATA, (Attr_attribute)MENU_DONE_PROC);
     xv_set(menu,
-	MENU_BUSY_PROC, xv_get(menu, XV_KEY_DATA, MENU_BUSY_PROC),
+	MENU_BUSY_PROC, xv_get(menu, XV_KEY_DATA, (Attr_attribute)MENU_BUSY_PROC),
 	MENU_DONE_PROC, orig_done_proc,
-	MENU_COLOR, xv_get(menu, XV_KEY_DATA, MENU_COLOR),
-	0);
+	MENU_COLOR, xv_get(menu, XV_KEY_DATA, (Attr_attribute)MENU_COLOR),
+	NULL);
 
     /* Invoke original menu done proc (if any) */
     if (orig_done_proc)
@@ -588,13 +588,13 @@
 
     if (gen_proc = (Menu(*) ()) xv_get(menu, MENU_GEN_PROC)) {
 	gen_menu = gen_proc(menu, MENU_DISPLAY);
-	if (gen_menu == NULL) {
+	if (gen_menu == (Menu)NULL) {
 	    xv_error(menu,
 		     ERROR_STRING,
 		 XV_MSG("begin_preview: menu's gen_proc failed to generate a menu"),
 		     ERROR_PKG, PANEL,
-		     0);
-	    return (NULL);
+		     NULL);
+	    return (Menu)NULL;
 	}
 	return (gen_menu);
     } else
@@ -729,7 +729,7 @@
 	if (ip->color_index >= 0) {
 	    save_black = olgx_get_single_color(ginfo, OLGX_BLACK);
 	    olgx_set_single_color(ginfo, OLGX_BLACK,
-				  xv_get(xv_cms(info), CMS_PIXEL,
+				  (unsigned int)xv_get(xv_cms(info), CMS_PIXEL,
 				  	 ip->color_index),
 				  OLGX_SPECIAL);
 	}
@@ -756,7 +756,7 @@
     frame = xv_get(panel_public, WIN_FRAME);
     if (xv_get(frame, XV_IS_SUBTYPE_OF, FRAME_CMD)) {
 	menu_save_pin_window_rect(frame);
-	xv_set(frame, XV_SHOW, FALSE, 0);
+	xv_set(frame, XV_SHOW, FALSE, NULL);
     }
 }
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_choice.c xview-3.2p1.4/lib/libxview/panel/p_choice.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_choice.c	2013-01-07 12:36:48.359292000 +0100
+++ xview-3.2p1.4/lib/libxview/panel/p_choice.c	2013-01-07 12:50:47.564241000 +0100
@@ -102,7 +102,8 @@
 static void     choice_begin_preview(), choice_cancel_preview(),
 		choice_accept_preview(), choice_accept_menu(), choice_remove(),
 		choice_accept_key(), choice_paint(), choice_layout(),
-		choice_accept_kbd_focus(), choice_yield_kbd_focus();
+		choice_yield_kbd_focus();
+static void	choice_accept_kbd_focus(Panel_item item_public);
 static int      choice_number();
 static int	choice_x_gap();
 static int	choice_y_gap();
@@ -119,7 +120,11 @@
 static void     update_display();
 static void     update_item_rect();
 static void     update_value_rect();
-static Xv_opaque choice_do_menu_item();
+static Xv_opaque choice_do_menu_item(Menu menu, Menu_item menu_item);
+static int	re_alloc_choices(register Item_info *ip, int type, Xv_opaque choices[]);
+static int	move_specified(register Item_info *ip, register Attr_avlist avlist);
+static int	modify_choice(register Item_info *ip, int type, int which_choice, Xv_opaque choice_info);
+static int	find_choice(Item_info *ip, Event *event);
 
 static int find_choice(Item_info *ip, Event *event);
 static int modify_choice(Item_info *ip, int type, int which_choice, Xv_opaque       choice_info);
@@ -306,7 +311,7 @@
     if (result != XV_OK)
 	return result;
 
-    while (attr = *avlist++) {
+    while ((attr = (int)*avlist++) != XV_NULL) {
 	switch (attr) {
 #ifdef OW_I18N
           case PANEL_CHOICE_STRINGS:
@@ -328,9 +333,9 @@
             for (count = 0; count < num_choices; count++) {
                 temp_choices[count] = (Xv_opaque)_xv_mbstowcsdup((char*)choices[count]);
             }
-            temp_choices[num_choices] = 0;
+            temp_choices[num_choices] = XV_NULL;
 	    choices = temp_choices;
-	    while (*avlist++);
+	    while ((int)*avlist++);
             break;
 
           case PANEL_CHOICE_STRINGS_WCS:
@@ -352,23 +357,23 @@
             for (count = 0; count < num_choices; count++) {
                 temp_choices[count] = (Xv_opaque)panel_strsave_wc((char *)choices[count]);
             }
-            temp_choices[num_choices] = 0;
+            temp_choices[num_choices] = XV_NULL;
 	    choices = temp_choices;
-	    while (*avlist++);
+	    while ((int)*avlist++);
             break;
 
           case PANEL_CHOICE_IMAGES:
             choices_type = PIT_SVRIM;
             choices = avlist;  /* base of the array */
-	    while (*avlist++); /* skip past the list */
+	    while ((int)*avlist++); /* skip past the list */
             break;
 #else
 	  case PANEL_CHOICE_STRINGS:
 	  case PANEL_CHOICE_IMAGES:
-	    choices_type = attr ==
-		PANEL_CHOICE_STRINGS ? PIT_STRING : PIT_SVRIM;
+	    choices_type = ((int)attr ==
+		PANEL_CHOICE_STRINGS ? PIT_STRING : PIT_SVRIM);
 	    choices = avlist;	/* base of the array */
-	    while (*avlist++);	/* skip past the list */
+	    while ((int)*avlist++);	/* skip past the list */
 	    break;
 #endif /* OW_I18N */
 
@@ -409,7 +414,7 @@
 
 	  case PANEL_CHOICE_FONTS:
 	    /* Sunview1 compatibility attribute: not used */
-	    while (*avlist++);	/* skip past the list */
+	    while ((int)*avlist++);	/* skip past the list */
 	    break;
 
 	  case PANEL_CHOICES_BOLD:
@@ -460,7 +465,7 @@
 	  case PANEL_MARK_IMAGES:
 	  case PANEL_NOMARK_IMAGES:
 	    /* SunView1 compatibility attributes: not used */
-	    while (*avlist++);
+	    while ((int)*avlist++);
 	    break;
 
 	  case PANEL_MARK_IMAGE:
@@ -521,7 +526,7 @@
      * attributes that were set above.
      */
     avlist = orig_avlist;
-    while (attr = *avlist++) {
+    while ((attr = (int)*avlist++) != XV_NULL) {
 	switch (attr) {
 	  case PANEL_CHOICE_COLOR:
 	    which_choice = (int) *avlist++;
@@ -534,7 +539,7 @@
 		if (!choices_changed && ip->menu) {
 		    xv_set(dp->mitems[which_choice],
 			   MENU_COLOR, dp->choices[which_choice].color,
-			   0);
+			   NULL);
 		}
 	    } else
 		avlist++;
@@ -553,7 +558,8 @@
 
 	  case PANEL_VALUE:
 	    if (dp->choose_one) {
-		svalue = (int) *avlist++;
+		/* FIXME: (int) or (unsigned int)? */
+		svalue = (unsigned int) *avlist++;
 		if (svalue <= dp->last) {
 		    CLEAR_SET(dp->value, dp->last);
 		    if (!dp->choose_none && svalue < 0)
@@ -577,7 +583,7 @@
 		xv_set(ip->menu,
 		       MENU_DEFAULT,
 			   choice_number(dp->default_value, dp->last) + 1,
-		       0);
+		       NULL);
 	    break;
 
 	  case PANEL_TOGGLE_VALUE:
@@ -652,7 +658,7 @@
     int             nrows, ncols;
     int             arg;
 
-    switch (which_attr) {
+    switch ((int)which_attr) {
       case PANEL_DEFAULT_VALUE:	/* ordinal value */
 	return (Xv_opaque) choice_number(dp->default_value, dp->last);
 
@@ -939,7 +945,7 @@
 	dp->display_level != PANEL_CURRENT)
 	return;
 
-    if (ip->menu == NULL || paint_window == NULL)
+    if (ip->menu == NULL || paint_window == (Xv_Window)NULL)
 	return;
 
     /* Invert the abbreviated menu button */
@@ -955,7 +961,7 @@
     /* Select the current choice; deselect all others */
     for (i = 0; i <= dp->last; i++) {
 	menu_item = menu_get(ip->menu, MENU_NTH_ITEM, i + 1);
-	xv_set(menu_item, MENU_SELECTED, IN(dp->value, i), 0);
+	xv_set(menu_item, MENU_SELECTED, IN(dp->value, i), NULL);
     }
 
     /*
@@ -963,11 +969,11 @@
      * choice's menu done proc.
      */
     xv_set(ip->menu,
-	   XV_KEY_DATA, DATA_HANDLE, dp,
-	   XV_KEY_DATA, MENU_DONE_PROC, xv_get(ip->menu, MENU_DONE_PROC),
+	   XV_KEY_DATA, (Attr_attribute)DATA_HANDLE, dp,
+	   XV_KEY_DATA, (Attr_attribute)MENU_DONE_PROC, xv_get(ip->menu, MENU_DONE_PROC),
 	   MENU_BUSY_PROC, choice_menu_busy_proc,
 	   MENU_DONE_PROC, choice_menu_done_proc,
-	   0);
+	   NULL);
 
     /* Show the menu */
     position_rect = ip->value_rect;
@@ -981,7 +987,7 @@
     menu_show(ip->menu, paint_window, event,
 	      MENU_POSITION_RECT, &position_rect,
 	      MENU_PULLDOWN, TRUE,
-	      0);
+	      NULL);
 }
 
 
@@ -1189,7 +1195,9 @@
 choice_accept_kbd_focus(item_public)
     Panel_item	    item_public;
 {
+/*
     Choice_info	   *dp = CHOICE_PRIVATE(item_public);
+*/
     Item_info      *ip = ITEM_PRIVATE(item_public);
 
 /*
@@ -1207,11 +1215,11 @@
     Frame	    frame;
     Item_info      *ip = ITEM_PRIVATE(item_public);
 
-    frame = xv_get(PANEL_PUBLIC(ip->panel), WIN_FRAME);
+    frame = (Frame)xv_get(PANEL_PUBLIC(ip->panel), WIN_FRAME);
     focus_win = xv_get(frame, FRAME_FOCUS_WIN);
     xv_set(focus_win,
 	   XV_SHOW, FALSE,
-	   0);
+	   NULL);
 }
 
 
@@ -1238,8 +1246,8 @@
 	 */
 	nbr_items = (int) xv_get(ip->menu, MENU_NITEMS);
 	for (i = nbr_items; i >= 1; i--) {
-	    mi = xv_get(ip->menu, MENU_NTH_ITEM, i);
-	    xv_set(ip->menu, MENU_REMOVE, i, 0);
+	    mi = (Menu_item)xv_get(ip->menu, MENU_NTH_ITEM, i);
+	    xv_set(ip->menu, MENU_REMOVE, i, NULL);
 	    xv_destroy(mi);
 	}
     } else {
@@ -1249,16 +1257,16 @@
 			     MENU_NOTIFY_PROC, choice_do_menu_item,
 			     MENU_CLIENT_DATA, ITEM_PUBLIC(ip),
 			     XV_INCREMENT_REF_COUNT,
-			     0);
+			     NULL);
     }
     if (dp->nrows)
-	xv_set(ip->menu, MENU_NROWS, dp->nrows, 0);
+	xv_set(ip->menu, MENU_NROWS, dp->nrows, NULL);
     else if (dp->ncols)
-	xv_set(ip->menu, MENU_NCOLS, dp->ncols, 0);
+	xv_set(ip->menu, MENU_NCOLS, dp->ncols, NULL);
     choice_images_to_menu_items(ip, dp->choices, dp->mitems, dp->last);
     xv_set(ip->menu,
 	   MENU_DEFAULT, choice_number(dp->default_value, dp->last) + 1,
-	   0);
+	   NULL);
 }
 
 
@@ -1271,7 +1279,7 @@
     Menu_item       menu_item;
 {
     Panel_item      item_public = xv_get(menu, MENU_CLIENT_DATA);
-    int             menu_value = xv_get(menu_item, MENU_VALUE);
+    int             menu_value = (int)xv_get(menu_item, MENU_VALUE);
     Event          *event = (Event *) xv_get(menu, MENU_LAST_EVENT);
     Item_info      *ip;
 
@@ -1311,32 +1319,32 @@
 	switch (image_type(image)) {
 	  case PIT_STRING:
 #ifdef OW_I18N
-            mitems[i] = xv_create(NULL, MENUITEM,
+            mitems[i] = (Menu_item)xv_create((Xv_object)NULL, MENUITEM,
                                   MENU_STRING_ITEM_WCS, image_string_wc(image), i,
                                   MENU_COLOR, color_index,
 				  MENU_RELEASE,
-                                  0);
+                                  NULL);
 #else
-	    mitems[i] = xv_create(NULL, MENUITEM,
+	    mitems[i] = (Menu_item)xv_create((Xv_object)NULL, MENUITEM,
 				  MENU_STRING_ITEM, image_string(image), i,
 		    		  MENU_COLOR, color_index,
 				  MENU_RELEASE,
-				  0);
+				  NULL);
 #endif /* OW_I18N */
 	    xv_set(ip->menu,
 		   MENU_APPEND_ITEM, mitems[i],
-		   0);
+		   NULL);
 	    break;
 
 	  case PIT_SVRIM:
-	    mitems[i] = xv_create(NULL, MENUITEM,
+	    mitems[i] = (Menu_item)xv_create((Xv_object)NULL, MENUITEM,
 		    		  MENU_IMAGE_ITEM, image_svrim(image), i,
 		    		  MENU_COLOR, color_index,
 				  MENU_RELEASE,
-		    		  0);
+		    		  NULL);
 	    xv_set(ip->menu,
 		   MENU_APPEND_ITEM, mitems[i],
-		   0);
+		   NULL);
 	    break;
 	}
     }
@@ -1347,7 +1355,7 @@
 choice_menu_busy_proc(menu)
     Menu	    menu;
 {
-    Choice_info    *dp = (Choice_info *) xv_get(menu, XV_KEY_DATA, DATA_HANDLE);
+    Choice_info    *dp = (Choice_info *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)DATA_HANDLE);
     Xv_Drawable_info *info;
     Item_info	   *ip = ITEM_FROM_CHOICE(dp);
     Xv_Window	    pw;
@@ -1372,7 +1380,7 @@
     int             old_default_choice, new_default_choice;
     void            (*orig_done_proc) ();	/* original menu-done
 						 * procedure */
-    Choice_info    *dp = (Choice_info *) xv_get(menu, XV_KEY_DATA, DATA_HANDLE);
+    Choice_info    *dp = (Choice_info *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)DATA_HANDLE);
     Xv_Drawable_info *info;
     Item_info	   *ip = ITEM_FROM_CHOICE(dp);
     Xv_Window	    pw;
@@ -1402,10 +1410,10 @@
     }
 
     /* Restore original menu done proc. */
-    orig_done_proc = (void (*) ()) xv_get(menu, XV_KEY_DATA, MENU_DONE_PROC);
+    orig_done_proc = (void (*) ()) xv_get(menu, XV_KEY_DATA, (Attr_attribute)MENU_DONE_PROC);
     xv_set(menu,
 	MENU_DONE_PROC, orig_done_proc,
-	0);
+	NULL);
 
     /* Invoke original menu done proc (if any) */
     if (orig_done_proc)
@@ -1440,10 +1448,10 @@
     int		    x;
     int		    y;
 
-    frame = xv_get(PANEL_PUBLIC(ip->panel), WIN_FRAME);
+    frame = (Frame)xv_get(PANEL_PUBLIC(ip->panel), WIN_FRAME);
     rect = dp->choice_rects[dp->focus_choice];
     if (ip->layout == PANEL_HORIZONTAL) {
-	xv_set(frame, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_UP, 0);
+	xv_set(frame, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_UP, NULL);
 	if (dp->display_level == PANEL_CURRENT) {
 	    rect.r_width = Abbrev_MenuButton_Width(ip->value_ginfo);
 	    y = rect.r_top + (rect.r_height +
@@ -1459,7 +1467,7 @@
 	    dp->feedback != PANEL_MARKED)
 	    y -= FRAME_FOCUS_UP_HEIGHT/2;
     } else {
-	xv_set(frame, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_RIGHT, 0);
+	xv_set(frame, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_RIGHT, NULL);
 	x = rect.r_left - FRAME_FOCUS_RIGHT_WIDTH;
 	if (dp->display_level == PANEL_ALL &&
 	    dp->feedback != PANEL_MARKED)
@@ -1626,13 +1634,13 @@
 #ifdef OW_I18N
 	sp = image_string_wc(image);
         size = xv_pf_textwidth_wc(wslen(sp), font, sp);
-	chrwth = xv_get(font, FONT_COLUMN_WIDTH);
+	chrwth = (int)xv_get(font, FONT_COLUMN_WIDTH);
 #else
 	sp = image_string(image);
 	size = xv_pf_textwidth(strlen(sp), font, sp);
-	chrwth = xv_get(font, FONT_DEFAULT_CHAR_WIDTH);
+	chrwth = (int)xv_get(font, FONT_DEFAULT_CHAR_WIDTH);
 #endif /* OW_I18N */
-	chrht = xv_get(font, FONT_DEFAULT_CHAR_HEIGHT);
+	chrht = (int)xv_get(font, FONT_DEFAULT_CHAR_HEIGHT);
 	if (max_width)
 	    size.x = max_width + 2 * chrwth;
 	else
@@ -1959,7 +1967,7 @@
     int             moved = FALSE;	/* TRUE if moved */
 
     while (attr = *avlist++) {
-	switch (attr) {
+	switch ((int)attr) {
 	  case PANEL_CHOICE_X:
 	    i = (int) *avlist++;
 	    dp->choice_rects[i].r_left = (int) *avlist++;
@@ -2079,7 +2087,7 @@
 	    DRAWABLE_INFO_MACRO(pw, info);
 	    if (color_index >= 0) {
 		olgx_set_single_color(ip->value_ginfo, OLGX_BLACK,
-				      xv_get(xv_cms(info), CMS_PIXEL,
+				      (unsigned int)xv_get(xv_cms(info), CMS_PIXEL,
 				      color_index), OLGX_SPECIAL);
 	    }
 	    olgx_draw_check_box(ip->value_ginfo, xv_xid(info), left, top,
@@ -2114,11 +2122,11 @@
 	    dp->display_level == PANEL_CURRENT) {
 	    int		chrht, chrwth;
 	    top = rect->r_top + panel_fonthome(image_font(image));
-	    chrht = xv_get(image_font(image), FONT_DEFAULT_CHAR_HEIGHT);
+	    chrht = (int)xv_get(image_font(image), FONT_DEFAULT_CHAR_HEIGHT);
 #ifdef OW_I18N
-	    chrwth = xv_get(image_font(image), FONT_COLUMN_WIDTH);
+	    chrwth = (int)xv_get(image_font(image), FONT_COLUMN_WIDTH);
 #else
-	    chrwth = xv_get(image_font(image), FONT_DEFAULT_CHAR_WIDTH);
+	    chrwth = (int)xv_get(image_font(image), FONT_DEFAULT_CHAR_WIDTH);
 #endif /* OW_I18N */
 	    top += (rect->r_height - chrht) / 2;
 	    left += chrwth;
@@ -2170,7 +2178,7 @@
 	DRAWABLE_INFO_MACRO(pw, info);
 	if (color_index >= 0) {
 	    olgx_set_single_color(ip->value_ginfo, OLGX_BLACK,
-				  xv_get(xv_cms(info), CMS_PIXEL,
+				  (unsigned int)xv_get(xv_cms(info), CMS_PIXEL,
 				  color_index), OLGX_SPECIAL);
 	}
 	if (dp->display_level != PANEL_NONE &&
@@ -2437,7 +2445,7 @@
 		DRAWABLE_INFO_MACRO(pw, info);
 		if (color_index >= 0) {
 		    olgx_set_single_color(ip->value_ginfo, OLGX_BLACK,
-					  xv_get(xv_cms(info), CMS_PIXEL,
+					  (unsigned int)xv_get(xv_cms(info), CMS_PIXEL,
 					  color_index), OLGX_SPECIAL);
 		}
 		olgx_draw_check_box(ip->value_ginfo, xv_xid(info),
@@ -2478,7 +2486,7 @@
 		DRAWABLE_INFO_MACRO(pw, info);
 		if (color_index >= 0) {
 		    olgx_set_single_color(ip->value_ginfo, OLGX_BLACK,
-					  xv_get(xv_cms(info), CMS_PIXEL,
+					  (unsigned int)xv_get(xv_cms(info), CMS_PIXEL,
 					  color_index), OLGX_SPECIAL);
 		}
 		olgx_draw_check_box(ip->value_ginfo, xv_xid(info),
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_drop.c xview-3.2p1.4/lib/libxview/panel/p_drop.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_drop.c	1993-06-29 07:17:04.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/panel/p_drop.c	2013-01-07 12:50:47.614024000 +0100
@@ -141,8 +141,8 @@
      */
     dp->drop_site = xv_create(panel_public, DROP_SITE_ITEM,
 	DROP_SITE_EVENT_MASK, DND_ENTERLEAVE,
-	0);
-    dp->sel_req = xv_create(panel_public, SELECTION_REQUESTOR, 0);
+	NULL);
+    dp->sel_req = xv_create(panel_public, SELECTION_REQUESTOR, NULL);
     dp->del_move = TRUE;
 
     return XV_OK;
@@ -184,11 +184,11 @@
 			 ERROR_STRING, 
 			    XV_MSG("Invalid Server Image specified"),
 			 ERROR_PKG, PANEL,
-			 0);
+			 NULL);
 		break;
 	    }
 	    if (dp->busy_glyph && dp->status & FREE_BUSY_GLYPH) {
-		xv_set(dp->busy_glyph, XV_DECREMENT_REF_COUNT, 0);
+		xv_set(dp->busy_glyph, XV_DECREMENT_REF_COUNT, NULL);
 		xv_destroy(dp->busy_glyph);
 		dp->status &= ~FREE_BUSY_GLYPH;
 	    }
@@ -216,7 +216,7 @@
                            ERROR_STRING,
                               XV_MSG("Invalid value for PANEL_DROP_DND_TYPE"),
                            ERROR_PKG, PANEL,
-                           0);
+                           NULL);
                   break;
             }
 	    break;
@@ -226,11 +226,11 @@
 			 ERROR_STRING, 
 			    XV_MSG("Invalid Server Image specified"),
 			 ERROR_PKG, PANEL,
-			 0);
+			 NULL);
 		break;
 	    }
 	    if (dp->glyph && dp->status & FREE_GLYPH) {
-		xv_set(dp->glyph, XV_DECREMENT_REF_COUNT, 0);
+		xv_set(dp->glyph, XV_DECREMENT_REF_COUNT, NULL);
 		xv_destroy(dp->glyph);
 		dp->status &= ~FREE_GLYPH;
 	    }
@@ -241,7 +241,7 @@
 		2*BORDER_WIDTH;
 	    break;
 	  case PANEL_DROP_SITE_DEFAULT:
-	    xv_set(dp->drop_site, DROP_SITE_DEFAULT, avlist[1], 0);
+	    xv_set(dp->drop_site, DROP_SITE_DEFAULT, avlist[1], NULL);
 	    ip->panel->default_drop_site_item = ip;
 	    break;
 	  case PANEL_DROP_WIDTH:
@@ -252,36 +252,36 @@
 	    screen = xv_get(PANEL_PUBLIC(ip->panel), XV_SCREEN);
 	    server = xv_get(screen, SCREEN_SERVER);
 	    if (!dp->glyph) {
-		dp->glyph = xv_get(server, XV_KEY_DATA, PANEL_DROP_GLYPH);
+		dp->glyph = xv_get(server, XV_KEY_DATA, (Attr_attribute)PANEL_DROP_GLYPH);
 		if (!dp->glyph) {
 		    dp->glyph = xv_create(screen, SERVER_IMAGE,
 			XV_WIDTH, DEFAULT_IMAGE_WIDTH,
 			XV_HEIGHT, DEFAULT_IMAGE_HEIGHT,
 			SERVER_IMAGE_DEPTH, 1,
 			SERVER_IMAGE_BITS, normal_glyph_bits,
-			0);
+			NULL);
 		    xv_set(server,
-			   XV_KEY_DATA, PANEL_DROP_GLYPH, dp->glyph,
-			   0);
+			   XV_KEY_DATA, (Attr_attribute)PANEL_DROP_GLYPH, dp->glyph,
+			   NULL);
 		}
-		xv_set(dp->glyph, XV_INCREMENT_REF_COUNT, 0);
+		xv_set(dp->glyph, XV_INCREMENT_REF_COUNT, NULL);
 		dp->status |= FREE_GLYPH;
 	    }
 	    if (!dp->busy_glyph) {
 		dp->busy_glyph = xv_get(server,
-					XV_KEY_DATA, PANEL_DROP_BUSY_GLYPH);
+					XV_KEY_DATA, (Attr_attribute)PANEL_DROP_BUSY_GLYPH);
 		if (!dp->busy_glyph) {
 		    dp->busy_glyph = xv_create(screen, SERVER_IMAGE,
 			XV_WIDTH, DEFAULT_IMAGE_WIDTH,
 			XV_HEIGHT, DEFAULT_IMAGE_HEIGHT,
 			SERVER_IMAGE_DEPTH, 1,
 			SERVER_IMAGE_BITS, busy_glyph_bits,
-			0);
+			NULL);
 		    xv_set(server,
-			   XV_KEY_DATA, PANEL_DROP_BUSY_GLYPH, dp->busy_glyph,
-			   0);
+			   XV_KEY_DATA, (Attr_attribute)PANEL_DROP_BUSY_GLYPH, dp->busy_glyph,
+			   NULL);
 		}
-		xv_set(dp->glyph, XV_INCREMENT_REF_COUNT, 0);
+		xv_set(dp->glyph, XV_INCREMENT_REF_COUNT, NULL);
 		dp->status |= FREE_BUSY_GLYPH;
 	    }
 	    break;
@@ -317,7 +317,7 @@
     xv_set(dp->drop_site,
 	   DROP_SITE_DELETE_REGION, NULL,  /* throw away previous region ... */
 	   DROP_SITE_REGION, &ip->value_rect, /* ... use this one instead */
-	   0);
+	   NULL);
 
     return XV_OK;	/* return XV_ERROR if something went wrong... */
 }
@@ -334,7 +334,7 @@
     Drop_info	   *dp = DROP_PRIVATE(item_public);
     Item_info	   *ip = ITEM_PRIVATE(item_public);
 
-    switch (which_attr) {
+    switch ((int)which_attr) {
       case PANEL_DROP_BUSY_GLYPH:
 	return (Xv_opaque) dp->busy_glyph;
       case PANEL_DROP_DND:
@@ -374,11 +374,11 @@
     if ((status == DESTROY_CHECKING) || (status == DESTROY_SAVE_YOURSELF))
 	return XV_OK;
     if (dp->glyph && dp->status & FREE_GLYPH) {
-	xv_set(dp->glyph, XV_DECREMENT_REF_COUNT, 0);
+	xv_set(dp->glyph, XV_DECREMENT_REF_COUNT, NULL);
 	xv_destroy(dp->glyph);
     }
     if (dp->busy_glyph && dp->status & FREE_BUSY_GLYPH) {
-	xv_set(dp->busy_glyph, XV_DECREMENT_REF_COUNT, 0);
+	xv_set(dp->busy_glyph, XV_DECREMENT_REF_COUNT, NULL);
 	xv_destroy(dp->busy_glyph);
     }
     if (dp->dnd)
@@ -437,7 +437,7 @@
 	        xv_set(dp->dnd,
 	               DND_TYPE, panel_duplicate_key_is_down(ip->panel, event) ?
 		           DND_COPY : DND_MOVE,
-	               0);
+	               NULL);
 	        break;
 	    case PANEL_DROP_COPY_ONLY:
 	        xv_set(dp->dnd, DND_TYPE, DND_COPY, NULL);
@@ -480,7 +480,7 @@
 	if (status == XV_OK) {
 	    if ((event_action(event) == ACTION_DRAG_MOVE) && dp->del_move) {
 		/* Post delete request back to owner */
-		xv_set(dp->sel_req, SEL_TYPE, ip->panel->atom.delete, 0);
+		xv_set(dp->sel_req, SEL_TYPE, ip->panel->atom.delete, NULL);
 		(void) xv_get(dp->sel_req, SEL_DATA, &length, &format);
 	    }
 	    dnd_done(dp->sel_req);
@@ -541,7 +541,7 @@
      */
     xv_set(dp->drop_site,
 	   DROP_SITE_DELETE_REGION, NULL,
-	   0);
+	   NULL);
 }
 
 
@@ -559,7 +559,7 @@
      */
     xv_set(dp->drop_site,
 	   DROP_SITE_REGION, &ip->value_rect,
-	   0);
+	   NULL);
 }
 
 
@@ -578,7 +578,7 @@
     xv_set(dp->drop_site,
 	   DROP_SITE_DELETE_REGION, NULL,  /* throw away previous region ... */
 	   DROP_SITE_REGION, &ip->value_rect, /* ... use this one instead */
-	   0);
+	   NULL);
 }
 
 
@@ -590,7 +590,7 @@
     Item_info	   *ip;
     Drop_info	   *dp;
 {
-    Server_image    glyph = NULL;
+    Server_image    glyph = (Server_image)NULL;
     Xv_Drawable_info *info;
     Panel_info	   *panel = ip->panel;
     Xv_Window	    pw;
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_event.c xview-3.2p1.4/lib/libxview/panel/p_event.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_event.c	1993-06-29 07:16:49.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/panel/p_event.c	2013-01-07 12:50:47.648209000 +0100
@@ -11,9 +11,11 @@
  */
 
 
+#define xview_other_rl_funcs
 #include <xview_private/panel_impl.h>
 #include <xview/font.h>
 #include <xview_private/draw_impl.h>
+#include <xview/rectlist.h>
 
 static Notify_value panel_itimer_expired();
 
@@ -45,7 +47,7 @@
     Notify_event_type type;
 {
     register Panel_info *panel = (Panel_info *) xv_get(paint_window,
-					    XV_KEY_DATA, panel_context_key);
+					    XV_KEY_DATA, (Attr_attribute)panel_context_key);
     Item_info	   *ip;
     int		   event_handled = TRUE;
 
@@ -103,7 +105,7 @@
 	    }
 	}
 	if (panel->kbd_focus_item &&
-	    xv_get(ITEM_PUBLIC(panel->kbd_focus_item), XV_FOCUS_RANK) !=
+	    (int)xv_get(ITEM_PUBLIC(panel->kbd_focus_item), XV_FOCUS_RANK) !=
 		XV_FOCUS_PRIMARY) {
 	    if (panel->status.focus_item_set)
 		panel->status.focus_item_set = FALSE;
@@ -120,7 +122,7 @@
 			 ip;
 			 ip = ip->next) {
 			if (wants_key(ip) && !hidden(ip) && !inactive(ip) &&
-			    xv_get(ITEM_PUBLIC(ip), XV_FOCUS_RANK) ==
+			    (int)xv_get(ITEM_PUBLIC(ip), XV_FOCUS_RANK) ==
 			    XV_FOCUS_PRIMARY) {
 			    panel->primary_focus_item = ip;
 			    break;
@@ -173,7 +175,7 @@
 	if (!panel->paint_window->view && event_is_down(event)) {
 	    xv_set(xv_get(PANEL_PUBLIC(panel), WIN_FRAME),
 		   FRAME_NEXT_PANE,
-		   0);
+		   NULL);
 	}
 	break;
 
@@ -181,7 +183,7 @@
 	if (!panel->paint_window->view && event_is_down(event)) {
 	    xv_set(xv_get(PANEL_PUBLIC(panel), WIN_FRAME),
 		   FRAME_PREVIOUS_PANE,
-		   0);
+		   NULL);
 	}
 	break;
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_gauge.c xview-3.2p1.4/lib/libxview/panel/p_gauge.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_gauge.c	2013-01-07 12:36:13.658539000 +0100
+++ xview-3.2p1.4/lib/libxview/panel/p_gauge.c	2013-01-07 12:50:47.681248000 +0100
@@ -17,6 +17,7 @@
 #include <xview/font.h>
 #include <xview_private/draw_impl.h>
 #include <xview_private/pw_impl.h>
+#include <xview_private/scrn_impl.h>
 
 #define GAUGE_PRIVATE(item)	\
 	XV_PRIVATE(Gauge_info, Xv_panel_gauge, item)
@@ -48,6 +49,7 @@
 static void     paint_gauge();
 static void     update_rects();
 
+
 static Panel_ops ops = {
     panel_default_handle_event,		/* handle_event() */
     NULL,				/* begin_preview() */
@@ -94,6 +96,11 @@
 
 static int etoi();
 
+#ifdef __STDC__
+static int etoi(Gauge_info *dp, int value);
+#else
+static int etoi();
+#endif
 
 /* ========================================================================= */
 
@@ -163,7 +170,7 @@
 	    return result;
     }
 
-    while (attr = *avlist++) {
+    while ((attr = (int)*avlist++) != (Attr_attribute)NULL) {
 	switch (attr) {
 	  case PANEL_VALUE:
 	    dp->value = (int) *avlist++;
@@ -353,7 +360,7 @@
     char		*string_mbs = NULL;
 #endif /* OW_I18N */
 
-    switch (which_attr) {
+    switch ((int)which_attr) {
       case PANEL_VALUE:
 	return (Xv_opaque) dp->value;
 
@@ -584,7 +591,7 @@
 	xid = xv_xid(info);
         if (ip->color_index >= 0) {
             olgx_set_single_color(ginfo, OLGX_BLACK,
-                                  xv_get(xv_cms(info), CMS_PIXEL,
+                                  (unsigned int)xv_get(xv_cms(info), CMS_PIXEL,
                                   ip->color_index), OLGX_SPECIAL);
         }
 	pixel_value = Gauge_EndCapOffset(ginfo) + dp->actual;
@@ -597,7 +604,9 @@
 	    y = dp->tickrect.r_top;
 	    if (dp->vertical) {
                 if (dp->nticks == 1)
-                    tick_gap == dp->tickrect.r_height;
+		    /* I doubt this was intentional */
+                    /* tick_gap == dp->tickrect.r_height; */
+                    tick_gap = dp->tickrect.r_height;
                 else
                     tick_gap = dp->tickrect.r_height / (dp->nticks-1);
 		width = dp->tickrect.r_width;
@@ -605,7 +614,9 @@
 		limit = dp->tickrect.r_top+dp->tickrect.r_height-TICK_THICKNESS;
 	    } else {
                 if (dp->nticks == 1)
-                    tick_gap == dp->tickrect.r_width;
+		    /* I doubt this was intentional */
+                    /* tick_gap == dp->tickrect.r_width; */
+                    tick_gap = dp->tickrect.r_width;
                 else
                     tick_gap = dp->tickrect.r_width / (dp->nticks-1);
 		width = TICK_THICKNESS;
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_get.c xview-3.2p1.4/lib/libxview/panel/p_get.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_get.c	2013-01-07 12:36:14.008046000 +0100
+++ xview-3.2p1.4/lib/libxview/panel/p_get.c	2013-01-07 12:50:47.717838000 +0100
@@ -16,6 +16,7 @@
 #include <xview/scrollbar.h>
 
 static int      shrink_to_fit();
+static int	panel_shrink_margin();
 
 #define MAX_NEGATIVE_SHRINK 2000
 #define SHRINK_MARGIN       4
@@ -33,7 +34,7 @@
     register Panel_info *panel = PANEL_PRIVATE(panel_public);
     int             arg;
 
-    switch (attr) {
+    switch ((int)attr) {
       case CANVAS_NTH_PAINT_WINDOW:
 	if (panel->paint_window && !panel->paint_window->view)
 	    return (Xv_opaque) panel_public;
@@ -184,7 +185,7 @@
     return new_size;
 }
 
-static
+static int
 panel_shrink_margin(panel)
     register Panel_info *panel;
 {
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_list.c xview-3.2p1.4/lib/libxview/panel/p_list.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_list.c	2013-01-07 12:36:48.452433000 +0100
+++ xview-3.2p1.4/lib/libxview/panel/p_list.c	2013-01-07 12:50:47.757822000 +0100
@@ -24,6 +24,7 @@
 #include <xview/screen.h>
 #include <xview/openmenu.h>
 #include <xview/win_notify.h>
+#include <xview/win.h>
 #ifdef SVR4 
 #include <stdlib.h> 
 #endif /* SVR4 */
@@ -90,6 +91,7 @@
 static int	    fit_list_box_to_rows();
 static int	    get_row_rect();
 static void	    handle_menu_event();
+static Panel_setting insert_done();
 static Xv_opaque    insert_proc();
 static Xv_opaque    locate_next_choice();
 static void	    make_row_visible();
@@ -201,13 +203,13 @@
 	 */
 	xv_set(panel_list_public,
 	       PANEL_PAINT, PANEL_NONE,
-	       XV_FOCUS_RANK, XV_FOCUS_PRIMARY,
-	       0);
+	       XV_FOCUS_RANK, (Attr_attribute)XV_FOCUS_PRIMARY,
+	       NULL);
 
 	/* The panel now contains (at least one) First-Class (primary)
 	 * focus client
 	 */
-	xv_set(parent, XV_FOCUS_RANK, XV_FOCUS_PRIMARY, 0);
+	xv_set(parent, XV_FOCUS_RANK, (Attr_attribute)XV_FOCUS_PRIMARY, NULL);
     }
 
     /* Create the text field used in editing mode */
@@ -217,9 +219,9 @@
 	PANEL_VALUE_DISPLAY_LENGTH, 1, /* some artificial value that doesn't
 					* affect the width of the panel
 					* (see shrink_to_fit) */
-	XV_KEY_DATA, PANEL_LIST, dp,
+	XV_KEY_DATA, (Attr_attribute)PANEL_LIST, dp,
 	XV_SHOW, FALSE,
-	0);
+	NULL);
 
     return XV_OK;
 }
@@ -471,7 +473,7 @@
 		if (dp->list_sb)
 		    xv_set(dp->list_sb,
 			   WIN_FOREGROUND_COLOR, ip->color_index,
-			   0);
+			   NULL);
 		break;
 
 	  case PANEL_ITEM_MENU:
@@ -482,7 +484,7 @@
 		        }
 		        dp->edit_menu = (Menu) avlist[1];
 			if ( dp->edit_menu )
-			    xv_set(dp->edit_menu, XV_KEY_DATA, PANEL_LIST, dp, NULL);
+			    xv_set(dp->edit_menu, XV_KEY_DATA, (Attr_attribute)PANEL_LIST, dp, NULL);
 		        dp->destroy_edit_menu = FALSE;
 		    }
 		}
@@ -493,7 +495,7 @@
 		        }
 		        dp->read_menu = (Menu) avlist[1];
 			if ( dp->read_menu )
-			    xv_set(dp->read_menu, XV_KEY_DATA, PANEL_LIST, dp, NULL);
+			    xv_set(dp->read_menu, XV_KEY_DATA, (Attr_attribute)PANEL_LIST, dp, NULL);
 		        dp->destroy_read_menu = FALSE;
 		    }
 		}
@@ -686,7 +688,7 @@
 			ERROR_STRING,
 		            XV_MSG("PANEL_LIST insertions are currently disabled"),
 		        ERROR_PKG, PANEL,
-			0);
+			NULL);
 		    break;
 		}
 		which_row = (int) avlist[1];
@@ -704,7 +706,7 @@
 			ERROR_STRING,
 		            XV_MSG("PANEL_LIST insertions are currently disabled"),
 		        ERROR_PKG, PANEL,
-			0);
+			NULL);
 		    break;
 		}
 		which_row = (int) avlist[1];
@@ -718,7 +720,7 @@
 		else
 		    which_row = 0;
 		/* Insert new rows */
-		insert_glyphs = avlist[0] == PANEL_LIST_INSERT_GLYPHS;
+		insert_glyphs = (int)avlist[0] == PANEL_LIST_INSERT_GLYPHS;
 		node = NULL;
 		for (obj_ptr = (Xv_opaque *) avlist[2]; *obj_ptr; obj_ptr++) {
 #ifdef OW_I18N
@@ -781,7 +783,7 @@
 		if (dp->list_sb)
 		    xv_set(dp->list_sb,
 			   SCROLLBAR_OBJECT_LENGTH, dp->nrows,
-			   0);
+			   NULL);
 		break;
 
 	  case PANEL_LIST_DELETE:
@@ -790,7 +792,7 @@
 			ERROR_STRING,
 		            XV_MSG("PANEL_LIST deletions are currently disabled"),
 		        ERROR_PKG, PANEL,
-			0);
+			NULL);
 		    break;
 		}
 		which_row = (int) avlist[1];
@@ -808,7 +810,7 @@
 			ERROR_STRING,
 		            XV_MSG("PANEL_LIST deletions are currently disabled"),
 		        ERROR_PKG, PANEL,
-			0);
+			NULL);
 		    break;
 		}
 		which_row = (int) avlist[1];
@@ -856,7 +858,7 @@
 		if (dp->list_sb)
 		    xv_set(dp->list_sb,
 			   SCROLLBAR_OBJECT_LENGTH, dp->nrows,
-			   0);
+			   NULL);
 		break;
 
 	  case PANEL_LIST_DELETE_SELECTED_ROWS:
@@ -865,7 +867,7 @@
 		    ERROR_STRING,
 			XV_MSG("PANEL_LIST deletions are currently disabled"),
 		    ERROR_PKG, PANEL,
-		    0);
+		    NULL);
 		break;	/* not valid on xv_create or in notify proc */
 	    }
 	    for (node = dp->rows; node; node = next) {
@@ -884,7 +886,7 @@
 		panel_accept_kbd_focus(ip->panel);
 	    }
 	    if (dp->list_sb)
-		xv_set(dp->list_sb, SCROLLBAR_INACTIVE, avlist[1], 0);
+		xv_set(dp->list_sb, SCROLLBAR_INACTIVE, avlist[1], NULL);
 	    break;
 
 	  case PANEL_LIST_INACTIVE:
@@ -903,7 +905,7 @@
 		    ERROR_STRING,
 			XV_MSG("PANEL_LIST deletions are currently disabled"),
 		    ERROR_PKG, PANEL,
-		    0);
+		    NULL);
 		break;	/* not valid on xv_create or in notify proc */
 	    }
 	    for (node = dp->rows; node; node = next) {
@@ -993,7 +995,7 @@
 #endif
 	    xv_set(dp->text_item,
 		   PANEL_VALUE_STORED_LENGTH, avlist[1],
-		   0);
+		   NULL);
 	    break;
 
 #ifdef OW_I18N
@@ -1001,15 +1003,15 @@
 	    dp->stored_length_wc = TRUE;
 	    xv_set(dp->text_item,
 		   PANEL_VALUE_STORED_LENGTH_WCS, avlist[1],
-		   0);
+		   NULL);
 	    break;
 #endif
 
 	  case XV_SHOW:
 	    if (dp->text_item_row)
-		xv_set(dp->text_item, XV_SHOW, avlist[1], 0);
+		xv_set(dp->text_item, XV_SHOW, avlist[1], NULL);
 	    if (dp->list_sb)
-		xv_set(dp->list_sb, XV_SHOW, avlist[1], 0);
+		xv_set(dp->list_sb, XV_SHOW, avlist[1], NULL);
 	    break;
 
 	  case XV_END_CREATE:
@@ -1049,7 +1051,7 @@
 	xv_set(dp->list_sb,
 	    SCROLLBAR_VIEW_LENGTH, dp->rows_displayed,
 	    XV_HEIGHT, dp->list_box.r_height,
-	    0);
+	    NULL);
 	dp->sb_rect.r_height = dp->list_box.r_height;
     }
 
@@ -1116,85 +1118,85 @@
 		 */
 		dp->destroy_read_menu = TRUE;
 		dp->read_menu = xv_create(server, MENU,
-		    XV_KEY_DATA, PANEL_LIST, dp,
+		    XV_KEY_DATA, (Attr_attribute)PANEL_LIST, dp,
 		    MENU_TITLE_ITEM, XV_MSG("Scrolling List"),
-		    XV_KEY_DATA, MENU_DONE_PROC, NULL,
+		    XV_KEY_DATA, (Attr_attribute)MENU_DONE_PROC, NULL,
 		    MENU_ITEM,
 			MENU_STRING, dp->choose_one ?
 			    XV_MSG("Locate Choice") : 
 			    XV_MSG("Locate Next Choice"),
 			MENU_ACTION,	locate_next_choice,
-			0,
-		    0);
+			NULL,
+		    NULL);
 		if (!dp->choose_one)
 		    xv_set(dp->read_menu,
 			MENU_APPEND_ITEM,
-			    xv_create(NULL, MENUITEM,
+			    xv_create((Xv_object)NULL, MENUITEM,
 				MENU_STRING, 
 				    XV_MSG("Clear All Choices"),
 				MENU_ACTION, clear_all_choices,
 				MENU_RELEASE,
-				0),
-			0);
+				NULL),
+			NULL);
 		if (!dp->read_only) {
 		    xv_set(dp->read_menu,
 			MENU_APPEND_ITEM,
-			    xv_create(NULL, MENUITEM,
+			    xv_create((Xv_object)NULL, MENUITEM,
 				MENU_STRING, 
 				XV_MSG("Edit List"),
 				MENU_ACTION, enter_edit_mode,
 				MENU_RELEASE,
-				0),
-		        0);
+				NULL),
+		        NULL);
 		    if (!dp->edit_menu) {
 			/*
 			 * Set destroy flag
 			 */
 			dp->destroy_edit_menu = TRUE;
 			dp->edit_menu = xv_create(server, MENU,
-			    XV_KEY_DATA, PANEL_LIST, dp,
+			    XV_KEY_DATA, (Attr_attribute)PANEL_LIST, dp,
 			    MENU_TITLE_ITEM, XV_MSG("Scrolling List"),
-			    XV_KEY_DATA, MENU_DONE_PROC, NULL,
+			    XV_KEY_DATA, (Attr_attribute)MENU_DONE_PROC, NULL,
 			    MENU_ITEM,
 				MENU_STRING, 
 				XV_MSG("Change"),
 				MENU_ACTION, change_proc,
-				0,
+				NULL,
 			    MENU_ITEM,
 				MENU_STRING, XV_MSG("Insert"),
 				MENU_PULLRIGHT,
 				    xv_create(server, MENU,
-					XV_KEY_DATA, PANEL_LIST, dp,
+					XV_KEY_DATA, (Attr_attribute)PANEL_LIST, dp,
 					MENU_ITEM,
 					    MENU_STRING, 
 					    XV_MSG("Before"),
 					    MENU_ACTION, insert_proc,
-					    XV_KEY_DATA, PANEL_INSERT,
-						INSERT_BEFORE,
-					    0,
+					    XV_KEY_DATA, (Attr_attribute)PANEL_INSERT,
+						(Attr_attribute)INSERT_BEFORE,
+					    NULL,
 					MENU_ITEM,
 					    MENU_STRING, 
 					    XV_MSG("After"),
 					    MENU_ACTION, insert_proc,
-					    XV_KEY_DATA, PANEL_INSERT,
-						INSERT_AFTER,
-					    0,
-					0),
-				0,
+					    XV_KEY_DATA, (Attr_attribute)PANEL_INSERT,
+						(Attr_attribute)INSERT_AFTER,
+					    NULL,
+					NULL),
+				NULL,
 			    MENU_ITEM,
 				MENU_STRING, XV_MSG("Delete"),
 				MENU_ACTION, delete_proc,
-				0,
+				NULL,
 			    MENU_ITEM,
 				MENU_STRING,	"",
 				MENU_FEEDBACK, FALSE,
-				0,
+				NULL,
 			    MENU_ITEM,
 				MENU_STRING, 
 				    XV_MSG("End Editing"),
 				MENU_ACTION, enter_read_mode,
-				0,
-			    0);
+				NULL,
+			    NULL);
 		    }   /* if (!dp->edit_menu) */
 		}   /* if (!dp->read_only) */
 	    }   /* if (!dp->read_menu) */
@@ -1207,7 +1209,7 @@
 	else {
 	    xv_set(dp->list_sb,
 		   SCROLLBAR_OBJECT_LENGTH, dp->nrows,
-		   0);
+		   NULL);
 	}
     }   /* if (dp->initialized) */
 
@@ -1230,7 +1232,7 @@
     Row_info	   *node;
     int		    row;
 
-    switch (which_attr) {
+    switch ((int)which_attr) {
 
       case PANEL_CHOOSE_NONE:
 	return ((Xv_opaque) dp->choose_none);
@@ -1889,12 +1891,12 @@
 	xv_set(dp->list_sb,
 	       XV_X, dp->sb_rect.r_left,
 	       XV_Y, dp->sb_rect.r_top,
-	       0);
+	       NULL);
     }
     xv_set(dp->text_item,
 	   XV_X, xv_get(dp->text_item, XV_X) + deltas->r_left,
 	   XV_Y, xv_get(dp->text_item, XV_Y) + deltas->r_top,
-	   0);
+	   NULL);
 }
 
 
@@ -1910,7 +1912,7 @@
     int		    y;
 
     frame = xv_get(PANEL_PUBLIC(ip->panel), WIN_FRAME);
-    xv_set(frame, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_RIGHT, 0);
+    xv_set(frame, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_RIGHT, NULL);
     x = dp->list_box.r_left;
     if (dp->focus_row) {
 	make_row_visible(dp, dp->focus_row->row);
@@ -1944,7 +1946,7 @@
 	return;
     frame = xv_get(PANEL_PUBLIC(ip->panel), WIN_FRAME);
     focus_win = xv_get(frame, FRAME_FOCUS_WIN);
-    xv_set(focus_win, XV_SHOW, FALSE, 0);
+    xv_set(focus_win, XV_SHOW, FALSE, NULL);
     dp->focus_win_shown = FALSE;
 }
 
@@ -1959,11 +1961,11 @@
 {
     Panel_list_info *dp;
 
-    dp = (Panel_list_info *) xv_get(text_item, XV_KEY_DATA, PANEL_LIST);
+    dp = (Panel_list_info *) xv_get(text_item, XV_KEY_DATA, (Attr_attribute)PANEL_LIST);
     panel_set_kbd_focus(PANEL_PRIVATE(dp->parent_panel),
 	ITEM_FROM_PANEL_LIST(dp));
-    xv_set(text_item, XV_SHOW, FALSE, 0);
-    xv_set(dp->list_sb, SCROLLBAR_INACTIVE, FALSE, 0);
+    xv_set(text_item, XV_SHOW, FALSE, NULL);
+    xv_set(dp->list_sb, SCROLLBAR_INACTIVE, FALSE, NULL);
     dp->text_item_row = NULL;   /* no row being edited */
 #ifdef OW_I18N
     _xv_set_wcs_attr_dup(&edit_row->string,
@@ -1986,8 +1988,8 @@
     Row_info	    *row;
 {
     PANEL_PRIVATE(dp->parent_panel)->kbd_focus_item = NULL;
-    xv_set(dp->text_item, XV_SHOW, FALSE, 0);
-    xv_set(dp->list_sb, SCROLLBAR_INACTIVE, FALSE, 0);
+    xv_set(dp->text_item, XV_SHOW, FALSE, NULL);
+    xv_set(dp->list_sb, SCROLLBAR_INACTIVE, FALSE, NULL);
     dp->text_item_row = NULL;   /* no row being edited */
 #ifdef OW_I18N
     _xv_set_wcs_attr_dup(&row->string,
@@ -2020,7 +2022,7 @@
 #endif /* OW_I18N */
     
     /* Validate entry */
-    dp = (Panel_list_info *) xv_get(text_item, XV_KEY_DATA, PANEL_LIST);
+    dp = (Panel_list_info *) xv_get(text_item, XV_KEY_DATA, (Attr_attribute)PANEL_LIST);
     string = (CHAR *) xv_get(text_item, PANEL_VALUE_I18N);
     if (!dp->insert_duplicate  /* no duplicates allowed */
 	&& STRCMP(dp->text_item_row->STRING, string) /* row has been changed */
@@ -2029,13 +2031,13 @@
 #ifdef OW_I18N
     panel_list_ip = ITEM_PRIVATE(dp->public_self);
     if (wchar_notify(panel_list_ip))
-	notify_proc = (int (*)()) xv_get(text_item, XV_KEY_DATA, PANEL_NOTIFY_PROC_WCS);
+	notify_proc = (int (*)()) xv_get(text_item, XV_KEY_DATA, (Attr_attribute)PANEL_NOTIFY_PROC_WCS);
     else {
         string = (char *) xv_get(text_item, PANEL_VALUE);
-	notify_proc = (int (*)()) xv_get(text_item, XV_KEY_DATA, PANEL_NOTIFY_PROC);
+	notify_proc = (int (*)()) xv_get(text_item, XV_KEY_DATA, (Attr_attribute)PANEL_NOTIFY_PROC);
     }
 #else
-    notify_proc = (int (*)()) xv_get(text_item, XV_KEY_DATA, PANEL_NOTIFY_PROC);
+    notify_proc = (int (*)()) xv_get(text_item, XV_KEY_DATA, (Attr_attribute)PANEL_NOTIFY_PROC);
 #endif
     if (notify_proc) {
 	dp->insert_delete_enabled = FALSE;
@@ -2067,7 +2069,7 @@
     int		item_y;
     Xv_font	font;
 
-    dp = (Panel_list_info *) xv_get(menu, XV_KEY_DATA, PANEL_LIST);
+    dp = (Panel_list_info *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)PANEL_LIST);
     for (edit_row=dp->rows; edit_row; edit_row=edit_row->next) {
     	if (edit_row->f.edit_selected)
 	    break;
@@ -2080,7 +2082,7 @@
 
     /* Overlay text item over blank row */
     first_row_in_view = (int) xv_get(dp->list_sb, SCROLLBAR_VIEW_START);
-    xv_set(dp->list_sb, SCROLLBAR_INACTIVE, TRUE, 0);
+    xv_set(dp->list_sb, SCROLLBAR_INACTIVE, TRUE, NULL);
     item_y = dp->list_box.r_top + edit_row->string_y -
 	first_row_in_view * dp->row_height;
     font = (edit_row->font) ? edit_row->font : dp->font;
@@ -2091,7 +2093,7 @@
     	PANEL_VALUE_I18N,	edit_row->STRING,
 	PANEL_TEXT_SELECT_LINE,
 	XV_SHOW,	TRUE,
-	0);
+	NULL);
     dp->text_item_row = edit_row;
 
     /* Warp the pointer to the bottom right corner of the text item */
@@ -2100,7 +2102,7 @@
 	        rect_right(&dp->list_box) - LIST_BOX_BORDER_WIDTH -
 		   ROW_MARGIN,
 		item_y + dp->row_height - 1,
-	    0);
+	    NULL);
 
     /* Transfer keyboard focus to the text item */
     panel_set_kbd_focus(PANEL_PRIVATE(dp->parent_panel),
@@ -2134,7 +2136,7 @@
     Event	*event = (Event *) xv_get(menu, MENU_LAST_EVENT);
     Row_info	*row;
     
-    dp = (Panel_list_info *) xv_get(menu, XV_KEY_DATA, PANEL_LIST);
+    dp = (Panel_list_info *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)PANEL_LIST);
     dp->insert_delete_enabled = FALSE;
     for (row=dp->rows; row; row=row->next) {
 	if (row->f.selected) {
@@ -2227,7 +2229,7 @@
     xv_set(dp->list_sb,
 	XV_X, dp->sb_rect.r_left,
 	XV_Y, dp->sb_rect.r_top,
-	0);
+	NULL);
 }
 
 
@@ -2247,7 +2249,7 @@
     void	*string;
 #endif
     
-    dp = (Panel_list_info *) xv_get(menu, XV_KEY_DATA, PANEL_LIST);
+    dp = (Panel_list_info *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)PANEL_LIST);
     panel_list_ip = ITEM_PRIVATE(dp->public_self);
 #ifdef OW_I18N
     if (wchar_notify(panel_list_ip))
@@ -2300,7 +2302,7 @@
     int		    stored_length;
     int		    text_width, chrwth;
     
-    dp = (Panel_list_info *) xv_get(menu, XV_KEY_DATA, PANEL_LIST);
+    dp = (Panel_list_info *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)PANEL_LIST);
     dp->edit_mode = TRUE;
 
     /*
@@ -2358,8 +2360,8 @@
 	PANEL_ITEM_COLOR, panel_list_ip->color_index,
     	PANEL_ITEM_X,	dp->list_box.r_left + dp->string_x,
     	PANEL_VALUE_DISPLAY_LENGTH,	display_length,
-    	XV_KEY_DATA, PANEL_NOTIFY_PROC, panel_list_ip->notify,
-    	0);
+    	XV_KEY_DATA, (Attr_attribute)PANEL_NOTIFY_PROC, panel_list_ip->notify,
+    	NULL);
     dp->text_item_row = NULL;   /* no row being edited */
 
     /* Repaint boxes around selected rows */
@@ -2390,7 +2392,7 @@
 #endif
     int		 validated;
 
-    dp = (Panel_list_info *) xv_get(menu, XV_KEY_DATA, PANEL_LIST);
+    dp = (Panel_list_info *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)PANEL_LIST);
 
     row = dp->text_item_row;
     if (row) {
@@ -2399,8 +2401,8 @@
 	{
 	    panel_set_kbd_focus(PANEL_PRIVATE(dp->parent_panel),
 		panel_list_ip);
-	    xv_set(dp->text_item, XV_SHOW, FALSE, 0);
-	    xv_set(dp->list_sb, SCROLLBAR_INACTIVE, FALSE, 0);
+	    xv_set(dp->text_item, XV_SHOW, FALSE, NULL);
+	    xv_set(dp->list_sb, SCROLLBAR_INACTIVE, FALSE, NULL);
 	    panel_list_delete_row(dp, row, REPAINT_LIST);
 	} else {
 #ifdef OW_I18N
@@ -2444,8 +2446,8 @@
 		/* Text was not validated */
 		panel_set_kbd_focus(PANEL_PRIVATE(dp->parent_panel),
 		    panel_list_ip);
-		xv_set(dp->text_item, XV_SHOW, FALSE, 0);
-		xv_set(dp->list_sb, SCROLLBAR_INACTIVE, FALSE, 0);
+		xv_set(dp->text_item, XV_SHOW, FALSE, NULL);
+		xv_set(dp->list_sb, SCROLLBAR_INACTIVE, FALSE, NULL);
 		if (!row->STRING || STRLEN(row->STRING) == 0)
 		{
 		    panel_list_delete_row(dp, row, DO_NOT_REPAINT_LIST);
@@ -2662,15 +2664,15 @@
 	    change_item = xv_find(menu, MENUITEM,
 		    XV_AUTO_CREATE, FALSE,
 		    MENU_STRING, XV_MSG("Change"),
-		    0);
+		    NULL);
 	    delete_item = xv_find(menu, MENUITEM,
 		    XV_AUTO_CREATE, FALSE,
 		    MENU_STRING, XV_MSG("Delete"),
-		    0);
+		    NULL);
 	    insert_item = xv_find(menu, MENUITEM,
 		    XV_AUTO_CREATE, FALSE,
 		    MENU_STRING, XV_MSG("Insert"),
-		    0);
+		    NULL);
 	    edit_row = dp->text_item_row;
 	    if (change_item || delete_item) {
 		edit_cnt = 0;
@@ -2680,28 +2682,28 @@
 		if (change_item)
 		    xv_set(change_item,
 			MENU_INACTIVE, edit_row || edit_cnt != 1,
-			0);
+			NULL);
 		if (delete_item)
 		    xv_set(delete_item,
 			MENU_INACTIVE, edit_cnt == 0,
-			0);
+			NULL);
 	    }
 	    if (insert_item)
 		xv_set(insert_item,
 		    MENU_INACTIVE, edit_row ? TRUE : FALSE,
-		    0);
+		    NULL);
 	}
     } else
 	menu = dp->read_menu;
     if (menu) {
 	xv_set ( menu, 
 		MENU_COLOR,	ip->color_index, 
-		XV_KEY_DATA,	PANEL_FIRST_ITEM, ip,
-		XV_KEY_DATA,	MENU_DONE_PROC, xv_get(menu, MENU_DONE_PROC),
+		XV_KEY_DATA,	(Attr_attribute)PANEL_FIRST_ITEM, ip,
+		XV_KEY_DATA,	(Attr_attribute)MENU_DONE_PROC, xv_get(menu, MENU_DONE_PROC),
 		MENU_DONE_PROC,	list_menu_done_proc,
 		NULL );
 	ip->panel->status.current_item_active = TRUE;
-	menu_show(menu, event_window(event), event, 0);
+	menu_show(menu, event_window(event), event, NULL);
     }
 }
 
@@ -2725,7 +2727,7 @@
     CHAR	   *string;
 #endif /* OW_I18N */
     
-    dp = (Panel_list_info *) xv_get(text_item, XV_KEY_DATA, PANEL_LIST);
+    dp = (Panel_list_info *) xv_get(text_item, XV_KEY_DATA, (Attr_attribute)PANEL_LIST);
     insert_row = dp->text_item_row;
 
     /* If value is empty, then exit insert mode. */
@@ -2733,8 +2735,8 @@
     {
 	panel_set_kbd_focus(PANEL_PRIVATE(dp->parent_panel),
 	    ITEM_FROM_PANEL_LIST(dp));
-	xv_set(text_item, XV_SHOW, FALSE, 0);
-	xv_set(dp->list_sb, SCROLLBAR_INACTIVE, FALSE, 0);
+	xv_set(text_item, XV_SHOW, FALSE, NULL);
+	xv_set(dp->list_sb, SCROLLBAR_INACTIVE, FALSE, NULL);
 	dp->text_item_row = NULL;   /* no row being edited */
 	panel_list_delete_row(dp, insert_row, REPAINT_LIST);
 	dp->edit_op = OP_NONE;
@@ -2749,10 +2751,10 @@
     panel_list_ip = ITEM_PRIVATE(dp->public_self);
     if (wchar_notify(panel_list_ip))
 	notify_proc = (int (*)()) 
-		xv_get(text_item, XV_KEY_DATA, PANEL_NOTIFY_PROC_WCS);
+		xv_get(text_item, XV_KEY_DATA, (Attr_attribute)PANEL_NOTIFY_PROC_WCS);
     else
 #endif
-    notify_proc = (int (*)()) xv_get(text_item, XV_KEY_DATA, PANEL_NOTIFY_PROC);
+    notify_proc = (int (*)()) xv_get(text_item, XV_KEY_DATA, (Attr_attribute)PANEL_NOTIFY_PROC);
     if (notify_proc) {
 	dp->insert_delete_enabled = FALSE;
 #ifdef OW_I18N
@@ -2785,7 +2787,7 @@
 
     /* Overlay text item over blank new row */
     first_row_in_view = (int) xv_get(dp->list_sb, SCROLLBAR_VIEW_START);
-    xv_set(dp->list_sb, SCROLLBAR_INACTIVE, TRUE, 0);
+    xv_set(dp->list_sb, SCROLLBAR_INACTIVE, TRUE, NULL);
     item_y = dp->list_box.r_top + insert_row->string_y -
 	first_row_in_view * dp->row_height;
     font = (insert_row->font) ? insert_row->font : dp->font;
@@ -2795,7 +2797,7 @@
     	   PANEL_NOTIFY_PROC,	insert_done,
 	   PANEL_VALUE_I18N,	NULL_STRING,
 	   XV_SHOW,	TRUE,
-	   0);
+	   NULL);
     dp->text_item_row = insert_row;
     
     /* Warp the pointer to the bottom right corner of the text item */
@@ -2804,7 +2806,7 @@
 	        rect_right(&dp->list_box) - LIST_BOX_BORDER_WIDTH -
 		   ROW_MARGIN,
 		item_y + dp->row_height - 1,
-	    0);
+	    NULL);
 
     /* Transfer keyboard focus to the text item */
     panel_set_kbd_focus(PANEL_PRIVATE(dp->parent_panel),
@@ -2827,9 +2829,9 @@
     Row_info		*insert_row = NULL;
     Xv_font		font;
     
-    dp = (Panel_list_info *) xv_get(menu, XV_KEY_DATA, PANEL_LIST);
+    dp = (Panel_list_info *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)PANEL_LIST);
     insert_position = (Insert_pos_t) xv_get(menu_item,
-	XV_KEY_DATA, PANEL_INSERT);
+	XV_KEY_DATA, (Attr_attribute)PANEL_INSERT);
 
     /* Find the first row selected for editing */
     for (insert_row=dp->rows; insert_row;
@@ -2867,7 +2869,7 @@
     
     /* Overlay text item over blank new row */
     first_row_in_view = (int) xv_get(dp->list_sb, SCROLLBAR_VIEW_START);
-    xv_set(dp->list_sb, SCROLLBAR_INACTIVE, TRUE, 0);
+    xv_set(dp->list_sb, SCROLLBAR_INACTIVE, TRUE, NULL);
     item_y = dp->list_box.r_top + insert_row->string_y -
 	first_row_in_view * dp->row_height;
     font = (insert_row->font) ? insert_row->font : dp->font;
@@ -2877,7 +2879,7 @@
     	PANEL_NOTIFY_PROC,	insert_done,
 	PANEL_VALUE_I18N,	NULL_STRING,
 	XV_SHOW,	TRUE,
-	0);
+	NULL);
     dp->text_item_row = insert_row;
 
     /* Warp the pointer to the bottom right corner of the text item */
@@ -2886,7 +2888,7 @@
 	        rect_right(&dp->list_box) - LIST_BOX_BORDER_WIDTH -
 		   ROW_MARGIN,
 		item_y + dp->row_height - 1,
-	    0);
+	    NULL);
 
     /* Transfer keyboard focus to the text item */
     panel_set_kbd_focus(PANEL_PRIVATE(dp->parent_panel),
@@ -2908,7 +2910,7 @@
     int view_end;
     int view_start;  /* in pixels */
     
-    dp = (Panel_list_info *) xv_get(menu, XV_KEY_DATA, PANEL_LIST);
+    dp = (Panel_list_info *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)PANEL_LIST);
 
     if (!dp->rows)
 	return(XV_OK);  /* no rows */
@@ -2954,7 +2956,7 @@
      */
     if (!row_visible(dp, desired_row_nbr))  {
 	desired_row_nbr = MIN((unsigned)desired_row_nbr, dp->nrows - dp->rows_displayed);
-	xv_set(dp->list_sb, SCROLLBAR_VIEW_START, desired_row_nbr, 0);
+	xv_set(dp->list_sb, SCROLLBAR_VIEW_START, desired_row_nbr, NULL);
     }
 }
 
@@ -3094,7 +3096,7 @@
 	    if (ip->color_index >= 0) {
 		gc = gc_list[SCREEN_NONSTD_GC];
 		XSetForeground(display, gc_list[SCREEN_NONSTD_GC],
-		    xv_get(xv_cms(info), CMS_PIXEL, ip->color_index));
+		    (unsigned int)xv_get(xv_cms(info), CMS_PIXEL, ip->color_index));
 		gc_values.line_style = LineSolid;
 		gc_mask = GCLineStyle;
 		XChangeGC(display, gc, gc_mask, &gc_values);
@@ -3169,7 +3171,7 @@
 	display = xv_display(info);
 	xid = xv_xid(info);
 	if (ip->color_index >= 0)
-	    fg_pixval = xv_get(xv_cms(info), CMS_PIXEL, ip->color_index);
+	    fg_pixval = (unsigned int)xv_get(xv_cms(info), CMS_PIXEL, ip->color_index);
 
 	/* If 3D, read mode, and row is selected, then draw a recessed box */
 	if (ip->panel->status.three_d && !dp->edit_mode && row->f.selected) {
@@ -3386,19 +3388,19 @@
     dp->list_sb = xv_create(ip->panel->paint_window->pw, SCROLLBAR,
     	WIN_INHERIT_COLORS, TRUE, /* inherit both the visual and CMS */
 	XV_HEIGHT, dp->list_box.r_height,
-	XV_KEY_DATA, PANEL_LIST, ip,
+	XV_KEY_DATA, (Attr_attribute)PANEL_LIST, ip,
 	SCROLLBAR_NOTIFY_CLIENT, ip->panel->paint_window->pw,
 	SCROLLBAR_VIEW_LENGTH,	dp->rows_displayed,  /* in rows */
 	SCROLLBAR_OBJECT_LENGTH, dp->nrows,  /* in rows */
 	SCROLLBAR_PIXELS_PER_UNIT, dp->row_height,
 	SCROLLBAR_INACTIVE, inactive(ip),
 	XV_SHOW, !hidden(ip),
-	XV_KEY_DATA, FRAME_ORPHAN_WINDOW, TRUE,
-	0);
+	XV_KEY_DATA, (Attr_attribute)FRAME_ORPHAN_WINDOW, (Attr_attribute)TRUE,
+	NULL);
     if (ip->color_index >= 0)
 	xv_set(dp->list_sb,
 	       WIN_FOREGROUND_COLOR, ip->color_index,
-	       0);
+	       NULL);
     dp->sb_rect = *(Rect *) xv_get(dp->list_sb, XV_RECT);
     if (dp->left_hand_sb)
 	dp->list_box.r_left += dp->sb_rect.r_width;
@@ -3456,7 +3458,7 @@
     if (dp->list_sb)
 	xv_set(dp->list_sb,
 	       SCROLLBAR_OBJECT_LENGTH, dp->nrows,  /* in rows */
-	       0);
+	       NULL);
 
     if (repaint) {
 	/* Erase old rows */
@@ -3523,7 +3525,7 @@
     if (dp->list_sb)
 	xv_set(dp->list_sb,
 	       SCROLLBAR_OBJECT_LENGTH, dp->nrows,  /* in rows */
-	       0);
+	       NULL);
 
     if (repaint)
 	paint_list_box(dp);
@@ -3677,8 +3679,8 @@
 		 ERROR_STRING,
 		   XV_MSG("Font height exceeds row height; font ignored"),
 		 ERROR_PKG, PANEL,
-		 0);
-	row->font = NULL;
+		 NULL);
+	row->font = (Xv_Font)NULL;
     }
     if (row->font != old_font)
 	row->display_str_len = 0;   /* force recomputation */
@@ -3698,7 +3700,7 @@
 		 ERROR_STRING,
 		   XV_MSG("Panel List glyph height exceeds row height; glyph ignored"),
 		 ERROR_PKG, PANEL,
-		 0);
+		 NULL);
 	row->glyph = NULL;
     }
 }
@@ -3721,7 +3723,7 @@
 		 ERROR_STRING,
 		 	XV_MSG("Panel List mask glyph depth not equal 1; mask glyph ignored"),
 		 ERROR_PKG, PANEL,
-		 0);
+		 NULL);
 	row->mask_glyph = NULL;
 	return;
     }
@@ -3733,7 +3735,7 @@
 		 ERROR_STRING,
 		   XV_MSG("Panel List mask glyph height exceeds row height; glyph ignored"),
 		 ERROR_PKG, PANEL,
-		 0);
+		 NULL);
 	row->mask_glyph = NULL;
     }
 }
@@ -3810,10 +3812,10 @@
     Item_info	*ip;
     void	(*orig_done_proc) ();	/* original menu-done procedure */
     
-    ip = (Item_info *) xv_get(menu, XV_KEY_DATA, PANEL_FIRST_ITEM);
+    ip = (Item_info *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)PANEL_FIRST_ITEM);
 
     /* Restore original menu done proc. */
-    orig_done_proc = (void (*) ()) xv_get(menu, XV_KEY_DATA, MENU_DONE_PROC);
+    orig_done_proc = (void (*) ()) xv_get(menu, XV_KEY_DATA, (Attr_attribute)MENU_DONE_PROC);
     xv_set ( menu,
 	    MENU_DONE_PROC, orig_done_proc,
 	    NULL );
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_menu.c xview-3.2p1.4/lib/libxview/panel/p_menu.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_menu.c	1993-06-29 07:16:52.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/panel/p_menu.c	2013-01-07 12:50:47.815519000 +0100
@@ -40,7 +40,7 @@
 {
     register Attr_attribute attr;	/* each attribute */
 
-    while (attr = *avlist++) {
+    while (attr = (int)*avlist++) {
 	switch (attr) {
 	  case PANEL_SHOW_MENU_MARK:
 	    if ((int) *avlist++)
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_mlinetxt.c xview-3.2p1.4/lib/libxview/panel/p_mlinetxt.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_mlinetxt.c	2013-01-07 12:36:48.543530000 +0100
+++ xview-3.2p1.4/lib/libxview/panel/p_mlinetxt.c	2013-01-07 12:50:47.841508000 +0100
@@ -20,6 +20,7 @@
 #include <xview/scrollbar.h>
 #include <xview/textsw.h>
 #include <xview/win_notify.h>
+#include <xview_private/windowimpl.h>
 
 /* Macros */
 #define MLTXT_PRIVATE(item)	\
@@ -162,20 +163,20 @@
 	WIN_CMS, xv_get(panel_public, WIN_CMS),
 	WIN_COLUMNS, dp->columns,
 	WIN_ROWS, dp->rows_displayed,
-	XV_KEY_DATA, FRAME_ORPHAN_WINDOW, TRUE,
-	0);
-    dp->view = xv_get(dp->textsw, OPENWIN_NTH_VIEW, 0);
+	XV_KEY_DATA, (Attr_attribute)FRAME_ORPHAN_WINDOW, (Attr_attribute)TRUE,
+	NULL);
+    dp->view = xv_get(dp->textsw, OPENWIN_NTH_VIEW, NULL);
     dp->sb = xv_get(dp->textsw, WIN_VERTICAL_SCROLLBAR);
-    xv_set(dp->sb, SCROLLBAR_SPLITTABLE, FALSE, 0);
+    xv_set(dp->sb, SCROLLBAR_SPLITTABLE, FALSE, NULL);
     dp->length = (int) xv_get(dp->textsw, TEXTSW_MEMORY_MAXIMUM);
     dp->width = (int) xv_get(dp->textsw, XV_WIDTH);
     dp->read_only = FALSE;
 
     xv_set(dp->view,
 	WIN_NOTIFY_SAFE_EVENT_PROC, mltxt_notify_proc,
-	XV_KEY_DATA, PANEL_MULTILINE_TEXT, item_public,
+	XV_KEY_DATA, (Attr_attribute)PANEL_MULTILINE_TEXT, item_public,
 	WIN_CURSOR, (Cursor) xv_get(panel_public, WIN_CURSOR),
-	0);
+	NULL);
 
     /* 
      * let go of grab so that Textsw can get select events 
@@ -187,9 +188,9 @@
     /* make a First-Class (primary) focus client (1085375) */
     xv_set(item_public,
 	   PANEL_PAINT, PANEL_NONE,
-	   XV_FOCUS_RANK, XV_FOCUS_PRIMARY,
-	   0);
-    xv_set(panel_public, XV_FOCUS_RANK, XV_FOCUS_PRIMARY, 0);
+	   XV_FOCUS_RANK, (Attr_attribute)XV_FOCUS_PRIMARY,
+	   NULL);
+    xv_set(panel_public, XV_FOCUS_RANK, (Attr_attribute)XV_FOCUS_PRIMARY, NULL);
 
     return XV_OK;
 }
@@ -221,12 +222,12 @@
      * mltxt_advance_caret.
      */
     for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-      switch (attrs[0]) {
+      switch ((int)attrs[0]) {
 	case PANEL_INACTIVE:
 	    if (attrs[1] && panel->kbd_focus_item == ip)
 		mltxt_advance_caret(ip);
 	    if (dp->sb)
-		xv_set(dp->sb, SCROLLBAR_INACTIVE, avlist[1], 0);
+		xv_set(dp->sb, SCROLLBAR_INACTIVE, avlist[1], NULL);
 	    break;
 	}
     }
@@ -244,15 +245,15 @@
     }
 
     for (; *avlist; avlist = attr_next(avlist)) {
-	switch (avlist[0]) {
+	switch ((int)avlist[0]) {
 	  case PANEL_DISPLAY_ROWS:
 	    dp->rows_displayed = (int) avlist[1];
 	    xv_set(dp->textsw,
-		WIN_ROWS, avlist[1], 0);
+		WIN_ROWS, avlist[1], NULL);
 	    break;
 
 	  case PANEL_ITEM_COLOR:
-	    xv_set(dp->textsw, WIN_FOREGROUND_COLOR, avlist[1], 0);
+	    xv_set(dp->textsw, WIN_FOREGROUND_COLOR, avlist[1], NULL);
 	    break;
 
 	  case PANEL_LINE_BREAK_ACTION:
@@ -267,7 +268,7 @@
 	    }
 	    xv_set(dp->textsw,
 		TEXTSW_LINE_BREAK_ACTION, textsw_line_break_action,
-		0);
+		NULL);
 	    break;
 
 	  case PANEL_NOTIFY_LEVEL:
@@ -295,7 +296,7 @@
 #endif /* OW_I18N */
 
 	  case PANEL_READ_ONLY:
-	    xv_set(dp->textsw, TEXTSW_READ_ONLY, avlist[1], 0);
+	    xv_set(dp->textsw, TEXTSW_READ_ONLY, avlist[1], NULL);
 	    dp->read_only = (int) avlist[1];
 	    break;
 
@@ -322,7 +323,7 @@
 	    textsw_reset(dp->textsw,0,0);
 	    xv_set(dp->textsw,
 		TEXTSW_CONTENTS_WCS, dp->value,
-		0);
+		NULL);
 	    if ( dp->read_only )
 		xv_set ( dp->textsw, TEXTSW_READ_ONLY, TRUE, NULL );
 	    break;
@@ -337,7 +338,7 @@
 	    textsw_reset(dp->textsw,0,0);
 	    xv_set(dp->textsw,
 		TEXTSW_CONTENTS_WCS, dp->value,
-		0);
+		NULL);
 	    if ( dp->read_only )
 		xv_set ( dp->textsw, TEXTSW_READ_ONLY, TRUE, NULL );
 	    break;
@@ -357,10 +358,11 @@
 
 	    textsw_reset(dp->textsw,0,0);
 /* Alpha compatibility, mbuck@debian.org */
-#if defined(__alpha)
-	    xv_set(dp->textsw, TEXTSW_CONTENTS, (unsigned long) avlist[1], 0);
+/* FIXME: Shouldn't it by (char *) rather than (unsigned long)? */
+#if defined(__alpha) || defined(__x86_64__)
+	    xv_set(dp->textsw, TEXTSW_CONTENTS, (unsigned long) avlist[1], NULL);
 #else
-	    xv_set(dp->textsw, TEXTSW_CONTENTS, avlist[1], 0);
+	    xv_set(dp->textsw, TEXTSW_CONTENTS, avlist[1], NULL);
 #endif
 
 	    if ( dp->read_only )
@@ -373,14 +375,14 @@
 	    dp->width = xv_cols(dp->textsw, dp->columns);
 	    xv_set(dp->textsw,
 		WIN_COLUMNS, avlist[1],
-		0);
+		NULL);
 	    break;
 
 	  case PANEL_VALUE_DISPLAY_WIDTH:
 	    dp->width = (int) avlist[1];
 	    xv_set(dp->textsw,
 		XV_WIDTH, avlist[1],
-		0);
+		NULL);
 	    dp->columns = (int) xv_get(dp->textsw, WIN_COLUMNS);
 	    break;
 
@@ -388,18 +390,18 @@
 	  case PANEL_VALUE_STORED_LENGTH:
 	    dp->length = (int) avlist[1];
 	    dp->stored_length_wc = 0;
-	    xv_set(dp->textsw, TEXTSW_MEMORY_MAXIMUM, avlist[1], 0);
+	    xv_set(dp->textsw, TEXTSW_MEMORY_MAXIMUM, avlist[1], NULL);
 	    break;
 
 	  case PANEL_VALUE_STORED_LENGTH_WCS:
 	    dp->length = (int) avlist[1] * sizeof(wchar_t);
 	    dp->stored_length_wc = 1;
-	    xv_set(dp->textsw, TEXTSW_MEMORY_MAXIMUM, avlist[1], 0);
+	    xv_set(dp->textsw, TEXTSW_MEMORY_MAXIMUM, avlist[1], NULL);
 	    break;
 #else
 	  case PANEL_VALUE_STORED_LENGTH:
 	    dp->length = (int) avlist[1];
-	    xv_set(dp->textsw, TEXTSW_MEMORY_MAXIMUM, avlist[1], 0);
+	    xv_set(dp->textsw, TEXTSW_MEMORY_MAXIMUM, avlist[1], NULL);
 	    break;
 #endif /* OW_I18N */
 
@@ -408,7 +410,7 @@
 	    break;
 
 	  case XV_SHOW:
-	    xv_set(dp->textsw, XV_SHOW, avlist[1], 0);
+	    xv_set(dp->textsw, XV_SHOW, avlist[1], NULL);
 	    break;
 
 	  default:
@@ -426,7 +428,7 @@
 	 *	       the extra white space to the left or right of the
 	 *	       box enclosing the text.  (See bugid 1041326.)
 	 */	
-	xv_set(dp->sb, XV_SHOW, rows * dp->columns < dp->length, 0);
+	xv_set(dp->sb, XV_SHOW, rows * dp->columns < dp->length, NULL);
     }
 	
     ip->value_rect.r_width = (int) xv_get(dp->textsw, XV_WIDTH);
@@ -449,7 +451,7 @@
     register Mltxt_info *dp = MLTXT_PRIVATE(item_public);
     int		    length;	/* # of chars in textsw, plus NULL terminator */
 
-    switch (which_attr) {
+    switch ((int)which_attr) {
       case PANEL_DISPLAY_ROWS:
 	return (Xv_opaque) dp->rows_displayed;
 
@@ -517,7 +519,7 @@
 	    dp->mbs_value = xv_malloc(length);
 	    dp->mbs_value_size = length;
 	}
-	xv_get(dp->textsw, TEXTSW_CONTENTS, 0, dp->mbs_value, length-1);
+	xv_get(dp->textsw, TEXTSW_CONTENTS, NULL, dp->mbs_value, length-1);
 	dp->mbs_value[length-1] = 0;  /* NULL terminate the string */
 	return (Xv_opaque) dp->mbs_value;
 
@@ -528,7 +530,7 @@
 	    dp->value = xv_malloc(length*sizeof(wchar_t));
 	    dp->value_size = length;
 	}
-	xv_get(dp->textsw, TEXTSW_CONTENTS_WCS, 0, dp->value, length-1);
+	xv_get(dp->textsw, TEXTSW_CONTENTS_WCS, NULL, dp->value, length-1);
 	dp->value[length-1] = 0;  /* NULL terminate the string */
 	return (Xv_opaque) dp->value;
 #else
@@ -540,7 +542,7 @@
 	    dp->value = xv_malloc(length);
 	    dp->value_size = length;
 	}
-	xv_get(dp->textsw, TEXTSW_CONTENTS, 0, dp->value, length-1);
+	xv_get(dp->textsw, TEXTSW_CONTENTS, NULL, dp->value, length-1);
 	dp->value[length-1] = 0;  /* NULL terminate the string */
 	return (Xv_opaque) dp->value;
 #endif /* OW_I18N */
@@ -630,7 +632,7 @@
     xv_set(dp->textsw,
 	   XV_X, ip->value_rect.r_left,
 	   XV_Y, ip->value_rect.r_top,
-	   0);
+	   NULL);
 
     /* work around for 1090245, Textsw doesn't update the
      * position of it's drop site when XV_X/Y change...
@@ -672,7 +674,7 @@
     xv_set(dp->textsw,
 	   XV_X, xv_get(dp->textsw, XV_X) + deltas->r_left,
 	   XV_Y, xv_get(dp->textsw, XV_Y) + deltas->r_top,
-	   0);
+	   NULL);
 }
 
 
@@ -684,7 +686,7 @@
     Item_info      *ip = ITEM_PRIVATE(item_public);
 
     dp->focus_pw = ip->panel->focus_pw;  /* save focus paint window */
-    xv_set(dp->textsw, WIN_SET_FOCUS, 0);
+    xv_set(dp->textsw, WIN_SET_FOCUS, NULL);
     win_ungrab_quick_sel_keys( ip->panel->focus_pw );
     win_grab_quick_sel_keys( dp->view );
 }
@@ -696,11 +698,11 @@
 {
     Mltxt_info	   *dp = MLTXT_PRIVATE(item_public);
 
-    xv_set(dp->textsw, WIN_REMOVE_CARET, 0);
+    xv_set(dp->textsw, WIN_REMOVE_CARET, NULL);
     /* BUG ALERT: Need a way to determine if the textsw has the input focus. */
     /* if (dp->textsw has input focus) */
 	if (dp->focus_pw) {
-	    xv_set(dp->focus_pw, WIN_SET_FOCUS, 0);
+	    xv_set(dp->focus_pw, WIN_SET_FOCUS, NULL);
 	    win_ungrab_quick_sel_keys( dp->view );
 	    win_grab_quick_sel_keys( dp->focus_pw );
 	    dp->focus_pw = NULL;
@@ -760,7 +762,7 @@
     Notify_value    result;
     Textsw	    textsw;
     
-    item_public = xv_get(window, XV_KEY_DATA, PANEL_MULTILINE_TEXT);
+    item_public = xv_get(window, XV_KEY_DATA, (Attr_attribute)PANEL_MULTILINE_TEXT);
     ip = ITEM_PRIVATE(item_public);
     if (inactive(ip) && event_action(event) != WIN_REPAINT)
 	return NOTIFY_DONE;
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_num_btn.c xview-3.2p1.4/lib/libxview/panel/p_num_btn.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_num_btn.c	2013-01-07 12:36:13.895360000 +0100
+++ xview-3.2p1.4/lib/libxview/panel/p_num_btn.c	2013-01-07 12:50:47.883109000 +0100
@@ -223,7 +223,7 @@
 	if (!ip->panel->three_d && xv_depth(info) > 1) {
 	    pixvals[OLGX_WHITE] = xv_bg(info);
 	    pixvals[OLGX_BLACK] = ip->color_index < 0 ? xv_fg(info) :
-		(unsigned long) xv_get(xv_cms(info),
+		(unsigned int) xv_get(xv_cms(info),
 				       CMS_PIXEL, ip->color_index);
 	    olgx_set_color(ip->panel->ginfo, pixvals);
 	}
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_num_txt.c xview-3.2p1.4/lib/libxview/panel/p_num_txt.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_num_txt.c	1997-04-28 14:45:36.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/panel/p_num_txt.c	2013-01-07 12:50:47.909450000 +0100
@@ -58,7 +58,7 @@
 static void	    num_txt_paint_value();
 static int	    set_value();
 static Panel_setting text_notify_proc();
-static Notify_value num_textitem_scroll_itimer_func();
+static void         num_textitem_scroll_itimer_func();
 
 
 static Panel_ops ops = {
@@ -153,8 +153,8 @@
 #ifdef OW_I18N
 			       PANEL_ITEM_IC_ACTIVE, FALSE,
 #endif /* OW_I18N */
-			       XV_KEY_DATA, PANEL_NUM_TXT, item_public,
-			       0);
+			       XV_KEY_DATA, (Attr_attribute)PANEL_NUM_TXT, item_public,
+			       NULL);
     ip->child_kbd_focus_item = dp->text_field;
     text_rect = &ITEM_PRIVATE(dp->text_field)->rect;
     dp->btn_rect.r_left = text_rect->r_left + text_rect->r_width +
@@ -197,7 +197,7 @@
     if (panel == NULL)
 	return ((Xv_opaque) XV_ERROR);
 
-    if (*avlist != XV_END_CREATE) {
+    if ((int)*avlist != XV_END_CREATE) {
 	/* Parse Panel Item Generic attributes before Text Field attributes.
 	 * Prevent panel_redisplay_item from being called in item_set_avlist.
 	 */
@@ -210,7 +210,7 @@
     }
 
     for (; *avlist; avlist = attr_next(avlist)) {
-	switch (avlist[0]) {
+	switch ((int)avlist[0]) {
 	  case PANEL_EVENT_PROC:
 	  case PANEL_ITEM_COLOR:
 	  case PANEL_NEXT_COL:
@@ -223,30 +223,30 @@
 	  case PANEL_VALUE_X:
 	  case PANEL_VALUE_Y:
 	  case XV_SHOW:
-	    xv_set(dp->text_field, avlist[0], avlist[1], 0);
+	    xv_set(dp->text_field, avlist[0], avlist[1], NULL);
 	    pos_change = TRUE;
 	    break;
 
 	  case XV_KEY_DATA:
 	    if (avlist[1] == XV_HELP)
-		xv_set(dp->text_field, XV_HELP_DATA, avlist[2], 0);
+		xv_set(dp->text_field, XV_HELP_DATA, avlist[2], NULL);
 	    break;
 
 	  case XV_X:
 	  case PANEL_ITEM_X:
-	    xv_set(dp->text_field, PANEL_ITEM_X, ip->value_rect.r_left, 0);
+	    xv_set(dp->text_field, PANEL_ITEM_X, ip->value_rect.r_left, NULL);
 	    pos_change = TRUE;
 	    break;
 
 	  case XV_Y:
 	  case PANEL_ITEM_Y:
-	    xv_set(dp->text_field, PANEL_ITEM_Y, ip->value_rect.r_top, 0);
+	    xv_set(dp->text_field, PANEL_ITEM_Y, ip->value_rect.r_top, NULL);
 	    pos_change = TRUE;
 	    break;
 
 	  case PANEL_READ_ONLY:
 	    value = (int) avlist[1];
-	    xv_set(dp->text_field, PANEL_READ_ONLY, value, 0);
+	    xv_set(dp->text_field, PANEL_READ_ONLY, value, NULL);
 	    if (value) {
 		dp->flags |= NTX_READ_ONLY;
 		dp->btn_state |= OLGX_INACTIVE;
@@ -259,7 +259,7 @@
 
 	  case PANEL_INACTIVE:
 	    value = (int) avlist[1];
-	    xv_set(dp->text_field, PANEL_INACTIVE, value, 0);
+	    xv_set(dp->text_field, PANEL_INACTIVE, value, NULL);
 	    if (value)
 		dp->btn_state |= OLGX_INACTIVE;
 	    else {
@@ -278,7 +278,7 @@
             value = (char) avlist[1];
             tmp_char = (char) value;
             mbtowc(&tmp_char_wc, &tmp_char, MB_CUR_MAX);
-            xv_set(dp->text_field, PANEL_MASK_CHAR_WC, tmp_char_wc, 0);
+            xv_set(dp->text_field, PANEL_MASK_CHAR_WC, tmp_char_wc, NULL);
             value = (value != '\0');
             if (value)
                 dp->btn_state |= OLGX_INACTIVE;
@@ -289,7 +289,7 @@
             break;
           case PANEL_MASK_CHAR_WC:
             value = (wchar_t) avlist[1];
-            xv_set(dp->text_field, PANEL_MASK_CHAR_WC, value, 0);
+            xv_set(dp->text_field, PANEL_MASK_CHAR_WC, value, NULL);
             value = (value != '\0');
             if (value)
                 dp->btn_state |= OLGX_INACTIVE;
@@ -301,7 +301,7 @@
 #else
 	  case PANEL_MASK_CHAR:
 	    value = (char) avlist[1];
-	    xv_set(dp->text_field, PANEL_MASK_CHAR, value, 0);
+	    xv_set(dp->text_field, PANEL_MASK_CHAR, value, NULL);
 	    value = (value != '\0');
 	    if (value)
 		dp->btn_state |= OLGX_INACTIVE;
@@ -384,7 +384,7 @@
 	xv_set(dp->text_field,
 	       XV_X, ip->value_rect.r_left,
 	       XV_Y, ip->value_rect.r_top,
-	       0);
+	       NULL);
 	text_rect = &ITEM_PRIVATE(dp->text_field)->rect;
 	dp->btn_rect.r_left = text_rect->r_left + text_rect->r_width +
 	    BUTTON_OFFSET;
@@ -408,7 +408,7 @@
 {
     register Num_text_info *dp = NUM_TEXT_PRIVATE(item_public);
 
-    switch (which_attr) {
+    switch ((int)which_attr) {
       case PANEL_JUMP_DELTA:
 	return (Xv_opaque) dp->jump_delta;
 
@@ -681,18 +681,18 @@
 	xv_set(dp->text_field,
 	       XV_X, xv_get(dp->text_field, XV_X) + deltas->r_left,
 	       XV_Y, xv_get(dp->text_field, XV_Y) + deltas->r_top,
-	       0);
+	       NULL);
 }
 
 
 
 /* --------------------  Local Routines  -------------------- */
-static          Notify_value
+static void
 num_textitem_scroll_itimer_func( item, which )
     Panel_item          item;
     int                 which;
 {
-    int                 val;
+    /*int                 val;*/
     Num_text_info  	*dp = NUM_TEXT_PRIVATE(item);
     Item_info      	*ip = ITEM_PRIVATE(item);
     Event		event;
@@ -881,7 +881,7 @@
 	DRAWABLE_INFO_MACRO(pw, info);
 	if (ip->color_index >= 0) {
 	    olgx_set_single_color(ginfo, OLGX_BLACK,
-				  xv_get(xv_cms(info), CMS_PIXEL,
+				  (unsigned int)xv_get(xv_cms(info), CMS_PIXEL,
 				  ip->color_index), OLGX_SPECIAL);
 	}
 	olgx_draw_numscroll_button(ginfo, xv_xid(info),
@@ -924,10 +924,10 @@
 
 #ifdef OW_I18N
     wsprintf(buffer, "%d", new_value);
-    xv_set(dp->text_field, PANEL_VALUE_WCS, buffer, 0);
+    xv_set(dp->text_field, PANEL_VALUE_WCS, buffer, NULL);
 #else
     sprintf(buffer, "%d", new_value);
-    xv_set(dp->text_field, PANEL_VALUE, buffer, 0);
+    xv_set(dp->text_field, PANEL_VALUE, buffer, NULL);
 #endif /* OW_I18N */
 
     return check_dimming(dp);
@@ -939,7 +939,7 @@
     Panel_item text_field;
     Event *event;
 {
-    Panel_item num_text = xv_get(text_field, XV_KEY_DATA, PANEL_NUM_TXT);
+    Panel_item num_text = xv_get(text_field, XV_KEY_DATA, (Attr_attribute)PANEL_NUM_TXT);
     register Item_info *ip = ITEM_PRIVATE(num_text);
     register Num_text_info *dp = NUM_TEXT_PRIVATE(num_text);
     int		    changed;
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_paint.c xview-3.2p1.4/lib/libxview/panel/p_paint.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_paint.c	1993-06-29 07:16:49.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/panel/p_paint.c	2013-01-07 12:50:47.942407000 +0100
@@ -10,8 +10,11 @@
  *	file for terms of the license.
  */
 
+#define xview_other_rl_funcs
 #include <xview_private/panel_impl.h>
 #include <xview_private/draw_impl.h>
+#include <xview/rectlist.h>
+#include <xview/win.h>
 
 static void     panel_repaint_background();
 static void	panel_paint_item();
@@ -34,8 +37,8 @@
     /* If this is a PANEL with out Panel Menu Items, then draw a line
      * at the top of the panel.
      */
-    if (xv_get(panel_public, WIN_VERTICAL_SCROLLBAR) == NULL &&
-	xv_get(panel_public, WIN_HORIZONTAL_SCROLLBAR) == NULL &&
+    if (xv_get(panel_public, WIN_VERTICAL_SCROLLBAR) == (Xv_object)NULL &&
+	xv_get(panel_public, WIN_HORIZONTAL_SCROLLBAR) == (Xv_object)NULL &&
 	!(panel->items && is_menu_item(panel->items))) {
         DRAWABLE_INFO_MACRO(pw, info); 
 	
@@ -115,7 +118,7 @@
 /* calls the painting routine for panels or items, as appropriate.           */
 /*****************************************************************************/
 
-Xv_public
+Xv_public int
 panel_paint(client_object, flag)
     Panel           client_object;
     Panel_setting   flag;
@@ -123,7 +126,7 @@
     Panel_info     *object = PANEL_PRIVATE(client_object);
 
     if (!object || (flag != PANEL_CLEAR && flag != PANEL_NO_CLEAR))
-	return NULL;
+	return 0;
 
     if (is_panel(object)) {
 	(*object->ops.panel_op_paint) (object, flag);
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_scroll.c xview-3.2p1.4/lib/libxview/panel/p_scroll.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_scroll.c	1993-06-29 07:17:00.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/panel/p_scroll.c	2013-01-07 12:50:47.972999000 +0100
@@ -364,7 +364,7 @@
 /* panel_update_scrolling_size                                               */
 /*****************************************************************************/
 
-Pkg_private
+Pkg_private void
 panel_update_scrolling_size(client_panel)
     Panel           client_panel;
 {
@@ -383,9 +383,9 @@
     }
 
     if (panel_height(panel) != v_end + panel->extra_height) {
-	(void) xv_set(client_panel, CANVAS_MIN_PAINT_HEIGHT, v_end + panel->extra_height, 0);
+	(void) xv_set(client_panel, CANVAS_MIN_PAINT_HEIGHT, v_end + panel->extra_height, NULL);
     }
     if (panel_width(panel) != h_end + panel->extra_width) {
-	(void) xv_set(client_panel, CANVAS_MIN_PAINT_WIDTH, h_end + panel->extra_width, 0);
+	(void) xv_set(client_panel, CANVAS_MIN_PAINT_WIDTH, h_end + panel->extra_width, NULL);
     }
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_select.c xview-3.2p1.4/lib/libxview/panel/p_select.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_select.c	2013-01-07 12:36:14.277753000 +0100
+++ xview-3.2p1.4/lib/libxview/panel/p_select.c	2013-01-07 12:50:48.000843000 +0100
@@ -180,7 +180,7 @@
 		else
 		    xv_set(xv_get(panel_public, WIN_FRAME),
 			   FRAME_NEXT_PANE,
-			   0);
+			   NULL);
 	    }
 	    return (int) NOTIFY_DONE;
 	  case ACTION_PREVIOUS_ELEMENT:
@@ -193,7 +193,7 @@
 		else
 		    xv_set(xv_get(panel_public, WIN_FRAME),
 			   FRAME_PREVIOUS_ELEMENT,
-			   0);
+			   NULL);
 	    }
 	    return (int) NOTIFY_DONE;
 	  case ACTION_PANEL_START:
@@ -223,7 +223,7 @@
 		       WIN_MOUSE_XY,
 			    panel->kbd_focus_item->rect.r_left,
 			    panel->kbd_focus_item->rect.r_top,
-		       0);
+		       NULL);
 	    }
 	    return (int) NOTIFY_DONE;
 	  case ACTION_DEFAULT_ACTION:
@@ -263,7 +263,7 @@
 	    panel_handle_event(ITEM_PUBLIC(new), event); /* SELECT-up */
 	    return (int) NOTIFY_DONE;
 	  case SCROLLBAR_REQUEST:
-	    new = (Item_info *) xv_get(arg, XV_KEY_DATA, PANEL_LIST);
+	    new = (Item_info *) xv_get(arg, XV_KEY_DATA, (Attr_attribute)PANEL_LIST);
 	    break;
 	  case ACTION_DRAG_COPY:
 	  case ACTION_DRAG_MOVE:
@@ -591,7 +591,7 @@
 	    /* SELECT-down over the panel background when there's a
 	     * primary selection: lose the primary selection.
 	     */
-	    xv_set(panel->sel_owner[PANEL_SEL_PRIMARY], SEL_OWN, FALSE, 0);
+	    xv_set(panel->sel_owner[PANEL_SEL_PRIMARY], SEL_OWN, FALSE, NULL);
 	}
 	break;
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_set.c xview-3.2p1.4/lib/libxview/panel/p_set.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_set.c	2013-01-07 12:36:14.776840000 +0100
+++ xview-3.2p1.4/lib/libxview/panel/p_set.c	2013-01-07 15:10:07.991296000 +0100
@@ -15,6 +15,7 @@
 #include <xview/scrollbar.h>
 #include <xview/xv_xrect.h>
 #include <xview_private/draw_impl.h>
+#include <xview/win.h>
 
 Xv_private void	    win_set_no_focus();
 Xv_private Graphics_info *xv_init_olgx();
@@ -22,7 +23,11 @@
 Xv_private char     *xv_font_bold();
 Xv_private char     *xv_font_regular_cmdline();
 
+#ifdef __STDC__
+static void panel_set_fonts(Panel panel_public, Panel_info *panel);
+#else
 static void panel_set_fonts();
+#endif
 static int column_from_absolute_x(int x_position, int col_gap, int left_margin, Xv_Font font);
 static int row_from_absolute_y(int y_position, int col_gap, int left_margin, Xv_Font font);
 
@@ -45,7 +50,7 @@
 
     for (attr = avlist[0]; attr;
 	 avlist = attr_next(avlist), attr = avlist[0]) {
-	switch (attr) {
+	switch ((int)attr) {
 	  case PANEL_CLIENT_DATA:
 	    panel->client_data = avlist[1];
 	    break;
@@ -66,19 +71,19 @@
 
 	  case PANEL_CARET_ITEM:
 	    if (!avlist[1]) {
-		xv_error(NULL,
+		xv_error((Xv_object)NULL,
 			 ERROR_BAD_VALUE, avlist[1], PANEL_CARET_ITEM,
 			 ERROR_PKG, PANEL,
-			 0);
+			 NULL);
 		return XV_ERROR;   /* NULL ptr */
 	    }
 	    ip = ITEM_PRIVATE(avlist[1]);
 	    if (inactive(ip) || hidden(ip) ||
 		(!wants_key(ip) && !ip->child_kbd_focus_item)) {
-		xv_error(NULL,
+		xv_error((Xv_object)NULL,
 			 ERROR_BAD_VALUE, avlist[1], PANEL_CARET_ITEM,
 			 ERROR_PKG, PANEL,
-			 0);
+			 NULL);
 		return XV_ERROR;   /* item cannot take input focus */
 	    }
 	    if (ip->child_kbd_focus_item)
@@ -190,7 +195,7 @@
 
 		/* repaint the previous default item */
 		if (item) { 
-		    panel->default_item = NULL;
+		    panel->default_item = (Panel_item)NULL;
 		    ip = ITEM_PRIVATE (item);
 		    panel_redisplay_item (ip, ip->repaint);
 		    panel->default_item = (Panel_item) avlist[1];
@@ -217,7 +222,7 @@
 		/* Clear caret */
 		panel_text_caret_on(panel, FALSE);
 	    }
-	    panel->caret = NULL;
+	    panel->caret = '\0';
 	    break;
 
 #ifdef VERSION_3
@@ -232,7 +237,7 @@
 		    "WIN_BACKGROUND_COLOR");
 		xv_error(panel_public,
 			 ERROR_STRING, error_string,
-			 0);
+			 NULL);
 		ATTR_CONSUME(avlist[0]);
 	    }
 	    break;
@@ -323,7 +328,7 @@
 		if (bg_pixmap)
 		    xv_set(panel->paint_window->pw,
 			   WIN_BACKGROUND_PIXMAP, bg_pixmap,
-			   0);
+			   NULL);
 	    }
 
 	    /* Initialize focus_pw to the first paint window.
@@ -334,7 +339,7 @@
 
 	    xv_set(panel_public,
 		   WIN_ROW_HEIGHT, panel->ginfo->button_height,
-		   0);
+		   NULL);
 #ifdef OW_I18N
 	    DRAWABLE_INFO_MACRO(panel->focus_pw, info);
 	    if (xv_get(xv_server(info), XV_IM) != NULL &&
@@ -346,7 +351,7 @@
 #ifdef FULL_R5		
 		    XGetICValues(panel->ic, XNInputStyle, &panel->xim_style, NULL);
 #endif /* FULL_R5 */		
-		    (void) xv_set(panel->paint_window->pw, WIN_IC, panel->ic, 0);
+		    (void) xv_set(panel->paint_window->pw, WIN_IC, panel->ic, NULL);
 		}
 	    }
 #endif /* OW_I18N */
@@ -359,17 +364,17 @@
     }
 
     /* set up any scrollbars */
-    if (new_v_scrollbar != NULL &&
+    if (new_v_scrollbar != (Scrollbar)NULL &&
     (int (*) ()) xv_get(new_v_scrollbar, SCROLLBAR_NORMALIZE_PROC) == NULL) {
 	xv_set(new_v_scrollbar,
 	       SCROLLBAR_NORMALIZE_PROC, panel_normalize_scroll,
-	       0);
+	       NULL);
     }
-    if (new_h_scrollbar != NULL &&
+    if (new_h_scrollbar != (Scrollbar)NULL &&
     (int (*) ()) xv_get(new_h_scrollbar, SCROLLBAR_NORMALIZE_PROC) == NULL) {
 	xv_set(new_h_scrollbar,
 	       SCROLLBAR_NORMALIZE_PROC, panel_normalize_scroll,
-	       0);
+	       NULL);
     }
 
     /* if extra width, height was set, update panel scrolling size */
@@ -407,13 +412,13 @@
     glyph_font = xv_find_olglyph_font(panel->std_font);
 
     if (!glyph_font)
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING, 
 		    XV_MSG("Unable to find OPEN LOOK glyph font"),
 		 ERROR_SEVERITY, ERROR_NON_RECOVERABLE,
 		 ERROR_PKG, PANEL,
-		 0);
-    xv_set(panel_public, WIN_GLYPH_FONT, glyph_font, 0); 
+		 NULL);
+    xv_set(panel_public, WIN_GLYPH_FONT, glyph_font, NULL); 
 
     /* 
      * Change the way of obtaining font_size, we used to hard code the sizes
@@ -437,7 +442,7 @@
      * is done to determine if the bold font size is about the same
      * as the other fonts that are used.
      */  
-    panel->bold_font = NULL;
+    panel->bold_font = (Xv_Font)NULL;
 
     if (save_bold_name = bold_name = xv_font_bold())
     {
@@ -468,37 +473,37 @@
                 FONT_FAMILY, xv_get(panel->std_font, FONT_FAMILY),
                 FONT_STYLE, FONT_STYLE_BOLD,
                 FONT_SIZE, font_size,
-                0);
+                NULL);
         }
 
-        if (panel->bold_font == NULL)
-            xv_error(NULL,
+        if (panel->bold_font == (Xv_Font)NULL)
+            xv_error((Xv_object)NULL,
                  ERROR_STRING,
 		     XV_MSG("Unable to find bold font"),
                  ERROR_PKG, PANEL,
-                 0);
+                 NULL);
         if (bold_name)
             xv_free( bold_name );
     }
     
-    if (panel->bold_font == NULL) {
+    if (panel->bold_font == (Xv_Font)NULL) {
         panel->bold_font = xv_find(panel_public, FONT,
             FONT_FAMILY, xv_get(panel->std_font, FONT_FAMILY),
             FONT_STYLE, FONT_STYLE_BOLD,
             FONT_SIZE, font_size,
-            0);
+            NULL);
     }
  
 #ifdef OW_I18N
     defaults_set_locale(NULL, NULL);
 #endif
 
-    if (panel->bold_font == NULL) {
-        xv_error(NULL,
+    if (panel->bold_font == (Xv_Font)NULL) {
+        xv_error((Xv_object)NULL,
                  ERROR_STRING,
 		     XV_MSG("Unable to find bold font; using standard font"),
                  ERROR_PKG, PANEL,
-                 0);
+                 NULL);
         panel->bold_font = panel->std_font;
     }  
 #ifdef OW_I18N
@@ -553,11 +558,11 @@
     new_win_font = (old_win_font) ?
 	xv_find(panel_public, FONT,
 		FONT_RESCALE_OF, old_win_font, (int) arg,
-		0)
+		NULL)
 	: (Xv_Font) 0;
     if (new_win_font) {
-	(void) xv_set(old_win_font, XV_INCREMENT_REF_COUNT, 0);
-	(void) xv_set(panel_public, XV_FONT, new_win_font, 0);
+	(void) xv_set(old_win_font, XV_INCREMENT_REF_COUNT, NULL);
+	(void) xv_set(panel_public, XV_FONT, new_win_font, NULL);
 	panel_font = new_win_font;
     } else
 	panel_font = old_win_font;
@@ -566,10 +571,10 @@
     new_bold_font = (old_bold_font) ?
 	xv_find(panel_public, FONT,
 		FONT_RESCALE_OF, old_bold_font, (int) arg,
-		0)
+		NULL)
 	: (Xv_Font) 0;
     if (new_bold_font) {
-	(void) xv_set(panel_public, PANEL_BOLD_FONT, new_bold_font, 0);
+	(void) xv_set(panel_public, PANEL_BOLD_FONT, new_bold_font, NULL);
     }
 
     if ((!new_win_font) && (!new_bold_font))
@@ -593,7 +598,7 @@
 		      PANEL_ITEM_X, xv_col(panel_public, item_col),
 		      PANEL_ITEM_Y, xv_row(panel_public, item_row),
 		      PANEL_PAINT, PANEL_NONE,
-		      0);
+		      NULL);
     }
     label = &ip->label;
     if (is_string(label)) {
@@ -606,26 +611,26 @@
 	       PANEL_PAINT, PANEL_NONE,
 	       PANEL_LABEL_FONT, panel_font,
 	       PANEL_LABEL_STRING_WCS, image_string_wc(label),
-	       0);
+	       NULL);
 #else
 	xv_set(ITEM_PUBLIC(ip),
 	       PANEL_PAINT, PANEL_NONE,
 	       PANEL_LABEL_FONT, panel_font,
 	       PANEL_LABEL_STRING, image_string(label),
-	       0);
+	       NULL);
 #endif /* OW_I18N */
 
 	if (label_bold) {
 	    xv_set(ITEM_PUBLIC(ip),
 		   PANEL_PAINT, PANEL_NONE,
 		   PANEL_LABEL_BOLD, label_bold,
-		   0);
+		   NULL);
 	}
     }
     xv_set(ITEM_PUBLIC(ip),
 	   PANEL_PAINT, PANEL_NONE,
 	   PANEL_LABEL_FONT, panel_font,
-	   0);
+	   NULL);
     switch (ip->item_type) {
 
       case PANEL_MESSAGE_ITEM:
@@ -639,7 +644,7 @@
 		xv_set(ITEM_PUBLIC(ip),
 		       PANEL_PAINT, PANEL_NONE,
 		       PANEL_LABEL_STRING_WCS, label,
-		       0);
+		       NULL);
 	    break;
 	}
 #else
@@ -650,7 +655,7 @@
 		xv_set(ITEM_PUBLIC(ip),
 		       PANEL_PAINT, PANEL_NONE,
 		       PANEL_LABEL_STRING, label,
-		       0);
+		       NULL);
 	    break;
 	}
 #endif /* OW_I18N */
@@ -659,14 +664,14 @@
 	xv_set(ITEM_PUBLIC(ip),
 	       PANEL_PAINT, PANEL_NONE,
 	       PANEL_CHOICE_FONTS, panel_font, 0,
-	       0);
+	       NULL);
 	break;
 
       case PANEL_CHOICE_ITEM:
 	xv_set(ITEM_PUBLIC(ip),
 	       PANEL_PAINT, PANEL_NONE,
 	       PANEL_CHOICE_FONTS, panel_font, 0,
-	       0);
+	       NULL);
 	break;
 
       case PANEL_TEXT_ITEM:
@@ -674,7 +679,7 @@
 	xv_set(ITEM_PUBLIC(ip),
 	       PANEL_PAINT, PANEL_NONE,
 	       PANEL_VALUE_FONT, panel_font,
-	       0);
+	       NULL);
 	break;
 
 
@@ -688,8 +693,8 @@
     panel_paint(ITEM_PUBLIC(ip), PANEL_CLEAR);
     PANEL_END_EACH
 	if (new_win_font) {
-	(void) xv_set(panel_public, XV_FONT, old_win_font, 0);
-	(void) xv_set(old_win_font, XV_DECREMENT_REF_COUNT, 0);
+	(void) xv_set(panel_public, XV_FONT, old_win_font, NULL);
+	(void) xv_set(old_win_font, XV_DECREMENT_REF_COUNT, NULL);
     }
 }
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_slider.c xview-3.2p1.4/lib/libxview/panel/p_slider.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_slider.c	2013-01-07 12:36:48.617643000 +0100
+++ xview-3.2p1.4/lib/libxview/panel/p_slider.c	2013-01-07 12:50:48.098199000 +0100
@@ -16,6 +16,7 @@
 #include <xview/pixwin.h>
 #include <xview/font.h>
 #include <xview_private/draw_impl.h>
+#include <xview_private/scrn_impl.h>
 
 #define SLIDER_PRIVATE(item)	\
 	XV_PRIVATE(Slider_info, Xv_panel_slider, item)
@@ -147,6 +148,13 @@
 
 #define vertical(dp) ((dp)->flags & VERTICAL)
 
+#ifdef __STDC__
+static int etoi(Slider_info *dp, int value);
+static int itoe(Slider_info *dp, int value);
+#else
+static int etoi();
+static int itoe();
+#endif
 
 /* ========================================================================= */
 
@@ -241,13 +249,13 @@
 	    return result;
     }
 
-    while (attr = *avlist++) {
+    while ((attr = (int)*avlist++) != (Attr_attribute)NULL) {
 	switch (attr) {
 	  case PANEL_ITEM_COLOR:
 	    if (dp->value_textitem)
 		xv_set(dp->value_textitem,
 		       PANEL_ITEM_COLOR, (char *) *avlist++,
-		       0);
+		       NULL);
 	    else
 		avlist++;
 	    break;
@@ -598,7 +606,7 @@
 		       PANEL_VALUE, buf,
 #endif /* OW_I18N */
 		       PANEL_VALUE_DISPLAY_LENGTH, dp->valuesize,
-		       0);
+		       NULL);
 	    } else {
 		/* Note that we are creating the imbedded PANEL_TEXT item
 		 * before our (PANEL_SLIDER) item's XV_END_CREATE is processed.
@@ -628,14 +636,14 @@
 			      PANEL_VALUE, buf,
 #endif /* OW_I18N */
 			      PANEL_VALUE_DISPLAY_LENGTH, dp->valuesize,
-			      0);
+			      NULL);
 		size_changed = TRUE;
 	    }
 	} else if (dp->value_textitem) {
 	    /* Hide value */
 	    xv_set(dp->value_textitem,
 		   XV_SHOW, FALSE,
-		   0);
+		   NULL);
 	}
     }
     if (size_changed || end_create)
@@ -659,7 +667,7 @@
     char		 *string_mbs = NULL;
 #endif /* OW_I18N */
 
-    switch (which_attr) {
+    switch ((int)which_attr) {
       case PANEL_READ_ONLY:
 	return (Xv_opaque)
 	    (dp->flags & READONLY ? TRUE : FALSE);
@@ -884,9 +892,9 @@
     if (dp->flags & SHOWVALUE) {
 	(void) SPRINTF(buf, "%d", itoe(dp, dp->apparent));
 #ifdef OW_I18N
-	xv_set(dp->value_textitem, PANEL_VALUE_WCS, buf, 0);
+	xv_set(dp->value_textitem, PANEL_VALUE_WCS, buf, NULL);
 #else
-	xv_set(dp->value_textitem, PANEL_VALUE, buf, 0);
+	xv_set(dp->value_textitem, PANEL_VALUE, buf, NULL);
 #endif /* OW_I18N */
     }
     if (dp->flags & CONTINUOUS)
@@ -915,9 +923,9 @@
 	if (dp->flags & SHOWVALUE) {
 	    SPRINTF(buf, "%d", itoe(dp, dp->apparent));
 #ifdef OW_I18N
-	    xv_set(dp->value_textitem, PANEL_VALUE_WCS, buf, 0);
+	    xv_set(dp->value_textitem, PANEL_VALUE_WCS, buf, NULL);
 #else
-	    xv_set(dp->value_textitem, PANEL_VALUE, buf, 0);
+	    xv_set(dp->value_textitem, PANEL_VALUE, buf, NULL);
 #endif /* OW_I18N */
 	}
     }
@@ -1013,7 +1021,7 @@
 	    mouse_top = dp->sliderbox.r_top + dp->sliderbox.r_height/2;
 	xv_set(PANEL_PUBLIC(ip->panel),
 	       WIN_MOUSE_XY, mouse_left, mouse_top,
-	       0);
+	       NULL);
     } else
 	paint_slider(ip, OLGX_UPDATE);
     dp->last_click_time = event_time(event);
@@ -1214,7 +1222,7 @@
 	xv_set(dp->value_textitem,
 	       PANEL_ITEM_X, dp->valuerect.r_left,
 	       PANEL_ITEM_Y, dp->valuerect.r_top,
-	       0);
+	       NULL);
 }
 
 
@@ -1228,13 +1236,13 @@
     int		    x;
     int		    y;
 
-    frame = xv_get(PANEL_PUBLIC(ip->panel), WIN_FRAME);
+    frame = (Frame)xv_get(PANEL_PUBLIC(ip->panel), WIN_FRAME);
     if (vertical(dp)) {
-	xv_set(frame, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_RIGHT, 0);
+	xv_set(frame, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_RIGHT, NULL);
 	x = dp->max_range_rect.r_left - FRAME_FOCUS_RIGHT_WIDTH;
 	y = dp->max_range_rect.r_top;
     } else {
-	xv_set(frame, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_UP, 0);
+	xv_set(frame, FRAME_FOCUS_DIRECTION, FRAME_FOCUS_UP, NULL);
 	x = dp->min_range_rect.r_left;
 	y = dp->min_range_rect.r_top + dp->min_range_rect.r_height;
     }
@@ -1254,9 +1262,9 @@
     Frame	    frame;
     Item_info      *ip = ITEM_PRIVATE(item_public);
 
-    frame = xv_get(PANEL_PUBLIC(ip->panel), WIN_FRAME);
+    frame = (Frame)xv_get(PANEL_PUBLIC(ip->panel), WIN_FRAME);
     focus_win = xv_get(frame, FRAME_FOCUS_WIN);
-    xv_set(focus_win, XV_SHOW, FALSE, 0);
+    xv_set(focus_win, XV_SHOW, FALSE, NULL);
 }
 
 
@@ -1282,9 +1290,9 @@
 	if (dp->flags & SHOWVALUE) {
 	    SPRINTF(buf, "%d", dp->min_value);
 #ifdef OW_I18N
-	    xv_set(dp->value_textitem, PANEL_VALUE_WCS, buf, 0);
+	    xv_set(dp->value_textitem, PANEL_VALUE_WCS, buf, NULL);
 #else
-	    xv_set(dp->value_textitem, PANEL_VALUE, buf, 0);
+	    xv_set(dp->value_textitem, PANEL_VALUE, buf, NULL);
 #endif /* OW_I18N */
 	}
 	break;
@@ -1297,9 +1305,9 @@
 	if (dp->flags & SHOWVALUE) {
 	    SPRINTF(buf, "%d", dp->max_value);
 #ifdef OW_I18N
-	    xv_set(dp->value_textitem, PANEL_VALUE_WCS, buf, 0);
+	    xv_set(dp->value_textitem, PANEL_VALUE_WCS, buf, NULL);
 #else
-	    xv_set(dp->value_textitem, PANEL_VALUE, buf, 0);
+	    xv_set(dp->value_textitem, PANEL_VALUE, buf, NULL);
 #endif /* OW_I18N */
 	}
 	break;
@@ -1331,9 +1339,9 @@
 	if (dp->flags & SHOWVALUE) {
 	    SPRINTF(buf, "%d", dp->print_value);
 #ifdef OW_I18N
-	    xv_set(dp->value_textitem, PANEL_VALUE_WCS, buf, 0);
+	    xv_set(dp->value_textitem, PANEL_VALUE_WCS, buf, NULL);
 #else
-	    xv_set(dp->value_textitem, PANEL_VALUE, buf, 0);
+	    xv_set(dp->value_textitem, PANEL_VALUE, buf, NULL);
 #endif /* OW_I18N */
 	}
    }
@@ -1419,9 +1427,9 @@
     if (value_changed) {
 	SPRINTF(buf, "%d", value);
 #ifdef OW_I18N
-	xv_set(item_public, PANEL_VALUE_WCS, buf, 0);
+	xv_set(item_public, PANEL_VALUE_WCS, buf, NULL);
 #else
-	xv_set(item_public, PANEL_VALUE, buf, 0);
+	xv_set(item_public, PANEL_VALUE, buf, NULL);
 #endif /* OW_I18N */
     }
     dp->apparent = dp->actual = etoi(dp, value);
@@ -1514,7 +1522,7 @@
 	xid = xv_xid(info);
 	if (ip->color_index >= 0) {
 	    olgx_set_single_color(ip->panel->ginfo, OLGX_BLACK,
-				  xv_get(xv_cms(info), CMS_PIXEL,
+				  (unsigned int)xv_get(xv_cms(info), CMS_PIXEL,
 				  ip->color_index), OLGX_SPECIAL);
 	}
 	olgx_draw_slider(ip->panel->ginfo, xid,
@@ -1542,7 +1550,9 @@
 		y = dp->tickrect.r_top;
 		if (vertical(dp)) {
                     if (dp->nticks == 1)
-                        tick_gap == dp->tickrect.r_height;
+			/* FIXME: I doubt this was intentional? */
+                        /* tick_gap == dp->tickrect.r_height; */
+                        tick_gap = dp->tickrect.r_height;
                     else
                         tick_gap = dp->tickrect.r_height / (dp->nticks-1);
 
@@ -1552,7 +1562,9 @@
 			TICK_THICKNESS;
 		} else {
                     if (dp->nticks == 1)
-                        tick_gap == dp->tickrect.r_width;
+			/* FIXME: I doubt this was intentional? */
+                        /* tick_gap == dp->tickrect.r_width; */
+                        tick_gap = dp->tickrect.r_width;
                     else
                         tick_gap = dp->tickrect.r_width / (dp->nticks-1);
 
@@ -1578,7 +1590,7 @@
 		if (dp->min_tick_string) {
 		    if (vertical(dp))
 			y = rect_bottom(&dp->tickstringrect) -
-			    xv_get(ip->panel->std_font,
+			    (int)xv_get(ip->panel->std_font,
 				   FONT_DEFAULT_CHAR_HEIGHT);
 		    else
 			y = dp->tickstringrect.r_top;
@@ -1664,11 +1676,11 @@
 	    	       ip->label_rect.r_top, 0, 0);
     }
 
-    chrht = xv_get(ip->panel->std_font, FONT_DEFAULT_CHAR_HEIGHT);
-    chrwth = xv_get(ip->panel->std_font, FONT_DEFAULT_CHAR_WIDTH);
+    chrht = (int)xv_get(ip->panel->std_font, FONT_DEFAULT_CHAR_HEIGHT);
+    chrwth = (int)xv_get(ip->panel->std_font, FONT_DEFAULT_CHAR_WIDTH);
 #ifdef OW_I18N
     /*  We need column width because column != byte != char */
-    col_width = xv_get(ip->panel->std_font, FONT_COLUMN_WIDTH);
+    col_width = (int)xv_get(ip->panel->std_font, FONT_COLUMN_WIDTH);
 #endif /* OW_I18N */
     if (vertical(dp)) {
 	/* Create the maximum range rect */
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_txt.c xview-3.2p1.4/lib/libxview/panel/p_txt.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_txt.c	2013-01-07 12:36:14.144773000 +0100
+++ xview-3.2p1.4/lib/libxview/panel/p_txt.c	2013-01-07 12:50:48.154120000 +0100
@@ -23,6 +23,7 @@
 #include <xview/pixwin.h>
 #include <xview/font.h>
 #include <xview/sel_svc.h>
+#include <xview/win.h>
 
 #ifdef OW_I18N
 #include <stdlib.h>
@@ -248,7 +249,7 @@
 	return XV_ERROR;
 
     ip->value_rect.r_width = dp->display_width;
-    chrht = xv_get(ip->value_font, FONT_DEFAULT_CHAR_HEIGHT);
+    chrht = (int)xv_get(ip->value_font, FONT_DEFAULT_CHAR_HEIGHT);
     ip->value_rect.r_height = MAX(chrht + BOX_Y, dp->scroll_btn_height);
 
     dp->dnd = xv_create(panel_public, DRAGDROP,
@@ -256,21 +257,21 @@
 #ifdef OW_I18N
 			SEL_DONE_PROC, text_seln_done_proc,
 #endif
-			XV_KEY_DATA, PANEL, panel_public,
-			0);
+			XV_KEY_DATA, (Attr_attribute)PANEL, panel_public,
+			NULL);
 #ifndef OW_I18N
-    dp->dnd_item = xv_create(dp->dnd, SELECTION_ITEM, 0);
+    dp->dnd_item = xv_create(dp->dnd, SELECTION_ITEM, NULL);
 #endif
     dp->drop_site = xv_create(panel_public, DROP_SITE_ITEM,
 			      DROP_SITE_REGION, &ip->value_rect,
-			      0);
+			      NULL);
 
     ip->flags |= WANTS_KEY | WANTS_ISO | WANTS_ADJUST;
 
     /* If the pixmap used to save and restore the pixels underneath the
      * caret hasn't been created yet, then do so now.
      */
-    if (panel->caret_bg_pixmap == NULL) {
+    if (panel->caret_bg_pixmap == (Pixmap)NULL) {
 	DRAWABLE_INFO_MACRO(panel_public, info);
 	panel->caret_bg_pixmap = XCreatePixmap(xv_display(info),
 	    xv_get(xv_get(xv_screen(info), XV_ROOT), XV_XID),
@@ -293,20 +294,20 @@
 	for (i = 0; i < 256; i++)
 	    delim_table[i] = FALSE;
 	for (delims = delim_chars; *delims; delims++)
-	    delim_table[*delims] = TRUE;
+	    delim_table[(int)*delims] = TRUE;
 	delim_init = TRUE;
     }
 
     /* A Text Item is, by default, a First-Class (primary) focus client */
     xv_set(item_public,
 	   PANEL_PAINT, PANEL_NONE,
-	   XV_FOCUS_RANK, XV_FOCUS_PRIMARY,
-	   0);
+	   XV_FOCUS_RANK, (Attr_attribute)XV_FOCUS_PRIMARY,
+	   NULL);
 
     /* The panel now contains (at least one) First-Class (primary)
      * focus client
      */
-    xv_set(panel_public, XV_FOCUS_RANK, XV_FOCUS_PRIMARY, 0);
+    xv_set(panel_public, XV_FOCUS_RANK, (Attr_attribute)XV_FOCUS_PRIMARY, NULL);
 
     return XV_OK;
 }
@@ -361,7 +362,7 @@
 	return result;
 
     for (; *avlist; avlist = attr_next(avlist)) {
-	switch (avlist[0]) {
+	switch ((int)avlist[0]) {
 #ifdef OW_I18N
 	  case PANEL_ITEM_IC_ACTIVE:
 	    if (avlist[1])
@@ -442,7 +443,7 @@
 	  case PANEL_NOTIFY_STRING:
 	    if (dp->terminators)
 		free(dp->terminators);
-	    dp->terminators = (char *) panel_strsave(avlist[1]);
+	    dp->terminators = (char *) panel_strsave((char *)avlist[1]);
 	    break;
 #endif /*OW_I18N*/
 
@@ -534,7 +535,7 @@
 		 */
 		xv_set(panel->sel_owner[PANEL_SEL_PRIMARY],
 		       SEL_OWN, FALSE,
-		       0);
+		       NULL);
 	    }
 	    break;
 
@@ -561,7 +562,7 @@
 		    if (panel->sel_holder[PANEL_SEL_PRIMARY] == ip)
 			xv_set(panel->sel_owner[PANEL_SEL_PRIMARY],
 			       SEL_OWN, FALSE,
-			       0);
+			       NULL);
 
 		    /* Don't let item take drops while read-only! */
 		    xv_set ( dp->drop_site,
@@ -646,13 +647,13 @@
 	ip->value_rect.r_width = dp->display_width;
         if ((ip->value_rect.r_width < 2*dp->scroll_btn_width) && !no_buttons )
 	    ip->value_rect.r_width = 2*dp->scroll_btn_width;
-	chrht = xv_get(ip->value_font, FONT_DEFAULT_CHAR_HEIGHT);
+	chrht = (int)xv_get(ip->value_font, FONT_DEFAULT_CHAR_HEIGHT);
 	ip->value_rect.r_height = MAX(chrht + BOX_Y, dp->scroll_btn_height);
 	ip->rect = panel_enclosing_rect(&ip->label_rect, &ip->value_rect);
 	xv_set(dp->drop_site,
 	       DROP_SITE_DELETE_REGION, NULL,
 	       DROP_SITE_REGION, &ip->value_rect,
-	       0);
+	       NULL);
     }
 
 #ifdef OW_I18N
@@ -666,7 +667,7 @@
 	update_text_rect(ip);
 	panel_select_line(ip, NULL, PANEL_SEL_PRIMARY);
 	dp->delete_pending = TRUE;
-	if (xv_set(panel->sel_owner[PANEL_SEL_PRIMARY], SEL_OWN, TRUE, 0)
+	if (xv_set(panel->sel_owner[PANEL_SEL_PRIMARY], SEL_OWN, TRUE, NULL)
 	    == XV_OK) {
 	    if (panel->sel_holder[PANEL_SEL_PRIMARY])
 		text_seln_dehighlight(panel->sel_holder[PANEL_SEL_PRIMARY],
@@ -703,7 +704,7 @@
     char	    temp_mask[4];
 #endif /* OW_I18N */
 
-    switch (which_attr) {
+    switch ((int)which_attr) {
 #ifdef OW_I18N
       case PANEL_ITEM_IC_ACTIVE:
 	return (Xv_opaque) (ic_active(ip));
@@ -898,7 +899,7 @@
                     if (event_action(event) == ACTION_DRAG_MOVE &&
                         !(retstatus & DRAG_MOVE_FILENAME)) {
 			/* Post delete request back to owner */
-			xv_set(panel->sel_req, SEL_TYPE, panel->atom.delete, 0);
+			xv_set(panel->sel_req, SEL_TYPE, panel->atom.delete, NULL);
 			(void) xv_get(panel->sel_req, SEL_DATA, &length, &format);
 		    } else if (dp->flags & TEXT_SELECTED) {
 			/* ACTION_DRAG_COPY to the same text field:
@@ -933,7 +934,7 @@
 			own_primary_seln =
 			    xv_set(panel->sel_owner[PANEL_SEL_PRIMARY],
 				   SEL_OWN, TRUE,
-				   0) == XV_OK;
+				   NULL) == XV_OK;
 		    if (own_primary_seln) {
 			panel->sel_holder[PANEL_SEL_PRIMARY] = ip;
 			if (dp->dnd_sel_last > dp->last_char) {
@@ -970,14 +971,14 @@
 		win_set_kbd_focus(PANEL_PUBLIC(panel),
 				  (XID) xv_get(event_window(event), XV_XID));
 	} else {
-	    frame = xv_get(PANEL_PUBLIC(panel), WIN_FRAME);
+	    frame = (Frame)xv_get(PANEL_PUBLIC(panel), WIN_FRAME);
 	    notice = xv_create(frame, NOTICE,
 		NOTICE_MESSAGE_STRINGS,
 		    XV_MSG("Drag and Drop failed:"),
 		    XV_MSG("Unable to decode Drag and Drop message"),
-		    0,
+		    NULL,
 		XV_SHOW, TRUE,
-		0);
+		NULL);
 	    xv_destroy(notice);
 	}
 	panel->current = NULL;
@@ -1357,12 +1358,12 @@
 		    cursor_drag_type = CURSOR_DUPLICATE;
 		    xv_set(dp->dnd,
 			   DND_TYPE, DND_COPY,
-			   0);
+			   NULL);
 		} else {
 		    cursor_drag_type = CURSOR_MOVE;
 		    xv_set(dp->dnd,
 			   DND_TYPE, DND_MOVE,
-			   0);
+			   NULL);
 		}
 #ifdef OW_I18N
 		save_char = dp->value_wc[dp->seln_last[PANEL_SEL_PRIMARY]+1];
@@ -1372,17 +1373,17 @@
 			&dp->value_wc[dp->seln_first[PANEL_SEL_PRIMARY]],
 		    CURSOR_DRAG_STATE, CURSOR_NEUTRAL,
 		    CURSOR_DRAG_TYPE, cursor_drag_type,
-		    0);
+		    NULL);
 		if (neutral_cursor)
 		    xv_set(dp->dnd,
 			   DND_CURSOR, neutral_cursor,
-			   0);
+			   NULL);
 		accept_cursor = xv_create(PANEL_PUBLIC(panel), CURSOR,
 		    CURSOR_STRING_WCS,
 			&dp->value_wc[dp->seln_first[PANEL_SEL_PRIMARY]],
 		    CURSOR_DRAG_STATE, CURSOR_ACCEPT,
 		    CURSOR_DRAG_TYPE, cursor_drag_type,
-		    0);
+		    NULL);
 #else
 		save_char = dp->value[dp->seln_last[PANEL_SEL_PRIMARY]+1];
 		dp->value[dp->seln_last[PANEL_SEL_PRIMARY]+1] = 0;
@@ -1391,22 +1392,22 @@
 			&dp->value[dp->seln_first[PANEL_SEL_PRIMARY]],
 		    CURSOR_DRAG_STATE, CURSOR_NEUTRAL,
 		    CURSOR_DRAG_TYPE, cursor_drag_type,
-		    0);
+		    NULL);
 		if (neutral_cursor)
 		    xv_set(dp->dnd,
 			   DND_CURSOR, neutral_cursor,
-			   0);
+			   NULL);
 		accept_cursor = xv_create(PANEL_PUBLIC(panel), CURSOR,
 		    CURSOR_STRING,
 			&dp->value[dp->seln_first[PANEL_SEL_PRIMARY]],
 		    CURSOR_DRAG_STATE, CURSOR_ACCEPT,
 		    CURSOR_DRAG_TYPE, cursor_drag_type,
-		    0);
+		    NULL);
 #endif /* OW_I18N */
 		if (accept_cursor)
 		    xv_set(dp->dnd,
 			   DND_ACCEPT_CURSOR, accept_cursor,
-			   0);
+			   NULL);
 #ifdef OW_I18N
 		dp->value_wc[dp->seln_last[PANEL_SEL_PRIMARY]+1] = save_char;
 #else
@@ -1417,7 +1418,7 @@
 		       SEL_LENGTH,
 			   dp->seln_last[PANEL_SEL_PRIMARY] -
 			   dp->seln_first[PANEL_SEL_PRIMARY] + 1,
-		       0);
+		       NULL);
 #endif /* OW_I18N */
 		status = dnd_send_drop(dp->dnd);
 		if (neutral_cursor)
@@ -1452,14 +1453,14 @@
 		    break;
 		}
 		if (error_msg) {
-		    frame = xv_get(PANEL_PUBLIC(panel), WIN_FRAME);
+		    frame = (Frame)xv_get(PANEL_PUBLIC(panel), WIN_FRAME);
 		    notice = xv_create(frame, NOTICE,
 			NOTICE_MESSAGE_STRINGS,
 			    XV_MSG("Drag and Drop failed:"),
 			    error_msg,
-			    0,
+			    NULL,
 			XV_SHOW, TRUE,
-			0);
+			NULL);
 		    xv_destroy(notice);
 		}
 		panel->current = NULL;
@@ -1616,9 +1617,9 @@
 	    }
 #else
 	    xv_set(panel->sel_item[sel_rank],
-		   SEL_DATA, 0,
-		   SEL_LENGTH, 0,
-		   0);
+		   SEL_DATA, 0L,
+		   SEL_LENGTH, 0L,
+		   NULL);
 #endif
 	}
     }
@@ -1626,7 +1627,7 @@
     /* Make this item the selection.  Acquire the {PRIMARY,SECONDARY}
      * selection for this ip.
      */
-    if (xv_set(panel->sel_owner[sel_rank], SEL_OWN, TRUE, 0) == XV_OK) {
+    if (xv_set(panel->sel_owner[sel_rank], SEL_OWN, TRUE, NULL) == XV_OK) {
 	panel->sel_holder[sel_rank] = ip;
     }
 
@@ -1680,7 +1681,7 @@
 	     sel_rank <= PANEL_SEL_SECONDARY;
 	     sel_rank++) {
 	    if (panel->sel_holder[sel_rank] == ip)
-		xv_set(panel->sel_owner[sel_rank], SEL_OWN, FALSE, 0);
+		xv_set(panel->sel_owner[sel_rank], SEL_OWN, FALSE, NULL);
 	}
     }
 }
@@ -2078,7 +2079,7 @@
     /* Cancel any selections this item owns. */
     for (i = 0; i < NBR_PANEL_SELECTIONS; i++) {
 	if (panel->sel_holder[i] == ip)
-	    xv_set(panel->sel_owner[i], SEL_OWN, FALSE, 0);
+	    xv_set(panel->sel_owner[i], SEL_OWN, FALSE, NULL);
     }
 	       
     /*
@@ -2163,7 +2164,7 @@
     xv_set(dp->drop_site,
 	   DROP_SITE_DELETE_REGION, NULL,
 	   DROP_SITE_REGION, &ip->value_rect,
-	   0);
+	   NULL);
 }
 
 
@@ -2363,7 +2364,7 @@
 
     if ((on && (panel->caret_on || (dp->flags & TEXT_SELECTED))) ||
 	(!on && !panel->caret_on) ||
-	panel->caret == NULL)
+	panel->caret == '\0')
 	return;
     panel->caret_on = on;
 
@@ -2401,7 +2402,7 @@
 		XChangeGC(display, gc_list[SCREEN_GLYPH_GC],
 			  GCForeground, &gc_values);
 		str[0] = panel->caret;
-		str[1] = NULL;
+		str[1] = '\0';
 		XDrawString(display, pw_xid, gc_list[SCREEN_GLYPH_GC],
 			    x, y, str, 1);
 #ifdef OW_I18N
@@ -3080,7 +3081,7 @@
 text_alarm(ip)
     Item_info	   *ip;
 {
-    Xv_Drawable_info *info;
+    /*Xv_Drawable_info *info;*/
     struct timeval  wait;
 
     wait.tv_sec = wait.tv_usec = 0;
@@ -3106,7 +3107,7 @@
 #endif /* OW_I18N */
 
 #ifdef OW_I18N
-    panel_public = xv_get(sel_own, XV_KEY_DATA, PANEL);
+    panel_public = (Panel)xv_get(sel_own, XV_KEY_DATA, (Attr_attribute)PANEL);
     panel = PANEL_PRIVATE(panel_public);
     rank_atom = (Atom) xv_get(sel_own, SEL_RANK);
     for (rank_index = PANEL_SEL_PRIMARY; rank_index < NBR_PANEL_SELECTIONS;
@@ -3193,12 +3194,12 @@
     } else if (*type == panel->atom.selection_end) {
 
 	/* Lose the Secondary Selection */
-	xv_set(sel_own, SEL_OWN, FALSE, 0);
+	xv_set(sel_own, SEL_OWN, FALSE, NULL);
 
     } else if (*type == panel->atom.seln_yield) {
 
 	/* Lose the Secondary Selection */
-	xv_set(sel_own, SEL_OWN, FALSE, 0);
+	xv_set(sel_own, SEL_OWN, FALSE, NULL);
 
 	if (dp == NULL)
 	    goto Done;
@@ -3271,7 +3272,7 @@
 			    format);
 
 #else /* OW_I18N */
-    panel = PANEL_PRIVATE(xv_get(sel_own, XV_KEY_DATA, PANEL));
+    panel = PANEL_PRIVATE(xv_get(sel_own, XV_KEY_DATA, (Attr_attribute)PANEL));
     rank_atom = (Atom) xv_get(sel_own, SEL_RANK);
     if (*type == panel->atom.delete) {
 
@@ -3285,12 +3286,12 @@
     } else if (*type == panel->atom.selection_end) {
 
 	/* Lose the Secondary Selection */
-	xv_set(sel_own, SEL_OWN, FALSE, 0);
+	xv_set(sel_own, SEL_OWN, FALSE, NULL);
 
     } else if (*type == panel->atom.seln_yield) {
 
 	/* Lose the Secondary Selection */
-	xv_set(sel_own, SEL_OWN, FALSE, 0);
+	xv_set(sel_own, SEL_OWN, FALSE, NULL);
         if (rank_atom == panel->atom.secondary)
             rank_index = PANEL_SEL_SECONDARY;
         else
@@ -3330,7 +3331,7 @@
 #endif /* OW_I18N */
 Done:
     *type = panel->atom.null;
-    *data = NULL;
+    *data = XV_NULL;
     *length = 0;
     *format = 32;
     return TRUE;
@@ -3346,7 +3347,7 @@
     Atom	    rank_atom;
     int		    rank_index;
 
-    panel = PANEL_PRIVATE(xv_get(sel_owner, XV_KEY_DATA, PANEL));
+    panel = PANEL_PRIVATE(xv_get(sel_owner, XV_KEY_DATA, (Attr_attribute)PANEL));
     rank_atom = (Atom) xv_get(sel_owner, SEL_RANK);
     for (rank_index = 0; rank_index < NBR_PANEL_SELECTIONS; rank_index++) {
 	if (rank_atom == panel->sel_rank[rank_index])
@@ -3631,9 +3632,9 @@
 #else
     /* BR# 1073493 */
     xv_set(ip->panel->sel_item[rank],
-        SEL_DATA, 0,
-        SEL_LENGTH, 0,
-        0);
+        SEL_DATA, 0L,
+        SEL_LENGTH, 0L,
+        NULL);
 #endif
 
     /* Repaint the value */
@@ -3675,7 +3676,7 @@
     if (data == NULL)
 	return;
 
-    panel = PANEL_PRIVATE(xv_get(sel_own, XV_KEY_DATA, PANEL));
+    panel = PANEL_PRIVATE(xv_get(sel_own, XV_KEY_DATA, (Attr_attribute)PANEL));
     if (target == XA_STRING) {
 	xv_free((char *) data);
 
@@ -3794,13 +3795,13 @@
 	xv_create(panel_public, SELECTION_OWNER,
 		  SEL_CONVERT_PROC, text_convert_proc,
 	          SEL_LOSE_PROC, text_lose_proc,
-		  XV_KEY_DATA, PANEL, panel_public,
-		  0);
+		  XV_KEY_DATA, (Attr_attribute)PANEL, panel_public,
+		  NULL);
     panel->sel_rank[PANEL_SEL_PRIMARY] =
 	xv_get(panel->sel_owner[PANEL_SEL_PRIMARY], SEL_RANK);
 #ifndef OW_I18N
     panel->sel_item[PANEL_SEL_PRIMARY] =
-	xv_create(panel->sel_owner[PANEL_SEL_PRIMARY], SELECTION_ITEM, 0);
+	xv_create(panel->sel_owner[PANEL_SEL_PRIMARY], SELECTION_ITEM, NULL);
 #endif
 
     panel->sel_owner[PANEL_SEL_SECONDARY] =
@@ -3811,13 +3812,13 @@
 		  SEL_DONE_PROC, text_seln_done_proc,
 #endif
 		  SEL_RANK, panel->atom.secondary,
-		  XV_KEY_DATA, PANEL, panel_public,
-		  0);
+		  XV_KEY_DATA, (Attr_attribute)PANEL, panel_public,
+		  NULL);
     panel->sel_rank[PANEL_SEL_SECONDARY] =
 	xv_get(panel->sel_owner[PANEL_SEL_SECONDARY], SEL_RANK);
 #ifndef OW_I18N
     panel->sel_item[PANEL_SEL_SECONDARY] =
-	xv_create(panel->sel_owner[PANEL_SEL_SECONDARY], SELECTION_ITEM, 0);
+	xv_create(panel->sel_owner[PANEL_SEL_SECONDARY], SELECTION_ITEM, NULL);
 #endif
 
     panel->sel_owner[PANEL_SEL_CLIPBOARD] =
@@ -3828,16 +3829,16 @@
 		  SEL_DONE_PROC, text_seln_done_proc,
 #endif
 		  SEL_RANK_NAME, "CLIPBOARD",
-		  XV_KEY_DATA, PANEL, panel_public,
-		  0);
+		  XV_KEY_DATA, (Attr_attribute)PANEL, panel_public,
+		  NULL);
     panel->sel_rank[PANEL_SEL_CLIPBOARD] =
 	xv_get(panel->sel_owner[PANEL_SEL_CLIPBOARD], SEL_RANK);
 #ifndef OW_I18N
     panel->sel_item[PANEL_SEL_CLIPBOARD] =
-	xv_create(panel->sel_owner[PANEL_SEL_CLIPBOARD], SELECTION_ITEM, 0);
+	xv_create(panel->sel_owner[PANEL_SEL_CLIPBOARD], SELECTION_ITEM, NULL);
 #endif
 
-    panel->sel_req = xv_create(panel_public, SELECTION_REQUESTOR, 0);
+    panel->sel_req = xv_create(panel_public, SELECTION_REQUESTOR, NULL);
 }
 
 
@@ -3856,7 +3857,7 @@
 {
     if (xv_set(panel->sel_owner[PANEL_SEL_CLIPBOARD],
 	       SEL_OWN, TRUE,
-	       0) == XV_OK) {
+	       NULL) == XV_OK) {
 #ifdef OW_I18N
 	wchar_t		*last;
 	wchar_t		 saved_char;
@@ -3889,7 +3890,7 @@
 	       SEL_LENGTH,
 		   xv_get(panel->sel_item[PANEL_SEL_PRIMARY],
 			  SEL_LENGTH),
-	       0);
+	       NULL);
 #endif /* OW_I18N */
 	panel->sel_holder[PANEL_SEL_CLIPBOARD] = ip;
     }
@@ -3906,7 +3907,7 @@
     xv_set(panel->sel_item[rank],
 	   SEL_DATA, &dp->value[dp->seln_first[rank]],
 	   SEL_LENGTH, dp->seln_last[rank] - dp->seln_first[rank] + 1,
-	   0);
+	   NULL);
 }
 #endif /* ! OW_I18N */
 
@@ -4455,13 +4456,13 @@
 		rank = PANEL_SEL_SECONDARY;
 		xv_set(panel->sel_req,
 		       SEL_RANK, panel->atom.secondary,
-		       0);
+		       NULL);
 	    } else if (action == ACTION_PASTE) {
 		/* Get the contents of the Clipboard Selection */
 		rank = PANEL_SEL_CLIPBOARD;
 		xv_set(panel->sel_req,
 		       SEL_RANK_NAME, "CLIPBOARD",
-		       0);
+		       NULL);
 	    } else {
 		/* Primary CUT: this has already been processed in
 		 * text_accept_key(), so just return.
@@ -4475,7 +4476,7 @@
 	}
 	dp->flags &= ~SELECTION_REQUEST_FAILED;  /* assume we succeed */
 	/* First try to convert the Selection Type "FILE_NAME" */
-	xv_set(panel->sel_req, SEL_TYPE_NAME, "FILE_NAME", 0);
+	xv_set(panel->sel_req, SEL_TYPE_NAME, "FILE_NAME", NULL);
 	
 	/*  Data came in as compound text and sel_length is
 	 *  a byte count
@@ -4517,13 +4518,13 @@
 	     * from old selection pkgs.  But we have no use of the
 	     * result.
 	     */
-	    xv_set(panel->sel_req, SEL_TYPE, panel->atom.length_chars, 0);
+	    xv_set(panel->sel_req, SEL_TYPE, panel->atom.length_chars, NULL);
 	    sel_mbsorcts = (char *) xv_get(panel->sel_req, SEL_DATA,
 					   &sel_length, &sel_format);
 	    if (sel_length != SEL_ERROR)
 		xv_free(sel_mbsorcts);
 
-	    xv_set(panel->sel_req, SEL_TYPE, panel->atom.compound_text, 0);
+	    xv_set(panel->sel_req, SEL_TYPE, panel->atom.compound_text, NULL);
 	    sel_mbsorcts = (char *) xv_get(panel->sel_req, SEL_DATA,
 					  &sel_length, &sel_format);
 	    if (sel_length != SEL_ERROR) {
@@ -4559,7 +4560,7 @@
 	if (sel_length == SEL_ERROR) {
 #endif /* OW_I18N */
 	    /* Data type is ASCII string */
-	    xv_set(panel->sel_req, SEL_TYPE, XA_STRING, 0);
+	    xv_set(panel->sel_req, SEL_TYPE, XA_STRING, NULL);
 	    /* Get the contents of the appropriate selection.
 	     * Note: the returned string is not NULL-terminated.
 	     * 'sel_length' will indicate the string's length.
@@ -4587,11 +4588,11 @@
 		if (rank != PANEL_SEL_PRIMARY) {
 		    char    buf[64];
 		    sprintf(buf, XV_MSG("Unable to get contents of %s selection"),
-			    xv_get(panel->sel_req, SEL_RANK_NAME));
-		    xv_error(NULL,
+			    (char *)xv_get(panel->sel_req, SEL_RANK_NAME));
+		    xv_error((Xv_object)NULL,
 			     ERROR_STRING, buf,
 			     ERROR_PKG, PANEL,
-			     0);
+			     NULL);
 		    text_alarm(ip);
 		} else {
 		    Frame frame = xv_get(PANEL_PUBLIC(panel), WIN_FRAME);
@@ -4599,9 +4600,9 @@
 			NOTICE_MESSAGE_STRINGS,
 			    XV_MSG("Drag and Drop failed:"),
 			    XV_MSG("Unable to get contents of selection"),
-			    0,
+			    NULL,
 			XV_SHOW, TRUE,
-			0);
+			NULL);
 		    xv_destroy(notice);
 		}
 		return;
@@ -4759,15 +4760,15 @@
 	    long   length;
 	    if (action == ACTION_CUT) {
 		/* Post delete request back to owner */
-		xv_set(panel->sel_req, SEL_TYPE, panel->atom.delete, 0);
+		xv_set(panel->sel_req, SEL_TYPE, panel->atom.delete, NULL);
 		(void) xv_get(panel->sel_req, SEL_DATA, &length, &format);
 	    }
 	    /* We're done with the secondary selection */
-	    xv_set(panel->sel_req, SEL_TYPE, panel->atom.selection_end, 0);
+	    xv_set(panel->sel_req, SEL_TYPE, panel->atom.selection_end, NULL);
 	    (void) xv_get(panel->sel_req, SEL_DATA, &length, &format);
 	    if (length == SEL_ERROR) {
 		/* SunView1 secondary selection: post a SELN_YIELD request */
-		xv_set(panel->sel_req, SEL_TYPE, panel->atom.seln_yield, 0);
+		xv_set(panel->sel_req, SEL_TYPE, panel->atom.seln_yield, NULL);
 		(void) xv_get(panel->sel_req, SEL_DATA, &length, &format);
 	    }
 	}
@@ -5156,7 +5157,7 @@
 	dp->delete_pending = TRUE;
 	dp->select_click_cnt[PANEL_SEL_PRIMARY] = 1;
 	/* Acquire the Primary Selection and highlight the text */
-	if (xv_set(panel->sel_owner[PANEL_SEL_PRIMARY], SEL_OWN, TRUE, 0)
+	if (xv_set(panel->sel_owner[PANEL_SEL_PRIMARY], SEL_OWN, TRUE, NULL)
 	    == XV_OK) {
 	    if (panel->sel_holder[PANEL_SEL_PRIMARY])
 		text_seln_dehighlight(panel->sel_holder[PANEL_SEL_PRIMARY],
@@ -5691,6 +5692,7 @@
 ml_panel_moded_interm(ip, left, str, attr)
     Item_info		*ip;
     coord		 left;
+    /* FIXME: shouldn't this be char* on non-OW_I18N? */
     wchar_t		*str; 
     XIMFeedback  	*attr;
 
@@ -5715,7 +5717,7 @@
     y = rect_bottom(&ip->value_rect);
     count = 0;
     while (count < interm_len) {
-	switch(attr[count]) {
+	switch((int)attr[count]) {
 	case XIMReverse:
 	    orig_count = count;
 	    while ((count < interm_len) && (attr[count] == XIMReverse))
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/p_utl.c xview-3.2p1.4/lib/libxview/panel/p_utl.c
--- xview-3.2p1.4.orig/lib/libxview/panel/p_utl.c	2013-01-07 12:36:13.948363000 +0100
+++ xview-3.2p1.4/lib/libxview/panel/p_utl.c	2013-01-07 12:50:48.276056000 +0100
@@ -26,6 +26,7 @@
 #include <xview/xv_xrect.h>
 #include <xview_private/draw_impl.h>
 #include <xview_private/pw_impl.h>
+#include <string.h>
 
 extern struct pr_size 	 xv_pf_textwidth();
 Xv_private Xv_xrectlist *screen_get_clip_rects();
@@ -76,13 +77,13 @@
     if (rect.r_top + rect.r_height > v_end) {
 	v_end = rect.r_top + rect.r_height + panel->extra_height;
 	(void) xv_set(PANEL_PUBLIC(panel),
-		      CANVAS_MIN_PAINT_HEIGHT, v_end, 0);
+		      CANVAS_MIN_PAINT_HEIGHT, v_end, NULL);
     }
     h_end = panel_width(panel);
     if (rect.r_left + rect.r_width > h_end) {
 	h_end = rect.r_left + rect.r_width + panel->extra_width;
 	(void) xv_set(PANEL_PUBLIC(panel),
-		      CANVAS_MIN_PAINT_WIDTH, h_end, 0);
+		      CANVAS_MIN_PAINT_WIDTH, h_end, NULL);
     }
 }
 
@@ -91,50 +92,50 @@
 /* font char/pixel conversion routines                                      */
 /****************************************************************************/
 
-Pkg_private
+Pkg_private int
 panel_col_to_x(font, col)
     Xv_Font         font;
     int             col;
 {
 #ifdef OW_I18N
-    int		chrwth = xv_get(font, FONT_COLUMN_WIDTH);
+    int		chrwth = (int)xv_get(font, FONT_COLUMN_WIDTH);
 #else
-    int		chrwth = xv_get(font, FONT_DEFAULT_CHAR_WIDTH);
+    int		chrwth = (int)xv_get(font, FONT_DEFAULT_CHAR_WIDTH);
 #endif /* OW_I18N */
     return (col * chrwth);
 }
 
 
-Pkg_private
+Pkg_private int
 panel_row_to_y(font, line)
     Xv_Font         font;
     int             line;
 {
-    int		chrht = xv_get(font, FONT_DEFAULT_CHAR_HEIGHT);
+    int		chrht = (int)xv_get(font, FONT_DEFAULT_CHAR_HEIGHT);
     return (line * chrht);
 }
 
 
-Pkg_private
+Pkg_private int
 panel_x_to_col(font, x)
     Xv_Font         font;
     int             x;
 {
 #ifdef OW_I18N
-    int		chrwth = xv_get(font, FONT_COLUMN_WIDTH);
+    int		chrwth = (int)xv_get(font, FONT_COLUMN_WIDTH);
 #else
-    int		chrwth = xv_get(font, FONT_DEFAULT_CHAR_WIDTH);
+    int		chrwth = (int)xv_get(font, FONT_DEFAULT_CHAR_WIDTH);
 #endif /* OW_I18N */
     return (x / chrwth);
 }
 
 
-Pkg_private
+Pkg_private int
 panel_y_to_row(font, y)
     Xv_Font         font;
     int             y;
 {
-    int		chrht = xv_get(font, FONT_DEFAULT_CHAR_HEIGHT);
+    int		chrht = (int)xv_get(font, FONT_DEFAULT_CHAR_HEIGHT);
     return (y / chrht);
 }
 
@@ -239,7 +240,7 @@
 		     ERROR_STRING, 
 			XV_MSG("Invalid Server Image specified"),
 		     ERROR_PKG, PANEL,
-		     0);
+		     NULL);
 	image_set_svrim(dest, (Server_image) value);
 	size = ((Pixrect *) value)->pr_size;
 	break;
@@ -253,11 +254,11 @@
     Xv_Font         font;
 {
     if (image_font(image)) {
-        (void) xv_set(image_font(image), XV_DECREMENT_REF_COUNT, 0);
+        (void) xv_set(image_font(image), XV_DECREMENT_REF_COUNT, NULL);
     }
     image_font(image) = font;
     if (font) {
-        (void) xv_set(font, XV_INCREMENT_REF_COUNT, 0);
+        (void) xv_set(font, XV_INCREMENT_REF_COUNT, NULL);
     }
 }
  
@@ -530,7 +531,7 @@
     struct pr_size  size;
     CHAR	   *str;
 
-    chrht = xv_get(image_font(image), FONT_DEFAULT_CHAR_HEIGHT);
+    chrht = (int)xv_get(image_font(image), FONT_DEFAULT_CHAR_HEIGHT);
     PANEL_EACH_PAINT_WINDOW(panel, pw)
 	switch (image->im_type) {
 	  case PIT_STRING:
@@ -678,7 +679,7 @@
     screen = xv_screen(info);
     gc_list = (GC *)xv_get(screen, SCREEN_OLGC_LIST, pw);
     if (color_index >= 0)
-	gc_value.foreground = xv_get(xv_cms(info), CMS_PIXEL, color_index);
+	gc_value.foreground = (unsigned int)xv_get(xv_cms(info), CMS_PIXEL, color_index);
     else
 	gc_value.foreground = xv_fg(info);
     gc_value.background = xv_bg(info);
@@ -781,13 +782,14 @@
 #endif /* OW_I18N */
 
 /*VARARGS*/
+int
 panel_nullproc()
 {
     return 0;
 }
 
 
-Pkg_private
+Pkg_private void
 panel_free_choices(choices, first, last)
     Panel_image    *choices;
     int             first, last;
@@ -856,7 +858,7 @@
     screen = xv_screen(info);
     gc_list = (GC *)xv_get(screen, SCREEN_OLGC_LIST, pw);
     if (color_index >= 0)
-	gc_value.foreground = xv_get(xv_cms(info), CMS_PIXEL, color_index);
+	gc_value.foreground = (unsigned int)xv_get(xv_cms(info), CMS_PIXEL, color_index);
     else
 	gc_value.foreground = xv_fg(info);
     gc_value.background = xv_bg(info);
@@ -911,7 +913,7 @@
     screen = xv_screen(pw_info);
     gc_list = (GC *)xv_get(screen, SCREEN_OLGC_LIST, pw);
     if (color_index >= 0)
-	gc_value.foreground = xv_get(xv_cms(pw_info), CMS_PIXEL, color_index);
+	gc_value.foreground = (unsigned int)xv_get(xv_cms(pw_info), CMS_PIXEL, color_index);
     else
 	gc_value.foreground = xv_fg(pw_info);
     gc_value.background = xv_bg(pw_info);
@@ -966,7 +968,7 @@
     Item_info      *ip;
 {
     if (ip == NULL || hidden(ip))
-	return NULL;
+	return (Panel_item)NULL;
 
     panel_yield_kbd_focus(panel);
     panel->kbd_focus_item = ip;
@@ -982,7 +984,7 @@
     Panel_info     *panel = PANEL_PRIVATE(panel_public);
 
     if (!panel->kbd_focus_item)
-	return (NULL);
+	return (Panel_item)NULL;
 
     (void) panel_set_kbd_focus(panel, panel_next_kbd_focus(panel, TRUE));
 
@@ -997,7 +999,7 @@
     Panel_info     *panel = PANEL_PRIVATE(panel_public);
 
     if (!panel->kbd_focus_item)
-	return (NULL);
+	return (Panel_item)NULL;
 
     (void) panel_set_kbd_focus(panel, panel_previous_kbd_focus(panel, TRUE));
 
@@ -1076,7 +1078,7 @@
 
     if (ip->ops.panel_op_accept_kbd_focus)
 	(*ip->ops.panel_op_accept_kbd_focus) (ITEM_PUBLIC(ip));
-    if (xv_get(ITEM_PUBLIC(ip), XV_FOCUS_RANK) == XV_FOCUS_PRIMARY)
+    if ((int)xv_get(ITEM_PUBLIC(ip), XV_FOCUS_RANK) == XV_FOCUS_PRIMARY)
 	panel->primary_focus_item = ip;
 }
 
@@ -1224,31 +1226,31 @@
     if (attr) {
 	if (panel->status.nonstd_cursor)
 	    return;	/* previous cursor not restored yet */
-	panel->cursor = xv_get(window, WIN_CURSOR);
-	cursor = xv_get(xv_screen(info), XV_KEY_DATA, attr);
+	panel->cursor = (Cursor)xv_get(window, WIN_CURSOR);
+	cursor = (Cursor)xv_get(xv_screen(info), XV_KEY_DATA, attr);
 	if (!cursor) {
 	    /* Note: put a switch statement here to handle more cursors */
-	    image = xv_create(xv_screen(info), SERVER_IMAGE,
+	    image = (Server_image)xv_create(xv_screen(info), SERVER_IMAGE,
 			      XV_HEIGHT, 16,
 			      XV_WIDTH, 16,
 			      SERVER_IMAGE_BITS, qmark_cursor_data,
-			      0);
-	    cursor = xv_create(xv_root(info), CURSOR,
+			      NULL);
+	    cursor = (Cursor)xv_create(xv_root(info), CURSOR,
 			       CURSOR_IMAGE, image,
 			       CURSOR_XHOT, 6,
 			       CURSOR_YHOT, 12,
-			       0);
-	    xv_set(xv_screen(info), XV_KEY_DATA, attr, cursor, 0);
+			       NULL);
+	    xv_set(xv_screen(info), XV_KEY_DATA, attr, (Attr_attribute)cursor, NULL);
 	}
 	if (cursor) {
-	    xv_set(window, WIN_CURSOR, cursor, 0);
+	    xv_set(window, WIN_CURSOR, cursor, NULL);
 	    panel->status.nonstd_cursor = TRUE;
 	}
     } else {
 	/* Restore basic pointer */
 	if (!panel->status.nonstd_cursor)
 	    return;	/* cursor is already the basic pointer */
-	xv_set(window, WIN_CURSOR, panel->cursor, 0);
+	xv_set(window, WIN_CURSOR, panel->cursor, NULL);
 	panel->status.nonstd_cursor = FALSE;
     }
 }
@@ -1339,7 +1341,7 @@
 		max_view_start = (int) xv_get(sb, SCROLLBAR_OBJECT_LENGTH) -
 		    view_length;
 		view_start = MIN(y, max_view_start);
-		xv_set(sb, SCROLLBAR_VIEW_START, view_start, 0);
+		xv_set(sb, SCROLLBAR_VIEW_START, view_start, NULL);
 	    }
 	}
 	sb = xv_get(PANEL_PUBLIC(ip->panel), OPENWIN_HORIZONTAL_SCROLLBAR,
@@ -1351,7 +1353,7 @@
 		max_view_start = (int) xv_get(sb, SCROLLBAR_OBJECT_LENGTH) -
 		    view_length;
 		view_start = MIN(x, max_view_start);
-		xv_set(sb, SCROLLBAR_VIEW_START, view_start, 0);
+		xv_set(sb, SCROLLBAR_VIEW_START, view_start, NULL);
 	    }
 	}
     }
@@ -1361,7 +1363,7 @@
 	   XV_X, x,
 	   XV_Y, y,
 	   XV_SHOW, TRUE,
-	   0);
+	   NULL);
 }
 
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/panel.c xview-3.2p1.4/lib/libxview/panel/panel.c
--- xview-3.2p1.4.orig/lib/libxview/panel/panel.c	2013-01-07 12:36:14.657698000 +0100
+++ xview-3.2p1.4/lib/libxview/panel/panel.c	2013-01-07 12:50:48.325339000 +0100
@@ -26,7 +26,8 @@
 Pkg_private int panel_view_init();
 Pkg_private int panel_destroy();
 
-static int      panel_layout();
+static int panel_layout();
+static int panel_unregister_view();
 
 #ifndef __linux__
 Xv_private_data Defaults_pairs xv_kbd_cmds_value_pairs[4];
@@ -145,7 +146,7 @@
 		  WIN_ROW_GAP, ITEM_Y_GAP,
 		  WIN_LAYOUT_PROC, panel_layout,
 		  XV_HELP_DATA, "xview:panel",
-		  0);
+		  NULL);
 
     if (xv_get(panel_public, XV_IS_SUBTYPE_OF, CANVAS)) {
 	(void) xv_set(panel_public,
@@ -157,11 +158,11 @@
 		      CANVAS_REPAINT_PROC, panel_redisplay,
 		      CANVAS_RETAINED, FALSE,
 		      OPENWIN_SHOW_BORDERS, FALSE,
-		      XV_FOCUS_RANK, XV_FOCUS_SECONDARY,
-		      0);
+		      XV_FOCUS_RANK, (Attr_attribute)XV_FOCUS_SECONDARY,
+		      NULL);
 	win_set_no_focus(panel_public, TRUE);	/* panel sets own focus */
     } else
-	panel_view_init(panel_public, XV_NULL, 0);
+	panel_view_init(panel_public, XV_NULL, NULL);
 
 #ifdef OW_I18N
 
@@ -222,7 +223,7 @@
 	/* unlink layout procs */
 	xv_set(panel_public,
 	       WIN_LAYOUT_PROC, panel->layout_proc,
-	       0);
+	       NULL);
 	panel_itimer_set(panel_public, NOTIFY_NO_ITIMER);
 	panel->status.destroying = TRUE;
     }
@@ -234,8 +235,8 @@
     frame = xv_get(panel_public, WIN_FRAME);
     focus_win = xv_get(frame, FRAME_FOCUS_WIN);
     if (xv_get(focus_win, WIN_PARENT) == panel_public) {
-	xv_set(frame, FRAME_NEXT_PANE, 0);
-	xv_set(focus_win, WIN_PARENT, frame, 0);
+	xv_set(frame, FRAME_NEXT_PANE, NULL);
+	xv_set(focus_win, WIN_PARENT, frame, NULL);
     }
 
     if (status == DESTROY_CLEANUP) {
@@ -294,7 +295,7 @@
     Xv_Window       child;
     Window_layout_op op;
 /* Alpha compatibility, mbuck@debian.org, FIXME: I don't understand this */
-#if defined(__alpha)
+#if defined(__alpha) || defined(__x86_64__)
     unsigned long   d1, d2, d3, d4, d5;
 #else
     int             d1, d2, d3, d4, d5;
@@ -348,11 +349,11 @@
     win_set_no_focus(pw, panel->kbd_focus_item == NULL);
 
     (void) xv_set(pw,
-		  XV_KEY_DATA, panel_context_key, panel,
-		  0);
+		  XV_KEY_DATA, (Attr_attribute)panel_context_key, panel,
+		  NULL);
 }
 
-static
+static int
 panel_unregister_view(panel, view)
     Panel_info     *panel;
     Xv_Window       view;
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/panel.h xview-3.2p1.4/lib/libxview/panel/panel.h
--- xview-3.2p1.4.orig/lib/libxview/panel/panel.h	1993-06-29 07:17:02.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/panel/panel.h	2013-01-07 12:50:48.352143000 +0100
@@ -61,10 +61,10 @@
  * Various utility macros 
  */
 #define	panel_get_value(ip) 		xv_get((ip), PANEL_VALUE)
-#define	panel_set_value(ip, val)	xv_set((ip), PANEL_VALUE, (val), 0)
+#define	panel_set_value(ip, val)	xv_set((ip), PANEL_VALUE, (Attr_attribute) (val), NULL)
 #ifdef OW_I18N
 #define panel_get_value_wcs(ip)         xv_get((ip), PANEL_VALUE_WCS)
-#define panel_set_value_wcs(ip, val)    xv_set((ip), PANEL_VALUE_WCS, (val), 0)
+#define panel_set_value_wcs(ip, val)    xv_set((ip), PANEL_VALUE_WCS, (Attr_attribute) (val), NULL)
 #endif  /* OW_I18N */
 
 /* Note: In PANEL_EACH_ITEM, we need "_next" since the current item
@@ -265,7 +265,12 @@
 	 * Panel_numeric_text_item, Panel_slider_item and Panel_text_item
 	 * attributes.
 	 */
+#if defined(__x86_64__) || defined(__ia64__) || defined(_XV_API_BROKEN_64BIT)
+	/* Watch it! PANEL_VALUE can be INT or PTR or whatever */
+	PANEL_VALUE		= PANEL_ATTR(ATTR_OPAQUE, 		 180),
+#else
 	PANEL_VALUE		= PANEL_ATTR(ATTR_INT, 			 180),
+#endif	
 
 	/* Panel_choice_item and Panel_list_item attributes */
 	PANEL_CHOOSE_NONE	= PANEL_ATTR(ATTR_BOOLEAN,		  33),
@@ -408,7 +413,11 @@
 	PANEL_CHOICE_STRING_WCS		= PANEL_ATTR(PANEL_INDEX_STRING,          23),
 	PANEL_CHOICE_STRINGS_WCS	= 
 			PANEL_ATTR(ATTR_LIST_INLINE(ATTR_NULL, ATTR_WSTRING),      24),
+#if defined(__x86_64__) || defined(__ia64__) || defined(_XV_API_BROKEN_64BIT)
+	PANEL_VALUE_WCS			= PANEL_ATTR(ATTR_OPAQUE,                181),
+#else
 	PANEL_VALUE_WCS			= PANEL_ATTR(ATTR_INT,                   181),
+#endif
 	PANEL_LIST_INSERT_STRINGS_WCS	= PANEL_ATTR(ATTR_OPAQUE_PAIR,		 165),
 	PANEL_LIST_STRING_WCS		= PANEL_ATTR(PANEL_INDEX_STRING,         115),
 	PANEL_LIST_STRINGS_WCS		=
@@ -744,4 +753,5 @@
 EXTERN_FUNCTION (int panel_destroy_item, (Panel_item item));
 EXTERN_FUNCTION (Panel_item panel_create_item, (Panel panel, Xv_pkg *item_type, DOTDOTDOT));
 
+
 #endif	/* ~xview_panel_DEFINED */
diff -Naur xview-3.2p1.4.orig/lib/libxview/panel/panel_impl.h xview-3.2p1.4/lib/libxview/panel/panel_impl.h
--- xview-3.2p1.4.orig/lib/libxview/panel/panel_impl.h	2013-01-07 12:36:14.057569000 +0100
+++ xview-3.2p1.4/lib/libxview/panel/panel_impl.h	2013-01-07 12:50:48.396367000 +0100
@@ -241,7 +241,7 @@
 Pkg_private int			panel_is_multiclick();
 Pkg_private void		panel_item_layout();
 Pkg_private void		panel_itimer_set();
-Pkg_private struct pr_size 	panel_make_image();
+Pkg_private struct pr_size	panel_make_image();
 Pkg_private int			panel_navigation_action();
 Pkg_private Item_info	       *panel_next_kbd_focus();
 Pkg_private int		        panel_normalize_scroll();
@@ -266,7 +266,7 @@
 Pkg_private Xv_opaque 		panel_set_avlist();
 Pkg_private void		panel_set_bold_label_font();
 Pkg_private Panel_item		panel_set_kbd_focus();
-Pkg_private char               *panel_strsave();
+Pkg_private char               *panel_strsave(char *source);
 Pkg_private Item_info 	       *panel_successor();
 Pkg_private void		panel_text_caret_on();
 Pkg_private void		panel_text_paint_label();
@@ -287,11 +287,16 @@
 Xv_private  void		ml_panel_display_interm();
 Pkg_private void 		ml_panel_saved_caret();
 Pkg_private void 		panel_implicit_commit();
-Pkg_private wchar_t	       *panel_strsave_wc();
+Pkg_private wchar_t	       *panel_strsave_wc(wchar_t *source);
 Xv_private void	        	panel_preedit_display();
 Xv_private void	        	panel_text_start();
 Xv_private void	        	panel_text_draw();
 Xv_private void	        	panel_text_done();
 #endif /* OW_I18N */
+Pkg_private void		panel_free_choices();
+Pkg_private void		panel_fix_label_position();
+Pkg_private int			panel_event_is_xview_semantic();
+Pkg_private int			panel_x_to_col();
+Pkg_private void		panel_update_scrolling_size();
 
 #endif
diff -Naur xview-3.2p1.4.orig/lib/libxview/pw/mem_ops.c xview-3.2p1.4/lib/libxview/pw/mem_ops.c
--- xview-3.2p1.4.orig/lib/libxview/pw/mem_ops.c	1993-06-29 07:15:13.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/pw/mem_ops.c	2013-01-07 12:50:48.426314000 +0100
@@ -46,6 +46,6 @@
 	     ERROR_SEVERITY, ERROR_NON_RECOVERABLE,
 	     ERROR_STRING, 
 	         XV_MSG("Unsupported pixrect operation attempted"),
-	     0);
+	     NULL);
     /* doesn't return */
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/pw/pixwin.h xview-3.2p1.4/lib/libxview/pw/pixwin.h
--- xview-3.2p1.4.orig/lib/libxview/pw/pixwin.h	1993-06-29 07:15:12.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/pw/pixwin.h	2013-01-07 12:50:48.458111000 +0100
@@ -163,7 +163,7 @@
 int width,
 int height, Pixfont *pixfont, int c, int color_index) );
 EXTERN_FUNCTION (int pw_getcmsname, (Xv_opaque pw, char *name ) );
-EXTERN_FUNCTION (int pw_line, (struct pixwin *pw, int x0, int y0, int
+EXTERN_FUNCTION (void pw_line, (struct pixwin *pw, int x0, int y0, int
 x1, int
 y1, struct pr_brush *bursh, Pr_texture *tex, int op ) );
 EXTERN_FUNCTION (int pw_polygon_2, ( struct pixwin *pw, int dx, int
diff -Naur xview-3.2p1.4.orig/lib/libxview/pw/pw_cms.c xview-3.2p1.4/lib/libxview/pw/pw_cms.c
--- xview-3.2p1.4.orig/lib/libxview/pw/pw_cms.c	1993-06-29 07:15:09.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/pw/pw_cms.c	2013-01-07 12:50:48.483960000 +0100
@@ -28,7 +28,7 @@
     char           *temp_name;
     Xv_Drawable_info *info;
 
-    if (temp_name = (char *) xv_get(pw, XV_KEY_DATA, xv_cms_name_key)) {
+    if (temp_name = (char *) xv_get(pw, XV_KEY_DATA, (Attr_attribute)xv_cms_name_key)) {
 	strcpy(name, temp_name);
     } else {
 	DRAWABLE_INFO_MACRO(pw, info);
diff -Naur xview-3.2p1.4.orig/lib/libxview/pw/pw_line.c xview-3.2p1.4/lib/libxview/pw/pw_line.c
--- xview-3.2p1.4.orig/lib/libxview/pw/pw_line.c	1997-06-15 00:57:40.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/pw/pw_line.c	2013-01-07 12:50:48.510335000 +0100
@@ -16,7 +16,7 @@
 
 extern short    pw_tex_dashed[];
 
-Xv_public int
+Xv_public void
 pw_line(pw, x0, y0, x1, y1, brush, tex, op)
     int             op;
     register int    x0, y0, x1, y1;
diff -Naur xview-3.2p1.4.orig/lib/libxview/pw/pw_read.c xview-3.2p1.4/lib/libxview/pw/pw_read.c
--- xview-3.2p1.4.orig/lib/libxview/pw/pw_read.c	1993-06-29 07:15:08.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/pw/pw_read.c	2013-01-07 12:50:48.535228000 +0100
@@ -40,10 +40,10 @@
     } else if (PR_IS_SERVER_IMAGE(pr)) {
 	xv_rop((Xv_opaque)pr, x, y, width, height, op, (Pixrect *)window, sx, sy);
     } else {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING,
 		     XV_MSG("xv_read: attempting to read into an invalid object"),
-		 0);
+		 NULL);
     }
 }
 
@@ -66,7 +66,7 @@
 		 ERROR_SEVERITY, ERROR_NON_RECOVERABLE,
 		 ERROR_STRING,
 		     XV_MSG("xv_read_internal(): image depth > pixrect depth"),
-		 0);
+		 NULL);
     }
     /* Fabricate a memory pixrect from the Xlib image */
     image_mpr.pr_ops = &mem_ops;
diff -Naur xview-3.2p1.4.orig/lib/libxview/pw/pw_traprop.c xview-3.2p1.4/lib/libxview/pw/pw_traprop.c
--- xview-3.2p1.4.orig/lib/libxview/pw/pw_traprop.c	1993-06-29 07:15:08.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/pw/pw_traprop.c	2013-01-07 12:50:48.564526000 +0100
@@ -27,8 +27,8 @@
     struct pixrect *spr;
     int             sx, sy;
 {
-    xv_error(NULL,
+    xv_error((Xv_object)NULL,
 	     ERROR_STRING, 
 	         XV_MSG("pw_traprop: not implemented"),
-	     0);
+	     NULL);
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/pw/xv_olgx.c xview-3.2p1.4/lib/libxview/pw/xv_olgx.c
--- xview-3.2p1.4.orig/lib/libxview/pw/xv_olgx.c	1993-06-29 07:15:14.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/pw/xv_olgx.c	2013-01-07 12:50:48.597235000 +0100
@@ -71,14 +71,14 @@
     cms = (Cms)xv_find(xv_screen(info), CMS,
 		CMS_NAME, cms_name,
 		CMS_CONTROL_CMS, TRUE,
-		CMS_SIZE, CMS_CONTROL_COLORS + 1,
+		CMS_SIZE, CMS_CONTROL_COLORS + 1L,
 		CMS_COLORS, &color,
 		XV_VISUAL, visual,
-		0);
+		NULL);
 
     if ( cms )
       /* Set the window's CMS to the new Control CMS */
-      xv_set(window_public, WIN_CMS, cms, 0);
+      xv_set(window_public, WIN_CMS, cms, NULL);
 
     return ( cms );
 }
@@ -181,7 +181,7 @@
     glyph_font_struct = (XFontStruct *) xv_get(glyph_font, FONT_INFO);
 #endif /* OW_I18N */
     screen = xv_screen(info);
-    first = (Ginfo_list *) xv_get(screen, XV_KEY_DATA, SCREEN_GINFO);
+    first = (Ginfo_list *) xv_get(screen, XV_KEY_DATA, (Attr_attribute)SCREEN_GINFO);
     last = first;
     for (ginfo_list = first; ginfo_list; ginfo_list = ginfo_list->next) {
 	if (ginfo_list->cms == cms &&
@@ -194,7 +194,7 @@
 	    ginfo_list->text_font == text_font)
 #endif /* OW_I18N */
 	{
-	    *three_d = (int)xv_get(cms, CMS_CONTROL_CMS, 0);
+	    *three_d = (int)xv_get(cms, CMS_CONTROL_CMS, NULL);
 	    return (ginfo_list->ginfo);
 	}
 	last = ginfo_list;
@@ -207,7 +207,7 @@
     if (last)
 	last->next = ginfo_list;
     else
-	xv_set(screen, XV_KEY_DATA, SCREEN_GINFO, ginfo_list, 0);
+	xv_set(screen, XV_KEY_DATA, (Attr_attribute)SCREEN_GINFO, ginfo_list, NULL);
 
     display = xv_display(info);
     screen_number = (int) xv_get(screen, SCREEN_NUMBER);
@@ -236,34 +236,34 @@
 	int fg = BlackPixel(display, screen_number);
 	int bg = WhitePixel(display, screen_number);
 	stipple_pixmaps[0] = (Pixmap) xv_get(screen, XV_KEY_DATA,
-					     SCREEN_BG1_PIXMAP);
+					     (Attr_attribute)SCREEN_BG1_PIXMAP);
 	stipple_pixmaps[1] = (Pixmap) xv_get(screen, XV_KEY_DATA,
-					     SCREEN_BG2_PIXMAP);
+					     (Attr_attribute)SCREEN_BG2_PIXMAP);
 	stipple_pixmaps[2] = (Pixmap) xv_get(screen, XV_KEY_DATA,
-					     SCREEN_BG3_PIXMAP);
+					     (Attr_attribute)SCREEN_BG3_PIXMAP);
 	if (stipple_pixmaps[0] == (Pixmap) NULL) {
 	    stipple_pixmaps[0] = XCreatePixmapFromBitmapData(display,
 		xid, bg1_bits, bg1_width, bg1_height, fg, bg, 1);
 	    xv_set(screen,
-		   XV_KEY_DATA, SCREEN_BG1_PIXMAP, stipple_pixmaps[0],
-		   0);
+		   XV_KEY_DATA, (Attr_attribute)SCREEN_BG1_PIXMAP, stipple_pixmaps[0],
+		   NULL);
 	}
 	if (stipple_pixmaps[1] == (Pixmap) NULL) {
 	    stipple_pixmaps[1] = XCreatePixmapFromBitmapData(display,
 		xid, bg2_bits, bg2_width, bg2_height, fg, bg, 1);
 	    xv_set(screen,
-		   XV_KEY_DATA, SCREEN_BG2_PIXMAP, stipple_pixmaps[1],
-		   0);
+		   XV_KEY_DATA, (Attr_attribute)SCREEN_BG2_PIXMAP, stipple_pixmaps[1],
+		   NULL);
 	}
 	if (stipple_pixmaps[2] == (Pixmap) NULL) {
 	    stipple_pixmaps[2] = XCreatePixmapFromBitmapData(display,
 		xid, bg3_bits, bg3_width, bg3_height, fg, bg, 1);
 	    xv_set(screen,
-		   XV_KEY_DATA, SCREEN_BG3_PIXMAP, stipple_pixmaps[2],
-		   0);
+		   XV_KEY_DATA, (Attr_attribute)SCREEN_BG3_PIXMAP, stipple_pixmaps[2],
+		   NULL);
 	}
 	olgx_set_stipple_pixmaps(ginfo, stipple_pixmaps);
-	xv_set(win, WIN_BACKGROUND_PIXMAP, stipple_pixmaps[0], 0); 
+	xv_set(win, WIN_BACKGROUND_PIXMAP, stipple_pixmaps[0], NULL); 
     }
 #endif
 #ifdef OW_I18N
diff -Naur xview-3.2p1.4.orig/lib/libxview/pw/xv_rop.c xview-3.2p1.4/lib/libxview/pw/xv_rop.c
--- xview-3.2p1.4.orig/lib/libxview/pw/xv_rop.c	2013-01-07 12:36:31.728144000 +0100
+++ xview-3.2p1.4/lib/libxview/pw/xv_rop.c	2013-01-07 12:50:48.629081000 +0100
@@ -36,8 +36,13 @@
 
 #define INVALID_XID		0
 
+Xv_private int xv_rop_mpr_internal(Display *display, Drawable d, GC gc, int x, int y, int width, int height, Xv_opaque src, int xr, int yr, Xv_Drawable_info *dest_info, short mpr_bits);
+Xv_private int xv_replrop_internal(Display *display, Xv_Drawable_info *info, Drawable d, GC gc, int xw, int yw, int width, int height, Pixrect *src, int xr, int yr, Xv_Drawable_info *dest_info);
+
 extern Xv_xrectlist *screen_get_clip_rects();
 
+Xv_opaque server_get_fullscreen();
+
 Xv_private_data int xv_to_xop[16];
 
 Xv_private void
@@ -181,10 +186,10 @@
 	      changes.fill_style = FillTiled;
 	      changes_mask |=  GCTile | GCFillStyle;
 	    } else {
-		xv_error(NULL,
+		xv_error((Xv_object)NULL,
 			 ERROR_STRING,
 			     XV_MSG("xv_rop: can't handle drawables of different depth"),
-			 0);
+			 NULL);
 		return (XV_ERROR);
 	    }		
 	    if (changes_mask) 
@@ -195,10 +200,10 @@
 	    if (xv_depth(dest_info) == xv_depth(src_info)) {
 		XCopyArea(display, src_d, d, gc, xr, yr, width, height, x, y);
 	    } else {
-		xv_error(NULL,
+		xv_error((Xv_object)NULL,
 			 ERROR_STRING,
 			     XV_MSG("xv_rop: Windows of different depth, can't rop"),
-			 0);
+			 NULL);
 		return (XV_ERROR);
 	    }
 	}
@@ -301,7 +306,8 @@
         else
 	    ximage->bitmap_bit_order = MSBFirst;
 #else
-#if defined(ultrix) || defined(__alpha)
+/* FIXME: I really don't know what's going on here. -ukh */
+#if defined(ultrix) || defined(__alpha) || defined(__x86_64__) || defined(__ia64__)
         ximage->byte_order = LSBFirst;
         ximage->bitmap_bit_order = MSBFirst;
 #else
@@ -356,7 +362,7 @@
     return (XV_OK);
 }
 
-Pkg_private
+Pkg_private void
 xv_to_x_convert_image(ximage, val)
     XImage         *ximage;
     int             val;
@@ -387,10 +393,10 @@
 
     if (!GC_CHAIN_KEY)  
 	    GC_CHAIN_KEY = xv_unique_key();
-    ops_private_gcs = (struct gc_chain **) xv_get( screen, XV_KEY_DATA, GC_CHAIN_KEY );
+    ops_private_gcs = (struct gc_chain **) xv_get( screen, XV_KEY_DATA, (Attr_attribute)GC_CHAIN_KEY);
     if (!ops_private_gcs) {
 		ops_private_gcs = (struct gc_chain **) xv_calloc((PW_NUM_OPS+1),sizeof(struct gc_chain));
-	    xv_set( screen, XV_KEY_DATA, GC_CHAIN_KEY, ops_private_gcs, 0 );
+	    xv_set( screen, XV_KEY_DATA, (Attr_attribute)GC_CHAIN_KEY, ops_private_gcs, NULL);
     }
     gc_list = ops_private_gcs[op];
 
@@ -503,7 +509,7 @@
 	    }
 	}
     }
-
+    return (GC)NULL;
 }
 
 
@@ -536,12 +542,14 @@
 
 	if (xv_rop_internal(display, d, gc, x, y, width, height,
 			    (Xv_opaque) pr, xr, yr, info) == XV_ERROR) {
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		     ERROR_STRING, 
 		     XV_MSG("xv_rop: xv_rop_internal failed"),
-		     0);
+		     NULL);
+	    return(XV_ERROR);
 	}
     }
+    return(XV_OK);
 }
 
 Xv_private void
@@ -640,14 +648,16 @@
 		     XV_DEFAULT_FG_BG);
 	if (xv_replrop_internal(display, info, d, gc, xw, yw, width,
 				height, pr, xr, yr, info) == XV_ERROR) {
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		     ERROR_STRING, 
 		     XV_MSG("xv_replrop: xv_replrop_internal failed"),
-		     0);
+		     NULL);
+	    return(XV_ERROR);
 	}
     } else {
 	xv_rop(window, xw, yw, width, height, op, pr, xr, yr);
     }
+    return(XV_OK);
 }
 
 
@@ -655,6 +665,7 @@
 xv_replrop_internal(display, info, d, gc, xw, yw, width, height, src, xr, yr, dest_info)
     Display        *display;
     Xv_Drawable_info *info;
+    Drawable        d;
     GC              gc;
     int             xw, yw, width, height;
     Pixrect        *src;
@@ -789,7 +800,7 @@
 		    XV_WIDTH, rect->r_width,
 		    XV_HEIGHT, rect->r_height,
 		    SERVER_IMAGE_DEPTH, xv_depth(info),
-		    0);
+		    NULL);
     if (!rpr) {
 	free(pc);
 	return PW_PIXEL_CACHE_NULL;
diff -Naur xview-3.2p1.4.orig/lib/libxview/pw/xv_stencil.c xview-3.2p1.4/lib/libxview/pw/xv_stencil.c
--- xview-3.2p1.4.orig/lib/libxview/pw/xv_stencil.c	1993-06-29 07:15:10.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/pw/xv_stencil.c	2013-01-07 12:50:48.673623000 +0100
@@ -64,7 +64,7 @@
 	    xv_error(stpr,
 		     ERROR_STRING, 
 			XV_MSG("xv_stencil: stencil has to be of depth 1"),
-		     0);
+		     NULL);
 	    return (XV_ERROR);
 	}
 	if (!(temp_st = XCreatePixmap(display, d,
@@ -139,9 +139,9 @@
 
     if (xv_stencil_internal(display, info, xv_xid(info), gc, dx, dy, width, height,
 			    stpr, stx, sty, spr, sx, sy, info) == XV_ERROR) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING, 
 		 XV_MSG("xv_stencil: xv_stencil_internal failed"),
-		 0);
+		 NULL);
     }
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/pw/xv_text.c xview-3.2p1.4/lib/libxview/pw/xv_text.c
--- xview-3.2p1.4.orig/lib/libxview/pw/xv_text.c	1993-06-29 07:15:11.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/pw/xv_text.c	2013-01-07 12:50:48.708455000 +0100
@@ -22,6 +22,7 @@
 
 extern          xv_pf_ttext(), xv_pf_text();
 extern struct pr_size xv_pf_textwidth();
+Pixfont * xv_pf_open();
 
 Xv_public int
 pw_char(pw, xw, yw, op, pixfont, c)
diff -Naur xview-3.2p1.4.orig/lib/libxview/rect/rect.c xview-3.2p1.4/lib/libxview/rect/rect.c
--- xview-3.2p1.4.orig/lib/libxview/rect/rect.c	1993-06-29 07:15:16.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/rect/rect.c	2013-01-07 12:50:48.744231000 +0100
@@ -24,6 +24,7 @@
 /*
  * Rect geometry functions
  */
+void
 rect_intersection(r1, r2, r)
     register struct rect *r1, *r2, *r;
 {
@@ -37,7 +38,6 @@
 	r->r_top;
     if (r->r_height < 0)
 	r->r_height = 0;
-    return;
 }
 
 unsigned
@@ -161,10 +161,10 @@
 	return (TRUE);
 	break;
       default:
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING, 
 		 XV_MSG("Bad sortorder arg in mostRect"),
-		 0);
+		 NULL);
 	break;
     }
     return (FALSE);
diff -Naur xview-3.2p1.4.orig/lib/libxview/rect/rect_util.c xview-3.2p1.4/lib/libxview/rect/rect_util.c
--- xview-3.2p1.4.orig/lib/libxview/rect/rect_util.c	2013-01-07 12:36:28.974763000 +0100
+++ xview-3.2p1.4/lib/libxview/rect/rect_util.c	2013-01-07 12:50:48.775158000 +0100
@@ -18,6 +18,12 @@
 
 static int rect_nearest_edge(int minimum, int delta, int val);
 
+#ifdef __STDC__
+static int rect_nearest_edge(int minimum, int delta, int val);
+#else
+static int rect_nearest_edge();
+#endif
+
 /*
  * Compute the distance from rect to (x, y). If (x, y) is in rect, zero is
  * returned. If x_used or y_used are non-zero, the projection point is
diff -Naur xview-3.2p1.4.orig/lib/libxview/rect/rectlist.c xview-3.2p1.4/lib/libxview/rect/rectlist.c
--- xview-3.2p1.4.orig/lib/libxview/rect/rectlist.c	1993-06-29 07:15:16.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/rect/rectlist.c	2013-01-07 12:50:48.798967000 +0100
@@ -18,7 +18,11 @@
 #include <stdio.h>
 #include <xview_private/i18n_impl.h>
 #include <xview/base.h>
+/* What is _OTHER_RECT_FUNCTIONS, really? */
+#define _OTHER_RECT_FUNCTIONS
 #include <xview/rect.h>
+/* ..and xview_other_rl_funcs? */
+#define xview_other_rl_funcs
 #include <xview/rectlist.h>
 #include <xview/xv_error.h>
 
@@ -36,8 +40,33 @@
 
 #define	rnptr_null	(struct	rectnode *)0
 
-struct rectnode *_rl_getrectnode(), **_rl_removerectnode();
-unsigned        rl_boundintersectsrect();
+#ifdef __STDC__
+static void _rl_appendrect(struct rect *r, struct rectlist *rl);
+static void _rl_append(struct rectlist *rlBase, struct rectlist *rlAdd);
+static struct rectnode *_rl_getrectnode(struct rect *r);
+static void _rl_appendrectnode(struct rectlist *rl, struct rectnode *rn);
+static void _rl_makebound(struct rectlist *rl);
+static void _rl_difrects(struct rect *r1, struct rect *r2, struct rectlist *rl);
+static int _rl_equal(struct rectlist *rl1, struct rectlist *rl2);
+static void _rl_freerectnode(struct rectnode *rn);
+static void _rl_removerect(struct rect *r, struct rectlist *rl);
+static void _rl_union(struct rectlist *rlBase, struct rectlist *rlAdd);
+static struct rectnode **_rl_removerectnode(struct rectlist *rl, struct rectnode **rnPtr);
+static void _rl_replacernbyrl(struct rectlist *rlBase, struct rectnode *rnAxe, struct rectlist *rlAdd);
+#else
+static void _rl_appendrect();
+static void _rl_append();
+static struct rectnode *_rl_getrectnode();
+static void _rl_appendrectnode();
+static void _rl_makebound();
+static void _rl_difrects();
+static int _rl_equal();
+static void _rl_freerectnode();
+static void _rl_removerect();
+static void _rl_union();
+static struct rectnode **_rl_removerectnode();
+static void _rl_replacernbyrl();
+#endif
 
 /*
  * rectlist geometry functions
@@ -85,6 +114,7 @@
     *rl = rlresult;
 }
 
+void
 rl_sort(rl1, rl, sortorder)
     register struct rectlist *rl1, *rl;
     int             sortorder;
@@ -130,6 +160,7 @@
     *rl = rlresult;
 }
 
+void
 rl_union(rl1, rl2, rl)
     register struct rectlist *rl1, *rl2, *rl;
 {
@@ -143,6 +174,7 @@
     }
 }
 
+void
 rl_difference(rl1, rl2, rl)
     register struct rectlist *rl1, *rl2, *rl;
 {
@@ -245,6 +277,7 @@
     return (FALSE);
 }
 
+void
 rl_rectintersection(r, rl1, rl)
     register struct rect *r;
     register struct rectlist *rl1, *rl;
@@ -265,6 +298,7 @@
     *rl = rlresult;
 }
 
+void
 rl_rectunion(r, rl1, rl)
     register struct rect *r;
     register struct rectlist *rl1, *rl;
@@ -284,6 +318,7 @@
     _rl_append(rl, &rlresult);
 }
 
+void
 rl_rectdifference(r, rl1, rl)
     register struct rect *r;
     register struct rectlist *rl1, *rl;
@@ -316,6 +351,7 @@
  * rectlist initialization functions
  */
 
+void
 rl_initwithrect(r, rl)
     register struct rect *r;
     struct rectlist *rl;
@@ -328,6 +364,7 @@
 /*
  * rectlist List Memory Management functions
  */
+void
 rl_copy(rl1, rl)
     register struct rectlist *rl1, *rl;
 {
@@ -343,6 +380,7 @@
     }
 }
 
+void
 rl_free(rl)
     register struct rectlist *rl;
 {
@@ -354,14 +392,15 @@
 	rn_last = rn;
     }
     if (rn_last != rl->rl_tail) {
-	xv_error((Xv_opaque)rl,
+	xv_error((Xv_object)rl,
 		 ERROR_STRING, 
 		 XV_MSG("Malformed rl in rl_free"),
-		 0);
+		 NULL);
     }
     *rl = rl_null;
 }
 
+void
 rl_coalesce(rl)
     register struct rectlist *rl;
 {
@@ -390,6 +429,7 @@
     }
 }
 
+void
 rl_normalize(rl)
     register struct rectlist *rl;
 {
@@ -407,6 +447,7 @@
 
 /* Debug Utilities	 */
 
+void
 rl_print(rl, tag)
     struct rectlist *rl;
     char           *tag;
@@ -432,6 +473,7 @@
 /*
  * Create node for r and app to rl
  */
+static void
 _rl_appendrect(r, rl)
     register struct rect *r;
     register struct rectlist *rl;
@@ -445,6 +487,7 @@
     _rl_appendrectnode(rl, rn);
 }
 
+static void
 _rl_append(rlBase, rlAdd)
     struct rectlist *rlBase, *rlAdd;
 {
@@ -461,7 +504,7 @@
     }
 }
 
-struct rectnode *
+static struct rectnode *
 _rl_getrectnode(r)
     register struct rect *r;
 {
@@ -490,6 +533,7 @@
     return (rn);
 }
 
+static void
 _rl_appendrectnode(rl, rn)
     register struct rectlist *rl;
     register struct rectnode *rn;
@@ -507,6 +551,7 @@
     rl->rl_bound = rect_bounding(&rn->rn_rect, &rl->rl_bound);
 }
 
+static void
 _rl_makebound(rl)
     struct rectlist *rl;
 {
@@ -518,6 +563,7 @@
     rl_coordoffset(rl, &rl->rl_bound.r_left, &rl->rl_bound.r_top);
 }
 
+static void
 _rl_difrects(r1, r2, rl)
     register struct rect *r1, *r2;
     register struct rectlist *rl;
@@ -559,6 +605,7 @@
     }
 }
 
+static int
 _rl_equal(rl1, rl2)
     register struct rectlist *rl1, *rl2;
 {
@@ -571,6 +618,7 @@
 	return (FALSE);
 }
 
+static void
 _rl_freerectnode(rn)
     register struct rectnode *rn;
 {
@@ -579,6 +627,7 @@
     rnFree = rn;
 }
 
+static void
 _rl_removerect(r, rl)
     register struct rect *r;
     register struct rectlist *rl;
@@ -607,6 +656,7 @@
     }
 }
 
+static void
 _rl_union(rlBase, rlAdd)
     register struct rectlist *rlBase, *rlAdd;
 {
@@ -619,7 +669,7 @@
     }
 }
 
-struct rectnode **
+static struct rectnode **
 _rl_removerectnode(rl, rnPtr)
     struct rectlist *rl;
     struct rectnode **rnPtr;
@@ -646,6 +696,7 @@
     }
 }
 
+static void
 _rl_replacernbyrl(rlBase, rnAxe, rlAdd)
     register struct rectlist *rlBase;
     register struct rectnode *rnAxe;
diff -Naur xview-3.2p1.4.orig/lib/libxview/screen/screen.c xview-3.2p1.4/lib/libxview/screen/screen.c
--- xview-3.2p1.4.orig/lib/libxview/screen/screen.c	1993-06-29 07:15:19.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/screen/screen.c	2013-01-07 12:50:48.831006000 +0100
@@ -20,6 +20,7 @@
 #include <X11/Xlib.h>
 #include <X11/Xutil.h>
 #include <X11/Xatom.h>
+#include <stdlib.h>		/* free() */
 
 #define VisualClassError -1
 static Defaults_pairs visual_class_pairs[] = {
@@ -55,11 +56,7 @@
     XVisualInfo			visual_template;
     Display        	       *display;
     char			cms_name[100];
-    Atom			type;
-    int             		font_id,
-    				format;
-    unsigned long		nitems,
-				bytes_after;
+    int             		font_id;
 
     /* Allocate private data and set up forward/backward links. */
     screen = (Screen_info *)xv_alloc(Screen_info);
@@ -75,14 +72,14 @@
     screen->num_sun_wm_protocols = 0;
     screen->sel_state = 0;
 
-    for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-	switch ((int) attrs[0]) {
+    for (attrs = avlist; (Screen_attr)*attrs; attrs = attr_next(attrs)) {
+	switch ((Screen_attr) attrs[0]) {
 	  case SCREEN_NUMBER:
 	    if ((int) attrs[1] >= ScreenCount(display)) {
-		xv_error(NULL,
+		xv_error((Xv_object)NULL,
 			 ERROR_BAD_VALUE, attrs[1], attrs[0],
 			 ERROR_PKG, SCREEN,
-			 0);
+			 NULL);
 		xv_free(screen);
 		return XV_ERROR;
 	    }
@@ -108,12 +105,12 @@
      * -fg, and -bg.
      */
     sprintf(cms_name, "xv_default_cms_for_0x%x",
-	    screen->screen_visuals->vinfo->visualid);
+	    (unsigned int)screen->screen_visuals->vinfo->visualid);
     screen->default_cms = (Cms)xv_create(screen_public, CMS,
         CMS_NAME, cms_name,
         XV_VISUAL, screen->screen_visuals->vinfo->visual,
-        CMS_TYPE, XV_STATIC_CMS,					 
-        CMS_SIZE, 2,
+        CMS_TYPE, (Cms_type)XV_STATIC_CMS,					 
+        CMS_SIZE, 2L,
         CMS_NAMED_COLORS, "White", "Black", NULL,
         CMS_DEFAULT_CMS, TRUE,					 
         NULL);
@@ -132,7 +129,7 @@
     }
 
     /* set the default font in the GC for this screen */
-    font = (Xv_object) xv_get(screen->server, SERVER_FONT_WITH_NAME, NULL, 0);
+    font = (Xv_object) xv_get(screen->server, SERVER_FONT_WITH_NAME, NULL, NULL);
     if (!font) {
 	XFree((char *)(screen->visual_infos));
 	xv_free(screen);
@@ -147,7 +144,7 @@
 	xv_create(screen_public, WINDOW,
 		  WIN_IS_ROOT,
 		  WIN_LAYOUT_PROC, screen_layout,
-		  0);
+		  NULL);
 
     if (!screen->root_window) {
 	XFree((char *)(screen->visual_infos));
@@ -166,7 +163,7 @@
     /* now tell the server it has a new screen */
     xv_set(screen->server,
 	   SERVER_NTH_SCREEN, screen->number, screen_public,
-	   0);
+	   NULL);
 
     /* Store away any sun specific WM_PROTOCOLS. */
     (void)screen_update_sun_wm_protocols(screen->root_window, XvNewValue);
@@ -212,7 +209,7 @@
 	    sprintf(message, XV_MSG("Unknown visual class \"%s\", using default visual\n"),
 	    defaults_get_string("window.visual", "Window.Visual",
 				(char *)NULL));
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		     ERROR_STRING, message,
 		     ERROR_PKG, SCREEN,
 		     NULL);
@@ -257,7 +254,7 @@
 	return XV_OK;
 
     /* now tell the server it has lost a screen */
-    xv_set(screen->server, SERVER_NTH_SCREEN, screen->number, (Xv_Screen) 0, 0);
+    xv_set(screen->server, SERVER_NTH_SCREEN, screen->number, (Xv_Screen) 0, NULL);
     
     XFree((char *)(screen->visual_infos));
     if (screen->sun_wm_protocols)
@@ -275,7 +272,7 @@
 {
     register Attr_avlist    attrs;
 
-    for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
+    for (attrs = avlist; (int)*attrs; attrs = attr_next(attrs)) {
 	switch (attrs[0]) {
 	    default:
 		xv_check_bad_attr(&xv_screen_pkg, attrs[0]);
@@ -329,11 +326,11 @@
 	}
     }
     if (cached_window == NULL) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING, 
 		 XV_MSG("Unable to return window to screen cache"),
 		 ERROR_PKG, SCREEN,
-		 0);
+		 NULL);
     }
 }
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/screen/scrn_get.c xview-3.2p1.4/lib/libxview/screen/scrn_get.c
--- xview-3.2p1.4.orig/lib/libxview/screen/scrn_get.c	2013-01-07 12:36:32.876771000 +0100
+++ xview-3.2p1.4/lib/libxview/screen/scrn_get.c	2013-01-07 12:50:48.863001000 +0100
@@ -46,7 +46,7 @@
     Screen_info *screen = SCREEN_PRIVATE(screen_public);
     Xv_opaque    value = (Xv_opaque)NULL;
     
-    switch (attr) {
+    switch ((int)attr) {
       /* Public Attributes */
 
       case SCREEN_SERVER:
@@ -253,7 +253,7 @@
 	WIN_TOP_LEVEL_NO_DECOR, TRUE,
 	WIN_SAVE_UNDER, TRUE,
 	XV_SHOW, FALSE,
-	0);
+	NULL);
 
     if (screen->cached_windows == NULL) {
 	screen->cached_windows = cached_window;
@@ -328,13 +328,13 @@
 		FONT_FAMILY, xv_get(std_font, FONT_FAMILY),
 		FONT_STYLE, FONT_STYLE_BOLD,
 		FONT_SIZE, xv_get(std_font, FONT_SIZE),
-		0);
-	    if (bold_font == NULL) {
-		xv_error(NULL,
+		NULL);
+	    if (bold_font == (Xv_Font)NULL) {
+		xv_error((Xv_object)NULL,
 		    ERROR_STRING,
 		        XV_MSG("Unable to find bold font; using standard font"),
 		    ERROR_PKG, SCREEN,
-		    0);
+		    NULL);
 		bold_font = std_font;
 	    }
 	    gc_value.font = (Font)xv_get(bold_font, XV_XID);
diff -Naur xview-3.2p1.4.orig/lib/libxview/screen/scrn_impl.h xview-3.2p1.4/lib/libxview/screen/scrn_impl.h
--- xview-3.2p1.4.orig/lib/libxview/screen/scrn_impl.h	1993-06-29 07:15:20.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/screen/scrn_impl.h	2013-01-07 12:50:48.890655000 +0100
@@ -60,16 +60,44 @@
 	XV_PRIVATE(Screen_info, Xv_screen_struct, screen)
 #define	SCREEN_PUBLIC(screen)	XV_PUBLIC(screen)
 
+
+#ifdef __STDC__
+
 /* screen_get.c */
-Pkg_private Xv_opaque	screen_get_attr();
+Pkg_private Xv_opaque screen_get_attr(Xv_Screen screen_public, int *status, Attr_attribute attr, va_list args);
+Pkg_private XVisualInfo *screen_match_visual_info(Screen_info *screen, long mask, XVisualInfo *template);
+Xv_private void screen_adjust_gc_color(Xv_Window window, int gc_index);
+
+/* screen.c */
+Pkg_private Xv_opaque screen_set_avlist(Xv_Screen screen_public, Attr_attribute avlist[]);
+Xv_private int screen_get_sun_wm_protocols(Xv_Screen screen_public);
+Xv_private int screen_check_sun_wm_protocols(Xv_Screen screen_public, Atom check_atom);
+Xv_private void screen_set_clip_rects(Xv_Screen screen_public, XRectangle *xrect_array, int rect_count);
+
+/* screen_layout.c */
+#if defined(__alpha) || defined(__x86_64__) || defined(_XV_API_BROKEN_64BIT)
+Pkg_private int screen_layout(Xv_Window root, Xv_Window child, Window_layout_op op, unsigned long *d1, unsigned long *d2, unsigned long *d3, unsigned long *d4, unsigned long *d5);
+#else
+Pkg_private int screen_layout();
+#endif
+
+#else
+
+/* screen_get.c */
+Pkg_private Xv_opaque screen_get_attr();
 Pkg_private XVisualInfo *screen_match_visual_info();
+Xv_private void screen_adjust_gc_color();
 
 /* screen.c */
-Pkg_private Xv_opaque	screen_set_avlist();
-Xv_private int		screen_get_sun_wm_protocols();
-Xv_private int		screen_check_sun_wm_protocols();
+Pkg_private Xv_opaque screen_set_avlist();
+Xv_private int screen_get_sun_wm_protocols();
+Xv_private int screen_check_sun_wm_protocols();
+Xv_private void screen_set_clip_rects();
 
 /* screen_layout.c */
-Pkg_private int			screen_layout();
+Pkg_private int screen_layout();
+
+#endif
+
 
 #endif
diff -Naur xview-3.2p1.4.orig/lib/libxview/screen/scrn_lyout.c xview-3.2p1.4/lib/libxview/screen/scrn_lyout.c
--- xview-3.2p1.4.orig/lib/libxview/screen/scrn_lyout.c	2013-01-07 12:36:32.834235000 +0100
+++ xview-3.2p1.4/lib/libxview/screen/scrn_lyout.c	2013-01-07 12:50:48.916238000 +0100
@@ -14,6 +14,8 @@
 #include <xview_private/scrn_impl.h>
 #include <xview/rect.h>
 #include <xview/frame.h>
+#include <xview/win.h>
+#include <xview_private/windowimpl.h>
 
 
 /*ARGSUSED*/
@@ -24,7 +26,7 @@
     register Xv_Window child;
     Window_layout_op op;
 /* Alpha compatibility, mbuck@debian.org */
-#if defined(__alpha)
+#if defined(__alpha) || defined(__x86_64__) || defined(_XV_API_BROKEN_64BIT)
     unsigned long *d1, *d2, *d3, *d4, *d5;
 #endif
 {
diff -Naur xview-3.2p1.4.orig/lib/libxview/scrollbar/sb.c xview-3.2p1.4/lib/libxview/scrollbar/sb.c
--- xview-3.2p1.4.orig/lib/libxview/scrollbar/sb.c	2013-01-07 12:36:32.969725000 +0100
+++ xview-3.2p1.4/lib/libxview/scrollbar/sb.c	2013-01-07 12:50:48.953707000 +0100
@@ -148,11 +148,11 @@
 	       WIN_UP_EVENTS,
 	       LOC_DRAG,
 	       WIN_MOUSE_BUTTONS,
-	       0,
+	       NULL,
 	   WIN_RETAINED,
-	       xv_get(xv_get(sb_public, XV_SCREEN, 0),
+	       xv_get(xv_get(sb_public, XV_SCREEN, NULL),
 		      SCREEN_RETAIN_WINDOWS),
-	   0);
+	   NULL);
     
     /*
      * load delay times for scrollbar repeat from the .Xdefaults file and
@@ -187,7 +187,7 @@
 	    MENU_NOTIFY_PROC, scrollbar_line_to_top,
 	    XV_HELP_DATA, (sb->direction == SCROLLBAR_VERTICAL) ?
 		"xview:scrollbarHereToTop" : "xview:scrollbarHereToLeft",
-	    0,
+	    NULL,
 	MENU_ITEM,
 	    MENU_STRING, (sb->direction == SCROLLBAR_VERTICAL) ?
 		XV_MSG("Top to here") : 
@@ -195,26 +195,26 @@
 	    MENU_NOTIFY_PROC, scrollbar_top_to_line,
 	    XV_HELP_DATA, (sb->direction == SCROLLBAR_VERTICAL) ?
 		"xview:scrollbarTopToHere" : "xview:scrollbarLeftToHere",
-	    0,
+	    NULL,
 	MENU_ITEM,
 	    MENU_STRING, XV_MSG("Previous"),
 	    MENU_NOTIFY_PROC, scrollbar_last_position,
 	    XV_HELP_DATA, "xview:scrollbarPrevious",
-	    0,
-	XV_KEY_DATA, sb_context_key, sb,
-	XV_KEY_DATA, sb_split_view_menu_item_key,
-	    xv_create(0, MENUITEM,
+	    NULL,
+	XV_KEY_DATA, (Attr_attribute)sb_context_key, sb,
+	XV_KEY_DATA, (Attr_attribute)sb_split_view_menu_item_key,
+	    xv_create((Xv_object)NULL, MENUITEM,
 		MENU_ACTION_ITEM, 
 		    XV_MSG("Split View"), 
 		    scrollbar_split_view_from_menu,
 		XV_HELP_DATA, "xview:scrollbarSplitView",
-		0),
-	XV_KEY_DATA, sb_join_view_menu_item_key,
-	    xv_create(0, MENUITEM,
+		NULL),
+	XV_KEY_DATA, (Attr_attribute)sb_join_view_menu_item_key,
+	    xv_create((Xv_object)NULL, MENUITEM,
 		MENU_ACTION_ITEM, 
 		    XV_MSG("Join Views"), 
 		    scrollbar_join_view_from_menu,
 		XV_HELP_DATA, "xview:scrollbarJoinViews",
-		0),
-	0);
+		NULL),
+	NULL);
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/scrollbar/sb_compat.c xview-3.2p1.4/lib/libxview/scrollbar/sb_compat.c
--- xview-3.2p1.4.orig/lib/libxview/scrollbar/sb_compat.c	1993-06-29 07:17:10.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/scrollbar/sb_compat.c	2013-01-07 12:50:48.981233000 +0100
@@ -43,9 +43,9 @@
     else
         avlist[0] = NULL;
 
-    return (Scrollbar) xv_create(0, SCROLLBAR,
+    return (Scrollbar) xv_create((Xv_object)NULL, SCROLLBAR,
 				 ATTR_LIST, avlist,
-				 0);
+				 NULL);
 }
 
 Sv1_public int
@@ -89,5 +89,5 @@
     Scrollbar       sb_public;
     unsigned long   new_start;
 {
-    (void) xv_set(sb_public, SCROLLBAR_VIEW_START, new_start, 0);
+    (void) xv_set(sb_public, SCROLLBAR_VIEW_START, new_start, NULL);
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/scrollbar/sb_event.c xview-3.2p1.4/lib/libxview/scrollbar/sb_event.c
--- xview-3.2p1.4.orig/lib/libxview/scrollbar/sb_event.c	2013-01-07 12:36:48.723302000 +0100
+++ xview-3.2p1.4/lib/libxview/scrollbar/sb_event.c	2013-01-07 12:50:49.086536000 +0100
@@ -74,12 +74,12 @@
 static void     scrollbar_handle_timed_line_event();
 static void     scrollbar_position_mouse();
 static Scroll_motion scrollbar_translate_scrollbar_event_to_motion();
-static int      scrollbar_translate_to_elevator_event();
+static void     scrollbar_translate_to_elevator_event();
 static void     scrollbar_timer_start();
 static void     scrollbar_timer_stop();
 static void     scrollbar_set_intransit();
 static int      scrollbar_preview_split();
-static int      scrollbar_invoke_split();
+static void     scrollbar_invoke_split();
 static void     scrollbar_destroy_split();
 static int      scrollbar_multiclick();
 static int	scrollbar_find_view_nbr();
@@ -187,14 +187,14 @@
 	xv_set(frame,
 	       FRAME_FOCUS_DIRECTION,
 		   SB_VERTICAL(sb) ? FRAME_FOCUS_RIGHT : FRAME_FOCUS_UP,
-	       0);
+	       NULL);
 	xv_set(focus_win,
 	       WIN_PARENT, sb_public,
 	       XV_X, 0,
 	       XV_Y, 0,
-	       0);
+	       NULL);
 	frame_kbd_use(frame, xv_get(sb_public, XV_OWNER), sb_public);
-        xv_set(focus_win, XV_SHOW, TRUE, 0);
+        xv_set(focus_win, XV_SHOW, TRUE, NULL);
 	break;
 
       case KBD_DONE:
@@ -202,7 +202,7 @@
 	focus_win = xv_get(frame, FRAME_FOCUS_WIN);
 	xv_set(focus_win,
 	       XV_SHOW, FALSE,
-	       0);
+	       NULL);
 	frame_kbd_done(frame, xv_get(sb_public, XV_OWNER));
 	break;
 
@@ -223,22 +223,22 @@
 		    paint_window = xv_get(openwin,
 					  CANVAS_NTH_PAINT_WINDOW, view_nbr+1);
 		    if (paint_window) {
-			xv_set(paint_window, WIN_SET_FOCUS, 0);
-			xv_set(openwin, XV_FOCUS_ELEMENT, 0, 0);
+			xv_set(paint_window, WIN_SET_FOCUS, NULL);
+			xv_set(openwin, XV_FOCUS_ELEMENT, 0, NULL);
 		    } else
-			openwin = NULL;
+			openwin = (Xv_window)NULL;
 		} else {
 		    /* Next view window receives input focus */
 		    view_window = xv_get(openwin, OPENWIN_NTH_VIEW, view_nbr+1);
 		    if (view_window)
-			xv_set(view_window, WIN_SET_FOCUS, 0);
+			xv_set(view_window, WIN_SET_FOCUS, NULL);
 		    else
-			openwin = NULL;
+			openwin = (Xv_window)NULL;
 		}
 	    }
 	    if (!openwin) {
 		frame = xv_get(sb_public, WIN_FRAME);
-		xv_set(frame, FRAME_NEXT_PANE, 0);
+		xv_set(frame, FRAME_NEXT_PANE, NULL);
 	    }
 	}
 	break;
@@ -260,14 +260,14 @@
 		     */
 		    xv_set(xv_get(openwin, CANVAS_NTH_PAINT_WINDOW, view_nbr),
 			   WIN_SET_FOCUS,
-			   0);
-		    xv_set(openwin, XV_FOCUS_ELEMENT, -1, 0);
+			   NULL);
+		    xv_set(openwin, XV_FOCUS_ELEMENT, -1, NULL);
 		} else
 		    /* View window receives input focus */
-		    xv_set(sb->managee, WIN_SET_FOCUS, 0);
+		    xv_set(sb->managee, WIN_SET_FOCUS, NULL);
 	    } else {
 		frame = xv_get(sb_public, WIN_FRAME);
-		xv_set(frame, FRAME_PREVIOUS_PANE, 0);
+		xv_set(frame, FRAME_PREVIOUS_PANE, NULL);
 	    }
 	}
 	break;
@@ -287,7 +287,7 @@
 		    other_sb = xv_get(openwin, OPENWIN_HORIZONTAL_SCROLLBAR,
 			view_window);
 		    if (other_sb) {
-			xv_set(other_sb, WIN_SET_FOCUS, 0);
+			xv_set(other_sb, WIN_SET_FOCUS, NULL);
 			break;
 		    }
 		}
@@ -299,22 +299,22 @@
 		    paint_window = xv_get(openwin,
 					  CANVAS_NTH_PAINT_WINDOW, view_nbr+1);
 		    if (paint_window) {
-			xv_set(paint_window, WIN_SET_FOCUS, 0);
-			xv_set(openwin, XV_FOCUS_ELEMENT, 0, 0);
+			xv_set(paint_window, WIN_SET_FOCUS, NULL);
+			xv_set(openwin, XV_FOCUS_ELEMENT, 0, NULL);
 		    } else
-			openwin = NULL;
+			openwin = (Xv_window)NULL;
 		} else {
 		    /* Next view window receives input focus */
 		    view_window = xv_get(openwin, OPENWIN_NTH_VIEW, view_nbr+1);
 		    if (view_window)
-			xv_set(view_window, WIN_SET_FOCUS, 0);
+			xv_set(view_window, WIN_SET_FOCUS, NULL);
 		    else
-			openwin = NULL;
+			openwin = (Xv_window)NULL;
 		}
 	    }
 	    if (!openwin) {
 		frame = xv_get(sb_public, WIN_FRAME);
-		xv_set(frame, FRAME_NEXT_PANE, 0);
+		xv_set(frame, FRAME_NEXT_PANE, NULL);
 	    }
 	}
 	break;
@@ -335,7 +335,7 @@
 			view_window);
 		    if (other_sb) {
 			/* Horizontal scrollbar -> Vertical scrollbar */
-			xv_set(other_sb, WIN_SET_FOCUS, 0);
+			xv_set(other_sb, WIN_SET_FOCUS, NULL);
 			break;
 		    }
 		}
@@ -347,15 +347,15 @@
 		     */
 		    xv_set(xv_get(openwin, CANVAS_NTH_PAINT_WINDOW, view_nbr),
 			   WIN_SET_FOCUS,
-			   0);
-		    xv_set(openwin, XV_FOCUS_ELEMENT, -1, 0);
+			   NULL);
+		    xv_set(openwin, XV_FOCUS_ELEMENT, -1, NULL);
 		} else
 		    /* View window receives input focus */
-		    xv_set(sb->managee, WIN_SET_FOCUS, 0);
+		    xv_set(sb->managee, WIN_SET_FOCUS, NULL);
 	    } else {
 		/* Any scrollbar -> last element in previous pane */
 		frame = xv_get(sb_public, WIN_FRAME);
-		xv_set(frame, FRAME_PREVIOUS_ELEMENT, 0);
+		xv_set(frame, FRAME_PREVIOUS_ELEMENT, NULL);
 	    }
 	}
 	break;
@@ -423,7 +423,7 @@
       case ACTION_JUMP_MOUSE_TO_INPUT_FOCUS:
 	xv_set(sb_public,
 	       WIN_MOUSE_XY, 0, 0,
-	       0);
+	       NULL);
 	break;
 
       case ACTION_SELECT:
@@ -495,7 +495,7 @@
 		if (!sb->menu) {
 			scrollbar_create_standard_menu(sb);
 		}
-		menu_show(sb->menu, SCROLLBAR_PUBLIC(sb), event, 0);
+		menu_show(sb->menu, SCROLLBAR_PUBLIC(sb), event, NULL);
 	}
 	break;
 	
@@ -691,7 +691,7 @@
     Xv_scrollbar_info *sb;
     int    pos;
 
-    sb = (Xv_scrollbar_info *) xv_get(menu, XV_KEY_DATA, sb_context_key, 0);
+    sb = (Xv_scrollbar_info *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)sb_context_key, NULL);
 
     /* look at transit event to see where the mouse button went down */
     pos = SB_VERTICAL(sb) ? event_y(&sb->transit_event)	: event_x(&sb->transit_event);
@@ -707,7 +707,7 @@
     Xv_scrollbar_info *sb;
     int    pos;
 
-    sb = (Xv_scrollbar_info *) xv_get(menu, XV_KEY_DATA, sb_context_key);
+    sb = (Xv_scrollbar_info *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)sb_context_key);
 
     /* look at transit event to see where the mouse button went down */
     pos = SB_VERTICAL(sb) ? event_y(&sb->transit_event) : event_x(&sb->transit_event);
@@ -727,28 +727,28 @@
 
     if (op == MENU_DISPLAY) {
 	nbr_menu_items = (int) xv_get(menu, MENU_NITEMS);
-	sb = (Xv_scrollbar_info *) xv_get(menu, XV_KEY_DATA, sb_context_key);
+	sb = (Xv_scrollbar_info *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)sb_context_key);
 	if (sb->can_split) {
 	    if (nbr_menu_items < SPLIT_VIEW_MENU_ITEM_NBR)
 		xv_set(menu,
 		       MENU_APPEND_ITEM,
-		     xv_get(menu, XV_KEY_DATA, sb_split_view_menu_item_key, 0),
-		       0);
+		     xv_get(menu, XV_KEY_DATA, (Attr_attribute)sb_split_view_menu_item_key, NULL),
+		       NULL);
 	    openwin = xv_get(SCROLLBAR_PUBLIC(sb), XV_OWNER);
 	    nbr_views = (int) xv_get(openwin, OPENWIN_NVIEWS);
 	    if (nbr_views > 1 && nbr_menu_items < JOIN_VIEWS_MENU_ITEM_NBR)
 		xv_set(menu,
 		       MENU_APPEND_ITEM,
-		       xv_get(menu, XV_KEY_DATA, sb_join_view_menu_item_key, 0),
-		       0);
+		       xv_get(menu, XV_KEY_DATA, (Attr_attribute)sb_join_view_menu_item_key, NULL),
+		       NULL);
 	    else if (nbr_views == 1 &&
 		     nbr_menu_items == JOIN_VIEWS_MENU_ITEM_NBR)
-		xv_set(menu, MENU_REMOVE, JOIN_VIEWS_MENU_ITEM_NBR, 0);
+		xv_set(menu, MENU_REMOVE, JOIN_VIEWS_MENU_ITEM_NBR, NULL);
 	} else {
 	    if (nbr_menu_items == JOIN_VIEWS_MENU_ITEM_NBR)
-		xv_set(menu, MENU_REMOVE, JOIN_VIEWS_MENU_ITEM_NBR, 0);
+		xv_set(menu, MENU_REMOVE, JOIN_VIEWS_MENU_ITEM_NBR, NULL);
 	    if (nbr_menu_items >= SPLIT_VIEW_MENU_ITEM_NBR)
-		xv_set(menu, MENU_REMOVE, SPLIT_VIEW_MENU_ITEM_NBR, 0);
+		xv_set(menu, MENU_REMOVE, SPLIT_VIEW_MENU_ITEM_NBR, NULL);
 	}
     }
     return (menu);
@@ -767,7 +767,7 @@
     Xv_scrollbar_info *sb;
     Event	    split_event;
 
-    sb = (Xv_scrollbar_info *) xv_get(menu, XV_KEY_DATA, sb_context_key);
+    sb = (Xv_scrollbar_info *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)sb_context_key);
     last_menu_event = *(Event *) xv_get(menu, MENU_LAST_EVENT);
     if (event_is_button(&last_menu_event))
 	scrollbar_invoke_split(sb, (Event *) xv_get(menu, MENU_FIRST_EVENT));
@@ -790,7 +790,7 @@
     Menu_item       item;
 {
     scrollbar_destroy_split(
-	   (Xv_scrollbar_info *) xv_get(menu, XV_KEY_DATA, sb_context_key));
+	   (Xv_scrollbar_info *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)sb_context_key));
 }
 
 
@@ -802,7 +802,7 @@
 {
     Xv_scrollbar_info *sb;
 
-    sb = (Xv_scrollbar_info *) xv_get(menu, XV_KEY_DATA, sb_context_key);
+    sb = (Xv_scrollbar_info *) xv_get(menu, XV_KEY_DATA, (Attr_attribute)sb_context_key);
 
     scrollbar_scroll_to_offset(sb, sb->last_view_start);
 }
@@ -835,11 +835,12 @@
 		    
 	    scrollbar_position_mouse(sb, x, new_y);
 	    
-	    if (new_y != y) 
+	    if (new_y != y) {
 	      if (SB_VERTICAL(sb))
 		event_set_y(&sb->transit_event, y);
 	      else
 		event_set_x(&sb->transit_event, y);
+	    }
     }
 }
 
@@ -875,18 +876,19 @@
 	Rect           *mouse_rect;
 	Rect           *sb_rect;
 	
-	mouse_rect = (Rect *)xv_get(win, WIN_MOUSE_XY, 0);
-	sb_rect = (Rect *)xv_get(win, XV_RECT, 0);
+	mouse_rect = (Rect *)xv_get(win, WIN_MOUSE_XY, NULL);
+	sb_rect = (Rect *)xv_get(win, XV_RECT, NULL);
 
 	/* move mouse if it is still in the scrollbar window */
 	if (mouse_rect->r_left >= 0 &&
 	    mouse_rect->r_left < sb_rect->r_width &&
 	    mouse_rect->r_top >= 0 &&
-	    mouse_rect->r_top < sb_rect->r_height)
+	    mouse_rect->r_top < sb_rect->r_height) {
 	  if (SB_VERTICAL(sb))
-	    xv_set(win, WIN_MOUSE_XY, x, y, 0);
+	    xv_set(win, WIN_MOUSE_XY, x, y, NULL);
 	  else
-	    xv_set(win, WIN_MOUSE_XY, y, x, 0);
+	    xv_set(win, WIN_MOUSE_XY, y, x, NULL);
+	}
 }
 
 static          Scroll_motion
@@ -1006,7 +1008,7 @@
     sb->transit_occurred = FALSE;
 }
 
-static int
+static void
 scrollbar_translate_to_elevator_event(sb, event)
     Xv_scrollbar_info *sb;
     Event          *event;
@@ -1225,7 +1227,7 @@
 		update_feedback = FALSE;
 		break;
 	    }
-	    if (update_feedback)
+	    if (update_feedback) {
 	      if (sb->direction == SCROLLBAR_VERTICAL) {
 		  if (y >= 0 && y <= sb_r.r_height) {
 		      XDrawLine(display, pw_xid, gc, from_x, from_y, to_x, to_y);
@@ -1243,6 +1245,7 @@
 		      XDrawLine(display, pw_xid, gc, from_x, from_y, to_x, to_y);
 		  }
 	      }
+	    }
 	}
     } /* while (!done && (status != XV_ERROR)) */
     xv_destroy(fs);
@@ -1251,7 +1254,7 @@
     return(status);
 }
 
-static int
+static void
 scrollbar_invoke_split(sb, event)
     Xv_scrollbar_info *sb;
     Event          *event;
@@ -1291,7 +1294,7 @@
     extern void     win_free_event();
 
     win_post_id_and_arg(sb->managee,
-			ACTION_SPLIT_DESTROY, NOTIFY_SAFE, NULL,
+			ACTION_SPLIT_DESTROY, NOTIFY_SAFE, 0,
 			win_copy_event, win_free_event);
 }
 
@@ -1389,8 +1392,7 @@
     int		    view_nbr;
 
     for (view_nbr = 0;
-	 (view = xv_get(openwin, OPENWIN_NTH_VIEW, view_nbr))
-	  != NULL;
+	 (view = xv_get(openwin, OPENWIN_NTH_VIEW, view_nbr)) != (Xv_Window)NULL;
 	 view_nbr++)
 	if (view == sb->managee)
 	    break;
diff -Naur xview-3.2p1.4.orig/lib/libxview/scrollbar/sb_get.c xview-3.2p1.4/lib/libxview/scrollbar/sb_get.c
--- xview-3.2p1.4.orig/lib/libxview/scrollbar/sb_get.c	1993-06-29 07:17:09.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/scrollbar/sb_get.c	2013-01-07 12:50:49.121585000 +0100
@@ -47,7 +47,7 @@
 {
     Xv_scrollbar_info *sb = SCROLLBAR_PRIVATE(scroll_public);
 
-    switch (attr) {
+    switch ((int)attr) {
       case SCROLLBAR_VIEW_START:
 	return ((Xv_opaque) sb->view_start);
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/scrollbar/sb_init.c xview-3.2p1.4/lib/libxview/scrollbar/sb_init.c
--- xview-3.2p1.4.orig/lib/libxview/scrollbar/sb_init.c	1993-06-29 07:17:09.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/scrollbar/sb_init.c	2013-01-07 12:50:49.147672000 +0100
@@ -97,11 +97,11 @@
 	       WIN_UP_EVENTS,
 	       LOC_DRAG,
 	       WIN_MOUSE_BUTTONS,
-	       0,
+	       NULL,
 	   WIN_RETAINED,
-	   xv_get(xv_get(SCROLLBAR_PUBLIC(sb), XV_SCREEN, 0),
+	   xv_get(xv_get(SCROLLBAR_PUBLIC(sb), XV_SCREEN, NULL),
 		  SCREEN_RETAIN_WINDOWS),
-	   0);
+	   NULL);
     
     /* create the GCs that are used for rendering -- jcb 4/17/89 */
     sb_init_GCs(sb);
@@ -145,15 +145,15 @@
 				MENU_ACTION_ITEM,
 				"Previous", scrollbar_last_position,
 				MENU_GEN_PROC, scrollbar_gen_menu,
-				XV_KEY_DATA, sb_context_key, sb,
-				XV_KEY_DATA, sb_split_view_menu_item_key,
-				xv_create(0, MENUITEM,
+				XV_KEY_DATA, (Attr_attribute)sb_context_key, sb,
+				XV_KEY_DATA, (Attr_attribute)sb_split_view_menu_item_key,
+				xv_create((Xv_object)NULL, MENUITEM,
 	     MENU_ACTION_ITEM, "Split View", scrollbar_split_view_from_menu,
-					  0),
-				XV_KEY_DATA, sb_join_view_menu_item_key,
-				xv_create(0, MENUITEM,
+					  NULL),
+				XV_KEY_DATA, (Attr_attribute)sb_join_view_menu_item_key,
+				xv_create((Xv_object)NULL, MENUITEM,
 	      MENU_ACTION_ITEM, "Join Views", scrollbar_join_view_from_menu,
-					  0),
-				0);
+					  NULL),
+				NULL);
 
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/scrollbar/sb_paint.c xview-3.2p1.4/lib/libxview/scrollbar/sb_paint.c
--- xview-3.2p1.4.orig/lib/libxview/scrollbar/sb_paint.c	1993-06-29 07:17:07.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/scrollbar/sb_paint.c	2013-01-07 12:50:49.206154000 +0100
@@ -215,7 +215,7 @@
 	 * make the indicator a 3 point mark above (or below) the
 	 * elevator
 	 */
-	if (*length < sb->elevator_rect.r_height) 
+	if (*length < sb->elevator_rect.r_height) {
 	  if ((elev_pos - 4) >= sb->cable_start) {
 	      *position = elev_pos - 4;
 	      *length = 2 + sb->elevator_rect.r_height + 1;
@@ -225,5 +225,6 @@
 	      *length = 2 + sb->elevator_rect.r_height;
 	  } else
 	    *length = 0;
+	}
     }
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/scrollbar/sb_set.c xview-3.2p1.4/lib/libxview/scrollbar/sb_set.c
--- xview-3.2p1.4.orig/lib/libxview/scrollbar/sb_set.c	1993-06-29 07:17:08.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/scrollbar/sb_set.c	2013-01-07 12:50:49.267533000 +0100
@@ -57,7 +57,7 @@
     long unsigned    view_start = 0;
     int              view_start_set = FALSE;
     
-    while (attr = *argv++) {
+    while (attr = (int)*argv++) {
 	switch (attr) {
 	  case SCROLLBAR_INACTIVE:
 	    sb->inactive = (int) *argv;
diff -Naur xview-3.2p1.4.orig/lib/libxview/sel/sel_agent.c xview-3.2p1.4/lib/libxview/sel/sel_agent.c
--- xview-3.2p1.4.orig/lib/libxview/sel/sel_agent.c	2013-01-07 12:36:31.869814000 +0100
+++ xview-3.2p1.4/lib/libxview/sel/sel_agent.c	2013-01-07 13:26:40.881165000 +0100
@@ -84,6 +84,7 @@
 Pkg_private void selection_init_holder_info();
 extern int seln_debug;
 
+Sel_cmpat_info * xv_sel_get_compat_data();
 
 
 
@@ -126,7 +127,7 @@
 #endif
 
     if ((window = xv_create(root_window, WINDOW, WIN_SELECTION_WINDOW,
-			    XV_SHOW, FALSE, 0)) == NULL) {
+			    XV_SHOW, FALSE, NULL)) == XV_NULL) {
 	complain("Could not create window");
 	exit(1);
     }
@@ -150,7 +151,7 @@
 	complain("No _SUN_SELN_CARET atom");
 	exit(1);
     }
-    (void) xv_set(server, XV_KEY_DATA, SELN_AGENT_INFO, agent, NULL);
+    (void) xv_set(server, XV_KEY_DATA, (Attr_attribute)SELN_AGENT_INFO, agent, NULL);
 }
 
 /*
@@ -168,7 +169,7 @@
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server,
 				   (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
     Window	    win = agent->xid;
     Display        *dpy =
 	(Display *) xv_get(server, (Attr_attribute)XV_DISPLAY);
@@ -219,7 +220,7 @@
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server,
 				   (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
     Atom            target;
     Atom            selection;
 
@@ -277,7 +278,7 @@
 	    Seln_agent_info *agent2 =
 		(Seln_agent_info *) xv_get(server,
 					   (Attr_attribute)XV_KEY_DATA,
-					   SELN_AGENT_INFO);
+					   (Attr_attribute)SELN_AGENT_INFO);
 	    Time            time = (Time) server_get_timestamp(server);
 	    Atom            property = get_property_atom(dpy, agent2);
 
@@ -313,8 +314,10 @@
     Seln_agent_info *agent;
 {
     struct stat     stat_buf;
-    int             count, size;
+    int             count;
+    size_t         size;
     char           *destp;
+    extern off_t   lseek();
 
     if (fstat(fd, &stat_buf) != 0) {
 	perror(XV_MSG("Agent couldn't reply about a file"));
@@ -331,7 +334,7 @@
 	*context->response_pointer++ = (char *) stat_buf.st_size;
 	return SELN_SUCCESS;
       case SELN_REQ_CONTENTS_ASCII:
-	size = stat_buf.st_size - (int) context->context;
+	size = stat_buf.st_size - (size_t) context->context;
 	if (size > max_length) {
 	    count = read(fd, (char *) context->response_pointer, max_length);
 	    if (count != max_length) {
@@ -346,7 +349,7 @@
     terminate_buffer:
 	    destp = (char *) context->response_pointer;
 	    destp += count;
-	    while ((int) destp % 4 != 0) {
+	    while ((unsigned long) destp % 4 != 0) {
 		*destp++ = '\0';
 	    }
 	    context->response_pointer = (char **) destp;
@@ -420,7 +423,7 @@
 {
     Seln_result         result;
     Seln_agent_info     *agent =
-        (Seln_agent_info *)xv_get(server, XV_KEY_DATA, SELN_AGENT_INFO);
+        (Seln_agent_info *)xv_get(server, XV_KEY_DATA, (Attr_attribute)SELN_AGENT_INFO);
     Display             *display =  (Display *)xv_get(server, XV_DISPLAY);
     unsigned long       nitems_return, bytes_remaining;
     unsigned char       *buffer;
@@ -552,7 +555,7 @@
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server,
 				   (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
     Display        *display =
 	(Display *) xv_get(server, (Attr_attribute)XV_DISPLAY);
     Seln_result     result;
@@ -609,7 +612,7 @@
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server,
 				   (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
     unsigned char  *buffer;
     char           *temp = (char *) context->response_pointer;
     Seln_result     result;
@@ -647,7 +650,7 @@
 	    unsigned int    num_bytes = nitems_return * format / 8;
 	    XV_BCOPY((char *) buffer, temp, (int) num_bytes);
 	    temp += num_bytes;
-	    while ((unsigned) temp % sizeof(*context->response_pointer))
+	    while ((unsigned long) temp % sizeof(*context->response_pointer))
 		*temp++ = '\0';
 	    context->response_pointer = (char **) temp;
 	    *context->response_pointer++ = 0;
@@ -679,7 +682,7 @@
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server,
 				   (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
     Atom            selection = seln_rank_to_selection(asked, agent);
 
     if (selection != None) {
@@ -725,7 +728,7 @@
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server,
 				   (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
     Window          owner = None;
     Atom            selection = seln_rank_to_selection(which, agent);
 
@@ -760,7 +763,7 @@
     Seln_holder     holder;
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server, (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
 
     rank = selection_to_rank(clear_event->selection, agent);
     switch (rank) {
@@ -804,7 +807,7 @@
 {
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server, (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
     Display        *dpy = (Display *) xv_get(server,
 					     (Attr_attribute)XV_DISPLAY);
     Window	    win = agent->xid;
@@ -868,7 +871,7 @@
     Xv_Server       server = (Xv_Server) buffer->requester.context;
     Seln_agent_info *agent =
         (Seln_agent_info *) xv_get(server, (Attr_attribute)XV_KEY_DATA,
-                                   SELN_AGENT_INFO);
+                                   (Attr_attribute)SELN_AGENT_INFO);
     Seln_agent_context *context = &agent->req_context;
     Attr_avlist         reply;
     int                 length, mode;
@@ -978,7 +981,7 @@
     Xv_Server       server = (Xv_Server) buffer->requester.context;
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server, (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
     Seln_agent_context *context = &agent->req_context;
     Attr_avlist     reply;
     int             mode, len;
@@ -1082,7 +1085,7 @@
 {
     Seln_agent_info    *agent =
 	(Seln_agent_info *) xv_get(server, (Attr_attribute)XV_KEY_DATA, 
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
     Display            *display =
 	(Display *) xv_get(server, (Attr_attribute)XV_DISPLAY);
     Time             	time;
@@ -1140,7 +1143,7 @@
 {
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server, (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
     Display        *display =
 	(Display *) xv_get(server, (Attr_attribute)XV_DISPLAY);
     Atom            property;
@@ -1240,7 +1243,7 @@
 	(Display *) xv_get(server, (Attr_attribute)XV_DISPLAY);
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server, (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
     Atom            selection = seln_rank_to_selection(rank, agent);
 
     if (selection != None) {
@@ -1268,7 +1271,7 @@
 {
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server, (Attr_attribute)XV_KEY_DATA, 
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
     Display        *dpy =
 	(Display *) xv_get(server, (Attr_attribute)XV_DISPLAY);
     Seln_attribute  attr= convert_target_to_attr(dpy, agent, req_event->target);
@@ -1367,7 +1370,7 @@
 {
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server, (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
     Display        *dpy =
 	(Display *) xv_get(server, (Attr_attribute)XV_DISPLAY);
     Seln_rank       rank;
@@ -1776,10 +1779,10 @@
 
 				    /* else, lets get it's value.             */
         if ((*current_value = XInternAtom(dpy, prop_name, 0)) == None) 
-                xv_error(NULL,
+                xv_error((Xv_object)NULL,
                         ERROR_STRING,
 		    XV_MSG("Couldn't get selection atom, selections may not work. (Selection package)"),
-			0);
+			NULL);
 				    /* Assoc. the atom value with an attr.    */
 				    /* This is used in convert_target_to_attr */
 				    /* to convert an atom back to an attr.    */
diff -Naur xview-3.2p1.4.orig/lib/libxview/sel/sel_clnt.c xview-3.2p1.4/lib/libxview/sel/sel_clnt.c
--- xview-3.2p1.4.orig/lib/libxview/sel/sel_clnt.c	1994-06-26 03:05:21.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/sel/sel_clnt.c	2013-01-07 12:50:49.576495000 +0100
@@ -18,6 +18,10 @@
 #include <sys/file.h>
 #include <xview/sel_compat.h>
 #include <xview/defaults.h>
+#ifdef __linux__
+#include <sys/types.h>
+#include <unistd.h>
+#endif
 
 
 /*
@@ -148,7 +152,7 @@
     Seln_holder     buffer;
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server, (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
     Seln_client_node *client;
 
     if ((int) asked > (int) SELN_UNSPECIFIED)
@@ -205,7 +209,7 @@
     Seln_client_node *client;
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server, (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
 
     client = (Seln_client_node *) seln_client;
     if (client == (Seln_client_node *) NULL) {
@@ -310,7 +314,7 @@
     Seln_holder     result;
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server, (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
 
     switch (which) {
       case SELN_UNSPECIFIED:
@@ -354,7 +358,7 @@
     Seln_holder    *rank_holder;
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server, (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
     int             rank;
 
     for (rank = 1; rank < SELN_RANKS; rank++) {
@@ -487,7 +491,7 @@
 {
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server, (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
 
     agent->agent_holder.state = SELN_NONE;
     agent->agent_holder.rank = SELN_UNKNOWN;
@@ -505,7 +509,7 @@
 	(Display *) xv_get(server, (Attr_attribute)XV_DISPLAY);
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server, (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
     Atom            selection = seln_rank_to_selection(rank, agent);
 
     if (selection != None) {
@@ -601,7 +605,7 @@
             Seln_holder     secondary;
     	    Seln_agent_info *agent =
 		(Seln_agent_info *) xv_get(server,(Attr_attribute)XV_KEY_DATA,
-					   SELN_AGENT_INFO);
+					   (Attr_attribute)SELN_AGENT_INFO);
 	    /*
 	     * This could possibly be speeded up by calling X directly i.e.
 	     * seln_give_up_selection
@@ -722,7 +726,7 @@
     Seln_result     result;
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server, (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
     Seln_holder     holder;
 
     if (ord(input.rank) < ord(SELN_PRIMARY) ||
@@ -766,6 +770,6 @@
 {
     Seln_agent_info *agent =
 	(Seln_agent_info *) xv_get(server, (Attr_attribute)XV_KEY_DATA,
-				   SELN_AGENT_INFO);
+				   (Attr_attribute)SELN_AGENT_INFO);
     agent->timeout = seconds;
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/sel/seln.c xview-3.2p1.4/lib/libxview/sel/seln.c
--- xview-3.2p1.4.orig/lib/libxview/sel/seln.c	2013-01-07 12:36:31.981072000 +0100
+++ xview-3.2p1.4/lib/libxview/sel/seln.c	2013-01-07 12:50:49.614909000 +0100
@@ -21,14 +21,18 @@
 #include <xview_private/i18n_impl.h>
 #include <xview/xview_xvin.h>
 #include <xview/selection.h>
+#include <unistd.h>			/* unlink() */
 
 struct selection selnull;
 
 #define	SEL_FILEMODE	0X0777
 
+Xv_public char    *xv_getlogindir();
+
 char           *selection_filename();
 
 /* ARGSUSED */
+void
 selection_set(sel, sel_write, sel_clear, window)
     struct selection *sel;
     int             (*sel_write) (), (*sel_clear) ();
@@ -58,22 +62,23 @@
     /* Make so everyone can access */
     (void) fchmod(fileno(file), 0666);
     (void) fprintf(file, "TYPE=%ld, ITEMS=%ld, ITEMBYTES=%ld, PUBFLAGS=%lx, PRIVDATA=%lx\n",
-		   sel->sel_type, sel->sel_items, sel->sel_itembytes,
-		   sel->sel_pubflags, sel->sel_privdata);
+		   (long)sel->sel_type, (long)sel->sel_items, (long)sel->sel_itembytes,
+		   (long)sel->sel_pubflags, (long)sel->sel_privdata);
     (*sel_write) (sel, file);
     (void) fclose(file);
     (void) win_unlockdata(window);
 }
 
+void
 selection_get(sel_read, window)
     int             (*sel_read) ();
     Xv_object       window;
 {
     struct selection selection, *sel = &selection;
     FILE           *file;
-    int             c;
+    char             c;
     int             n;
-    extern          errno;
+    /*extern          errno;*/
 
     *sel = selnull;
     (void) win_lockdata(window);
@@ -94,16 +99,16 @@
     } else
 	(void) ungetc(c, file);
     if ((n = fscanf(file,
-	 "TYPE=%ld, ITEMS=%ld, ITEMBYTES=%ld, PUBFLAGS=%lx, PRIVDATA=%lx%c",
+	 "TYPE=%d, ITEMS=%d, ITEMBYTES=%d, PUBFLAGS=%x, PRIVDATA=%lx%c",
 		    &sel->sel_type, &sel->sel_items, &sel->sel_itembytes,
 		    &sel->sel_pubflags, &sel->sel_privdata, &c)) != 6) {
 	(void) win_unlockdata(window);
 	(void) fprintf(stderr, 
 		XV_MSG("%s not in correct format\n"),
 		       selection_filename());
-	(void) fprintf(stderr, "TYPE=%ld, ITEMS=%ld, ITEMBYTES=%ld, PUBFLAGS=%lx, PRIVDATA=%lx c=%c, n=%ld\n",
+	(void) fprintf(stderr, "TYPE=%d, ITEMS=%d, ITEMBYTES=%d, PUBFLAGS=%x, PRIVDATA=%lx c=%c, n=%d\n",
 		       sel->sel_type, sel->sel_items, sel->sel_itembytes,
-		       sel->sel_pubflags, sel->sel_privdata, c, n);
+		       sel->sel_pubflags, (long)sel->sel_privdata, c, n);
 	goto Cleanup;
     }
     (*sel_read) (sel, file);
@@ -112,6 +117,7 @@
     (void) win_unlockdata(window);
 }
 
+void
 selection_clear(window)
     Xv_object       window;
 {
diff -Naur xview-3.2p1.4.orig/lib/libxview/sel/seln_impl.h xview-3.2p1.4/lib/libxview/sel/seln_impl.h
--- xview-3.2p1.4.orig/lib/libxview/sel/seln_impl.h	2013-01-07 12:36:31.937025000 +0100
+++ xview-3.2p1.4/lib/libxview/sel/seln_impl.h	2013-01-07 12:50:49.668791000 +0100
@@ -234,4 +234,6 @@
 Pkg_private int		seln_equal_agent();
 Pkg_private Xv_opaque	seln_agent_client();
 
+Pkg_private int		seln_equal_access();
+
 #endif
diff -Naur xview-3.2p1.4.orig/lib/libxview/selection/sel_item.c xview-3.2p1.4/lib/libxview/selection/sel_item.c
--- xview-3.2p1.4.orig/lib/libxview/selection/sel_item.c	2013-01-07 12:36:21.291638000 +0100
+++ xview-3.2p1.4/lib/libxview/selection/sel_item.c	2013-01-07 12:50:49.737233000 +0100
@@ -78,8 +78,8 @@
     Sel_owner_info  *sel_owner;
     XID             xid;
     
-    for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-	switch (attrs[0]) {
+    for (attrs = avlist; (int)*attrs; attrs = attr_next(attrs)) {
+	switch ((int)attrs[0]) {
 	  case SEL_COPY:
 	    sel_item->copy = (Bool) attrs[1];
 	    break;
@@ -145,7 +145,7 @@
 {
     Sel_item_info  *sel_item = SEL_ITEM_PRIVATE(sel_item_public);
 
-    switch (attr) {
+    switch ((int)attr) {
       case SEL_COPY:
 	return (Xv_opaque) sel_item->copy;
       case SEL_DATA:
diff -Naur xview-3.2p1.4.orig/lib/libxview/selection/sel_own.c xview-3.2p1.4/lib/libxview/selection/sel_own.c
--- xview-3.2p1.4.orig/lib/libxview/selection/sel_own.c	2013-01-07 12:36:21.524450000 +0100
+++ xview-3.2p1.4/lib/libxview/selection/sel_own.c	2013-01-07 12:50:49.769684000 +0100
@@ -47,6 +47,13 @@
 
 static int SendIncr(Sel_owner_info  *seln);
 
+#ifdef __STDC__
+static int SendIncr(Sel_owner_info *seln);
+#else
+static int SendIncr();
+#endif
+
+
 extern XContext  selCtx;
 extern XContext  propCtx;
 extern XContext  reqCtx;
@@ -101,7 +108,7 @@
         return result;
     
     for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-        switch (attrs[0]) {
+        switch ((int)attrs[0]) {
 	  case SEL_CONVERT_PROC:
 	    sel_owner->convert_proc = (Bool (*) ()) attrs[1];
 
@@ -144,7 +151,7 @@
     int		    arg;
     Sel_item_info  *ip;
 
-    switch (attr) {
+    switch ((int)attr) {
       case SEL_CONVERT_PROC:
 	return (Xv_opaque) sel_owner->convert_proc;
       case SEL_DONE_PROC:
diff -Naur xview-3.2p1.4.orig/lib/libxview/selection/sel_req.c xview-3.2p1.4/lib/libxview/selection/sel_req.c
--- xview-3.2p1.4.orig/lib/libxview/selection/sel_req.c	2013-01-07 12:36:21.150968000 +0100
+++ xview-3.2p1.4/lib/libxview/selection/sel_req.c	2013-01-07 14:29:53.093256000 +0100
@@ -39,7 +39,6 @@
 Pkg_private Sel_owner_info  *xv_sel_find_selection_data();
 Pkg_private Notify_value xv_sel_handle_sel_timeout();
 
-static void XvGetSeln();
 static void SetExtendedData();
 static void SetupMultipleRequest();
 static void SelSaveData();
@@ -52,14 +51,28 @@
 static int HandleLocalIncr();
 static int ProcessMultiple();
 static int GetSelection();
-static int ProcessReply();
 static Requestor *SelGetReq();
 
-static int XvGetRequestedValue();
-static XID SelGetOwnerXID(Sel_req_info *selReq);
+#ifdef __STDC__
+static int OldPkgIsOwner(Display *dpy, Atom selection, Window xid, Sel_reply_info *reply, Sel_req_info *selReq);
 static int ProcessNonBlkIncr(Sel_req_info *selReq, Sel_reply_info *reply, XSelectionEvent *ev, Atom target);
+static int ProcessReply(Sel_reply_info *reply, XPropertyEvent *ev);
 static int ProcessReq(Requestor *req, XPropertyEvent *ev);
-static int OldPkgIsOwner(Display *dpy, Atom selection, Window xid, Sel_reply_info *reply, Sel_req_info *selReq);
+static XID SelGetOwnerXID(Sel_req_info *selReq);
+static int XvGetRequestedValue(Sel_req_info *selReq, XSelectionEvent *ev, Sel_reply_info *replyInfo, Atom target, Atom property, int blocking);
+static void XvGetSeln(Display *dpy, XID xid, Sel_req_info *selReq, Time time, int blocking);
+#else
+static int OldPkgIsOwner();
+static int ProcessNonBlkIncr();
+static int ProcessReply();
+static int ProcessReq();
+static XID SelGetOwnerXID();
+static int XvGetRequestedValue();
+static void XvGetSeln();
+#endif
+
+Xv_object win_data();
+
 
 /*ARGSUSED*/
 Pkg_private int
diff -Naur xview-3.2p1.4.orig/lib/libxview/selection/sel_req.c.rej xview-3.2p1.4/lib/libxview/selection/sel_req.c.rej
--- xview-3.2p1.4.orig/lib/libxview/selection/sel_req.c.rej	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/lib/libxview/selection/sel_req.c.rej	2013-01-07 14:29:45.678232000 +0100
@@ -0,0 +1,22 @@
+--- lib/libxview/selection/sel_req.c	2005-07-27 11:24:28.549720315 +0200
++++ lib/libxview/selection/sel_req.c	2005-06-13 13:13:53.414746848 +0200
+@@ -122,8 +140,8 @@
+ 
+     sel_info = SEL_PRIVATE( sel_req->public_self );
+ 
+-    for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
+-	switch (attrs[0]) {
++    for (attrs = avlist; (int)*attrs; attrs = attr_next(attrs)) {
++	switch ((int)attrs[0]) {
+ 	  case SEL_REPLY_PROC:
+ 	    sel_req->reply_proc = (void (*) ()) attrs[1];
+ 	    break;
+@@ -290,7 +308,7 @@
+     static Atom         *types=NULL;
+     static char         **typeNames=NULL;
+ 
+-    switch (attr) {
++    switch ((int)attr) {
+       case SEL_DATA:
+ 	/* Initiate a blocking request */
+         arg = va_arg(valist, int);
diff -Naur xview-3.2p1.4.orig/lib/libxview/selection/sel_util.c xview-3.2p1.4/lib/libxview/selection/sel_util.c
--- xview-3.2p1.4.orig/lib/libxview/selection/sel_util.c	2013-01-07 12:36:21.356746000 +0100
+++ xview-3.2p1.4/lib/libxview/selection/sel_util.c	2013-01-07 12:50:54.022945000 +0100
@@ -21,8 +21,12 @@
 
 static void tvdiff();
 static void FreeMultiProp();
-static int	SelMatchReply();
+static int SelMatchReply();
 static Sel_req_tbl *SelMatchReqTbl();
+static int SelFindReply();
+
+Xv_object win_data();
+
 
 static int SelFindReply(Sel_reply_info *r1, Sel_reply_info *r2);
 
@@ -117,10 +121,10 @@
     /* Wait for the PropertyNotify */
     arg = PropertyNotify;
     if ( !xv_sel_block_for_event( dpy, &event, 3 , xv_sel_predicate, (char *) &arg ) ) {
-	xv_error(NULL,
+	xv_error(XV_NULL,
                  ERROR_STRING,XV_MSG("xv_sel_get_last_event_time: Unable to get the last event time"),
 	         ERROR_PKG,SELECTION,
-                 0);
+                 NULL);
 	return ( (Time) NULL );
     }
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/selection/selection.c xview-3.2p1.4/lib/libxview/selection/selection.c
--- xview-3.2p1.4.orig/lib/libxview/selection/selection.c	2013-01-07 12:36:21.748286000 +0100
+++ xview-3.2p1.4/lib/libxview/selection/selection.c	2013-01-07 12:50:54.059060000 +0100
@@ -75,8 +75,8 @@
     Sel_info	    *sel = SEL_PRIVATE(sel_public);
     XID             xid=0;
     
-    for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-        switch (attrs[0]) {
+    for (attrs = avlist; (int)*attrs; attrs = attr_next(attrs)) {
+        switch ((int)attrs[0]) {
 	  case SEL_RANK:
 	    sel->rank = (Atom) attrs[1];
 	    rank_set = TRUE;
@@ -115,7 +115,7 @@
 {
     Sel_info	   *sel = SEL_PRIVATE(sel_public);
 
-    switch (attr) {
+    switch ((int)attr) {
       case SEL_RANK:
 	return (Xv_opaque) sel->rank;
       case SEL_RANK_NAME:
diff -Naur xview-3.2p1.4.orig/lib/libxview/server/server.c xview-3.2p1.4/lib/libxview/server/server.c
--- xview-3.2p1.4.orig/lib/libxview/server/server.c	2013-01-07 12:36:33.856042000 +0100
+++ xview-3.2p1.4/lib/libxview/server/server.c	2013-01-07 12:50:54.095162000 +0100
@@ -65,6 +65,7 @@
 
 static int		 xv_set_scheduler();
 
+static int		 xv_set_scheduler();
 static void		 load_kbd_cmds();
 static void     	 server_init_atoms();
 static void		 destroy_atoms();
@@ -105,6 +106,8 @@
 extern char    		*getenv();
 Xv_private_data char 	*xv_shell_prompt;
 
+char * bindtextdomain();
+
 /* global default server parameters */
 #ifndef __linux__
 Xv_private_data Xv_Server xv_default_server;
@@ -375,7 +378,7 @@
     char			*xrmstr;
 
     for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-	switch (attrs[0]) {
+	switch ((int)attrs[0]) {
 	  case XV_NAME:
 	    server_name = (char *) attrs[1];
 	    *attrs = ATTR_NOP(*attrs);
@@ -472,7 +475,7 @@
         if (home = getenv("HOME"))
 	    (void) strcpy(filename, home);
         else
-	    filename[0] = NULL;
+	    filename[0] = '\0';
         (void) strcat(filename, "/.Xdefaults");
         server->db = XrmGetFileDatabase(filename);
     }
@@ -546,7 +549,7 @@
 	 */
 
 	for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-	switch (attrs[0]) {
+	switch ((int)attrs[0]) {
 	      case XV_LOCALE_DIR:
 		if (attrs[1]) {
 		    if (server->localedir) {
@@ -814,10 +817,10 @@
     /* Store away the block of atom storage.  This will be used by the
      * atom manager.
      */
-    xv_set(SERVER_PUBLIC(server), XV_KEY_DATA, server->atom_list_head_key,
-                                               atom_list, 0);
-    xv_set(SERVER_PUBLIC(server), XV_KEY_DATA, server->atom_list_tail_key,
-                                               atom_list, 0);
+    xv_set(SERVER_PUBLIC(server), XV_KEY_DATA, (Attr_attribute)server->atom_list_head_key,
+                                               atom_list, NULL);
+    xv_set(SERVER_PUBLIC(server), XV_KEY_DATA, (Attr_attribute)server->atom_list_tail_key,
+                                               atom_list, NULL);
 
     server_init_atoms(server_public);
 
@@ -828,7 +831,7 @@
 
     server->screens[default_screen_num] = xv_create(server_public, SCREEN,
 		    SCREEN_NUMBER, default_screen_num,
-		    0);
+		    NULL);
 
     if (!server->screens[default_screen_num]) {
 	    goto Error_Return;
@@ -1450,7 +1453,7 @@
     unsigned int         i;
  
     head = (Server_atom_list *)xv_get(SERVER_PUBLIC(server), XV_KEY_DATA,
-                                                    server->atom_list_head_key);    node = head;
+                                                    (Attr_attribute)server->atom_list_head_key);    node = head;
             
     number_of_blocks = (server->atom_list_number -1)/SERVER_LIST_SIZE;
  
@@ -1486,7 +1489,7 @@
     }
                         /* Free up the atom manager stuff */
     head = (Server_atom_list *)xv_get(SERVER_PUBLIC(server), XV_KEY_DATA,
-                                                    server->atom_list_head_key); 
+                                                    (Attr_attribute)server->atom_list_head_key); 
 
     while(node = (Server_atom_list *) (XV_SL_SAFE_NEXT(head)))
         xv_free(XV_SL_REMOVE_AFTER(head, head));
@@ -1563,12 +1566,12 @@
      */
     atom = XInternAtom(server->xdisplay, "JOURNAL_SYNC", TRUE);
     if (atom == BadValue || atom == BadAlloc) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_SEVERITY, ERROR_NON_RECOVERABLE, 
 		 ERROR_STRING, 
 		 XV_MSG("Can't create SERVER_JOURNAL_ATOM atom"),
 		 ERROR_PKG, SERVER,
-		 0);
+		 NULL);
     }
     if (atom == None) {		/* not in journalling mode */
 	server->journalling = FALSE;
@@ -1737,7 +1740,7 @@
     cme->display = dpy;
     /* get the xid of the root window -- not 100% correct */
     /*
-     * DRAWABLE_INFO(xv_get(xv_get(server_public,SERVER_NTH_SCREEN,0),XV_ROOT),
+     * DRAWABLE_INFO(xv_get(xv_get(server_public,SERVER_NTH_SCREEN,NULL),XV_ROOT),
      * info); cme->window = xv_xid(info); */
     cme->window = DefaultRootWindow((Display *) server->xdisplay),
     cme->message_type = sync_atom;
@@ -1854,7 +1857,7 @@
 server_warning(msg)
     char	*msg;
 {
-    xv_error(NULL,
+    xv_error((Xv_object)NULL,
 	     ERROR_STRING,	msg,
 	     ERROR_PKG,		SERVER,
 	     NULL);
diff -Naur xview-3.2p1.4.orig/lib/libxview/server/svr_atom.c xview-3.2p1.4/lib/libxview/server/svr_atom.c
--- xview-3.2p1.4.orig/lib/libxview/server/svr_atom.c	1993-06-29 07:15:30.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/server/svr_atom.c	2013-01-07 12:50:54.151569000 +0100
@@ -17,7 +17,11 @@
 #include <xview_private/svr_impl.h>
 #include <xview/server.h>
 
+#ifdef __STDC__
+static void update_atom_list(Server_info *server, Atom atom);
+#else
 static void update_atom_list();
+#endif
 
 Xv_private Atom 
 server_intern_atom(server, atomName)
@@ -104,7 +108,7 @@
 
 			/* Get the tail of our list. */
 	atom_list_tail = (Server_atom_list *)xv_get(SERVER_PUBLIC(server),
-				       XV_KEY_DATA, server->atom_list_tail_key);
+				       XV_KEY_DATA, (Attr_attribute)server->atom_list_tail_key);
 
 			/* Figure out what slot in this block is empty. */
 	slot = server->atom_list_number % SERVER_LIST_SIZE;
@@ -118,11 +122,11 @@
 	    atom_list->list[0] = atom;
 
 	    atom_list_head = (Server_atom_list *)xv_get(SERVER_PUBLIC(server),
-				       XV_KEY_DATA, server->atom_list_head_key);
+				       XV_KEY_DATA, (Attr_attribute)server->atom_list_head_key);
 	    XV_SL_ADD_AFTER(atom_list_head, atom_list_tail, atom_list);
 
 	    xv_set(SERVER_PUBLIC(server), XV_KEY_DATA,
-				      server->atom_list_tail_key, atom_list, 0);
+				      (Attr_attribute)server->atom_list_tail_key, atom_list, NULL);
 	} else
 	    atom_list_tail->list[slot] = atom;
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/server/svr_get.c xview-3.2p1.4/lib/libxview/server/svr_get.c
--- xview-3.2p1.4.orig/lib/libxview/server/svr_get.c	1993-06-29 07:15:27.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/server/svr_get.c	2013-01-07 12:50:54.182693000 +0100
@@ -18,7 +18,8 @@
 #include <xview/sel_svc.h>
 
 Xv_private Xv_opaque xv_font_with_name();
-Pkg_private Atom server_intern_atom();
+Xv_opaque server_get_atom_data();
+char * server_get_atom_name();
 
 Pkg_private     Xv_opaque
 server_get_attr(server_public, status, attr, valist)
@@ -28,10 +29,9 @@
     va_list         valist;
 {
     register Server_info *server = SERVER_PRIVATE(server_public);
-    Xv_opaque result = 0;
     extern Xv_opaque server_get_attr_tier2();
 
-    switch (attr) {
+    switch ((int)attr) {
       case SERVER_ATOM: {
 	register char *name = va_arg(valist, char *);
 	return((Xv_opaque)server_intern_atom(server, name)); 
diff -Naur xview-3.2p1.4.orig/lib/libxview/server/svr_impl.h xview-3.2p1.4/lib/libxview/server/svr_impl.h
--- xview-3.2p1.4.orig/lib/libxview/server/svr_impl.h	1993-06-29 07:15:28.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/server/svr_impl.h	2013-01-07 12:50:54.248081000 +0100
@@ -194,4 +194,17 @@
 Pkg_private Server_mask_list *server_masknode_from_xidid ();
 Pkg_private Server_proc_list *server_procnode_from_id ();
 
+/* svr_atom.c */
+#ifdef __STDC__
+Xv_private Atom server_intern_atom(Server_info *server, char *atomName);
+Xv_private char *server_get_atom_name(Server_info *server, Atom atom);
+Xv_private int server_set_atom_data(Server_info *server, Atom atom, Xv_opaque data);
+Xv_private Xv_opaque server_get_atom_data(Server_info *server, Atom atom, int *status);
+#else
+Xv_private Atom server_intern_atom();
+Xv_private char *server_get_atom_name();
+Xv_private int server_set_atom_data();
+Xv_private Xv_opaque server_get_atom_data();
+#endif
+
 #endif
diff -Naur xview-3.2p1.4.orig/lib/libxview/server/svr_kmdata.h xview-3.2p1.4/lib/libxview/server/svr_kmdata.h
--- xview-3.2p1.4.orig/lib/libxview/server/svr_kmdata.h	2013-01-07 12:36:33.506963000 +0100
+++ xview-3.2p1.4/lib/libxview/server/svr_kmdata.h	2013-01-07 12:50:54.275048000 +0100
@@ -15,8 +15,12 @@
 #define MAX_NBR_MAPPINGS 6
 
 #if defined(__linux__) && !defined(NULL)
+#ifdef __STDC__
+#define NULL ((void *)0)
+#else
 #define NULL 0
 #endif
+#endif
 
 /***************************************************************************
  *
diff -Naur xview-3.2p1.4.orig/lib/libxview/server/svr_parse.c xview-3.2p1.4/lib/libxview/server/svr_parse.c
--- xview-3.2p1.4.orig/lib/libxview/server/svr_parse.c	1993-06-29 07:15:30.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/server/svr_parse.c	2013-01-07 12:50:54.307536000 +0100
@@ -674,7 +674,7 @@
     /* if keysym already set, that's an error */
     if( avp->keysym ) {
 	avp->error = 1;
-	return;
+	return (CHAR *)NULL;
     }
 
     /* look for 'raw' space or punctuation */
diff -Naur xview-3.2p1.4.orig/lib/libxview/server/svr_rodata.c xview-3.2p1.4/lib/libxview/server/svr_rodata.c
--- xview-3.2p1.4.orig/lib/libxview/server/svr_rodata.c	1993-06-29 07:15:30.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/server/svr_rodata.c	2013-01-07 12:50:54.345039000 +0100
@@ -26,7 +26,7 @@
  *
  ***************************************************************************/
 const unsigned int win_keymap[] = {
-	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+	0, 0, 0, 0, 0, 0, 0, 0,
 /*
  * TTY Functions, cleverly chosen to map to ascii, for convenience of
  * programming, but could have been arbitrary (at the cost of lookup
@@ -37,10 +37,10 @@
 	XK_Tab,
 	XK_Linefeed,
 	XK_Clear,
-	NULL,
+	0,
 	XK_Return,
 
-	NULL, NULL,
+	0, 0,
 
 	/* BUG: On X11/NeWS, Keysym F36 and F37 happen to fall into a couple
 		of holes in the win_keymap table.  We will use them for
@@ -51,31 +51,31 @@
 	KEY_TOP(11),					/* XK_SunF36 */
 	KEY_TOP(12),					/* XK_SunF37 */
 
-	NULL,
+	0,
 
 	XK_Pause,
 #ifndef XK_Scroll_Lock
-        NULL,
+        0,
 #else    
         /* BUG: Only in R4. */
         XK_Scroll_Lock,                 		/* XK_Scroll_Lock */
 #endif /* XK_Scroll_Lock */
-	NULL, NULL, NULL, NULL, NULL, NULL,
+	0, 0, 0, 0, 0, 0,
 
 	XK_Escape,
 
-	NULL, NULL, NULL, NULL,
+	0, 0, 0, 0,
 
 	/* International & multi-key character composition */
 
 	XK_Multi_key,
 	XK_Kanji,
 
-	NULL, NULL, NULL,                         NULL, NULL, NULL,
-	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
-	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
-	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
-	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+	0, 0, 0,             0, 0, 0,
+	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 
 	/* Cursor control & motion */
 
@@ -89,7 +89,7 @@
 	XK_End,
 	XK_Begin,
 
-	NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+	0, 0, 0, 0, 0, 0, 0,
 
 	/* Misc Functions */
  
@@ -97,7 +97,7 @@
 	XK_Print,
 	XK_Execute,
 	XK_Insert,
-	NULL,
+	0,
 	XK_Undo,
 	XK_Redo,
 	XK_Menu,
@@ -106,8 +106,8 @@
 	XK_Help,
 	SHIFT_BREAK,					/* XK_Break */
 	
-	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
-	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+	0, 0, 0, 0, 0, 0, 0, 0, 0,
+	0, 0, 0, 0, 0, 0, 0, 0, 0,
 
 	SHIFT_ALTG,					/* XK_script_switch */
 	SHIFT_NUMLOCK,					/* XK_Num_Lock      */
@@ -116,24 +116,24 @@
 
 	XK_KP_Space,
 
-	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+	0, 0, 0, 0, 0, 0, 0, 0,
 
 	XK_KP_Tab,
 
-	NULL, NULL, NULL,
+	0, 0, 0,
 
 	XK_KP_Enter,
 
-	NULL, NULL, NULL,
+	0, 0, 0,
 
 	XK_KP_F1,
 	XK_KP_F2,
 	XK_KP_F3,
 	XK_KP_F4,
 
-	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
-	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
-	NULL,
+	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+	0,
 
 	XK_KP_Multiply,
 	XK_KP_Add,
@@ -152,7 +152,7 @@
 	XK_KP_8,
 	XK_KP_9,
 
-	NULL, NULL, NULL,
+	0, 0, 0,
 
 	XK_KP_Equal,
 
@@ -215,8 +215,8 @@
 	XK_Hyper_L,
 	XK_Hyper_R,
 
-	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
-	NULL, NULL, NULL, NULL, NULL, NULL,
+	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+	0, 0, 0, 0, 0, 0,
 
 	XK_Delete
 };
diff -Naur xview-3.2p1.4.orig/lib/libxview/server/svr_set.c xview-3.2p1.4/lib/libxview/server/svr_set.c
--- xview-3.2p1.4.orig/lib/libxview/server/svr_set.c	1993-06-29 07:15:27.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/server/svr_set.c	2013-01-07 12:50:54.377569000 +0100
@@ -376,7 +376,7 @@
     return error;
 }
 
-static
+static int
 server_add_xevent_mask (server, xid, mask, pkg_id, external)
     Server_info    *server;
     Xv_opaque	xid;
diff -Naur xview-3.2p1.4.orig/lib/libxview/server/svr_x.c xview-3.2p1.4/lib/libxview/server/svr_x.c
--- xview-3.2p1.4.orig/lib/libxview/server/svr_x.c	2013-01-07 12:36:33.654173000 +0100
+++ xview-3.2p1.4/lib/libxview/server/svr_x.c	2013-01-07 12:50:54.452546000 +0100
@@ -26,6 +26,9 @@
 #include <xview/server.h>
 #include <xview_private/svr_impl.h>
 #include <X11/keysym.h>
+#ifdef __linux__
+#include <unistd.h>			/* sleep() */
+#endif
 
 extern Display *XOpenDisplay();
 #ifndef __linux__
@@ -275,11 +278,11 @@
 	}
 
 	/* all our attempts failed */
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING, 
 		    XV_MSG("Problems setting default modifier mapping"),
 		 ERROR_PKG, SERVER,
-		 0);
+		 NULL);
 
     	XFreeModifiermap(map);
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/server_image/svrim_ops.c xview-3.2p1.4/lib/libxview/server_image/svrim_ops.c
--- xview-3.2p1.4.orig/lib/libxview/server_image/svrim_ops.c	1993-06-29 07:15:31.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/server_image/svrim_ops.c	2013-01-07 12:50:54.503669000 +0100
@@ -41,11 +41,11 @@
 	    xv_read_internal(dest, dx, dy, dw, dh, op, xv_display(info),
 			     xv_xid(info), sx, sy);
 	} else {
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		     ERROR_STRING,
 		         XV_MSG("server_image_rop(): src is not a server image"),
 		     ERROR_PKG, SERVER_IMAGE,
-		     0);
+		     NULL);
 	    return (PIX_ERR);
 	}
 	break;
@@ -80,11 +80,11 @@
 	    break;
 	}
       default:
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING,
 	XV_MSG("server_image_rop(): dest is not a memory pixrect or a server_image"),
 		 ERROR_PKG, SERVER_IMAGE,
-		 0);
+		 NULL);
 	return (PIX_ERR);
     }
     return (0);
@@ -103,11 +103,11 @@
     Pixrect        *temp_pr, *temp_st;
 
     if (stencil_type != MEMORY_PR && stencil_type != SERVER_IMAGE_PR) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING,
 		     XV_MSG("server_image_stencil(): stencil is not a memory pr or a server image"),
 		 ERROR_PKG, SERVER_IMAGE,
-		 0);
+		 NULL);
 	return (PIX_ERR);
     }
     switch (dest_type) {
@@ -124,11 +124,11 @@
 				    ((Pixrect *) src)->pr_height,
 				    ((Pixrect *) src)->pr_depth);
 	    if (!temp_pr) {
-		xv_error(NULL,
+		xv_error((Xv_object)NULL,
 			 ERROR_STRING,
 			     XV_MSG("server_image_stencil(): Can't create mpr in server_image_stencil"),
 			 ERROR_PKG, SERVER_IMAGE,
-			 0);
+			 NULL);
 		return (PIX_ERR);
 	    }
 	    xv_read_internal(temp_pr, dx, dy, dw, dh, PIX_SRC,
@@ -139,11 +139,11 @@
 					((Pixrect *) st)->pr_height,
 					((Pixrect *) st)->pr_depth);
 		if (!temp_st) {
-		    xv_error(NULL,
+		    xv_error((Xv_object)NULL,
 			     ERROR_STRING,
 			         XV_MSG("server_image_stencil(): Can't create mpr in server_image_stencil"),
 			     ERROR_PKG, SERVER_IMAGE,
-			     0);
+			     NULL);
 		    return (PIX_ERR);
 		}
 		xv_read_internal(temp_st, dx, dy, dw, dh, PIX_SRC,
@@ -170,11 +170,11 @@
 	     * If the src isn't image pr, and dest IS mpr, then this routine
 	     * should never have been called.
 	     */
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		     ERROR_STRING,
 		  XV_MSG("server_image_stencil(): dest is mpr, src isn't image pr"),
 		     ERROR_PKG, SERVER_IMAGE,
-		     0);
+		     NULL);
 	    return (PIX_ERR);
 	}
 	break;
@@ -198,11 +198,11 @@
 	    break;
 	}
       default:
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING,
 	       XV_MSG("server_image_stencil(): dest is not mpr or server_image_pr"),
 		 ERROR_PKG, SERVER_IMAGE,
-		 0);
+		 NULL);
 	return (PIX_ERR);
 	break;
     }
@@ -227,17 +227,17 @@
 		 * Create a remote image copy of the (larger) destination
 		 * pixrect
 		 */
-		temp = (Pixrect *) xv_create(0, SERVER_IMAGE,
+		temp = (Pixrect *) xv_create((Xv_object)NULL, SERVER_IMAGE,
 					     XV_WIDTH, dw,
 					     XV_HEIGHT, dh,
 			   SERVER_IMAGE_DEPTH, ((Pixrect *) dest)->pr_depth,
-					     0);
+					     NULL);
 		if (!temp) {
-		    xv_error(NULL,
+		    xv_error((Xv_object)NULL,
 			     ERROR_STRING,
 		    XV_MSG("server_image_replrop(): Unable to create server image"),
 			     ERROR_PKG, SERVER_IMAGE,
-			     0);
+			     NULL);
 		    return (PIX_ERR);
 		}
 		/* Replrop the src to the remote image copy */
@@ -250,11 +250,11 @@
 		/* Destroy the remote image copy */
 		xv_destroy((Xv_opaque)temp);
 	    } else {
-		xv_error(NULL,
+		xv_error((Xv_object)NULL,
 			 ERROR_STRING,
 		  XV_MSG("server_image_replrop(): dest is mpr, src isn't image pr"),
 			 ERROR_PKG, SERVER_IMAGE,
-			 0);
+			 NULL);
 		return (PIX_ERR);
 	    }
 	    break;
@@ -280,21 +280,21 @@
 		xv_replrop_internal(display, info, xid,
 			     replrop_gc, dx, dy, dw, dy, src, sx, sy, info);
 	    } else {
-		xv_error(NULL,
+		xv_error((Xv_object)NULL,
 			 ERROR_STRING,
 			 XV_MSG("server_image_replrop(): dest is image pr, src isn't image pr or mpr"),
 			 ERROR_PKG, SERVER_IMAGE,
-			 0);
+			 NULL);
 		return (PIX_ERR);
 	    }
 	    break;
 	}
       default:
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING,
 	       XV_MSG("server_image_replrop(): dest is not mpr or server_image_pr"),
 		 ERROR_PKG, SERVER_IMAGE,
-		 0);
+		 NULL);
 	return (PIX_ERR);
     }
 
@@ -337,11 +337,11 @@
     Xv_opaque       dest;
     int             x, y, w, h;
 {
-    xv_error(NULL,
+    xv_error((Xv_object)NULL,
 	     ERROR_STRING, 
 	     XV_MSG("server_image_region: Unsupported operation"),
 	     ERROR_PKG, SERVER_IMAGE,
-	     0);
+	     NULL);
     return (NULL);
 }
 
@@ -351,11 +351,11 @@
     int             index, count;
     unsigned char   red[], green[], blue[];
 {
-    xv_error(NULL,
+    xv_error((Xv_object)NULL,
 	     ERROR_STRING, 
 	     XV_MSG("Server images do not have associated colormaps"),
 	     ERROR_PKG, SERVER_IMAGE,
-	     0);
+	     NULL);
     return (PIX_ERR);
 }
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/server_image/svrim_pblc.c xview-3.2p1.4/lib/libxview/server_image/svrim_pblc.c
--- xview-3.2p1.4.orig/lib/libxview/server_image/svrim_pblc.c	1993-06-29 07:15:32.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/server_image/svrim_pblc.c	2013-01-07 12:50:54.557779000 +0100
@@ -30,6 +30,13 @@
 #include <xview_private/svrim_impl.h>
 #include <X11/Xutil.h>
 
+Pixrect * xv_mem_point();
+
+#ifdef __STDC__
+Xv_private int xv_set_embedding_data(Xv_opaque object, Xv_opaque std_object);
+#else
+Xv_private int xv_set_embedding_data();
+#endif
 
 Xv_private_data struct pixrectops server_image_ops = {
     server_image_rop,
@@ -67,17 +74,17 @@
 	(Xv_opaque) xv_alloc(Server_image_info);
 
     if (!(server_image = SERVER_IMAGE_PRIVATE(server_image_public))) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING, 
 		 XV_MSG("Server image alloc failed"),
 		 ERROR_PKG, SERVER_IMAGE,
-		 0);
+		 NULL);
 	return (XV_ERROR);
     }
     server_image->public_self = (Xv_opaque) rpr;
     screen = server_image->screen = (parent ? parent : xv_default_screen);
     server_image->save_pixmap = FALSE;
-    *offset_ptr = xv_set_embedding_data(rpr, server_image_public);
+    *offset_ptr = xv_set_embedding_data((Xv_opaque)rpr, server_image_public);
 
     rpr->pr_ops = &server_image_ops;
     rpr->pr_depth = SERVER_IMAGE_DEFAULT_DEPTH;
@@ -128,11 +135,11 @@
 			free( ct_file );
 #endif /* OW_I18N */
 		if (status != BitmapSuccess) {
-		    xv_error(NULL,
+		    xv_error((Xv_object)NULL,
 			ERROR_STRING, 
 			XV_MSG("SERVER_IMAGE_BITMAP_FILE: Server image creation failed"),
 			ERROR_PKG, SERVER_IMAGE,
-			0);
+			NULL);
 		    return (XV_ERROR);
 		}
 		
@@ -186,7 +193,7 @@
     new_pixmap  = (xv_xid(info) == 0) ? TRUE : FALSE;
 
     for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-	switch (attrs[0]) {
+	switch ((int)attrs[0]) {
 	  case XV_WIDTH:
 	    if (((int) attrs[1] != 0) && 
 		    (rpr->pr_size.x != (int) attrs[1])) {
@@ -219,11 +226,11 @@
 
 	      	    if (XGetGeometry(display, (Drawable)attrs[1], &root, &x, &y,
 			&width, &height, &border_width, &depth) == 0) { 
-		        xv_error(NULL,
+		        xv_error((Xv_object)NULL,
 		      	    ERROR_STRING,
 		      	        XV_MSG("SERVER_IMAGE_PIXMAP: Unable to get geometry"),
 		      	    ERROR_PKG, SERVER_IMAGE,
-		      	    0);
+		      	    NULL);
 		  	    return ((Xv_opaque) XV_ERROR);
 	      	    }
 
@@ -272,24 +279,24 @@
 					  XV_AUTO_CREATE, FALSE,
 					  CMS_NAME, (char *) attrs[1], 
 					  NULL);
-		if (info->cms == NULL) {
+		if (info->cms == (Cms)NULL) {
 		    char            error[60];
 		    sprintf(error, 
 			XV_MSG("Colormap segment %s not found"), 
 			(char *) attrs[1]);
-		    xv_error(NULL,
+		    xv_error((Xv_object)NULL,
 			     ERROR_STRING, error,
 			     ERROR_PKG, SERVER_IMAGE,
-			     0);
+			     NULL);
 		    info->cms = (Cms) xv_get(screen, SCREEN_DEFAULT_CMS);
 		}
-		info->bg = (unsigned long) xv_get(info->cms, CMS_BACKGROUND_PIXEL);
-		info->fg = (unsigned long) xv_get(info->cms, CMS_FOREGROUND_PIXEL);
+		info->bg = (unsigned int) xv_get(info->cms, CMS_BACKGROUND_PIXEL);
+		info->fg = (unsigned int) xv_get(info->cms, CMS_FOREGROUND_PIXEL);
 		break;
 	    }
 
 	  case SERVER_IMAGE_CMS:
-	    if (attrs[1])
+	    if ((Cms)attrs[1])
 	      info->cms = (Cms)attrs[1];
 	    break;
 	    
@@ -318,11 +325,11 @@
 		XCreatePixmap(display,
 		    xv_get(xv_get(screen, XV_ROOT), XV_XID),
 		    rpr->pr_size.x, rpr->pr_size.y, rpr->pr_depth))) {
-	    		xv_error(NULL,
+	    		xv_error((Xv_object)NULL,
 		     	    ERROR_STRING,
 			    XV_MSG("Server Image creation failed"),
 		     	    ERROR_PKG, SERVER_IMAGE,
-		     	    0);
+		     	    NULL);
 	     		return ((Xv_opaque) XV_ERROR);
 	}
 
@@ -330,24 +337,24 @@
 	xv_visual(info) = (Screen_visual *)xv_get(screen,
 	    SCREEN_IMAGE_VISUAL, xv_xid(info), rpr->pr_depth);
 	xv_plane_mask(info) = ~0;
-	if (xv_cms(info) == NULL) {
+	if (xv_cms(info) == (Cms)NULL) {
 	    xv_cms(info) = (Cms) xv_get(screen, SCREEN_DEFAULT_CMS);
 	    xv_bg(info) = xv_is_bitmap(info) ? 0 : 
-				xv_get(info->cms, CMS_BACKGROUND_PIXEL);
+				(unsigned int)xv_get(info->cms, CMS_BACKGROUND_PIXEL);
 	    xv_fg(info) = xv_is_bitmap(info) ? 1 : 
-				xv_get(info->cms, CMS_FOREGROUND_PIXEL);
+				(unsigned int)xv_get(info->cms, CMS_FOREGROUND_PIXEL);
 	}
     } 
 
     if ((new_bits == TRUE) || (new_x_bits == TRUE)) {
 	Pixrect        *pr;
 
-	if (xv_cms(info) == NULL) {
+	if (xv_cms(info) == (Cms)NULL) {
 	    xv_cms(info) = (Cms) xv_get(screen, SCREEN_DEFAULT_CMS);
 	    xv_bg(info) = xv_is_bitmap(info) ? 0 : 
-				xv_get(info->cms, CMS_BACKGROUND_PIXEL);
+				(unsigned int)xv_get(info->cms, CMS_BACKGROUND_PIXEL);
 	    xv_fg(info) = xv_is_bitmap(info) ? 1 : 
-				xv_get(info->cms, CMS_FOREGROUND_PIXEL);
+				(unsigned int)xv_get(info->cms, CMS_FOREGROUND_PIXEL);
 	}
 
 	pr = (Pixrect *) xv_mem_point(rpr->pr_width, rpr->pr_height,
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/convpos.c xview-3.2p1.4/lib/libxview/textsw/convpos.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/convpos.c	1993-06-29 07:17:53.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/convpos.c	2013-01-07 12:50:54.591749000 +0100
@@ -425,8 +425,9 @@
     Es_index	first, last;	/* character based index */
 {
     CHAR	wbuf[TEMP_BUF_SIZE + 1];
-    int		read, bytes = 0;
-    register	wc_len;
+    int         read;
+    int         bytes = 0;
+    long int	wc_len;
 
     if (first >= last)
 	return (0);
@@ -462,8 +463,8 @@
     int	       *adjust;	  /* adjusted length */
 {
     CHAR	wbuf[TEMP_BUF_SIZE + 1];
-    int		read;
-    register	chars = 0;
+    int     	read;
+    register int chars = 0;
 
     *adjust = 0;
     while (byte_len > 0) {
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/ei_text.c xview-3.2p1.4/lib/libxview/textsw/ei_text.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/ei_text.c	2013-01-07 12:36:18.084361000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/ei_text.c	2013-01-07 12:50:54.631339000 +0100
@@ -128,6 +128,7 @@
 static struct ei_process_result ei_plain_text_expand();
 static paint_batch();
 
+
 struct ei_ops   ei_plain_text_ops = {
     ei_plain_text_destroy,
     ei_plain_text_get,
@@ -139,6 +140,22 @@
     ei_plain_text_expand
 };
 
+typedef struct run {
+    CHAR           *chars;	/* Pointer to characters to be painted */
+    short           len;	/* Count of characters to be painted */
+    short           x, y;	/* baseline origin to start painting at */
+}               Run;
+
+#ifdef __STDC__
+#ifdef OW_I18N
+static paint_batch(int op, int rop, Xv_Window pw, struct rect *rect, Run *run, int run_length, struct rect *bounds, Xv_Font font);
+#else
+static paint_batch(int op, int rop, Xv_Window pw, struct rect *rect, Run *run, int run_length, struct rect *bounds, Pixfont *font);
+#endif
+#else
+static paint_batch();
+#endif
+
 
 /* Used in ei_plain_text_process. Init adv.y = 0 once and for all. */
 static struct pixchar dummy_for_tab;
@@ -432,12 +449,6 @@
 
 mpr_static(gray17_pr, 12, 12, 1, gray17_data);
 
-typedef struct run {
-    CHAR           *chars;	/* Pointer to characters to be painted */
-    short           len;	/* Count of characters to be painted */
-    short           x, y;	/* baseline origin to start painting at */
-}               Run;
-
 #define	INIT_RUN(_run, _x, _y)	\
 	(_run)->chars = NULL; (_run)->len = 0; (_run)->x = _x; (_run)->y = _y;
 #define	FINALIZE_RUN(_run, _run_array, _batch, _batch_array)	\
@@ -792,13 +803,13 @@
     Xv_Window       pw;
     struct rect    *rect;
     Run            *run;
+    int             run_length;
+    struct rect    *bounds;
 #ifdef OW_I18N
     Xv_Font         font;
 #else    
     Pixfont        *font;
 #endif    
-    int             run_length;
-    struct rect    *bounds;
 
 {
 #define EI_OP_CLEAR_ALL EI_OP_CLEAR_FRONT|EI_OP_CLEAR_INTERIOR|EI_OP_CLEAR_BACK
@@ -900,7 +911,7 @@
 {
     register Eipt_handle private = ABS_TO_REP(eih);
 
-    while (*attributes) {
+    while ((int)*attributes) {
 	switch ((Ei_attribute) * attributes) {
 	  case EI_CONTROL_CHARS_USE_FONT:
 	    if (attributes[1]) {
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/es.h xview-3.2p1.4/lib/libxview/textsw/es.h
--- xview-3.2p1.4.orig/lib/libxview/textsw/es.h	1993-06-29 07:17:33.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/es.h	2013-01-07 12:50:54.674273000 +0100
@@ -182,8 +182,15 @@
 } Es_buf_object;
 typedef Es_buf_object *Es_buf_handle;
 
-EXTERN_FUNCTION( caddr_t es_file_get, (Es_handle esh, Es_attribute attribute, DOTDOTDOT ));
-EXTERN_FUNCTION( caddr_t es_mem_get, (Es_handle esh, Es_attribute attribute, DOTDOTDOT ));
+/*EXTERN_FUNCTION( caddr_t es_mem_get, (Es_handle esh, Es_attribute attribute, DOTDOTDOT ));*/
+EXTERN_FUNCTION( Es_index es_bounds_of_gap, (Es_handle esh, Es_index around, Es_index *last_plus_one, int flags ));
+EXTERN_FUNCTION( Es_status es_copy, (Es_handle from, Es_handle to, int newline_must_terminate));
+#ifdef OW_I18N
+EXTERN_FUNCTION( int es_copy_fd, (CHAR *from_wc, CHAR *to_wc, int fold));
+#else
+EXTERN_FUNCTION( int es_copy_fd, (char *from, char *to, int fold));
+#endif
+EXTERN_FUNCTION( int es_copy_status, (char *to, int fold, int *from_mode));
 
 #define ES_READ_BUF_LEN 2047
 #define ES_WRITE_BUF_LEN 2047
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/es_cp_file.c xview-3.2p1.4/lib/libxview/textsw/es_cp_file.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/es_cp_file.c	1993-06-29 07:17:35.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/es_cp_file.c	2013-01-07 12:50:54.700777000 +0100
@@ -32,6 +32,13 @@
 #include <xview_private/portable.h>
 #include <xview/pkg.h>
 #include <xview/attrol.h>
+#ifdef __linux__
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <unistd.h>
+#include <fcntl.h>
+#endif
+
 
 #ifndef BSIZE 
 #define	BSIZE	8192
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/es_file.c xview-3.2p1.4/lib/libxview/textsw/es_file.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/es_file.c	2013-01-07 12:36:47.646928000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/es_file.c	2013-01-07 12:50:54.736090000 +0100
@@ -121,6 +121,17 @@
 #endif
 
 static void update_read_buf();  /* update the read buf if overlaps write buf */
+#ifdef __STDC__
+static Es_status es_file_commit(Es_handle esh);
+static Es_handle es_file_destroy(Es_handle esh);
+static Es_index es_file_get_length(Es_handle esh);
+static Es_index es_file_get_position(Es_handle esh);
+static Es_index es_file_set_position(Es_handle esh, Es_index pos);
+static Es_index es_file_read(Es_handle esh, int count, CHAR *buf, int *count_read);
+static Es_index es_file_replace(Es_handle esh, int last_plus_one, int count, CHAR *buf, int *count_used);
+static int es_file_set(Es_handle esh, Attr_avlist attrs);
+static caddr_t es_file_get(Es_handle esh, Es_attribute attribute, ...);
+#else
 static Es_status es_file_commit();
 static Es_handle es_file_destroy();
 static Es_index es_file_get_length();
@@ -128,7 +139,9 @@
 static Es_index es_file_set_position();
 static Es_index es_file_read();
 static Es_index es_file_replace();
-static int      es_file_set();
+static int es_file_set();
+static caddr_t es_file_get();
+#endif
 
 static struct es_ops es_file_ops = {
     es_file_commit,
@@ -340,7 +353,7 @@
     int             options;
     Es_status      *status;
 {
-    extern          fstat();
+    extern          int fstat();
     Es_handle       esh = NEW(Es_object);
     register Es_file_data private;
     int             open_option;
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/es_mem.c xview-3.2p1.4/lib/libxview/textsw/es_mem.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/es_mem.c	2013-01-07 12:36:18.998178000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/es_mem.c	2013-01-07 12:50:54.774585000 +0100
@@ -46,6 +46,11 @@
 static Es_index es_mem_read();
 static Es_index es_mem_replace();
 static int      es_mem_set();
+#ifdef __STDC__
+static caddr_t es_mem_get(Es_handle esh, Es_attribute attribute, ...);
+#else
+static caddr_t es_mem_get();
+#endif
 
 static struct es_ops es_mem_ops = {
     es_mem_commit,
@@ -156,7 +161,7 @@
     Es_status       status_dummy = ES_SUCCESS;
     register Es_status *status = &status_dummy;
 
-    for (; *attrs && (*status == ES_SUCCESS); attrs = attr_next(attrs)) {
+    for (; (int)*attrs && (*status == ES_SUCCESS); attrs = attr_next(attrs)) {
 	switch ((Es_attribute) * attrs) {
 	  case ES_CLIENT_DATA:
 	    private->client_data = attrs[1];
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/es_util.c xview-3.2p1.4/lib/libxview/textsw/es_util.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/es_util.c	1993-06-29 07:17:29.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/es_util.c	2013-01-07 12:50:54.802012000 +0100
@@ -19,6 +19,7 @@
 #include <xview_private/primal.h>
 #include <xview_private/es.h>
 #include <xview_private/txt_18impl.h>
+#include <xview_private/ev_impl.h>
 
 Pkg_private     Es_index
 es_bounds_of_gap(esh, around, last_plus_one, flags)
@@ -81,7 +82,9 @@
 	    probe = es_set_position(esh, 0);
 	    new_pos = es_read(esh, BUFSIZE, buf, &count_read);
 	    if (count_read == 0)
-		low == ES_CANNOT_SET;
+		/* FIXME: Probably not meant this way */
+		/* low == ES_CANNOT_SET; */
+		low = ES_CANNOT_SET;
 	}
     }
     return (low);
@@ -187,8 +190,9 @@
     int             newline_must_terminate;
 {
     CHAR            buf[ES_READ_BUF_LEN + 4];
-    register Es_status result;
-    int             read, write;
+    /*register Es_status result;*/
+    int             read;
+    int             write;
     Es_index        new_pos, pos, to_pos;
 
     /*
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/ev_attr.c xview-3.2p1.4/lib/libxview/textsw/ev_attr.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/ev_attr.c	1993-06-29 07:17:33.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/ev_attr.c	2013-01-07 12:50:54.829016000 +0100
@@ -94,6 +94,7 @@
 	    }
 	  case EV_CHAIN_CARET_IS_GHOST:
 	    return ((Xv_opaque) chain_private->caret_is_ghost);
+	    break;
 	}
       case EV_DISPLAY_START:
 	return ((Xv_opaque) EV_VIEW_FIRST(view));
@@ -214,7 +215,7 @@
 	    all_views = TRUE;
 	    break;
 	  case EV_CHAIN_DATA:{
-		chain->client_data = attrs[1];
+		chain->client_data = (Xv_opaque)attrs[1];
 		break;
 	    }
 	  case EV_CHAIN_DELAY_UPDATE:{
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/ev_display.c xview-3.2p1.4/lib/libxview/textsw/ev_display.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/ev_display.c	2013-01-07 12:36:19.270011000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/ev_display.c	2013-01-07 12:50:54.867883000 +0100
@@ -36,16 +36,12 @@
 #include <xview_private/tty_impl.h>
 #include <xview_private/txt_impl.h>
 
-Pkg_private void     ev_notify();
-Pkg_private int      ev_remove_op_bdry();
 Pkg_private unsigned ev_op_bdry_info(), ev_op_bdry_info_merge();
-Pkg_private Es_index ev_line_start();
 Pkg_private Op_bdry_handle ev_add_op_bdry();
-Pkg_private void ev_extend_to_view_bottom();
 
-Pkg_private Es_index ev_index_for_line();
+Es_index es_bounds_of_gap();
+
 Pkg_private struct ei_process_result ev_display_internal();
-Pkg_private void ev_display_in_rect();
 
 /*
  * The following code is a short-circuit to use simpler output for the carets
@@ -94,12 +90,12 @@
 
     ghost = XCreateBitmapFromData(display, drawable,
 				  ghost_bits, CARET_WIDTH, CARET_HEIGHT);
-    xv_set(xv_screen(info), XV_KEY_DATA, EV_GHOST_KEY, ghost, 0);
+    xv_set(xv_screen(info), XV_KEY_DATA, (Attr_attribute)EV_GHOST_KEY, ghost, NULL);
 
 
     normal = XCreateBitmapFromData(display, drawable,
 				   normal_bits, CARET_WIDTH, CARET_HEIGHT);
-    xv_set(xv_screen(info), XV_KEY_DATA, EV_NORMAL_KEY, normal, 0);
+    xv_set(xv_screen(info), XV_KEY_DATA, (Attr_attribute)EV_NORMAL_KEY, normal, NULL);
 
     gcvalues.function = GXxor;
     gcvalues.plane_mask = AllPlanes;
@@ -111,7 +107,7 @@
 
 	gc = (GC *) calloc(1, sizeof(GC));
 	gc[0] = XCreateGC(display, drawable, gcvaluemask, &gcvalues);
-	xv_set(window, XV_KEY_DATA, EV_GC_KEY, gc, 0);
+	xv_set(window, XV_KEY_DATA, (Attr_attribute)EV_GC_KEY, gc, NULL);
 }
 
 static	void
@@ -145,16 +141,16 @@
     }
     if (!EV_GC_KEY)
 	EV_GC_KEY = xv_unique_key();
-    gc_list = (GC *) xv_get(window, XV_KEY_DATA, EV_GC_KEY);
+    gc_list = (GC *) xv_get(window, XV_KEY_DATA, (Attr_attribute)EV_GC_KEY);
     if (!gc_list) {
 	ev_init_X_carets(window);
-	gc_list = (GC *) xv_get(window, XV_KEY_DATA, EV_GC_KEY);
+	gc_list = (GC *) xv_get(window, XV_KEY_DATA, (Attr_attribute)EV_GC_KEY);
     }
     gc = gc_list[0];
 
     if (last_screen != xv_screen(info) ) {
-	normal = xv_get(xv_screen(info), XV_KEY_DATA, EV_NORMAL_KEY);
-	ghost = xv_get(xv_screen(info), XV_KEY_DATA, EV_GHOST_KEY);
+	normal = (Pixmap)xv_get(xv_screen(info), XV_KEY_DATA, (Attr_attribute)EV_NORMAL_KEY);
+	ghost = (Pixmap)xv_get(xv_screen(info), XV_KEY_DATA, (Attr_attribute)EV_GHOST_KEY);
 	last_screen = xv_screen(info);
     }
     switch (which) {
@@ -418,7 +414,7 @@
 {
     xv_replrop(view->pw,
 	       rect->r_left, rect->r_top, rect->r_width, rect->r_height,
-	       PIX_SRC, &gray25_pr, 0, 0);
+	       PIX_SRC, &gray25_pr, 0L, 0L);
 }
 
 #endif
@@ -887,7 +883,7 @@
     es_set_position(view->view_chain->esh, line_seq[start].pos);
     result = ev_display_internal(
 			       view, &fixup_rect, start, line_seq[stop].pos,
-				 0, 0);
+				 0L, 0L);
     es_set_position(view->view_chain->esh, current_pos);
     pw_exposed(view->pw);
 #endif
@@ -1090,7 +1086,8 @@
     Es_index       *ptr_to_last_plus_one;
 {
     register Es_index next, last_plus_one = *ptr_to_last_plus_one;
-    int             read, result;
+    int             read;
+    int             result;
 
 TryRead:
     next = es_read(esbuf->esh, esbuf->sizeof_buf, esbuf->buf, &read);
@@ -1379,7 +1376,7 @@
     while (!ev_process_update_buf(ph)) {
 
 	(void) ev_process(ph, EV_PROCESS_NEXT_LINE,
-			  EI_OP_MEASURE, PIX_SRC, 0);
+			  EI_OP_MEASURE, PIX_SRC, NULL);
     }
     return (ph->result);
 }
@@ -1409,7 +1406,7 @@
     while (!ev_process_update_buf(ph)) {
 
 	(void) ev_process(ph, 0,
-			  EI_OP_MEASURE, PIX_SRC, 0);
+			  EI_OP_MEASURE, PIX_SRC, NULL);
 	if (ph->result.break_reason != EI_PR_BUF_EMPTIED)
 	    break;
     }
@@ -1456,7 +1453,7 @@
 
 	    line_start = ph->result.last_plus_one;
 	    (void) ev_process(ph, EV_PROCESS_NEXT_LINE,
-			      EI_OP_MEASURE, PIX_SRC, 0);
+			      EI_OP_MEASURE, PIX_SRC, NULL);
 	}
 	if (pos == es_get_length(view->view_chain->esh))
 	    return (line_start);
@@ -1470,7 +1467,7 @@
 			     &rect, buf, EV_BUFSIZE);
 	while (!ev_process_update_buf(ph)) {
 	    (void) ev_process(ph, EV_PROCESS_NEXT_LINE,
-			      EI_OP_MEASURE, PIX_SRC, 0);
+			      EI_OP_MEASURE, PIX_SRC, NULL);
 	    if (ph->result.break_reason == EI_PR_HIT_RIGHT) {
 		line_start = ph->result.last_plus_one;
 		break;
@@ -1524,7 +1521,7 @@
     }
     xv_rop(view->pw,
 	   left, result->bounds.r_top, width, height,
-	   glyph->pix_op, glyph->pr, 0, 0);
+	   glyph->pix_op, glyph->pr, 0L, 0L);
     *glyph_ptr = (Ev_overlay_handle) 0;
     *glyph_pos_ptr = ES_INFINITY;
 }
@@ -1885,7 +1882,7 @@
     expand_result.pos.y = rect.r_top = view->rect.r_top;
     expand_result.break_reason = EI_PR_HIT_RIGHT;
     /* Offset first, last_plus_one by what's in the buffer */
-    (void) es_make_buf_include_index(&esbuf, start, 0);
+    (void) es_make_buf_include_index(&esbuf, start, 0L);
     esbuf.last_plus_one = MIN(stop_plus_one, start + esbuf.sizeof_buf);
     while ((expand_result.break_reason == EI_PR_HIT_RIGHT
 	    || expand_result.break_reason == EI_PR_NEWLINE)
@@ -2137,7 +2134,7 @@
 /*
  * Handle an expose (or graphics expose) event.
  */
-void
+Pkg_private void
 ev_paint_view(e_view, xv_win, xevent)
 	Ev_handle       e_view;
 	Xv_window       xv_win;
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/ev_edit.c xview-3.2p1.4/lib/libxview/textsw/ev_edit.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/ev_edit.c	2013-01-07 12:36:15.834057000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/ev_edit.c	2013-01-07 12:50:54.927726000 +0100
@@ -30,13 +30,13 @@
 
 #include <pixrect/pixfont.h>
 
-Pkg_private void     ev_notify();
 Pkg_private void     ev_clear_from_margins();
 Pkg_private void     ev_check_insert_visibility();
-Pkg_private int      ev_clear_rect();
 Pkg_private struct rect ev_rect_for_line();
 Pkg_private void ev_update_after_edit();
 
+Es_index ev_index_for_line();
+
 
 Pkg_private unsigned
 ev_span(views, position, first, last_plus_one, group_spec)
@@ -110,7 +110,7 @@
      * (before_edit+delta..before_edit] mapped to before_edit+delta,
      * (before_edit..EOS) decremented by ABS(delta).
      */
-    register        lt_index;
+    register int    lt_index;
     Ev_impl_line_seq line_seq = (Ev_impl_line_seq) table->seq;
 
     if (delta > 0) {
@@ -234,7 +234,8 @@
                     private = EV_CHAIN_PRIVATE(views);
     register Es_index old_length = es_get_length(esh);
     Es_index        new_insert_pos, private_insert_pos = private->insert_pos;
-    int             result, used;
+    int             result;
+    int             used;
 
     /* Since *delta depends on last_plus_one, normalize ES_INFINITY */
     if (last_plus_one > old_length) {
@@ -250,7 +251,7 @@
 	result = 2;
 	goto Return;
     }
-    new_insert_pos = es_replace(esh, last_plus_one, 0, 0, &used);
+    new_insert_pos = es_replace(esh, last_plus_one, 0, (CHAR *)0, &used);
     if (new_insert_pos == ES_CANNOT_SET) {
 	result = 3;
 	goto Return;
@@ -271,8 +272,8 @@
     if (private->notify_level & EV_NOTIFY_EDIT_DELETE) {
 	ev_notify(views->first_view,
 		  EV_ACTION_EDIT, first, old_length, first, last_plus_one,
-		  0,
-		  0);
+		  NULL,
+		  NULL);
     }
     result = 0;
 Return:
@@ -320,7 +321,7 @@
      */
     es_set_position(esh, first);
 
-    new_insert_pos = es_replace(esh, last_plus_one, 0, 0, &used);
+    new_insert_pos = es_replace(esh, last_plus_one, 0, (CHAR *)0, &used);
     if (new_insert_pos == ES_CANNOT_SET) {
 	result = 3;
 	goto Return;
@@ -341,8 +342,8 @@
     if (private->notify_level & EV_NOTIFY_EDIT_DELETE) {
 	ev_notify(views->first_view,
 		  EV_ACTION_EDIT, first, old_length, first, last_plus_one,
-		  0,
-		  0);
+		  NULL,
+		  NULL);
     }
     result = 0;
     *delta = byte_delta;
@@ -355,7 +356,7 @@
 ev_update_fingers_after_edit(ft, insert, delta)
     register Ev_finger_table *ft;
     register Es_index insert;
-    register int    delta;
+    register Es_index delta;
 /*
  * This routine differs from the similar ev_update_lt_after_edit in that it
  * makes use of the extra Ev_finger_info fields in order to potentially
@@ -409,7 +410,7 @@
 ev_update_after_edit(views, last_plus_one, delta, old_length, min_insert_pos)
     register Ev_chain views;
     Es_index        last_plus_one;
-    int             delta;
+    Es_index        delta;
     Es_index        old_length, min_insert_pos;
 /*
  * last_plus_one:  end of inserted/deleted span delta:	   if positive,
@@ -470,7 +471,7 @@
     Es_index        position;
     int             lower_context;
     int             auto_scroll_by;
-    int             delta;
+    Es_index        delta;
 {
     Pkg_private int      ev_xy_in_view();
     Ev_impl_line_seq line_seq;
@@ -482,7 +483,7 @@
     CHAR            newline_str[2];
 
     newline_str[0] = '\n';
-    newline_str[1] = NULL;
+    newline_str[1] = '\0';
  
     line_seq = (Ev_impl_line_seq) view->line_table.seq;
     top_of_lc = MAX(1,
@@ -579,7 +580,7 @@
 ev_scroll_if_old_insert_visible(views, insert_pos, delta)
     register Ev_chain views;
     register Es_index insert_pos;
-    register int    delta;
+    register Es_index delta;
 {
     register Ev_handle view;
     register Ev_pd_handle private;
@@ -599,11 +600,11 @@
     }
 }
 
-Pkg_private int
+Pkg_private Es_index
 ev_input_partial(views, buf, buf_len)
     register Ev_chain views;
     CHAR           *buf;
-    long int        buf_len;
+    int             buf_len;
 {
     register        Ev_chain_pd_handle
                     private = EV_CHAIN_PRIVATE(views);
@@ -624,7 +625,7 @@
     return (0);
 }
 
-Pkg_private int
+Pkg_private Es_index
 ev_input_after(views, old_insert_pos, old_length)
     register Ev_chain views;
     Es_index        old_insert_pos, old_length;
@@ -643,7 +644,7 @@
 }
 
 #ifdef EXAMPLE
-Pkg_private int
+Pkg_private Es_index
 ev_process_input(views, buf, buf_len)
     register Ev_chain views;
     CHAR           *buf;
@@ -652,7 +653,7 @@
     Ev_chain_pd_handle private = EV_CHAIN_PRIVATE(views);
     Es_index        old_length = es_get_length(views->esh);
     Es_index        old_insert_pos = private->insert_pos;
-    int             delta;
+    Es_index        delta;
 
     if (private->lower_context != EV_NO_CONTEXT) {
 	ev_check_insert_visibility(views);
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/ev_impl.h xview-3.2p1.4/lib/libxview/textsw/ev_impl.h
--- xview-3.2p1.4.orig/lib/libxview/textsw/ev_impl.h	1993-06-29 07:17:27.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/ev_impl.h	2013-01-07 12:50:54.968563000 +0100
@@ -553,7 +553,93 @@
 
 #endif
 
-extern	Ev_finger_handle ev_add_finger();
+#ifdef __STDC__
+Pkg_private void ev_display_in_rect(Ev_handle view, Rect *rect);
+Pkg_private void ev_clear_rect(Ev_handle view, struct rect *rect);
+Pkg_private void ev_set_start(Ev_handle view, Es_index start);
+Pkg_private void ev_display_view(Ev_handle view);
+Pkg_private void ev_view_range(Ev_handle view, Es_index *first, Es_index *last_plus_one);
+Pkg_private void ev_display_line(Ev_handle view, int width_before, int lt_index, Es_index first, Es_index last_plus_one);
+Pkg_private int es_make_buf_include_index(Es_buf_handle esbuf, Es_index index, int desired_prior_count);
+Pkg_private unsigned ev_span(Ev_chain views, Es_index position, Es_index *first, Es_index *last_plus_one, int group_spec);
+Pkg_private void ev_lt_paint(Ev_handle view, Ev_line_table *new_lt, Ev_line_table *old_lt);
+Pkg_private void ev_clear_to_bottom(Ev_handle view, Rect *rect, int new_top, unsigned clear_current_first);
+Pkg_private void ev_add_margins(Ev_handle view, Rect *rect);
+Pkg_private Ev_finger_handle ev_add_finger(Ev_finger_table *fingers, Es_index pos, opaque_t client_data, Ev_mark id_handle);
+Pkg_private Es_index ev_index_for_line(Ev_handle view, int line);
+Pkg_private void ev_find_in_esh(Es_handle esh, CHAR *pattern, int pattern_length, Es_index position, unsigned count, int flags, Es_index *first, Es_index *last_plus_one);
+Pkg_private int ev_newlines_in_esh(Es_handle esh, Es_index first, Es_index last_plus_one);
+Pkg_private int ev_xy_in_view(Ev_handle view, Es_index pos, int *lt_index, Rect *rect);
+Pkg_private void ev_update_view_display(Ev_handle view);
+Pkg_private void ev_notify(Ev_handle view, ...);
+Pkg_private void ev_remove_op_bdry(Ev_finger_table *op_bdry, Es_index pos, unsigned type, unsigned mask);
+Pkg_private void ev_extend_to_view_bottom(Ev_handle view, struct rect *rect);
+Pkg_private Es_index ev_line_start(Ev_handle view, Es_index position);
+Pkg_private void ev_scroll_if_old_insert_visible(Ev_chain views, Es_index insert_pos, Es_index delta);
+Pkg_private void ev_update_chain_display(Ev_chain views);
+Pkg_private void ev_check_insert_visibility(Ev_chain views);
+Pkg_private int ev_check_cached_pos_info(Ev_handle view, Es_index pos, Ev_pos_info *cache);
+Pkg_private int ev_get_selection(Ev_chain chain, Es_index *first, Es_index *last_plus_one, unsigned type);
+Pkg_private int ev_delete_span(Ev_chain views, Es_index first, Es_index last_plus_one, Es_index *delta);
+Pkg_private Es_index ev_lt_delta(Ev_handle view, Es_index before_edit, Es_index delta);
+Pkg_private void ev_lt_format(Ev_handle view, Ev_line_table *new_lt, Ev_line_table *old_lt);
+Pkg_private void ev_remove_finger(Ev_finger_table *fingers, Ev_mark_object mark);
+Pkg_private void ev_update_after_edit(Ev_chain views, Es_index last_plus_one, Es_index delta, Es_index old_length, Es_index min_insert_pos);
+Pkg_private void ev_view_range(Ev_handle view, Es_index *first, Es_index *last_plus_one);
+Pkg_private void ev_paint_view(Ev_handle e_view, Xv_window xv_win, XEvent *xevent);
+Pkg_private int ev_line_for_y(Ev_handle view, int y);
+Pkg_private void ev_destroy(Ev_handle view);
+Pkg_private int ev_fill_esbuf(Es_buf_handle esbuf, Es_index *ptr_to_last_plus_one);
+Pkg_private void ev_range_info(Ev_line_table op_bdry, Es_index pos, struct range *range);
+Pkg_private void ev_update_lt_after_edit(Ev_line_table *table, Es_index before_edit, long int delta);
+Pkg_private void ev_clear_selection(Ev_chain chain, unsigned type);
+Pkg_private Es_index ev_input_partial(Ev_chain views, CHAR *buf, int buf_len);
+Pkg_private void ev_set_glyph_pr(Ev_chain chain, Ev_mark_object mark, struct pixrect *pr);
+Pkg_private int ev_rect_for_ith_physical_line(Ev_handle view, int phys_line, Es_index *first, Rect *rect, int skip_white_space);
+#else
+Pkg_private void ev_display_in_rect();
+Pkg_private void ev_clear_rect();
+Pkg_private void ev_set_start();
+Pkg_private void ev_display_view();
+Pkg_private void ev_view_range();
+Pkg_private void ev_display_line();
+Pkg_private int es_make_buf_include_index();
+Pkg_private unsigned ev_span();
+Pkg_private void ev_lt_paint();
+Pkg_private void ev_clear_to_bottom();
+Pkg_private void ev_add_margins();
+Pkg_private Ev_finger_handle ev_add_finger();
+Pkg_private Es_index ev_index_for_line();
+Pkg_private void ev_find_in_esh();
+Pkg_private int ev_newlines_in_esh();
+Pkg_private int ev_xy_in_view();
+Pkg_private void ev_update_view_display();
+Pkg_private void ev_notify();
+Pkg_private void ev_remove_op_bdry();
+Pkg_private void ev_extend_to_view_bottom();
+Pkg_private Es_index ev_line_start();
+Pkg_private void ev_scroll_if_old_insert_visible();
+Pkg_private void ev_update_chain_display();
+Pkg_private void ev_check_insert_visibility();
+Pkg_private int ev_check_cached_pos_info();
+Pkg_private int ev_get_selection();
+Pkg_private int ev_delete_span();
+Pkg_private Es_index ev_lt_delta();
+Pkg_private void ev_lt_format();
+Pkg_private void ev_remove_finger();
+Pkg_private void ev_update_after_edit();
+Pkg_private void ev_view_range();
+Pkg_private void ev_paint_view();
+Pkg_private int ev_line_for_y();
+Pkg_private void ev_destroy();
+Pkg_private int ev_fill_esbuf();
+Pkg_private void ev_range_info();
+Pkg_private void ev_update_lt_after_edit();
+Pkg_private void ev_clear_selection();
+Pkg_private Es_index ev_input_partial();
+Pkg_private void ev_set_glyph_pr();
+Pkg_private int ev_rect_for_ith_physical_line();
+#endif
 
 #define EV_INSERT_VISIBLE_IN_VIEW(_view)\
     ev_check_cached_pos_info(_view, EV_CHAIN_PRIVATE(_view->view_chain)->insert_pos, &EV_PRIVATE(_view)->cached_insert_info)
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/ev_once.c xview-3.2p1.4/lib/libxview/textsw/ev_once.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/ev_once.c	1993-06-29 07:17:27.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/ev_once.c	2013-01-07 12:50:55.000233000 +0100
@@ -36,9 +36,6 @@
 #include <xview_private/ev_impl.h>
 #include <xview/window.h>
 
-Pkg_private Es_index ev_index_for_line();
-Pkg_private void ev_find_in_esh();
-
 /* these still exist but are superceeded by X format images in ev_display.c */
 static unsigned short    caret_image[7] = {
     0x1000, 0x3800, 0x3800, 0x7C00, 0x7C00, 0xFE00, 0xFE00
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/ev_op_bdry.c xview-3.2p1.4/lib/libxview/textsw/ev_op_bdry.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/ev_op_bdry.c	2013-01-07 12:36:18.938818000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/ev_op_bdry.c	2013-01-07 16:39:49.523754000 +0100
@@ -28,7 +28,7 @@
 static Ev_finger_handle ev_insert_finger();
 static Ev_mark_object last_generated_id;
 static int ev_find_finger_internal(Ev_finger_table *fingers, Ev_mark mark);
-static ev_remove_finger_internal(Ev_finger_table *fingers, int i);
+static void ev_remove_finger_internal(Ev_finger_table *fingers, int i);
 
 #define FORALL(index_var)						\
 	for (index_var = 0; index_var < fingers->last_plus_one; index_var++)
@@ -140,6 +140,7 @@
     return (fingers->last_plus_one);
 }
 
+Pkg_private void
 ev_remove_finger(fingers, mark)
     Ev_finger_table *fingers;
     Ev_mark_object  mark;
@@ -149,7 +150,7 @@
     ev_remove_finger_internal(fingers, i);
 }
 
-static
+static void
 ev_remove_finger_internal(fingers, i)
     register Ev_finger_table *fingers;
     int             i;
@@ -171,7 +172,7 @@
 
     bdry = (Op_bdry_handle)
 	ev_add_finger(op_bdry, pos, (opaque_t) type, mark);
-    bdry->more_info = (opaque_t) 0;
+    bdry->more_info = (opaque_t) NULL;
     return (bdry);
 }
 
@@ -229,6 +230,7 @@
     return (result);
 }
 
+Pkg_private	void
 ev_remove_op_bdry(op_bdry, pos, type, mask)
     Ev_finger_table *op_bdry;
     register Es_index pos;
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/ev_op_bdry.c.rej xview-3.2p1.4/lib/libxview/textsw/ev_op_bdry.c.rej
--- xview-3.2p1.4.orig/lib/libxview/textsw/ev_op_bdry.c.rej	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/ev_op_bdry.c.rej	2013-01-07 12:50:55.067727000 +0100
@@ -0,0 +1,15 @@
+--- lib/libxview/textsw/ev_op_bdry.c	1993-06-29 07:17:30.000000000 +0200
++++ lib/libxview/textsw/ev_op_bdry.c	2005-04-19 20:49:21.000000000 +0200
+@@ -26,8 +26,12 @@
+ 
+ Pkg_private void ev_clear_from_margins();
+ static Ev_finger_handle ev_insert_finger();
++static int ev_find_finger_internal();
++static void ev_remove_finger_internal();
+ static Ev_mark_object last_generated_id;
+ 
++Es_index ev_line_start();
++
+ #define FORALL(index_var)						\
+ 	for (index_var = 0; index_var < fingers->last_plus_one; index_var++)
+ 
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/ev_update.c xview-3.2p1.4/lib/libxview/textsw/ev_update.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/ev_update.c	1993-06-29 07:17:40.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/ev_update.c	2013-01-07 12:50:55.085736000 +0100
@@ -32,10 +32,12 @@
 #include <pixrect/memvar.h>
 
 #include <pixrect/pixfont.h>
-#ifdef SVR4 
+#if defined(SVR4) || defined(__linux__)
 #include <stdlib.h> 
 #endif /* SVR4 */
 
+Es_index ev_line_start();
+
 /* for ev_lt_format ... */
 static struct ev_impl_line_data line_data = {-1, -1, -1, -1};
 
@@ -62,11 +64,11 @@
  * 
  * If the table needs any repainting, return 1; otherwise return 0.
  */
-Pkg_private int
+Pkg_private Es_index
 ev_lt_delta(view, before_edit, delta)
     Ev_handle       view;
     Es_index        before_edit;
-    int             delta;
+    Es_index        delta;
 {
     int             result = 0;
     int             lt_index;
@@ -346,7 +348,7 @@
 #define BUFSIZE_SMALL		 512
     static CHAR    *buf;	/* Avoids constant malloc/free */
     CHAR           *bp;
-    CHAR           *tmp_bp;
+    /*CHAR           *tmp_bp;*/
     Ev_chain        chain = view->view_chain;
     Ev_chain_pd_handle chain_private = EV_CHAIN_PRIVATE(chain);
     Ei_handle       eih = chain->eih;
@@ -492,8 +494,10 @@
     Xv_Drawable_info *info;
     XEvent          xevent;
     void            ev_paint_view();
+#if 0
     extern int      textsw_doing_refresh;
     extern int      ttysw_view_obscured;
+#endif
 
     tty_copyarea(pw,
 		 old_rect->r_left, old_rect->r_top,
@@ -508,7 +512,7 @@
 
     /* this routine just sets the flag that indicates need for update! */
     /* (with the new delayed action scrollbars the NULL is ok) */
-    textsw_update_scrollbars(NULL, view);
+    textsw_update_scrollbars(NULL, (Textsw_view_handle)view);
 
     if (VIEW_PRIVATE(pw)->obscured != VisibilityPartiallyObscured)
         /* short circuit when not partially obscured */
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/ps_impl.c xview-3.2p1.4/lib/libxview/textsw/ps_impl.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/ps_impl.c	2013-01-07 12:36:20.382832000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/ps_impl.c	2013-01-07 16:03:33.909728000 +0100
@@ -49,6 +49,7 @@
 #include <xview/notice.h>
 #include <xview/frame.h>
 #include <xview/textsw.h>
+#include <string.h>			/* strlen() */
 #ifdef SVR4 
 #include <stdlib.h> 
 #endif /* SVR4 */
@@ -58,14 +59,32 @@
 static Es_index ps_get_length(), ps_scratch_get_length();
 static Es_index ps_get_position(), ps_scratch_get_position();
 static Es_index ps_set_position(), ps_scratch_set_position();
-static Es_index ps_read(), ps_scratch_read();
-static Es_index ps_replace(), ps_scratch_replace();
-static int      ps_set();
-
-static copy_pieces();
-static int	get_current_offset(Piece_table private);
 
+#ifdef __STDC__
+static Es_index ps_read(Es_handle esh, unsigned int len, CHAR *bufp, unsigned int *resultp);
+static Es_index ps_scratch_read(Es_handle esh, unsigned int len, CHAR *bufp, unsigned int *resultp);
+static Es_index ps_replace(Es_handle esh, Es_index last_plus_one, int count, CHAR *buf, int *count_used);
+static Es_index ps_scratch_replace(Es_handle esh, Es_index last_plus_one, int count, CHAR *buf, int *count_used);
+static int ps_set(Es_handle esh, Attr_attribute *attrs);
+static Es_index ps_get_length(Es_handle esh);
+static caddr_t ps_get(Es_handle esh, Es_attribute attribute, ...);
+static int get_current_offset(Piece_table private);
+static Es_index write_header_etc(Es_handle esh, Piece_table private, Es_index last_plus_one, int count, CHAR *buf, int *count_used, Es_index *contents_start, int *deleted_pieces_length, int first_deleted, int last_plus_one_deleted);
+static void copy_pieces(ft_handle to_table, int to_index, ft_handle from_table, int first, int last_plus_one);
+#else
+static Es_index ps_read();
+static Es_index ps_scratch_read();
+static Es_index ps_replace();
+static Es_index ps_scratch_replace();
+static int ps_set();
+static Es_index ps_get_length();
+static caddr_t ps_get();
+static int get_current_offset();
 static Es_index write_header_etc();
+static void copy_pieces();
+#endif
+
+static int	get_current_offset(Piece_table private);
 
 static struct es_ops ps_ops = {
     ps_commit,
@@ -145,7 +164,7 @@
 		 ERROR_STRING, 
 		 XV_MSG("ps_create(): cannot reset scratch stream"),
 		 ERROR_PKG, TEXTSW,
-		 0);
+		 NULL);
 	return (NULL);
     }
     if (esh == NULL)
@@ -175,11 +194,11 @@
     return (esh);
 
 AllocFailed:
-    xv_error(NULL,
+    xv_error((Xv_object)NULL,
 	     ERROR_STRING, 
 	     XV_MSG("ps_create(): alloc failure"),
 	     ERROR_PKG, TEXTSW,
-	     0);
+	     NULL);
     return (NULL);
 }
 
@@ -322,13 +341,13 @@
 static          Es_index
 ps_scratch_read(esh, len, bufp, resultp)
     Es_handle       esh;
-    u_int           len, *resultp;
+    unsigned int    len, *resultp;
     register CHAR  *bufp;
 {
     register Piece_table private = SCRATCH_TO_REP(esh);
     register Es_index first_valid, last_plus_one;
     Es_index        remainder;
-    long int        count_read;
+    int             count_read;
 
     if (!SCRATCH_HAS_WRAPPED(private)) {
 	private->scratch_position =
@@ -393,13 +412,13 @@
 ps_scratch_replace(esh, last_plus_one, count, buf, count_used)
     Es_handle       esh;
     Es_index        last_plus_one;
-    long int        count, *count_used;
+    int             count, *count_used;
     CHAR           *buf;
 {
     register Piece_table private = SCRATCH_TO_REP(esh);
     register Es_index first_valid, max_lpo;
     Es_index        remainder;
-    long int        count_replaced;
+    int             count_replaced;
 
     if (last_plus_one > private->scratch_length) {
 	last_plus_one = private->scratch_length;
@@ -534,8 +553,9 @@
 static          Es_index
 ps_read(esh, len, bufp, resultp)
     Es_handle       esh;
-    u_int           len, *resultp;
+    unsigned int    len;
     register CHAR  *bufp;
+    unsigned int   *resultp;
 {
 #ifdef DEBUG_TRACE
     Es_index        next, pos;
@@ -557,17 +577,20 @@
 static          Es_index
 ps_debug_read(esh, len, bufp, resultp)
     Es_handle       esh;
-    u_int           len, *resultp;
+    unsigned int    len;
     register CHAR  *bufp;
+    unsigned int   *resultp;
 {
 #endif
     /*
      * "current" must be signed, because it can become -1 when deciding
      * whether to combine pieces containing invalid physical scratch indices.
      */
-    int             read_count, save_current;
+    int             read_count;
+    int             save_current;
     Es_index        next_pos, original_len;
-    register int    current, to_read;
+    register int    current;
+    int             to_read;
     register long int delta;
     register Es_index current_pos;
     register Es_handle current_esh;
@@ -762,7 +785,7 @@
 ps_replace(esh, last_plus_one, count, buf, count_used)
     Es_handle       esh;
     Es_index        last_plus_one;
-    long int        count, *count_used;
+    int             count, *count_used;
     CHAR           *buf;
 {
 #ifdef DEBUG_TRACE
@@ -786,7 +809,7 @@
 ps_debug_replace(esh, last_plus_one, count, buf, count_used)
     Es_handle       esh;
     Es_index        last_plus_one;
-    long int        count, *count_used;
+    int             count, *count_used;
     CHAR           *buf;
 {
 #endif
@@ -815,9 +838,10 @@
      */
     Es_index        scratch_length;
     Es_index        es_temp, new_rec_insert;
-    long int        long_temp;
-    int             delete_pieces_length, replace_used,
-                    old_start;
+    int             long_temp;
+    int             delete_pieces_length;
+    int             replace_used;
+    int             old_start;
     unsigned int    first_valid;
     register int    current, end_index;
     register long int delta;	/* Has 2 meanings! */
@@ -886,7 +910,7 @@
 	 */
 	new_rec_insert =
 	    write_header_etc(scratch, private, last_plus_one,
-			     (long) count, buf, count_used,
+			     count, buf, count_used,
 			     &es_temp, &delete_pieces_length,
 			     current, end_index + 1);
 	if (new_rec_insert == ES_CANNOT_SET) {
@@ -1039,7 +1063,7 @@
      * es_replace's modify the status.
      */
     (void) es_set_position(scratch, scratch_length);
-    (void) es_replace(scratch, ES_INFINITY, 0, NULL, count_used);
+    (void) es_replace(scratch, ES_INFINITY, 0, (CHAR *)NULL, count_used);
     INVALIDATE_CURRENT(private);
     ASSUME(ps_pieces_are_consistent(private));
     return (ES_CANNOT_SET);
@@ -1110,9 +1134,9 @@
     register Es_handle esh;
     register Piece_table private;
     Es_index        last_plus_one;
-    long int        count;
-    long int       *count_used;
+    int             count;
     CHAR           *buf;
+    int            *count_used;
     Es_index       *contents_start;
     int            *deleted_pieces_length;
     int             first_deleted, last_plus_one_deleted;
@@ -1233,7 +1257,7 @@
     return (result);
 }
 
-static
+static void
 copy_pieces(to_table, to_index, from_table, first, last_plus_one)
     register ft_handle to_table, from_table;
     int             to_index, first, last_plus_one;
@@ -1275,8 +1299,9 @@
 {
     ft_handle       rep = (ft_handle)
     & (ABS_TO_REP(to_insert))->pieces;
-    long int        long_temp;
-    int             at_end_of_stream, replace_used;
+    int             long_temp;
+    int             at_end_of_stream;
+    int             replace_used;
     long int        delta;
     int             save_last_plus_one;
     Es_index        scratch_length, es_temp;
@@ -1405,8 +1430,9 @@
     Es_index        delta, mark_pos = mark;
     struct piece_record_header r_header;
     struct deleted_piece d_header;
-    int             current, i, read;
-    long int        insert_len;
+    int             current, i;
+    int             read;
+    int             insert_len;
 
     if (es_get_length(scratch) == 0)
 	return;
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/ps_impl.h xview-3.2p1.4/lib/libxview/textsw/ps_impl.h
--- xview-3.2p1.4.orig/lib/libxview/textsw/ps_impl.h	1993-06-29 07:17:31.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/ps_impl.h	2013-01-07 12:50:55.187382000 +0100
@@ -43,7 +43,7 @@
 	Es_status	status;
 	Xv_opaque	client_data;
 	ft_object	pieces;
-	int		current;		/* pieces[] with position */
+	Es_index	current;		/* pieces[] with position */
 	Es_index	position, length,	/* in piece_stream */
 			last_write_plus_one,	/* in piece_stream */
 			oldest_not_undone_mark,	/* in scratch */
@@ -134,7 +134,5 @@
 #define	SCRATCH_HAS_WRAPPED(_private)					\
 	((_private)->scratch_length > (_private)->scratch_max_len)
 
-EXTERN_FUNCTION( caddr_t ps_get, (Es_handle esh, Es_attribute attribute, DOTDOTDOT ));
-
 #endif
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/text.c xview-3.2p1.4/lib/libxview/textsw/text.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/text.c	1993-06-29 07:17:52.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/text.c	2013-01-07 12:50:55.214729000 +0100
@@ -47,7 +47,7 @@
     }
 
     for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-	switch (*attrs) {
+	switch ((int)*attrs) {
 	  case TEXTSW_STATUS:
 	    status = (Textsw_status *) attrs[1];
 	    break;
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/textsw.h xview-3.2p1.4/lib/libxview/textsw/textsw.h
--- xview-3.2p1.4.orig/lib/libxview/textsw/textsw.h	1993-06-29 07:17:40.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/textsw.h	2013-01-07 12:50:55.262584000 +0100
@@ -563,11 +563,11 @@
 EXTERN_FUNCTION (Textsw_expand_status textsw_expand, (Textsw textsw, Textsw_index start, Textsw_index stop_plus_one, char *out_buf, int out_buf_len, int *total_chars));
 #endif /* OW_I18N */
 
-EXTERN_FUNCTION (int textsw_default_notify, (Textsw textsw, Attr_avlist attrs));
+EXTERN_FUNCTION (void textsw_default_notify, (Textsw textsw, Attr_avlist attrs));
 
 EXTERN_FUNCTION (int textsw_nop_notify, (Textsw textsw, Attr_avlist attrs));
 
-#ifdef _OTHER_TEXTSW_FUNCTIONS
+/*#ifdef _OTHER_TEXTSW_FUNCTIONS*/
 
 EXTERN_FUNCTION (void textsw_normalize_view, (Textsw textsw, Textsw_index pos));
 EXTERN_FUNCTION (void textsw_possibly_normalize, (Textsw textsw, Textsw_index pos));
@@ -579,6 +579,6 @@
 EXTERN_FUNCTION (void textsw_set_selection_wcs, (Textsw textsw, Textsw_index first, Textsw_index last_plus_one, unsigned int type));
 #endif /* OW_I18N */
 
-#endif /* _OTHER_TEXTSW_FUNCTIONS */
+/*#endif*/ /* _OTHER_TEXTSW_FUNCTIONS */
 
 #endif /* xview_textsw_DEFINED */
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_again.c xview-3.2p1.4/lib/libxview/textsw/txt_again.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_again.c	2013-01-07 12:36:18.779837000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/txt_again.c	2013-01-07 15:19:28.628590000 +0100
@@ -22,6 +22,7 @@
 #if defined SVR4 || defined __linux__
 #include <stdlib.h>
 #include <string.h>
+#include <ctype.h>
 #endif /* SVR4 */
 
 Pkg_private Es_index textsw_do_input();
@@ -86,6 +87,12 @@
 static char	    mb_str[MB_STR_BUFFER_LEN];
 #endif
 
+#ifdef __STDC__
+static int textsw_string_min_free(string_t *ptr_to_string, int min_free_desired);
+#else
+static int textsw_string_min_free();
+#endif
+
 Pkg_private int
 match_in_table(to_match, table)	/* Modified from ucb/lpr/lpc.c */
     register char  *to_match;
@@ -557,7 +564,7 @@
 	old_length = atoi(insert_length);
 #endif /* OW_I18N */	
 	ASSUME(old_length > 0);
-	(void) SPRINTF(new_length_buf, "%6d", old_length + buffer_length);
+	(void) SPRINTF(new_length_buf, "%6ld", old_length + buffer_length);
 	for (i = 0; i < 6; i++) {
 	    insert_length[i] = new_length_buf[i];
 	}
@@ -966,7 +973,7 @@
 	return (result);
     }
     saved_base = TXTSW_STRING_BASE(again);
-    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, 0);
+    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, NULL);
     FOREVER {
 	count = textsw_scanf(again, "%19s", token);
 	if (count == -1)
@@ -1010,7 +1017,7 @@
 Again_Error:
     if (buffer != NULL)
 	free(buffer);
-    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, 0);
+    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, NULL);
     ev_update_chain_display(folio->views);
     TXTSW_STRING_BASE(again) = saved_base;
     ASSERT(allock());
@@ -1045,7 +1052,7 @@
     saved_base = TXTSW_STRING_BASE(again);
     (void) ev_get_selection(textsw->views, &first, &last_plus_one,
 			    EV_SEL_PRIMARY);
-    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, 0);
+    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, NULL);
     FOREVER {
 	count = textsw_scanf(again, "%19s", token);
 	if (count == -1)
@@ -1142,7 +1149,7 @@
 		buffer_length = textsw_text_for_replay(again, &buffer);
 		CHECK_ERROR(buffer_length <= 0);
 
-		buffer[buffer_length] = NULL;	/* In case garbage follow */
+		buffer[buffer_length] = (CHAR)'\0';	/* In case garbage follow */
 		filter_argv = textsw_string_to_argv(buffer);
 		(void) textsw_call_filter(view, filter_argv);
 
@@ -1173,7 +1180,7 @@
 
 		if ((field_flag == TEXTSW_FIELD_ENCLOSE) ||
 		    (field_flag == TEXTSW_DELIMITER_ENCLOSE)) {
-		    int             first, last_plus_one;
+		    Es_index        first, last_plus_one;
 
 		    first = last_plus_one = EV_GET_INSERT(textsw->views);
 		    matched = textsw_match_field_and_normalize(view, &first, &last_plus_one, start_marker, STRLEN(start_marker), field_flag, TRUE);
@@ -1313,7 +1320,7 @@
 Again_Error:
     if (buffer != NULL)
 	free(buffer);
-    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, 0);
+    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, NULL);
     ev_update_chain_display(textsw->views);
     TXTSW_STRING_BASE(again) = saved_base;
     ASSERT(allock());
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_attr.c xview-3.2p1.4/lib/libxview/textsw/txt_attr.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_attr.c	1993-06-29 07:17:49.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/txt_attr.c	2013-01-07 12:50:55.357835000 +0100
@@ -52,6 +52,9 @@
 Xv_private PIXFONT *xv_pf_open();
 Xv_private int      xv_pf_close();
 
+Attr_avlist attr_copy_avlist();
+Es_status es_copy();
+
 #ifndef CTRL
 #ifndef __STDC__
 #define CTRL(c)		('c' & 037)
@@ -124,18 +127,18 @@
 			      EV_DISPLAY_LEVEL, EV_DISPLAY_NONE,
 			      EV_DISPLAY_START, first,
 			      EV_DISPLAY_LEVEL, EV_DISPLAY,
-			      0);
+			      NULL);
 	    }
 #ifdef OW_I18N
 	    filename_mb = _xv_wcstombsdup(filename);
 	    textsw_notify(view,
 			  TEXTSW_ACTION_LOADED_FILE, filename_mb,
-			  TEXTSW_ACTION_LOADED_FILE_WCS, filename, 0);
+			  TEXTSW_ACTION_LOADED_FILE_WCS, filename, NULL);
 	    if (filename_mb)
 		free(filename_mb);
 #else
 	    textsw_notify(view,
-			  TEXTSW_ACTION_LOADED_FILE, filename, 0);
+			  TEXTSW_ACTION_LOADED_FILE, filename, NULL);
 #endif
 	} else {
 	    textsw_format_load_error(msg, load_status,
@@ -187,7 +190,7 @@
     for (; *view_attrs; view_attrs = attr_next(view_attrs),
 	 attrs = attr_next(attrs)) {
 
-	switch (*view_attrs) {
+	switch ((int)*view_attrs) {
 	  case TEXTSW_AUTO_SCROLL_BY:
 	  case TEXTSW_CONTENTS:
 	  case TEXTSW_FILE_CONTENTS:
@@ -233,7 +236,7 @@
     /* now apply the view attrs to the view */
     xv_set(FOLIO_REP_TO_ABS(folio),
 	   OPENWIN_VIEW_ATTRS, ATTR_LIST, avarray, 0,
-	   0);
+	   NULL);
 
     /* now attrs has no view attrs left uncomsumed in it */
 }
@@ -287,7 +290,6 @@
     Es_handle       ps_esh, scratch_esh, mem_esh;
     Es_status       es_status;
     Es_index        tmp;
-    extern	    Textsw_status textsw_set_internal_tier2();
 /*
  * NOTE: This line of code  is no longer used
  * Remove it after a suitable grace period
@@ -305,9 +307,9 @@
      */
 
     status = TEXTSW_STATUS_OKAY;
-    for (; *attrs; attrs = attr_next(attrs)) {
+    for (; (int)*attrs; attrs = attr_next(attrs)) {
 
-	switch (*attrs) {
+	switch ((int)*attrs) {
 	  case XV_END_CREATE:
 	    if (view) {
 		row_height = ei_plain_text_line_height(textsw->views->eih);
@@ -316,11 +318,11 @@
 					     "Text.EnableScrollbar", True)) {
 			/* Create a scrollbar as a child of the textsw. */
 			view->scrollbar = xv_create(textsw_public,
-			    SCROLLBAR, 0);
+			    SCROLLBAR, NULL);
 			textsw_setup_scrollbar(view->scrollbar);
 			view->state &= ~TXTSW_SCROLLBAR_DISABLED;
 		    } else {
-			view->scrollbar = NULL;
+			view->scrollbar = (Scrollbar)NULL;
 			view->state |= TXTSW_SCROLLBAR_DISABLED;
 		    }
 		    /*
@@ -329,11 +331,11 @@
 		     */
 		    xv_set(textsw_public,
 			   WIN_ROW_HEIGHT, row_height,
-			   0);
+			   NULL);
 		} else {
 		    xv_set(VIEW_PUBLIC(view),
 			   WIN_ROW_HEIGHT, row_height,
-			   0);
+			   NULL);
 		}
 
 		/* don't want things to autoclear for us! jcb 5/15/90 */
@@ -361,10 +363,10 @@
 		    }
 		    if (!textsw->ic || TXTSW_IS_READ_ONLY(textsw) ||
 			    xv_get(textsw_public, WIN_IC_ACTIVE) == FALSE)
-			xv_set(view_public, WIN_IC_ACTIVE, FALSE, 0);
+			xv_set(view_public, WIN_IC_ACTIVE, FALSE, NULL);
 		}
 		else
-		    xv_set(VIEW_PUBLIC(view), WIN_IC_ACTIVE, FALSE, 0);
+		    xv_set(VIEW_PUBLIC(view), WIN_IC_ACTIVE, FALSE, NULL);
 #endif /* OW_I18N */
 
 		textsw_resize(view);
@@ -386,14 +388,14 @@
 	  case TEXTSW_AUTO_SCROLL_BY:
 	    (void) ev_set(view->e_view,
 			  EV_CHAIN_AUTO_SCROLL_BY, (int) (attrs[1]),
-			  0);
+			  NULL);
 	    break;
 	  case TEXTSW_CLIENT_DATA:
 	    textsw->client_data = attrs[1];
 	    break;
 	  case TEXTSW_CONTROL_CHARS_USE_FONT:
 	    (void) ei_set(textsw->views->eih,
-			  EI_CONTROL_CHARS_USE_FONT, attrs[1], 0);
+			  EI_CONTROL_CHARS_USE_FONT, attrs[1], NULL);
 	    break;
 	  case TEXTSW_DISABLE_CD:
 	    SET_BOOL_FLAG(textsw->state, attrs[1], TXTSW_NO_CD);
@@ -579,7 +581,7 @@
 				  (all_views) ?
 				  EV_FOR_ALL_VIEWS : EV_END_ALL_VIEWS,
 				  EV_RIGHT_BREAK, ev_break_action,
-				  0);
+				  NULL);
 		    display_views = (all_views) ? 2 : 1;
 		    break;
 		  default:
@@ -591,7 +593,7 @@
 	  case TEXTSW_LOWER_CONTEXT:
 	    (void) ev_set(view->e_view,
 			  EV_CHAIN_LOWER_CONTEXT, (int) (attrs[1]),
-			  0);
+			  NULL);
 	    break;
 	  case TEXTSW_MEMORY_MAXIMUM:
 	    textsw->es_mem_maximum = (unsigned) (attrs[1]);
@@ -628,7 +630,7 @@
 	    *status_ptr = TEXTSW_STATUS_OKAY;
 	    break;
 	  case TEXTSW_TAB_WIDTH:
-	    (void) ei_set(textsw->views->eih, EI_TAB_WIDTH, attrs[1], 0);
+	    (void) ei_set(textsw->views->eih, EI_TAB_WIDTH, attrs[1], NULL);
 	    break;
 	  case TEXTSW_TEMP_FILENAME:
 	    if (textsw->temp_filename)
@@ -638,12 +640,12 @@
 	  case TEXTSW_UPPER_CONTEXT:
 	    (void) ev_set(view->e_view,
 			  EV_CHAIN_UPPER_CONTEXT, (int) (attrs[1]),
-			  0);
+			  NULL);
 	    break;
 	  case TEXTSW_WRAPAROUND_SIZE:
 	    es_set(textsw->views->esh,
 		   ES_PS_SCRATCH_MAX_LEN, attrs[1],
-		   0);
+		   NULL);
 	    break;
 	  case TEXTSW_ACCELERATE_MENUS:
 	    /*
@@ -715,7 +717,7 @@
 			textsw->state &= ~TXTSW_OPENED_FONT;
 		    }
 		    (void) ei_set(textsw->views->eih,
-				  EI_FONT, attrs[1], 0);
+				  EI_FONT, attrs[1], NULL);
 #ifdef FULL_R5
 #ifdef OW_I18N
         	if (textsw->ic && (textsw->xim_style & (XIMPreeditArea | XIMPreeditPosition | XIMPreeditNothing))) {  
@@ -735,7 +737,7 @@
 		FORALLVIEWS(textsw->views, ev_next) {
 		    (void) ev_set(ev_next,
 				  EV_CLIP_RECT, &ev_next->rect,
-				  EV_RECT, &ev_next->rect, 0);
+				  EV_RECT, &ev_next->rect, NULL);
 		}
 	    }
 	    break;
@@ -750,7 +752,7 @@
 			  (all_views) ?
 			  EV_FOR_ALL_VIEWS : EV_END_ALL_VIEWS,
 			  EV_LEFT_MARGIN, (int) (attrs[1]),
-			  0);
+			  NULL);
 	    display_views = (all_views) ? 2 : 1;
 	    break;
 	  case XV_RIGHT_MARGIN:
@@ -759,7 +761,7 @@
 			  (all_views) ?
 			  EV_FOR_ALL_VIEWS : EV_END_ALL_VIEWS,
 			  EV_RIGHT_MARGIN, (int) (attrs[1]),
-			  0);
+			  NULL);
 	    display_views = (all_views) ? 2 : 1;
 	    break;
 
@@ -807,7 +809,7 @@
 		if (TXTSW_IS_READ_ONLY(textsw) && attrs[1] == TRUE)
 		    break;
 		FORALL_TEXT_VIEWS(textsw, next) {
-		    xv_set(VIEW_PUBLIC(next), WIN_IC_ACTIVE, attrs[1], 0);
+		    xv_set(VIEW_PUBLIC(next), WIN_IC_ACTIVE, attrs[1], NULL);
 		}
 	    }
 	    break;
@@ -902,7 +904,7 @@
 		FORALL_TEXT_VIEWS(textsw, next) {
 		    xv_set(VIEW_PUBLIC(next), WIN_IC_ACTIVE,
 			   (TXTSW_IS_READ_ONLY(textsw) ? FALSE : TRUE),
-			   0);
+			   NULL);
 		}
 	    }
 	}
@@ -911,7 +913,7 @@
     return (status);
 }
 
-Pkg_private     Textsw_status
+Pkg_private void
 textsw_set_internal_tier2(textsw, view, attrs, is_folio, status_ptr,
 			  error_msg_addr, file, name_wc, reset_mode,
 			  all_views, update_scrollbar, read_only_changed)
@@ -936,7 +938,7 @@
     int            *int_ptr;
 #endif /* LEFT_HAND_SIDE_CAST */
 
-    switch (*attrs) {
+    switch ((int)*attrs) {
           case TEXTSW_FOR_ALL_VIEWS:
             *all_views = TRUE;
             break;
@@ -1062,7 +1064,7 @@
             break;
           case TEXTSW_NO_REPAINT_TIL_EVENT:
             ev_set(view->e_view, EV_NO_REPAINT_TIL_EVENT, (int) (attrs[1]),
-                   0);
+                   NULL);
             break;
            case TEXTSW_RESET_MODE:
             *reset_mode = (int) (attrs[1]);
@@ -1126,7 +1128,7 @@
     register Textsw_folio textsw;
     Textsw_view_handle view;
 {
-    ev_set(view->e_view, EV_NO_REPAINT_TIL_EVENT, FALSE, 0);
+    ev_set(view->e_view, EV_NO_REPAINT_TIL_EVENT, FALSE, NULL);
     textsw_repaint(view);
     /* if caret was up and we took it down, put it back */
     if ((textsw->caret_state & TXTSW_CARET_ON)
@@ -1142,7 +1144,7 @@
 {
     char           *def_str;	/* Points to strings owned by defaults. */
 
-    switch (attribute) {
+    switch ((int)attribute) {
       case TEXTSW_ADJUST_IS_PENDING_DELETE:
 	return ((long) True);
       case TEXTSW_AGAIN_LIMIT:
@@ -1657,7 +1659,7 @@
     folio->state |= TXTSW_IN_NOTIFY_PROC;
     textsw_notify(view, TEXTSW_ACTION_REPLACED,
 		  insert_before, length_before,
-		  replaced_from, replaced_to, count_inserted, 0);
+		  replaced_from, replaced_to, count_inserted, NULL);
     if (!in_notify_proc)
 	folio->state &= ~TXTSW_IN_NOTIFY_PROC;
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_caret.c xview-3.2p1.4/lib/libxview/textsw/txt_caret.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_caret.c	1993-06-29 07:17:36.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/txt_caret.c	2013-01-07 12:50:55.399841000 +0100
@@ -20,6 +20,15 @@
 #include <xview_private/ev_impl.h>
 
 Pkg_private void textsw_record_caret_motion();
+Pkg_private int ev_get_selection();
+#ifdef OW_I18N
+Xv_public void textsw_set_selection_wcs();
+#else
+Xv_public void textsw_set_selection();
+#endif
+
+Es_index ev_resolve_xy();
+Es_index textsw_get_contents();
 
 static void
 textsw_make_insert_visible(view, visible_status, old_insert, new_insert)
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_dbx.c xview-3.2p1.4/lib/libxview/textsw/txt_dbx.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_dbx.c	1993-06-29 07:17:43.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/txt_dbx.c	2013-01-07 12:50:55.427044000 +0100
@@ -20,6 +20,7 @@
 #include <xview/font.h>
 #include <xview_private/primal.h>
 #include <xview_private/txt_impl.h>
+#include <xview_private/ev_impl.h>
 #include <pixrect/pixfont.h>
 
 Pkg_private Ev_mark_object ev_add_glyph();
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_disp.c xview-3.2p1.4/lib/libxview/textsw/txt_disp.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_disp.c	1993-06-29 07:17:32.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/txt_disp.c	2013-01-07 12:50:55.457242000 +0100
@@ -25,6 +25,7 @@
 #include <X11/Xlib.h>
 #endif /* FULL_R5 */    
 #endif /* OW_I18N */    
+#include <xview/win.h>
 
 
 /* Used as hack to communicate between textsw_display and textsw_display_view
@@ -128,7 +129,7 @@
     view->rect.r_width -= view->rect.r_left;
     view->rect.r_top = view->e_view->rect.r_top;
     view->rect.r_height -= view->rect.r_top;
-    (void) ev_set(view->e_view, EV_RECT, &view->rect, 0);
+    (void) ev_set(view->e_view, EV_RECT, &view->rect, NULL);
     xv_set(view->drop_site, DROP_SITE_DELETE_REGION,    NULL,
 			    DROP_SITE_REGION,           &view->rect,
 			    NULL);
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_e_menu.c xview-3.2p1.4/lib/libxview/textsw/txt_e_menu.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_e_menu.c	2013-01-07 12:36:19.791399000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/txt_e_menu.c	2013-01-07 17:00:45.298849000 +0100
@@ -40,6 +40,7 @@
 #include <string.h>
 #include <xview/str_utils.h>
 #include <unistd.h>
+#include <stdlib.h>		/* getenv() */
 
 /*
  * Declare errno. Some BSD systems do not have errno declared in
@@ -50,7 +51,9 @@
 #define	ERROR	-1
 
 #define	MAX_FILES	40
+#ifndef MAXPATHLEN
 #define MAXPATHLEN	1024
+#endif
 #define	EXTRASMENU	"text_extras_menu"
 #define	MAXSTRLEN	256
 #define	MAXARGS		20
@@ -61,7 +64,6 @@
 };
 
 static char    *textsw_savestr(), *textsw_save2str();
-extern char    *getenv();
 void            expand_path();
 static struct stat_rec Extras_stat_array[MAX_FILES];
 static int      Textsw_nextfile;
@@ -70,12 +72,12 @@
 Pkg_private int 	textsw_build_extras_menu_items();
 Pkg_private char      **textsw_string_to_argv();
 Pkg_private Textsw_view textsw_from_menu();
-static	int      extras_menufile_changed();
-static	int      walk_getmenu();
-static	int      free_argv();
-static	int      Nargs;
+static	int	extras_menufile_changed();
+static	int	walk_getmenu();
+static	void	free_argv();
+static	int	Nargs;
 static	char	*check_filename_locale();
-static		any_shell_meta(char *s);
+static	int	any_shell_meta(char *s);
 
 extern int      EXTRASMENU_FILENAME_KEY;
 
@@ -90,7 +92,7 @@
     char  	   tmp[MAXPATHLEN + 1];
 
 
-    filename = (char *) xv_get(mi, XV_KEY_DATA, EXTRASMENU_FILENAME_KEY);
+    filename = (char *) xv_get(mi, XV_KEY_DATA, (Attr_attribute)EXTRASMENU_FILENAME_KEY);
     if ((filename != NULL) && ((int) strlen(filename) > 0))
 	return filename;
 	
@@ -166,7 +168,7 @@
     result = xv_strsave(tmp);
 
 found:
-    (void) xv_set(mi, XV_KEY_DATA, EXTRASMENU_FILENAME_KEY, result, 0);
+    (void) xv_set(mi, XV_KEY_DATA, (Attr_attribute)EXTRASMENU_FILENAME_KEY, result, NULL);
 
     return result;
 }
@@ -216,11 +218,11 @@
 	if (stat(Extras_stat_array[i].name, &statb) < 0) {
 	    if (errno == ENOENT)
 		return (TRUE);
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		     ERROR_LAYER, ERROR_SYSTEM,
 		     ERROR_STRING, Extras_stat_array[i].name,
 		     ERROR_PKG, TEXTSW,
-		     0);
+		     NULL);
 	    return (ERROR);
 	}
 	if (statb.st_mtime > Extras_stat_array[i].mftime)
@@ -243,7 +245,7 @@
 
     for (i = n; i >= 1; i--) {
 	mi = xv_get(menu, MENU_NTH_ITEM, i);
-	xv_set(menu, MENU_REMOVE_ITEM, mi, 0);
+	xv_set(menu, MENU_REMOVE_ITEM, mi, NULL);
 	xv_destroy(mi);
     }
 }
@@ -273,7 +275,7 @@
 
     file_exists = (stat(full_file, &statb) >= 0);
 
-    xv_set(mi, MENU_INACTIVE, !file_exists, 0);
+    xv_set(mi, MENU_INACTIVE, !file_exists, NULL);
 
     if (file_exists && extras_menufile_changed()) {
 	Menu        menu_handle = xv_get(mi, MENU_PULLRIGHT);
@@ -307,33 +309,33 @@
 			      2);
 	strcpy(error_string, XV_MSG("extras menu file "));
 	strcat(error_string, full_file);
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_LAYER, ERROR_SYSTEM,
 		 ERROR_STRING, error_string,
 		 ERROR_PKG, TEXTSW,
-		 0);
+		 NULL);
 	free(error_string);
 	return (ERROR);
     }
     if (Textsw_nextfile >= MAX_FILES - 1) {
 	char            dummy[128];
 	(void) sprintf(dummy, 
-	XV_MSG("textsw: max number of menu files is %ld"),
+	XV_MSG("textsw: max number of menu files is %d"),
 		       MAX_FILES);
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING, dummy,
 		 ERROR_PKG, TEXTSW,
-		 0);
+		 NULL);
 
 	(void) fclose(mfd);
 	return (ERROR);
     }
     if (stat(full_file, &statb) < 0) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_LAYER, ERROR_SYSTEM,
 		 ERROR_STRING, full_file,
 		 ERROR_PKG, TEXTSW,
-		 0);
+		 NULL);
 	(void) fclose(mfd);
 	return (ERROR);
     }
@@ -375,7 +377,7 @@
     qformat = "\"%[^\"]\"%*[ \t]%[^ \t\n]%*[ \t]%[^\n]\n";
     iformat = "<%[^>]>%*[ \t]%[^ \t\n]%*[ \t]%[^\n]\n";
 
-    (void) menu_set(m, MENU_CLIENT_DATA, textsw_view, 0);
+    (void) menu_set(m, MENU_CLIENT_DATA, textsw_view, NULL);
 
     for (; fgets(line, sizeof(line), mfd); (*lineno)++) {
 
@@ -386,7 +388,7 @@
 		for (p = line + 2; isspace(*p); p++);
 
 		if (*p != '\0' && sscanf(p, "%[^\n]\n", help) > 0)
-		    menu_set((mi != NULL ? mi : m), XV_HELP_DATA, help, 0);
+		    menu_set((mi != (Menu_item)NULL ? mi : m), XV_HELP_DATA, help, NULL);
 	    }
 	    continue;
 	}
@@ -404,10 +406,10 @@
 	    (void) sprintf(dummy, 
 	    XV_MSG("textsw: format error in %s: line %d"),
 			   file, *lineno);
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		     ERROR_STRING, dummy,
 		     ERROR_PKG, TEXTSW,
-		     0);
+		     NULL);
 	    return (ERROR);
 	}
 	if (strcmp(prog, "END") == 0)
@@ -423,10 +425,10 @@
 		strcpy(error_string, 
 		XV_MSG("textsw: icon file format error: "));
 		strcat(error_string, err);
-		xv_error(NULL,
+		xv_error((Xv_object)NULL,
 			 ERROR_STRING, error_string,
 			 ERROR_PKG, TEXTSW,
-			 0);
+			 NULL);
 		free(error_string);
 		return (ERROR);
 	    }
@@ -437,7 +439,7 @@
 	    nm = menu_create(
 			     MENU_NOTIFY_PROC, menu_return_item,
 			     XV_HELP_DATA, "textsw:extrasmenu",
-			     0);
+			     NULL);
 
 	    if (args[0] == '\0') {
 		if (walk_getmenu(textsw_view, nm, file, mfd, lineno) < 0) {
@@ -455,13 +457,13 @@
 				      MENU_PULLRIGHT, nm,
 				      MENU_RELEASE,
 				      MENU_RELEASE_IMAGE,
-				      0);
+				      NULL);
 	    else
 		mi = menu_create_item(MENU_STRING, textsw_savestr(tag),
 				      MENU_PULLRIGHT, nm,
 				      MENU_RELEASE,
 				      MENU_RELEASE_IMAGE,
-				      0);
+				      NULL);
 	} else {
 	    if (mpr)
 		mi = menu_create_item(MENU_IMAGE, mpr,
@@ -470,7 +472,7 @@
 				      MENU_RELEASE,
 				      MENU_RELEASE_IMAGE,
 			    MENU_ACTION_PROC, textsw_handle_extras_menuitem,
-				      0);
+				      NULL);
 	    else
 		mi = menu_create_item(MENU_STRING, textsw_savestr(tag),
 				      MENU_CLIENT_DATA,
@@ -478,9 +480,9 @@
 				      MENU_RELEASE,
 				      MENU_RELEASE_IMAGE,
 			    MENU_ACTION_PROC, textsw_handle_extras_menuitem,
-				      0);
+				      NULL);
 	}
-	(void) menu_set(m, MENU_APPEND_ITEM, mi, 0);
+	(void) menu_set(m, MENU_APPEND_ITEM, mi, NULL);
     }
 
     return (TRUE);
@@ -507,7 +509,7 @@
 
     if AN_ERROR
 	(textsw_view == 0)
-	    return NULL;
+	    return (Menu_item)NULL;
 
     view = VIEW_ABS_TO_REP(textsw_view);
     folio = FOLIO_FOR_VIEW(view);
@@ -568,7 +570,6 @@
     if (use_shell) {
 	/* put in their favorite shell and pass cmd as single string */
 	char           *shell;
-	extern char    *getenv();
 
 	if ((shell = getenv("SHELL")) == NULL)
 	    shell = "/bin/sh";
@@ -597,7 +598,7 @@
     return (new_argv);
 }
 
-static int
+static void
 free_argv(argv)
     char          **argv;
 {
@@ -613,12 +614,12 @@
     register char  *p;
 
     if ((p = malloc((unsigned) (strlen(s) + 1))) == NULL) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_SEVERITY, ERROR_NON_RECOVERABLE,
 		 ERROR_LAYER, ERROR_SYSTEM,
 		 ERROR_STRING, XV_MSG("textsw: menu strings"),
 		 ERROR_PKG, TEXTSW,
-		 0);
+		 NULL);
     }
     (void) strcpy(p, s);
     return (p);
@@ -631,12 +632,12 @@
     register char  *p;
 
     if ((p = malloc((unsigned) (strlen(s) + strlen(t) + 1 + 1))) == NULL) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_SEVERITY, ERROR_NON_RECOVERABLE,
 		 ERROR_LAYER, ERROR_SYSTEM,
 		 ERROR_STRING, XV_MSG("textsw: menu strings"),
 		 ERROR_PKG, TEXTSW,
-		 0);
+		 NULL);
     }
     (void) strcpy(p, s);
     (void) strcpy(XV_INDEX(p, '\0') + 1, t);
@@ -646,7 +647,7 @@
 /*
  * Are there any shell meta-characters in string s?
  */
-static
+static int
 any_shell_meta(s)
     register char  *s;
 {
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_edit.c xview-3.2p1.4/lib/libxview/textsw/txt_edit.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_edit.c	2013-01-07 12:36:15.165305000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/txt_edit.c	2013-01-07 12:50:55.562281000 +0100
@@ -39,6 +39,12 @@
 Pkg_private Seln_rank textsw_acquire_seln();
 Pkg_private Textsw_index textsw_replace();
 
+#ifdef __STDC__
+Pkg_private Es_index ev_input_after(Ev_chain views, Es_index old_insert_pos, Es_index old_length);
+#else
+Pkg_private Es_index ev_input_after();
+#endif
+
 Pkg_private     Es_handle
 textsw_esh_for_span(view, first, last_plus_one, to_recycle)
     Textsw_view_handle view;
@@ -85,7 +91,7 @@
     return (0);
 }
 
-Pkg_private int
+Pkg_private void
 textsw_esh_failed_msg(view, preamble)
     Textsw_view_handle view;
     char           *preamble;
@@ -101,7 +107,7 @@
       case ES_SHORT_WRITE:
 	if (TEXTSW_OUT_OF_MEMORY(folio, status)) {
 	    frame = FRAME_FROM_FOLIO_OR_VIEW(view);
-	    text_notice = xv_get(frame, XV_KEY_DATA, text_notice_key, NULL);
+	    text_notice = xv_get(frame, XV_KEY_DATA, (Attr_attribute)text_notice_key, NULL);
 
 	    if (!text_notice)  {
     	        text_notice = xv_create(frame, NOTICE,
@@ -120,12 +126,12 @@
 the operation.  Or, you can enlarge the size of\n\
 this buffer by changing the appropriate value in\n\
 the .Xdefaults file (Text.MaxDocumentSize)."),
-		              0,
+		              NULL,
 			  XV_SHOW, TRUE,
-		          0);
+		          NULL);
 
 	        xv_set(frame, 
-		    XV_KEY_DATA, text_notice_key, text_notice, 
+		    XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice, 
 		    NULL);
 
             }
@@ -146,9 +152,9 @@
 the operation.  Or, you can enlarge the size of\n\
 this buffer by changing the appropriate value in\n\
 the .Xdefaults file (Text.MaxDocumentSize)."),
-		        0,
+		        NULL,
 			XV_SHOW, TRUE, 
-			0);
+			NULL);
 	    }
 	    break;
 	}
@@ -159,7 +165,7 @@
       case ES_FSYNC_FAILED:
       case ES_SEEK_FAILED:{
 	    frame = FRAME_FROM_FOLIO_OR_VIEW(view);
-	    text_notice = xv_get(frame, XV_KEY_DATA, text_notice_key, NULL);
+	    text_notice = xv_get(frame, XV_KEY_DATA, (Attr_attribute)text_notice_key, NULL);
 
 	    if (!text_notice)  {
     	        text_notice = xv_create(frame, NOTICE,
@@ -171,12 +177,12 @@
 				XV_MSG("Action failed -"),
 			XV_MSG("A problem with the file system has been detected.\n\
 File system is probably full."),
-		              0,
+		              NULL,
 			  XV_SHOW, TRUE,
-		          0);
+		          NULL);
 
 	        xv_set(frame, 
-		    XV_KEY_DATA, text_notice_key, text_notice, 
+		    XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice, 
 		    NULL);
 
             }
@@ -190,9 +196,9 @@
 				XV_MSG("Action failed -"),
 			XV_MSG("A problem with the file system has been detected.\n\
 File system is probably full."),
-		        0,
+		        NULL,
 			XV_SHOW, TRUE, 
-			0);
+			NULL);
 	    }
 	    break;
 	}
@@ -320,7 +326,7 @@
 {
     Textsw_view_handle view = VIEW_ABS_TO_REP(abstract);
     Textsw_folio    folio = FOLIO_FOR_VIEW(view);
-    int             result;
+    Es_index        result;
 
 #ifdef OW_I18N
     textsw_implicit_commit(folio);
@@ -348,7 +354,7 @@
 {
     Textsw_view_handle view = VIEW_ABS_TO_REP(abstract);
     Textsw_folio    folio = FOLIO_FOR_VIEW(view);
-    int             result;
+    Es_index        result;
 
 #ifdef OW_I18N
     textsw_implicit_commit(folio);
@@ -370,7 +376,7 @@
 {
     Textsw_view_handle view = VIEW_ABS_TO_REP(abstract);
     Textsw_folio    folio = FOLIO_FOR_VIEW(view);
-    int             result;
+    Es_index        result;
 
     textsw_implicit_commit(folio);
     /*
@@ -401,7 +407,7 @@
 {
     Textsw_view_handle view = VIEW_ABS_TO_REP(abstract);
     Textsw_folio    folio = FOLIO_FOR_VIEW(view);
-    int             result;
+    Es_index        result;
 
     textsw_implicit_commit(folio);
     /*
@@ -448,13 +454,13 @@
  * If byte_return is 1, return number of deleted bytes. And if the value
  * is 0, return number of deleted characters.
  */
-Pkg_private int
+Pkg_private Es_index
 textsw_do_edit(view, unit, direction, byte_return)
     register Textsw_view_handle view;
     unsigned        unit, direction;
     unsigned        byte_return;
 #else /* OW_I18N */
-Pkg_private int
+Pkg_private Es_index
 textsw_do_edit(view, unit, direction)
     register Textsw_view_handle view;
     unsigned        unit, direction;
@@ -464,7 +470,7 @@
                     ev_span_for_edit();
     register Textsw_folio folio = FOLIO_FOR_VIEW(view);
     struct ei_span_result span;
-    int             delta;
+    Es_index        delta;
 
     span = ev_span_for_edit(folio->views, (int) (unit | direction));
     if ((span.flags >> 16) == 0) {
@@ -593,13 +599,13 @@
     }
 }
 
-Pkg_private int
+Pkg_private Es_index
 textsw_input_partial(view, buf, buf_len)
     Textsw_view_handle view;
     CHAR           *buf;
     long int        buf_len;
 {
-    int             status;
+    Es_index        status;
 
     status = ev_input_partial(FOLIO_FOR_VIEW(view)->views, buf, buf_len);
     if (status) {
@@ -665,7 +671,7 @@
 textsw_do_input(view, buf, buf_len, flag)
     Textsw_view_handle view;
     CHAR           *buf;
-    long int        buf_len;
+    long            buf_len;
     unsigned        flag;
 {
     register Textsw_folio folio = FOLIO_FOR_VIEW(view);
@@ -680,7 +686,7 @@
 #else /* OW_I18N */  
 	if (memchr(buf, xv_shell_prompt[0], buf_len))
 #endif /* OW_I18N */
-	    xv_set((Xv_opaque)XV_SERVER_FROM_WINDOW(VIEW_REP_TO_ABS(view)), SERVER_JOURNAL_SYNC_EVENT, 1, 0);
+	    xv_set((Xv_opaque)XV_SERVER_FROM_WINDOW(VIEW_REP_TO_ABS(view)), SERVER_JOURNAL_SYNC_EVENT, 1, NULL);
     textsw_input_before(view, &old_insert_pos, &old_length);
     if (textsw_input_partial(view, buf, buf_len) == ES_CANNOT_SET)
 	return (0);
@@ -810,10 +816,10 @@
     textsw_take_down_caret(folio);
     /* BUG ALERT: change this to avoid the double paint. */
     if (first < last_plus_one) {
-	ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, 0);
+	ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, NULL);
 	result = textsw_delete_span(view, first, last_plus_one,
 				    TXTSW_DS_ADJUST);
-	ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, 0);
+	ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, NULL);
 	if (result == ES_CANNOT_SET) {
 	    if (ES_REPLACE_DIVERTED == (Es_status)
 		es_get(folio->views->esh, ES_STATUS)) {
@@ -889,12 +895,12 @@
     textsw_take_down_caret(folio);
     /* BUG ALERT: change this to avoid the double paint. */
     if (first < last_plus_one) {
-	ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, 0);
+	ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, NULL);
 	first = textsw_wcpos_from_mbpos(folio, first);
 	last_plus_one = textsw_wcpos_from_mbpos(folio, last_plus_one);
 	result = textsw_delete_span(view, first, last_plus_one,
 				    TXTSW_DS_ADJUST | TXTSW_DS_RETURN_BYTES);
-	ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, 0);
+	ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, NULL);
 	if (result == ES_CANNOT_SET) {
 	    if (ES_REPLACE_DIVERTED == (Es_status)
 		es_get(folio->views->esh, ES_STATUS)) {
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_event.c xview-3.2p1.4/lib/libxview/textsw/txt_event.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_event.c	1993-06-29 07:17:45.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/txt_event.c	2013-01-07 12:50:55.600018000 +0100
@@ -122,10 +122,10 @@
 	    next_view = xv_get(textsw, OPENWIN_NTH_VIEW, view_nbr + 1);
 	    if (next_view) {
 		/* Set focus to first element in next view window */
-		xv_set(next_view, WIN_SET_FOCUS, 0);
-		xv_set(textsw, XV_FOCUS_ELEMENT, 0, 0);
+		xv_set(next_view, WIN_SET_FOCUS, NULL);
+		xv_set(textsw, XV_FOCUS_ELEMENT, 0, NULL);
 	    } else
-		xv_set(xv_get(textsw, WIN_FRAME), FRAME_NEXT_PANE, 0);
+		xv_set(xv_get(textsw, WIN_FRAME), FRAME_NEXT_PANE, NULL);
 	}
 	break;
 
@@ -141,12 +141,12 @@
 	    }
 	    if (view_nbr > 0) {
 		/* Set focus to last element in previous paint window */
-		xv_set(previous_view, WIN_SET_FOCUS, 0);
-		xv_set(textsw, XV_FOCUS_ELEMENT, -1, 0);
+		xv_set(previous_view, WIN_SET_FOCUS, NULL);
+		xv_set(textsw, XV_FOCUS_ELEMENT, -1, NULL);
 	    } else {
 		xv_set(xv_get(textsw, WIN_FRAME),
 		       FRAME_PREVIOUS_PANE,
-		       0);
+		       NULL);
 	    }
 	}
 	break;
@@ -171,7 +171,7 @@
       case ACTION_JUMP_MOUSE_TO_INPUT_FOCUS:
 	xv_set(view_public,
 	       WIN_MOUSE_XY, 0, 0,
-	       0);
+	       NULL);
 	/* BUG ALERT:  Clicking MENU at this point does not send ACTION_MENU
 	 *	       to the textsw view window.  Instead, a Window Manager
 	 *	       Window menu is brought up.
@@ -197,7 +197,7 @@
 	folio->state |= TXTSW_HAS_FOCUS;
 	if (folio->caret_state & TXTSW_CARET_FLASHING)
 	    textsw_start_blinker(folio);
-	(void) ev_set(view->e_view, EV_CHAIN_CARET_IS_GHOST, FALSE, 0);
+	(void) ev_set(view->e_view, EV_CHAIN_CARET_IS_GHOST, FALSE, NULL);
 	if (frame = xv_get(FOLIO_REP_TO_ABS(folio), WIN_FRAME))
 	    frame_kbd_use(frame, FOLIO_REP_TO_ABS(folio),
 			  FOLIO_REP_TO_ABS(folio));
@@ -205,7 +205,7 @@
       case KBD_DONE:
 	textsw_hide_caret(folio); /* To get rid of solid */
 	folio->state &= ~TXTSW_HAS_FOCUS;
-	(void) ev_set(view->e_view, EV_CHAIN_CARET_IS_GHOST, TRUE, 0);
+	(void) ev_set(view->e_view, EV_CHAIN_CARET_IS_GHOST, TRUE, NULL);
 	if (frame = xv_get(FOLIO_REP_TO_ABS(folio), WIN_FRAME))
 	    frame_kbd_done(frame, FOLIO_REP_TO_ABS(folio));
 	textsw_stop_blinker(folio);
@@ -346,7 +346,7 @@
 	    xv_set(view->scrollbar,
 		   SCROLLBAR_VIEW_START, first,
 		   SCROLLBAR_VIEW_LENGTH, last_plus_one - first,
-		   0);
+		   NULL);
 
 	} else {
 #ifdef OW_I18N
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_field.c xview-3.2p1.4/lib/libxview/textsw/txt_field.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_field.c	2013-01-07 12:36:15.079799000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/txt_field.c	2013-01-07 12:50:55.650375000 +0100
@@ -30,7 +30,9 @@
 #define    NUM_OF_COL		2
 #define    MAX_STR_LENGTH       1024
 
-static void            textsw_get_match_symbol();
+Es_index ev_find_enclose_end_marker();
+Es_index ev_match_field_in_esh();
+
 
 #ifdef OW_I18N
 
@@ -60,9 +62,13 @@
 {"}", ")", "\"", "'", "`", "]", "<|", "*/",}};
 #endif /* OW_I18N */
 
+#ifdef __STDC__
+static void textsw_get_match_symbol(CHAR *buf, int buf_len, CHAR *match_buf, int *match_buf_len, unsigned *direction);
+#else
+static void textsw_get_match_symbol();
+#endif
 
-
-Pkg_private int
+Pkg_private void
 textsw_begin_match_field(view)
     register Textsw_view_handle view;
 {
@@ -240,7 +246,7 @@
 
     *match_buf_len = 0;
     *direction = EV_FIND_DEFAULT;
-    match_buf[0] = NULL;
+    match_buf[0] = (CHAR)'\0';
 
     for (i = 0; i < NUM_OF_COL; i++) {
 	for (j = 0; j < MAX_SYMBOLS; j++) {
@@ -284,7 +290,7 @@
 }
 
 /* Caller must set *first to be position at which to start the search. */
-Pkg_private int
+Pkg_private void
 textsw_match_field(textsw, first, last_plus_one, symbol1, symbol1_len,
 		   symbol2, symbol2_len, field_flag, do_search)
     Textsw_folio    textsw;
@@ -419,11 +425,10 @@
 Pkg_private int
 textsw_match_selection_and_normalize(view, start_marker, field_flag)
     register Textsw_view_handle view;
-    register unsigned field_flag;
     CHAR           *start_marker;
+    register unsigned field_flag;
 {
     register Textsw_folio textsw = FOLIO_FOR_VIEW(view);
-    Pkg_private int textsw_get_selection();
     Es_index        first, last_plus_one;
     CHAR            buf[MAX_STR_LENGTH];
     int             str_length = MAX_STR_LENGTH;
@@ -447,7 +452,7 @@
 	if (str_length == MAX_STR_LENGTH)
 	    str_length--;
 
-	buf[str_length] = NULL;
+	buf[str_length] = (CHAR)'\0';
 
 	if (field_flag == TEXTSW_NOT_A_FIELD) {
 	    if (str_length > ONE_FIELD_LENGTH) {
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_file.c xview-3.2p1.4/lib/libxview/textsw/txt_file.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_file.c	2013-01-07 12:36:47.724395000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/txt_file.c	2013-01-07 12:50:55.705656000 +0100
@@ -14,6 +14,7 @@
  * File load/save/store utilities for text subwindows.
  */
 
+#include <stdio.h>			/* sprintf() */
 #include <xview_private/primal.h>
 #include <xview_private/txt_impl.h>
 #include <xview_private/ev_impl.h>
@@ -48,9 +49,21 @@
 	else (flags) &= ~(flag)
 
 #if defined(SVR4) || defined(__linux__)
+
+#ifdef __STDC__
+extern char    *getcwd(char *buf, size_t size);
+#else
 extern char    *getcwd();
+#endif
+
+#else
+
+#ifdef __STDC__
+extern char    *getwd(char *buf);
 #else
 extern char    *getwd();
+#endif
+
 #endif /* SVR4 */
 
 #if defined(__linux__) && defined(__GLIBC__)
@@ -70,13 +83,17 @@
 #ifdef OW_I18N
 Pkg_private void textsw_invalid_data_notice();
 #endif
+char *xv_getlogindir();
 
 static unsigned tmtn_counter;
-static
+static void
 textsw_make_temp_name(in_here)
     CHAR           *in_here;
 /* *in_here must be at least MAXNAMLEN characters long */
 {
+#ifndef XVIEW_USE_INSECURE_TMPFILES
+    CHAR *login_dir;
+#endif
     /*
      * BUG ALERT!  Should be able to specify directory other than /tmp.
      * However, if that directory is not /tmp it should be a local (not NFS)
@@ -87,10 +104,15 @@
 #ifdef XVIEW_USE_INSECURE_TMPFILES
     /* martin.buck@bigfoot.com */
     (void) SPRINTF(in_here, "%s/Text%d.%d",
-		   "/tmp", getpid(), tmtn_counter++);
+		   "/tmp", (int)getpid(), tmtn_counter++);
 #else
+    login_dir = xv_getlogindir();
+    if (login_dir == NULL) {
+	login_dir = "/tmp";
+    }
+
     (void) SPRINTF(in_here, "%s/.Text%d.%d",
-		   xv_getlogindir(), getpid(), tmtn_counter++);
+		   login_dir, (int)getpid(), tmtn_counter++);
 #endif
 }
 
@@ -155,7 +177,7 @@
 	es_destroy(original_esh);
 	return (ES_NULL);
     }
-    (void) es_set(scratch_esh, ES_FILE_MODE, 0600, 0);
+    (void) es_set(scratch_esh, ES_FILE_MODE, 0600, NULL);
     piece_esh = textsw_create_ps(folio, original_esh, scratch_esh, status);
 #ifdef OW_I18N
     scratch_name_mbs = _xv_wcstombsdup(scratch_name);
@@ -216,17 +238,17 @@
 			  EV_DISPLAY_LEVEL, EV_DISPLAY_NONE,
 			  EV_DISPLAY_START, start_at,
 			  EV_DISPLAY_LEVEL, EV_DISPLAY,
-			  0);
+			  NULL);
 #ifdef OW_I18N
 	    textsw_notify(textsw->first_view,
 			  TEXTSW_ACTION_LOADED_FILE, name_mb,
-			  TEXTSW_ACTION_LOADED_FILE_WCS, name, 0);
+			  TEXTSW_ACTION_LOADED_FILE_WCS, name, NULL);
 	    textsw_update_scrollbars(textsw, TEXTSW_VIEW_NULL);
 	    if (name_mb)
 		free(name_mb);
 #else
 	    textsw_notify(textsw->first_view,
-			  TEXTSW_ACTION_LOADED_FILE, name, 0);
+			  TEXTSW_ACTION_LOADED_FILE, name, NULL);
 	    textsw_update_scrollbars(textsw, TEXTSW_VIEW_NULL);
 #endif
 	}
@@ -265,7 +287,7 @@
     (void) ev_set(textsw->views->first_view,
 		  EV_DISPLAY_LEVEL, EV_DISPLAY_NONE,
 		  EV_CHAIN_ESH, new_esh,
-		  0);
+		  NULL);
     textsw->state &= ~TXTSW_EDITED;
     textsw_destroy_esh(textsw, save_esh);
     /* Following two calls are inefficient textsw_re-init_undo. */
@@ -277,7 +299,7 @@
 	register Textsw_view_handle view;
 
 	FORALL_TEXT_VIEWS(textsw, view) {
-	    xv_set(VIEW_PUBLIC(view), WIN_IC_ACTIVE, TRUE, 0);
+	    xv_set(VIEW_PUBLIC(view), WIN_IC_ACTIVE, TRUE, NULL);
 	}
     }
 #endif /* OW_I18N */
@@ -439,7 +461,7 @@
     }
 }
 
-Pkg_private int
+Pkg_private void
 textsw_format_load_error_quietly(msg, status, filename, scratch_name)
     char           *msg;
     Es_status       status;
@@ -503,12 +525,12 @@
 
 	    textsw_notify((Textsw_view_handle) textsw,	/* Cast for lint */
 			  TEXTSW_ACTION_LOADED_FILE, filename_mb,
-			  TEXTSW_ACTION_LOADED_FILE_WCS, filename, 0);
+			  TEXTSW_ACTION_LOADED_FILE_WCS, filename, NULL);
 	    if (filename_mb)
 		free(filename_mb);
 #else
 	    textsw_notify((Textsw_view_handle) textsw,	/* Cast for lint */
-			  TEXTSW_ACTION_LOADED_FILE, filename, 0);
+			  TEXTSW_ACTION_LOADED_FILE, filename, NULL);
 #endif
 	}
     } else {
@@ -517,22 +539,22 @@
 
         frame = FRAME_FROM_FOLIO_OR_VIEW(textsw);
         text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
         if (!text_notice)  {
-            text_notice = xv_create(frame, NOTICE,
+            text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
                             notice_msg_buf,
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
             xv_set(frame, 
-                XV_KEY_DATA, text_notice_key, text_notice,
+                XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                 NULL);
         }
         else  {
@@ -541,7 +563,7 @@
 	        NOTICE_BLOCK_THREAD, TRUE,
                 NOTICE_MESSAGE_STRINGS,
                     notice_msg_buf,
-                0,
+                NULL,
                 NOTICE_BUTTON_YES, XV_MSG("Continue"),
                 XV_SHOW, TRUE, 
                 NULL);
@@ -578,12 +600,12 @@
 
 	    textsw_notify((Textsw_view_handle) textsw,	/* Cast for lint */
 			  TEXTSW_ACTION_LOADED_FILE, filename_mb,
-			  TEXTSW_ACTION_LOADED_FILE_WCS, filename, 0);
+			  TEXTSW_ACTION_LOADED_FILE_WCS, filename, NULL);
 	    if (filename_mb)
 		free(filename_mb);
 #else
 	    textsw_notify((Textsw_view_handle) textsw,	/* Cast for lint */
-			  TEXTSW_ACTION_LOADED_FILE, filename, 0);
+			  TEXTSW_ACTION_LOADED_FILE, filename, NULL);
 #endif
 	}
     } else {
@@ -633,7 +655,7 @@
 	if (reload) {
 	    result = textsw_load_file_internal(
 				 folio, output_name, scratch_name, &new_esh,
-					       ES_CANNOT_SET, 0);
+					       ES_CANNOT_SET, NULL);
 	    if ((result == ES_SUCCESS) &&
 		(length != es_get_length(new_esh))) {
 		/* Added a newline - repaint to fix line tables */
@@ -642,7 +664,7 @@
 	}
     }
     if (folio->menu && folio->sub_menu_table)
-        xv_set(folio->sub_menu_table[(int) TXTSW_FILE_SUB_MENU], MENU_DEFAULT, 1, 0 );
+        xv_set(folio->sub_menu_table[(int) TXTSW_FILE_SUB_MENU], MENU_DEFAULT, 1L, NULL );
 	
     return (result);
 }
@@ -702,24 +724,24 @@
 PostError:
     frame = (Frame)xv_get(abstract, WIN_FRAME);
     text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
     if (!text_notice)  {
-        text_notice = xv_create(frame, NOTICE,
+        text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
 			   msg1,
 			   msg2,
 			   error_buf,
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
         xv_set(frame, 
-            XV_KEY_DATA, text_notice_key, text_notice,
+            XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
             NULL);
     }
     else  {
@@ -730,7 +752,7 @@
                 msg1,
                 msg2,
                 error_buf,
-            0,
+            NULL,
             NOTICE_BUTTON_YES, XV_MSG("Continue"),
             XV_SHOW, TRUE, 
             NULL);
@@ -785,30 +807,30 @@
     (void) es_set(folio->views->esh,
 		  ES_STATUS_PTR, &es_status,
 		  ES_PS_ORIGINAL, backup,
-		  0);
+		  NULL);
     if (es_status != ES_SUCCESS) {
 	int             result;
 
         frame = FRAME_FROM_FOLIO_OR_VIEW(folio);
         text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
         if (!text_notice)  {
-            text_notice = xv_create(frame, NOTICE,
+            text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Unable to Save Current File.\n\
 Was the file edited with another editor?."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
 			NOTICE_STATUS, &result,
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
             xv_set(frame, 
-                XV_KEY_DATA, text_notice_key, text_notice,
+                XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                 NULL);
         }
         else  {
@@ -818,7 +840,7 @@
                 NOTICE_MESSAGE_STRINGS,
 		XV_MSG("Unable to Save Current File.\n\
 Was the file edited with another editor?."),
-                0,
+                NULL,
                 NOTICE_BUTTON_YES, XV_MSG("Continue"),
 		NOTICE_STATUS, &result,
                 XV_SHOW, TRUE, 
@@ -848,9 +870,9 @@
 	textsw_notify(folio->first_view,
 #ifdef OW_I18N
 		      TEXTSW_ACTION_LOADED_FILE, original_name_mb,
-		      TEXTSW_ACTION_LOADED_FILE_WCS, original_name, 0);
+		      TEXTSW_ACTION_LOADED_FILE_WCS, original_name, NULL);
 #else
-		      TEXTSW_ACTION_LOADED_FILE, original_name, 0);
+		      TEXTSW_ACTION_LOADED_FILE, original_name, NULL);
 #endif
 	return (ES_SUCCESS);
 	}
@@ -873,7 +895,7 @@
 	(void) es_set(folio->views->esh,
 		      ES_STATUS_PTR, &es_status,
 		      ES_PS_ORIGINAL, original,
-		      0);
+		      NULL);
     return (status);
 }
 
@@ -973,7 +995,7 @@
     (void) textsw_input_after(view, old_insert_pos, old_length, record);
 #ifdef OW_I18N
     if (result == ES_SUCCESS && skipped)
-	textsw_invalid_data_notice(view, filename, 0);
+	textsw_invalid_data_notice(view, filename, NULL);
 #endif
     return (result);
 }
@@ -1117,24 +1139,24 @@
 
     frame = (Frame)FRAME_FROM_FOLIO_OR_VIEW(view);
     text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
     if (!text_notice)  {
-        text_notice = xv_create(frame, NOTICE,
+        text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
 			   (strlen(sys_msg)) ? sys_msg : notice_msg1,
 			   (strlen(sys_msg)) ? notice_msg1 : notice_msg2,
 			   (strlen(sys_msg)) ? notice_msg2 : 0,
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
         xv_set(frame, 
-            XV_KEY_DATA, text_notice_key, text_notice,
+            XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
             NULL);
     }
     else  {
@@ -1145,7 +1167,7 @@
                 (strlen(sys_msg)) ? sys_msg : notice_msg1,
                 (strlen(sys_msg)) ? notice_msg1 : notice_msg2,
                 (strlen(sys_msg)) ? notice_msg2 : 0,
-            0,
+            NULL,
             NOTICE_BUTTON_YES, XV_MSG("Continue"),
             XV_SHOW, TRUE, 
             NULL);
@@ -1223,24 +1245,24 @@
 
     frame = FRAME_FROM_FOLIO_OR_VIEW(view);
     text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
     if (!text_notice)  {
-        text_notice = xv_create(frame, NOTICE,
+        text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
 			   (strlen(sys_msg)) ? sys_msg : notice_msg1,
 			   (strlen(sys_msg)) ? notice_msg1 : notice_msg2,
 			   (strlen(sys_msg)) ? notice_msg2 : 0,
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
         xv_set(frame, 
-            XV_KEY_DATA, text_notice_key, text_notice,
+            XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
             NULL);
     }
     else  {
@@ -1338,11 +1360,11 @@
 #endif
         frame = FRAME_FROM_FOLIO_OR_VIEW(textsw);
         text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
         if (!text_notice)  {
-            text_notice = xv_create(frame, NOTICE,
+            text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
@@ -1354,15 +1376,15 @@
 #endif
 			    "  ",
 			    XV_MSG("That file exists and has data in it."),
-                        0,
+                        NULL,
 			NOTICE_BUTTON_YES, XV_MSG("Confirm"),
 			NOTICE_BUTTON_NO, XV_MSG("Cancel"),
 			NOTICE_STATUS, &result,
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
             xv_set(frame, 
-                XV_KEY_DATA, text_notice_key, text_notice,
+                XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                 NULL);
         }
         else  {
@@ -1378,7 +1400,7 @@
 #endif
                     "  ",
                     XV_MSG("That file exists and has data in it."),
-                0,
+                NULL,
 		NOTICE_BUTTON_YES, XV_MSG("Confirm"),
 		NOTICE_BUTTON_NO, XV_MSG("Cancel"),
 		NOTICE_STATUS, &result,
@@ -1419,23 +1441,23 @@
 PostError:
     frame = FRAME_FROM_FOLIO_OR_VIEW(textsw);
     text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
     if (!text_notice)  {
-        text_notice = xv_create(frame, NOTICE,
+        text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
 			   msg1,
 			   msg2,
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
         xv_set(frame, 
-            XV_KEY_DATA, text_notice_key, text_notice,
+            XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
             NULL);
     }
     else  {
@@ -1445,7 +1467,7 @@
             NOTICE_MESSAGE_STRINGS,
                 msg1,
                 msg2,
-            0,
+            NULL,
             NOTICE_BUTTON_YES, XV_MSG("Continue"),
             XV_SHOW, TRUE, 
             NULL);
@@ -1492,10 +1514,10 @@
 		(void) wcstombs(filename_mbs, filename, MAXNAMLEN);
 		textsw_notify(textsw->first_view,
 			      TEXTSW_ACTION_LOADED_FILE, filename_mbs,
-			      TEXTSW_ACTION_LOADED_FILE_WCS, filename, 0);
+			      TEXTSW_ACTION_LOADED_FILE_WCS, filename, NULL);
 #else /* OW_I18N */
 		textsw_notify(textsw->first_view,
-			      TEXTSW_ACTION_LOADED_FILE, filename, 0);
+			      TEXTSW_ACTION_LOADED_FILE, filename, NULL);
 #endif /* OW_I18N */
             }
 	} else {
@@ -1657,24 +1679,24 @@
 	(void) ev_set(folio->views->first_view,
 		      EV_FOR_ALL_VIEWS,
 		      EV_DISPLAY_LEVEL, EV_DISPLAY_NONE,
-		      EV_DISPLAY_START, 0,
+		      EV_DISPLAY_START, NULL,
 		      EV_DISPLAY_LEVEL, EV_DISPLAY,
-		      0);
+		      NULL);
 
 	textsw_update_scrollbars(folio, TEXTSW_VIEW_NULL);
 
-	textsw_notify(folio->first_view, TEXTSW_ACTION_USING_MEMORY, 0);
+	textsw_notify(folio->first_view, TEXTSW_ACTION_USING_MEMORY, NULL);
     }
 Return:
     (void) textsw_set_insert(folio, 0L);
-    textsw_init_again(folio, 0);
+    textsw_init_again(folio, NULL);
     textsw_init_again(folio, old_count);	/* restore number of again
 						 * level */
     (void) es_set(folio->views->esh,
 		  ES_PS_SCRATCH_MAX_LEN, wrap_around_size,
-		  0);
+		  NULL);
     if (folio->menu && folio->sub_menu_table)
-        xv_set(folio->sub_menu_table[(int) TXTSW_FILE_SUB_MENU], MENU_DEFAULT, 1, 0 );
+        xv_set(folio->sub_menu_table[(int) TXTSW_FILE_SUB_MENU], MENU_DEFAULT, 1, NULL );
 
     if (is_readonly)		/* jcb -- reset if readonly */
 	SET_BOOL_FLAG(folio->state, TRUE, TXTSW_READ_ONLY_ESH);
@@ -1779,7 +1801,7 @@
     Xv_Notice	    text_notice;
     struct namelist *nl;
     char           *msg;
-    int             result;
+    /*int             result;*/
 #ifdef OW_I18N
     char            buf_mb[MAXPATHLEN];
 
@@ -1794,11 +1816,11 @@
 
         frame = FRAME_FROM_FOLIO_OR_VIEW(textsw);
         text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
         if (!text_notice)  {
-            text_notice = xv_create(frame, NOTICE,
+            text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
@@ -1809,13 +1831,13 @@
 #else
 			    buf,
 #endif
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
             xv_set(frame, 
-                XV_KEY_DATA, text_notice_key, text_notice,
+                XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                 NULL);
         }
         else  {
@@ -1830,7 +1852,7 @@
 #else
 		    buf,
 #endif
-                0,
+                NULL,
                 NOTICE_BUTTON_YES, XV_MSG("Continue"),
                 XV_SHOW, TRUE, 
                 NULL);
@@ -1843,24 +1865,24 @@
 
         frame = FRAME_FROM_FOLIO_OR_VIEW(textsw);
         text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
         if (!text_notice)  {
-            text_notice = xv_create(frame, NOTICE,
+            text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Unrecognized file name.\n\
 File name contains only blank or tab characters.\n\
 Please use a valid file name."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
             xv_set(frame, 
-                XV_KEY_DATA, text_notice_key, text_notice,
+                XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                 NULL);
         }
         else  {
@@ -1871,7 +1893,7 @@
 		XV_MSG("Unrecognized file name.\n\
 File name contains only blank or tab characters.\n\
 Please use a valid file name."),
-                0,
+                NULL,
                 NOTICE_BUTTON_YES, XV_MSG("Continue"),
                 XV_SHOW, TRUE, 
                 NULL);
@@ -1887,11 +1909,11 @@
 
         frame = FRAME_FROM_FOLIO_OR_VIEW(textsw);
         text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
         if (!text_notice)  {
-            text_notice = xv_create(frame, NOTICE,
+            text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
@@ -1902,13 +1924,13 @@
 #else
 			    buf,
 #endif
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
             xv_set(frame, 
-                XV_KEY_DATA, text_notice_key, text_notice,
+                XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                 NULL);
         }
         else  {
@@ -1923,7 +1945,7 @@
 #else
 		    buf,
 #endif
-                0,
+                NULL,
                 NOTICE_BUTTON_YES, XV_MSG("Continue"),
                 XV_SHOW, TRUE, 
                 NULL);
@@ -1935,11 +1957,11 @@
 
         frame = FRAME_FROM_FOLIO_OR_VIEW(textsw);
         text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
         if (!text_notice)  {
-            text_notice = xv_create(frame, NOTICE,
+            text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
@@ -1950,13 +1972,13 @@
 #else
 			    buf,
 #endif
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
             xv_set(frame, 
-                XV_KEY_DATA, text_notice_key, text_notice,
+                XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                 NULL);
         }
         else  {
@@ -1971,7 +1993,7 @@
 #else
 		    buf,
 #endif
-                0,
+                NULL,
                 NOTICE_BUTTON_YES, XV_MSG("Continue"),
                 XV_SHOW, TRUE, 
                 NULL);
@@ -1998,7 +2020,7 @@
     Frame	    frame;
     Xv_Notice	    text_notice;
     char           *msg;
-    int             result;
+    /*int             result;*/
 
     if (!textsw_get_selection_as_string(textsw, EV_SEL_PRIMARY,
 					buf, sizeof_buf)) {
@@ -2014,22 +2036,22 @@
 
     frame = FRAME_FROM_FOLIO_OR_VIEW(textsw);
     text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
     if (!text_notice)  {
-        text_notice = xv_create(frame, NOTICE,
+        text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
 	      XV_MSG("Please select a filename and choose this menu option again."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
         xv_set(frame, 
-            XV_KEY_DATA, text_notice_key, text_notice,
+            XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
             NULL);
     }
     else  {
@@ -2038,7 +2060,7 @@
 	    NOTICE_BLOCK_THREAD, TRUE,
             NOTICE_MESSAGE_STRINGS,
 	    XV_MSG("Please select a filename and choose this menu option again."),
-            0,
+            NULL,
             NOTICE_BUTTON_YES, XV_MSG("Continue"),
             XV_SHOW, TRUE, 
             NULL);
@@ -2047,7 +2069,7 @@
     return (1);
 }
 
-Pkg_private int
+Pkg_private void
 textsw_possibly_edited_now_notify(folio)
     Textsw_folio    folio;
 {
@@ -2067,35 +2089,35 @@
 	    char	*name_mb = _xv_wcstombsdup(name);
 #endif
 	    if (folio->menu && folio->sub_menu_table)
-		xv_set(folio->sub_menu_table[(int) TXTSW_FILE_SUB_MENU], MENU_DEFAULT, 2, 0 );
+		xv_set(folio->sub_menu_table[(int) TXTSW_FILE_SUB_MENU], MENU_DEFAULT, 2L, NULL);
 #ifdef OW_I18N
 	    textsw_notify(folio->first_view,
 			  TEXTSW_ACTION_EDITED_FILE, name_mb,
-			  TEXTSW_ACTION_EDITED_FILE_WCS, name, 0);
+			  TEXTSW_ACTION_EDITED_FILE_WCS, name, NULL);
 	    if (name_mb)
 		free(name_mb);
 #else
 	    textsw_notify(folio->first_view,
-			  TEXTSW_ACTION_EDITED_FILE, name, 0);
+			  TEXTSW_ACTION_EDITED_FILE, name, NULL);
 #endif
 
 	} else {
 	    textsw_notify(folio->first_view,
-			  TEXTSW_ACTION_EDITED_MEMORY, 0);
+			  TEXTSW_ACTION_EDITED_MEMORY, NULL);
 	    if (folio->menu && folio->sub_menu_table)
-		xv_set(folio->sub_menu_table[(int) TXTSW_FILE_SUB_MENU], MENU_DEFAULT, 3, 0 );	
+		xv_set(folio->sub_menu_table[(int) TXTSW_FILE_SUB_MENU], MENU_DEFAULT, 3L, NULL);	
 	}
     }
 }
 
-Pkg_private int
+Pkg_private Es_index
 textsw_has_been_modified(abstract)
     Textsw          abstract;
 {
     Textsw_folio    folio = FOLIO_FOR_VIEW(VIEW_ABS_TO_REP(abstract));
 
     if (folio->state & TXTSW_INITIALIZED) {
-	return ((int) es_get(folio->views->esh, ES_HAS_EDITS));
+	return ((Es_index) es_get(folio->views->esh, ES_HAS_EDITS));
     }
     return (0);
 }
@@ -2188,22 +2210,22 @@
 
     frame = FRAME_FROM_FOLIO_OR_VIEW(folio_or_view);
     text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
     if (!text_notice)  {
-        text_notice = xv_create(frame, NOTICE,
+        text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
 			    buf,
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
         xv_set(frame, 
-            XV_KEY_DATA, text_notice_key, text_notice,
+            XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
             NULL);
     }
     else  {
@@ -2212,7 +2234,7 @@
 	    NOTICE_BLOCK_THREAD, TRUE,
             NOTICE_MESSAGE_STRINGS,
                 buf,
-            0,
+            NULL,
             NOTICE_BUTTON_YES, XV_MSG("Continue"),
             XV_SHOW, TRUE, 
             NULL);
@@ -2277,7 +2299,7 @@
 #ifdef OW_I18N
 		  TEXTSW_ACTION_CHANGED_DIRECTORY_WCS, filename_wc,
 #endif
-		  0);
+		  NULL);
     return (result);
 
 Error:
@@ -2305,24 +2327,24 @@
 
     frame = FRAME_FROM_FOLIO_OR_VIEW(textsw);
     text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
     if (!text_notice)  {
-        text_notice = xv_create(frame, NOTICE,
+        text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
                             notice_msg,
                             full_pathname,
                             sys_msg,
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
         xv_set(frame, 
-            XV_KEY_DATA, text_notice_key, text_notice,
+            XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
             NULL);
     }
     else  {
@@ -2333,7 +2355,7 @@
                 notice_msg,
                 full_pathname,
                 sys_msg,
-            0,
+            NULL,
             NOTICE_BUTTON_YES, XV_MSG("Continue"),
             XV_SHOW, TRUE, 
             NULL);
@@ -2389,7 +2411,7 @@
 #ifdef OW_I18N
 		  TEXTSW_ACTION_CHANGED_DIRECTORY_WCS, filename_wc,
 #endif
-		  0);
+		  NULL);
     return (result);
 
 Error:
@@ -2504,26 +2526,26 @@
     if (has_been_modified) {
         frame = FRAME_FROM_FOLIO_OR_VIEW(view);
         text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
         if (!text_notice)  {
-            text_notice = xv_create(frame, NOTICE,
+            text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("The text has been edited.\n\
 Clear Log will discard these edits. Please confirm."),
-                        0,
+                        NULL,
 			NOTICE_BUTTON_YES, XV_MSG("Cancel"),
 			NOTICE_BUTTON_NO,
 			XV_MSG("Confirm, discard edits"),
 		        NOTICE_STATUS, &result,
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
             xv_set(frame, 
-                XV_KEY_DATA, text_notice_key, text_notice,
+                XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                 NULL);
         }
         else  {
@@ -2533,7 +2555,7 @@
                 NOTICE_MESSAGE_STRINGS,
 		XV_MSG("The text has been edited.\n\
 Clear Log will discard these edits. Please confirm."),
-                0,
+                NULL,
 		NOTICE_BUTTON_YES, XV_MSG("Cancel"),
 		NOTICE_BUTTON_NO, 
 		XV_MSG("Confirm, discard edits"),
@@ -2563,28 +2585,27 @@
     Event          *ie;		/* ignored, check for NIL if ever used */
 {
     register Textsw_view_handle view = VIEW_ABS_TO_REP(abstract);
-    int             result;
     Xv_notice	    text_notice;
     Frame	    frame;
 
     frame = FRAME_FROM_FOLIO_OR_VIEW(view);
     text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
     if (!text_notice)  {
-        text_notice = xv_create(frame, NOTICE,
+        text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
 		  XV_MSG("Please select a file name and choose this option again."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
         xv_set(frame, 
-            XV_KEY_DATA, text_notice_key, text_notice,
+            XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
             NULL);
     }
     else  {
@@ -2593,7 +2614,7 @@
 	    NOTICE_BLOCK_THREAD, TRUE,
             NOTICE_MESSAGE_STRINGS,
 	    XV_MSG("Please select a file name and choose this option again."),
-            0,
+            NULL,
             NOTICE_BUTTON_YES, XV_MSG("Continue"),
             XV_SHOW, TRUE, 
             NULL);
@@ -2614,28 +2635,28 @@
     Xv_Notice	    text_notice;
 
     if (textsw_has_been_modified(abstract)) {
-        frame = xv_get(abstract, WIN_FRAME);
+        frame = (Frame)xv_get(abstract, WIN_FRAME);
         text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
         if (!text_notice)  {
-            text_notice = xv_create(frame, NOTICE,
+            text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("The text has been edited.\n\
 Load File will discard these edits. Please confirm."),
-                        0,
+                        NULL,
 			NOTICE_BUTTON_YES, 
 			XV_MSG("Confirm, discard edits"),
 			NOTICE_BUTTON_NO, XV_MSG("Cancel"),
 		        NOTICE_STATUS, &result,
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
             xv_set(frame, 
-                XV_KEY_DATA, text_notice_key, text_notice,
+                XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                 NULL);
         }
         else  {
@@ -2645,7 +2666,7 @@
                 NOTICE_MESSAGE_STRINGS,
 		XV_MSG("The text has been edited.\n\
 Load File will discard these edits. Please confirm."),
-                0,
+                NULL,
                 NOTICE_BUTTON_YES, 
 		XV_MSG("Confirm, discard edits"),
                 NOTICE_BUTTON_NO, XV_MSG("Cancel"),
@@ -2687,7 +2708,7 @@
 	extern int      FILE_STUFF_POPUP_KEY;
 	Frame           base_frame = (Frame) xv_get(abstract, WIN_FRAME);
 	Frame           popup = (Frame) xv_get(base_frame, XV_KEY_DATA,
-					       FILE_STUFF_POPUP_KEY);
+					       (Attr_attribute)FILE_STUFF_POPUP_KEY);
 
 	textsw_flush_caches(view, TFC_STD);
 	insert_pos = EV_GET_INSERT(chain);
@@ -2748,7 +2769,7 @@
 	extern int      LOAD_FILE_POPUP_KEY;
 	Frame           base_frame = (Frame) xv_get(abstract, WIN_FRAME);
 	Frame           popup = (Frame) xv_get(base_frame, XV_KEY_DATA,
-					       LOAD_FILE_POPUP_KEY);
+					       (Attr_attribute)LOAD_FILE_POPUP_KEY);
 
 	textsw_flush_caches(view, TFC_STD);
 	insert_pos = EV_GET_INSERT(chain);
@@ -2826,18 +2847,18 @@
     }
 
     text_notice = (Xv_Notice)xv_get(frame,
-				    XV_KEY_DATA, text_notice_key,
+				    XV_KEY_DATA, (Attr_attribute)text_notice_key,
 				    NULL);
     if (!text_notice) {
-	text_notice = xv_create(frame, NOTICE,
+	text_notice = (Xv_Notice)xv_create(frame, NOTICE,
 				NOTICE_LOCK_SCREEN, FALSE,
 				NOTICE_BLOCK_THREAD, TRUE,
 				NOTICE_MESSAGE_STRING, notice_msg,
 				NOTICE_BUTTON_YES, XV_MSG("Continue"),
 				XV_SHOW, TRUE,
-				0);
+				NULL);
 	xv_set(frame,
-	       XV_KEY_DATA, text_notice_key, text_notice,
+	       XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
 	       NULL);
     }
     else {
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_filter.c xview-3.2p1.4/lib/libxview/textsw/txt_filter.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_filter.c	2013-01-07 12:36:16.044447000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/txt_filter.c	2013-01-07 15:22:32.786675000 +0100
@@ -16,7 +16,7 @@
 
 #include <sys/types.h>
 #include <sys/file.h>
-#include <unistd.h>
+#include <unistd.h>				/* read() */
 #ifdef SVR4
 #include <dirent.h>
 #else
@@ -76,8 +76,13 @@
 Pkg_private Es_index textsw_do_input();
 static short unsigned type_for_filter_rec();
 static int      event_code_for_filter_rec();
+#ifdef __STDC__
+static int start_filter(char *filter_argv[], int *filter_input, int *filter_output);
+static int talk_to_filter(Textsw_view_handle view, int filter_input, int filter_output, Es_index first, Es_index last_plus_one, int (*interpret_reply) ());
+#else
 static int	talk_to_filter();
 static int	start_filter();
+#endif
 
 /*
  * WARNING: this is a hack to force the variable to be in memory. this var
@@ -159,7 +164,7 @@
     int             filter_input, filter_output, result = 0;
     Es_index        save_length;
     Ev_mark_object  save_lpo_id;
-    Ev_mark_object  save_insert = NULL;
+    Ev_mark_object  save_insert = (Ev_mark_object)NULL;
     int             pid;
     Textsw_selection_object selection;
     Notify_func     old_sigpipe = (Notify_func) 0;
@@ -176,7 +181,7 @@
 	result = 1;
 	goto NoFilterReturn;
     }
-    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, 0);
+    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, NULL);
     if ((int) ev_get(view->e_view, EV_CHAIN_LOWER_CONTEXT)
 	!= EV_NO_CONTEXT)
 	save_insert = textsw_add_mark_internal(folio,
@@ -227,7 +232,7 @@
     if (selection.type & EV_SEL_PENDING_DELETE)
 	textsw_remove_mark_internal(folio, save_lpo_id);
     /* Complete the deferred display update and autoscroll. */
-    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, 0);
+    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, NULL);
     ev_update_chain_display(folio->views);
     TEXTSW_DO_INSERT_MAKES_VISIBLE(view);
     if (save_insert) {
@@ -535,7 +540,7 @@
     register Textsw_folio folio = FOLIO_FOR_VIEW(view);
     CHAR           *save_buffer = buffer;
     register CHAR  *buffer_last_plus_one;
-    int            *int_buffer;
+    long           *int_buffer;
     int             result = REPLY_OKAY;
     Es_index        temp;
 
@@ -563,7 +568,7 @@
 	    buffer += ((to_insert + sizeof(int) - 1) / sizeof(int)) * sizeof(int);
 	    continue;
 	}
-	int_buffer = (int *) buffer;
+	int_buffer = (long *) buffer;
 	if ((buffer_last_plus_one - buffer < 2 * sizeof(int)) ||
 	    ((int_buffer[0]) !=TEXTSW_FILTER_MAGIC))
 	    goto Deal_With_Slop;
@@ -688,7 +693,7 @@
     tv.tv_sec = 1;
     tv.tv_usec = 0;
 
-    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, 0);
+    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, NULL);
     /*
      * Give the filter the initial information
      */
@@ -716,7 +721,7 @@
 	}
 	/* if (writefds & (1 << filter_input)) { */
 	if (FD_ISSET(filter_input, &writefds)) {
-	    int             to_write;
+	    long int        to_write;
 	    Es_index        next;
 
 	    if (state == FILTER_STARTED) {
@@ -839,7 +844,7 @@
     if (selection.type & EV_SEL_PENDING_DELETE)
 	textsw_remove_mark_internal(folio, save_lpo_id);
     folio->owed_by_filter = 0;
-    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, 0);
+    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, NULL);
     ev_update_chain_display(folio->views);
     return (result);
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_find.c xview-3.2p1.4/lib/libxview/textsw/txt_find.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_find.c	1993-06-29 07:17:32.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/txt_find.c	2013-01-07 12:50:55.816912000 +0100
@@ -20,7 +20,7 @@
 #include <xview_private/txt_18impl.h>
 
 
-Pkg_private int
+Pkg_private void
 textsw_begin_find(view)
     register Textsw_view_handle view;
 {
@@ -32,8 +32,8 @@
 Pkg_private int
 textsw_end_find(view, event_code, x, y)
     register Textsw_view_handle view;
-    int             x, y;
     unsigned        event_code;
+    int             x, y;
 {
     Pkg_private void     textsw_find_selection_and_normalize();
     register Textsw_folio folio = FOLIO_FOR_VIEW(view);
@@ -142,7 +142,7 @@
 }
 
 /* Caller must set *first to be position at which to start the search. */
-Pkg_private int
+Pkg_private void
 textsw_find_pattern(textsw, first, last_plus_one, buf, buf_len, flags)
     Textsw_folio    textsw;
     Es_index       *first, *last_plus_one;
@@ -181,7 +181,7 @@
 
 /* Caller must set *first to be position at which to start the search. */
 /* ARGSUSED */
-Pkg_private int
+Pkg_private void
 textsw_find_pattern_and_normalize(
 		      view, x, y, first, last_plus_one, buf, buf_len, flags)
     Textsw_view_handle view;
@@ -217,7 +217,7 @@
     int             x, y;
 {
     textsw_begin_find(view);
-    (void) textsw_end_find(view, x, y);
+    (void) textsw_end_find(view, 0, x, y);
 }
 
 /*
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_getkey.c xview-3.2p1.4/lib/libxview/textsw/txt_getkey.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_getkey.c	1994-06-26 03:05:23.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/txt_getkey.c	2013-01-07 12:50:55.845172000 +0100
@@ -27,7 +27,7 @@
 Pkg_private Es_index textsw_find_mark_internal();
 Pkg_private Es_index textsw_insert_pieces();
 
-Pkg_private int
+Pkg_private void
 textsw_begin_get(view)
     Textsw_view_handle view;
 {
@@ -143,11 +143,11 @@
     register Textsw_folio folio = FOLIO_FOR_VIEW(view);
     register Ev_chain views = folio->views;
     register Es_handle secondary, primary;
-    register int    is_pending_delete, sec_is_pending_delete;
+    register int    is_pending_delete, sec_is_pending_delete = 0;
     int             lower_context = (int)
     ev_get(view->e_view, EV_CHAIN_LOWER_CONTEXT);
     int             acquire_shelf = FALSE;
-    int		    dtemp;
+    Es_index	    dtemp;
     Es_index        delta, pri_first, pri_last_plus_one, ro_bdry;
     Es_index        sec_first, sec_last_plus_one;  /* of secondary */
     Es_index        first,last_plus_one;           /* of insertion point */
@@ -161,7 +161,7 @@
      */
     secondary = ES_NULL;
     primary = ES_NULL;
-    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, 0);
+    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, NULL);
     ro_bdry = textsw_read_only_boundary_is_at(folio);
     is_pending_delete = (EV_SEL_PENDING_DELETE & ev_get_selection(
 			    views, &pri_first, &pri_last_plus_one, 
@@ -229,7 +229,7 @@
      * At this point, secondary and primary exist if they are non-NULL.
      */
     
-    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, 0);
+    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, NULL);
     if (local_operands) {
 	Es_handle piece_to_insert;
 	/* jcb 5/21/90 */
@@ -366,7 +366,7 @@
     return (result);
 }
 
-Pkg_private int
+Pkg_private void
 textsw_put_then_get(view)
     Textsw_view_handle view;
 {
@@ -376,7 +376,7 @@
     register int    is_pending_delete;
     int             seln_nonzero;
 
-    if (seln_nonzero = textsw_is_seln_nonzero(textsw, EV_SEL_PRIMARY)) {
+    if ((seln_nonzero = textsw_is_seln_nonzero(textsw, EV_SEL_PRIMARY)) != 0) {
 	textsw_checkpoint_undo(VIEW_REP_TO_ABS(view),
 			       (caddr_t) TEXTSW_INFINITY - 1);
 	if (seln_nonzero == 2) {
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_impl.h xview-3.2p1.4/lib/libxview/textsw/txt_impl.h
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_impl.h	2013-01-07 12:36:19.868161000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/txt_impl.h	2013-01-07 12:50:55.882901000 +0100
@@ -70,8 +70,12 @@
 #				endif
 
 #ifndef	NULL
+#ifdef __STDC__
+#define NULL	((void *)0)
+#else
 #define	NULL	0
 #endif
+#endif
 
 #define TEXTSW_PRIVATE(t)     \
 		   XV_PRIVATE(Text_object, Xv_textsw, t)
@@ -182,7 +186,7 @@
 	struct textsw_view_object	 *next;
 	Textsw_view			  public_self;
 /* Alpha compatibility, mbuck@debian.org */
-#if defined(__alpha)
+#if defined(__alpha) || defined(__x86_64__)
 	Xv_window			  window_fd;
 #else
 	int				  window_fd;
@@ -655,7 +659,7 @@
 	int			flags;
 #							endif
 
-Pkg_private int
+Pkg_private void
 textsw_normalize_internal( /*
 	view, first, last_plus_one, upper_context, lower_context, flags */ );
 #							ifdef notdef
@@ -835,6 +839,140 @@
 	int			locx, locy;
 #							endif
 
+#ifdef __STDC__
+Pkg_private Xv_opaque textsw_set(Textsw abstract, Textsw_attribute avlist[]);
+Pkg_private unsigned textsw_determine_selection_type(Textsw_folio textsw, int acquire);
+Pkg_private void textsw_clear_secondary_selection(Textsw_folio textsw, unsigned type);
+Pkg_private void textsw_init_selection_object(Textsw_folio textsw, Textsw_selection_handle selection, CHAR *buf, int buf_max_len, int buf_is_dynamic);
+Pkg_private void textsw_update_scrollbars(Textsw_folio folio, Textsw_view_handle only_view);
+Pkg_private void textsw_display_view_margins(Textsw_view_handle view, struct rect *rect);
+Pkg_private void textsw_give_shelf_to_svc(Textsw_folio folio);
+Pkg_private Seln_rank seln_rank_from_textsw_info(int type);
+Pkg_private void textsw_input_before(Textsw_view_handle view, Es_index *old_insert_pos, Es_index *old_length);
+Pkg_private Key_map_handle textsw_do_filter(Textsw_view_handle view, Event *ie);
+Pkg_private Seln_rank textsw_acquire_seln(Textsw_folio textsw, Seln_rank rank);
+Pkg_private void textsw_notify_replaced(Textsw_opaque folio_or_view, Es_index insert_before, Es_index length_before, Es_index replaced_from, Es_index replaced_to, Es_index count_inserted);
+Pkg_private void textsw_remove_mark_internal(Textsw_folio textsw, Ev_mark_object mark);
+Pkg_private void textsw_record_input(Textsw_folio textsw, CHAR *buffer, long int buffer_length);
+Pkg_private void textsw_record_piece_insert(Textsw_folio textsw, Es_handle pieces);
+Pkg_private void textsw_record_edit(Textsw_folio textsw, unsigned unit, unsigned direction);
+Pkg_private void textsw_record_delete(Textsw_folio textsw);
+#ifdef OW_I18N
+Xv_public void textsw_set_selection_wcs(Textsw abstract, Es_index first, Es_index last_plus_one, unsigned type);
+Xv_public void textsw_set_selection(Textsw abstract, Es_index first, Es_index last_plus_one, unsigned type);
+#else
+Xv_public void textsw_set_selection(Textsw abstract, Es_index first, Es_index last_plus_one, unsigned type);
+#endif
+Pkg_private void textsw_esh_failed_msg(Textsw_view_handle view, char *preamble);
+#ifdef OW_I18N
+Pkg_private Es_index textsw_do_edit(Textsw_view_handle view, unsigned unit, unsigned direction, unsigned byte_return);
+#else
+Pkg_private Es_index textsw_do_edit(Textsw_view_handle view, unsigned unit, unsigned direction);
+#endif
+Pkg_private Es_index textsw_input_partial(Textsw_view_handle view, CHAR *buf, long int buf_len);
+Pkg_private void textsw_put_then_get(Textsw_view_handle view);
+Pkg_private Es_index textsw_stuff_selection(Textsw_view_handle view, int type);
+Pkg_private void textsw_record_trash_insert(Textsw_folio textsw);
+Pkg_private int textsw_inform_seln_svc(Textsw_folio textsw, int function, int is_down);
+Pkg_private void textsw_begin_get(Textsw_view_handle view);
+Pkg_private void textsw_post_need_selection(Textsw abstract, Event *ie);
+Pkg_private void textsw_get_and_set_selection(Frame popup_frame, Textsw_view_handle view, int popup_type);
+Pkg_private int textsw_end_get(Textsw_view_handle view);
+Pkg_private int textsw_end_quick_move(Textsw_view_handle view);
+Pkg_private void textsw_create_popup_frame(Textsw_view_handle view, int popup_type);
+Pkg_private void textsw_start_seln_tracking(Textsw_view_handle view, Event *ie);
+Pkg_private void textsw_set_dir_str(int popup_type);
+Pkg_private int textsw_match_selection_and_normalize(Textsw_view_handle view, CHAR *start_marker, unsigned field_flag);
+Pkg_private int textsw_end_put(Textsw_view_handle view);
+Pkg_private void textsw_begin_find(Textsw_view_handle view);
+Pkg_private void textsw_scroll(Scrollbar sb);
+Pkg_private void textsw_move_caret(Textsw_view_handle view, Textsw_Caret_Direction direction);
+Pkg_private int textsw_flush_caches(Textsw_view_handle view, int flags);
+Pkg_private int textsw_end_find(Textsw_view_handle view, unsigned event_code, int x, int y);
+Pkg_private int textsw_file_name(Textsw_folio textsw, CHAR **name);
+Pkg_private Es_index textsw_has_been_modified(Textsw abstract);
+Pkg_private int textsw_func_selection(Textsw_folio textsw, Textsw_selection_handle selection, int flags);
+Pkg_private void textsw_do_drag_copy_move(Textsw_view_handle view, Event *ie, int is_copy);
+Pkg_private void textsw_do_remote_drag_copy_move(Textsw_view_handle view, Event *ie, short is_copy);
+Pkg_private void textsw_begin_put(Textsw_view_handle view, int inform_svc);
+Pkg_private void textsw_do_menu(Textsw_view_handle view, Event *ie);
+Pkg_private void textsw_undo(Textsw_folio textsw);
+Pkg_private void textsw_again(Textsw_view_handle view, int x, int y);
+Pkg_private void textsw_checkpoint_again(Textsw abstract);
+Pkg_private void textsw_do_again(Textsw_view_handle view, int x, int y);
+Pkg_private void textsw_set_base_mask(Xv_object win);
+Pkg_private void textsw_clear_pending_func_state(Textsw_folio textsw);
+Pkg_private void textsw_find_pattern(Textsw_folio textsw, Es_index *first, Es_index *last_plus_one, CHAR *buf, unsigned buf_len, unsigned flags);
+Pkg_private void textsw_record_filter(Textsw_folio textsw, Event *event);
+Pkg_private int textsw_func_selection_internal(Textsw_folio textsw, Textsw_selection_handle selection, int type, int flags);
+Pkg_private Es_index textsw_get_selection(Textsw_view_handle view, Es_index *first, Es_index *last_plus_one, CHAR *selected_str, int max_str_len);
+Pkg_private int save_cmd_proc(Frame fc, CHAR *path, int exists);
+Pkg_private void textsw_do_save(Textsw abstract, Textsw_folio textsw, Textsw_view_handle view);
+Pkg_private int textsw_get_selection_as_string(Textsw_folio folio, unsigned type, CHAR *buf, int buf_max_len);
+Pkg_private void textsw_init_selection_object(Textsw_folio textsw, Textsw_selection_handle selection, CHAR *buf, int buf_max_len, int buf_is_dynamic);
+Pkg_private int textsw_match_field_and_normalize(Textsw_view_handle view, Es_index *first, Es_index *last_plus_one, CHAR *buf1, int buf_len1, unsigned field_flag, int do_search);
+Pkg_private void textsw_do_duplicate(Textsw_view_handle view, Event *ie);
+Pkg_private void xv_do_move(Textsw_view_handle view, Event *ie);
+Pkg_private void textsw_find_pattern_and_normalize(Textsw_view_handle view, int x, int y, Es_index *first, Es_index *last_plus_one, CHAR *buf, unsigned buf_len, unsigned flags);
+Pkg_private int textsw_call_filter(Textsw_view_handle view, char *filter_argv[]);
+Pkg_private void textsw_possibly_normalize_and_set_selection(Textsw abstract, Es_index first, Es_index last_plus_one, unsigned type);
+Pkg_private int textsw_function_get(Textsw_view_handle view);
+Pkg_private int textsw_function_delete(Textsw_view_handle view);
+Pkg_private void textsw_record_match(Textsw_folio textsw, unsigned flag, CHAR *start_marker);
+Pkg_private void textsw_possibly_edited_now_notify(Textsw_folio folio);
+Pkg_private void textsw_init_again(Textsw_folio folio, int count);
+Pkg_private void textsw_record_find(Textsw_folio textsw, CHAR *pattern, int pattern_length, int direction);
+Pkg_private int textsw_parse_rc(Textsw_folio textsw);
+Pkg_private Textsw_status textsw_file_stuff_from_str(Textsw_view_handle view, CHAR *buf, int locx, int locy);
+#ifdef OW_I18N
+Pkg_private int textsw_expand_filename(Textsw_folio textsw, CHAR *buf, int buf_len, int locx, int locy);
+#else
+Pkg_private int textsw_expand_filename(Textsw_folio textsw, char *buf, int locx, int locy);
+#endif
+Pkg_private void textsw_record_extras(Textsw_folio folio, CHAR *cmd_line);
+Pkg_private int include_cmd_proc(Frame fc, CHAR *path, CHAR *file, Xv_opaque client_data);
+Pkg_private int open_cmd_proc(Frame fc, CHAR *path, CHAR *file, Xv_opaque client_data);
+Pkg_private void textsw_abort(Textsw_folio textsw);
+Pkg_private int textsw_do_move(Textsw_view_handle view, int selection_is_local);
+Pkg_private int textsw_mouseless_scroll_event(Textsw_view_handle view, Event *ie, Notify_arg arg);
+Pkg_private void textsw_resize(Textsw_view_handle view);
+Pkg_private int textsw_empty_document(Textsw abstract, Event *ie);
+#ifdef OW_I18N
+Pkg_private int textsw_change_directory(Textsw_folio textsw, CHAR *filename_wc, int might_not_be_dir, int locx, int locy);
+#else
+Pkg_private int textsw_change_directory(Textsw_folio textsw, char *filename, int might_not_be_dir, int locx, int locy);
+#endif
+Pkg_private void textsw_set_internal_tier2(Textsw_folio textsw, Textsw_view_handle view, Attr_attribute *attrs, int is_folio, Textsw_status *status_ptr, char **error_msg_addr, CHAR *file, CHAR *name_wc, int *reset_mode, int *all_views, int *update_scrollbar, int *read_only_changed);
+Pkg_private void textsw_put(Textsw_view_handle view);
+Pkg_private int textsw_load_file(Textsw abstract, CHAR *filename, int reset_views, int locx, int locy);
+Pkg_private int match_in_table(char *to_match, char **table);
+Pkg_private void textsw_begin_match_field(Textsw_view_handle view);
+Pkg_private void textsw_match_field(Textsw_folio textsw, Es_index *first, Es_index *last_plus_one, CHAR *symbol1, int symbol1_len, CHAR *symbol2, int symbol2_len, unsigned field_flag, int do_search);
+Pkg_private void textsw_default_notify(Textsw abstract, Attr_attribute *attrs);
+Pkg_private int textsw_screen_column_count(Textsw abstract);
+Pkg_private int textsw_sync_with_seln_svc(Textsw_folio folio);
+Pkg_private void textsw_clear_move(Textsw_view_handle view);
+Pkg_private void textsw_clear_duplicate(Textsw_view_handle view);
+Pkg_private void textsw_set_cursor(Textsw textsw, int cursor_type);
+Pkg_private int textsw_mouseless_select_event(Textsw_view_handle view, Event *ie, Notify_arg arg);
+Pkg_private int textsw_mouseless_misc_event(Textsw_view_handle view, Event *event);
+Pkg_private int textsw_get_selection_as_filename(Textsw_folio textsw, CHAR *buf, int sizeof_buf, int locx, int locy);
+Pkg_private void textsw_reset_2(Textsw abstract, int locx, int locy, int preserve_memory, int cmd_is_undo_all_edit);
+Pkg_private void textsw_format_load_error_quietly(char *msg, Es_status status, CHAR *filename, CHAR *scratch_name);
+Pkg_private void textsw_replace_esh(Textsw_folio textsw, Es_handle new_esh);
+Pkg_private Es_index textsw_get_saved_insert(Textsw_folio textsw);
+Pkg_private Es_index textsw_set_insert(Textsw_folio folio, Es_index pos);
+Pkg_private Ev_mark_object textsw_add_mark_internal(Textsw_folio textsw, Es_index position, unsigned flags);
+Pkg_private void textsw_free_again(Textsw_folio textsw, string_t *again);
+Pkg_private void textsw_normalize_internal(Textsw_view_handle view, Es_index first, Es_index last_plus_one, int upper_context, int lower_context, unsigned flags);
+Pkg_private int textsw_prepare_buf_for_es_read(int *to_read, CHAR **buf, int buf_max_len, int fixed_size);
+Pkg_private void textsw_repaint(Textsw_view_handle view);
+Pkg_private void textsw_show_caret(Textsw_folio textsw);
+Pkg_private void textsw_set_null_view_avlist(Textsw_folio folio, Attr_avlist attrs);
+#ifdef OW_I18N
+Pkg_private int textsw_do_newline(Textsw_view_handle view, int action);
+#endif
+#else
 Pkg_private Xv_opaque textsw_set();
 Pkg_private unsigned textsw_determine_selection_type();
 Pkg_private void textsw_clear_secondary_selection();
@@ -843,12 +981,118 @@
 Pkg_private void textsw_display_view_margins();
 Pkg_private void textsw_give_shelf_to_svc();
 Pkg_private Seln_rank seln_rank_from_textsw_info();
-Pkg_private void textsw_set_scroll_mark();
 Pkg_private void textsw_input_before();
 Pkg_private Key_map_handle textsw_do_filter();
 Pkg_private Seln_rank textsw_acquire_seln();
 Pkg_private void textsw_notify_replaced();
 Pkg_private void textsw_remove_mark_internal();
+Pkg_private void textsw_record_input();
+Pkg_private void textsw_record_piece_insert();
+Pkg_private void textsw_record_edit();
+Pkg_private void textsw_record_delete();
+#ifdef OW_I18N
+Xv_public void textsw_set_selection_wcs();
+#endif
+Xv_public void textsw_set_selection();
+Pkg_private void textsw_esh_failed_msg();
+Pkg_private Es_index textsw_do_edit();
+Pkg_private Es_index textsw_input_partial();
+Pkg_private void textsw_put_then_get();
+Pkg_private Es_index textsw_stuff_selection();
+Pkg_private void textsw_record_trash_insert();
+Pkg_private int textsw_inform_seln_svc();
+Pkg_private void textsw_begin_get();
+Pkg_private void textsw_post_need_selection();
+Pkg_private void textsw_get_and_set_selection();
+Pkg_private int textsw_end_get();
+Pkg_private int textsw_end_quick_move();
+Pkg_private void textsw_create_popup_frame();
+Pkg_private void textsw_start_seln_tracking();
+Pkg_private void textsw_set_dir_str();
+Pkg_private int textsw_match_selection_and_normalize();
+Pkg_private int textsw_end_put();
+Pkg_private void textsw_begin_find();
+Pkg_private void textsw_scroll();
+Pkg_private void textsw_move_caret();
+Pkg_private int textsw_flush_caches();
+Pkg_private int textsw_end_find();
+Pkg_private int textsw_file_name();
+Pkg_private Es_index textsw_has_been_modified();
+Pkg_private int textsw_func_selection();
+Pkg_private void textsw_do_drag_copy_move();
+Pkg_private void textsw_do_remote_drag_copy_move();
+Pkg_private void textsw_begin_put();
+Pkg_private void textsw_do_menu();
+Pkg_private void textsw_undo();
+Pkg_private void textsw_again();
+Pkg_private void textsw_checkpoint_again();
+Pkg_private void textsw_do_again();
+Pkg_private void textsw_set_base_mask();
+Pkg_private void textsw_clear_pending_func_state();
+Pkg_private void textsw_find_pattern();
+Pkg_private void textsw_record_filter();
+Pkg_private int textsw_func_selection_internal();
+Pkg_private Es_index textsw_get_selection();
+Pkg_private int save_cmd_proc();
+Pkg_private void textsw_do_save();
+Pkg_private int textsw_get_selection_as_string();
+Pkg_private void textsw_init_selection_object();
+Pkg_private int textsw_match_field_and_normalize();
+Pkg_private void textsw_do_duplicate();
+Pkg_private void xv_do_move();
+Pkg_private void textsw_find_pattern_and_normalize();
+Pkg_private int textsw_call_filter();
+Pkg_private void textsw_possibly_normalize_and_set_selection();
+Pkg_private int textsw_function_get();
+Pkg_private int textsw_function_delete();
+Pkg_private void textsw_record_match();
+Pkg_private void textsw_possibly_edited_now_notify();
+Pkg_private void textsw_init_again();
+Pkg_private void textsw_record_find();
+Pkg_private int textsw_parse_rc();
+Pkg_private Textsw_status textsw_file_stuff_from_str();
+Pkg_private int textsw_expand_filename();
+Pkg_private void textsw_record_extras();
+Pkg_private int include_cmd_proc();
+Pkg_private int open_cmd_proc();
+Pkg_private void textsw_abort();
+Pkg_private int textsw_do_move();
+Pkg_private int textsw_mouseless_scroll_event();
+Pkg_private void textsw_resize();
+Pkg_private int textsw_empty_document();
+Pkg_private int textsw_change_directory();
+Pkg_private void textsw_set_internal_tier2();
+Pkg_private void textsw_put();
+Pkg_private int textsw_load_file();
+Pkg_private int match_in_table();
+Pkg_private void textsw_begin_match_field();
+Pkg_private void textsw_match_field();
+Pkg_private void textsw_default_notify();
+Pkg_private int textsw_screen_column_count();
+Pkg_private int textsw_sync_with_seln_svc();
+Pkg_private void textsw_clear_move();
+Pkg_private void textsw_clear_duplicate();
+Pkg_private void textsw_set_cursor();
+Pkg_private int textsw_mouseless_select_event();
+Pkg_private int textsw_mouseless_misc_event();
+Pkg_private int textsw_get_selection_as_filename();
+Pkg_private void textsw_reset_2();
+Pkg_private void textsw_format_load_error_quietly();
+Pkg_private void textsw_replace_esh();
+Pkg_private Es_index textsw_get_saved_insert();
+Pkg_private Es_index textsw_set_insert();
+Pkg_private Ev_mark_object textsw_add_mark_internal();
+Pkg_private void textsw_free_again();
+Pkg_private void textsw_normalize_internal();
+Pkg_private int textsw_prepare_buf_for_es_read();
+Pkg_private void textsw_repaint();
+Pkg_private void textsw_show_caret();
+Pkg_private void textsw_set_null_view_avlist();
+#ifdef OW_I18N
+Pkg_private int textsw_do_newline();
+#endif
+#endif
+
 Pkg_private int text_notice_key;
 
 /* Used as dampers to hand motion when trying to select an insertion point */
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_incl.c xview-3.2p1.4/lib/libxview/textsw/txt_incl.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_incl.c	2013-01-07 12:36:19.385051000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/txt_incl.c	2013-01-07 12:50:55.963034000 +0100
@@ -49,6 +49,8 @@
 Pkg_private Panel_item include_panel_items[];
 Pkg_private Textsw_view_handle text_view_frm_p_itm();
 Pkg_private Xv_Window frame_from_panel_item();
+static Panel_setting include_cmd_proc_accel(Panel_item item, Event *event);
+static Panel_setting old_include_cmd_proc(Panel_item item, Event *event);
 
 
 static int
@@ -136,7 +138,7 @@
 	} else {
 	    frame = (Frame)FRAME_FROM_FOLIO_OR_VIEW(folio);
             text_notice = (Xv_Notice)xv_get(frame, 
-                                        XV_KEY_DATA, text_notice_key, NULL);
+                                        XV_KEY_DATA, (Attr_attribute)text_notice_key, NULL);
             if (!text_notice)  {
                 text_notice = xv_create(frame, NOTICE,
                                     NOTICE_LOCK_SCREEN, FALSE,
@@ -144,14 +146,14 @@
                                     NOTICE_MESSAGE_STRINGS,
 				    XV_MSG("Cannot change directory.\n\
 Change Directory Has Been Disabled."),
-                                    0,
+                                    NULL,
                                     NOTICE_BUTTON_YES, 
 					XV_MSG("Continue"),
                                     XV_SHOW, TRUE,
-                                    0);
+                                    NULL);
 
                 xv_set(frame, 
-                        XV_KEY_DATA, text_notice_key, text_notice,
+                        XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                         NULL);
             }
             else  {
@@ -161,7 +163,7 @@
                         NOTICE_MESSAGE_STRINGS,
 		        XV_MSG("Cannot change directory.\n\
 Change Directory Has Been Disabled."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, 
 				XV_MSG("Continue"),
                         XV_SHOW, TRUE, 
@@ -175,7 +177,7 @@
 				       file_str, locx, locy) == 0) {
 	    popup_frame =
 		frame_from_panel_item(include_panel_items[(int) FILE_CMD_ITEM]);
-	    (void) xv_set(popup_frame, XV_SHOW, FALSE, 0);
+	    (void) xv_set(popup_frame, XV_SHOW, FALSE, NULL);
 	    if (textsw_changed_directory)
 	        textsw_change_directory(folio, curr_dir, FALSE, locx, locy);
 	    return FALSE;
@@ -186,7 +188,7 @@
     }
 
     frame = (Frame)FRAME_FROM_FOLIO_OR_VIEW(folio);
-    text_notice = (Xv_Notice)xv_get(frame, XV_KEY_DATA, text_notice_key, NULL);
+    text_notice = (Xv_Notice)xv_get(frame, XV_KEY_DATA, (Attr_attribute)text_notice_key, NULL);
     if (!text_notice)  {
         text_notice = xv_create(frame, NOTICE,
                             NOTICE_LOCK_SCREEN, FALSE,
@@ -194,14 +196,14 @@
                             NOTICE_MESSAGE_STRINGS,
 			    XV_MSG("No file name was specified.\n\
 Specify a file name to Include File."),
-                            0,
+                            NULL,
                             NOTICE_BUTTON_YES, 
 				XV_MSG("Continue"),
                             XV_SHOW, TRUE,
-                            0);
+                            NULL);
 
         xv_set(frame, 
-            XV_KEY_DATA, text_notice_key, text_notice,
+            XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
             NULL);
     }
     else  {
@@ -211,7 +213,7 @@
             NOTICE_MESSAGE_STRINGS,
 	    XV_MSG("No file name was specified.\n\
 Specify a file name to Include File."),
-            0,
+            NULL,
             NOTICE_BUTTON_YES, XV_MSG("Continue"),
             XV_SHOW, TRUE, 
             NULL);
@@ -234,7 +236,7 @@
     if (item == include_panel_items[(int) FILE_CMD_ITEM]) {
 	error = do_include_proc(folio, event);
 	if (error) {
-	    xv_set(item, PANEL_NOTIFY_STATUS, XV_ERROR, 0);
+	    xv_set(item, PANEL_NOTIFY_STATUS, XV_ERROR, NULL);
 	}
 	return PANEL_NONE;
     }
@@ -253,7 +255,7 @@
     if (item == include_panel_items[(int) FILE_STRING_ITEM]) {
 	error = do_include_proc(folio, event);
 	if (error) {
-	    xv_set(item, PANEL_NOTIFY_STATUS, XV_ERROR, 0);
+	    xv_set(item, PANEL_NOTIFY_STATUS, XV_ERROR, NULL);
 	}
 	return PANEL_NONE;
     }
@@ -267,9 +269,9 @@
 
     CHAR            include_string[MAX_STR_LENGTH];
     char            current_dir_include_string[MAX_STR_LENGTH];
-    int             dummy;
+    Es_index        dummy;
 
-    include_string[0] = NULL;
+    include_string[0] = (CHAR)'\0';
     (void) textsw_get_selection(view, &dummy, &dummy, include_string,
 				MAX_STR_LENGTH);
 #if defined(SVR4) || defined(__linux__)
@@ -287,7 +289,7 @@
 			  PANEL_LABEL_STRING, 
 				XV_MSG("Directory:"),
 			  HELP_INFO("textsw:dirstring")
-			  0);
+			  NULL);
     include_panel_items[(int) FILE_STRING_ITEM] =
 	panel_create_item(panel, PANEL_TEXT,
 			  PANEL_LABEL_X, ATTR_COL(5),
@@ -305,9 +307,9 @@
 			  PANEL_NOTIFY_STRING, "\n\r",
 			  PANEL_NOTIFY_PROC, include_cmd_proc_accel,
 			  HELP_INFO("textsw:includestring")
-			  0);
+			  NULL);
     xv_set(panel, PANEL_CARET_ITEM,
-	   include_panel_items[(int) FILE_STRING_ITEM], 0);
+	   include_panel_items[(int) FILE_STRING_ITEM], NULL);
 
     include_panel_items[(int) FILE_CMD_ITEM] =
 	panel_create_item(panel, PANEL_BUTTON,
@@ -317,10 +319,10 @@
 				XV_MSG("Include File"),
 			  PANEL_NOTIFY_PROC, old_include_cmd_proc,
 			  HELP_INFO("textsw:includefile")
-			  0);
+			  NULL);
     (void) xv_set(panel,
 	       PANEL_DEFAULT_ITEM, include_panel_items[(int) FILE_CMD_ITEM],
-		  0);
+		  NULL);
 }
 
 Pkg_private          Panel
@@ -332,13 +334,13 @@
 
     panel = (Panel) xv_get(frame, FRAME_CMD_PANEL,
 			   HELP_INFO("textsw:includepanel")
-			   0);
+			   NULL);
     (void) create_include_items(panel, view);
 
     return (panel);
 }
 
-int
+Pkg_private int
 include_cmd_proc(fc,path,file,client_data)
     Frame             fc;
     CHAR             *path;
@@ -348,7 +350,7 @@
 
     Textsw_view_handle view = (Textsw_view_handle)window_get(fc,WIN_CLIENT_DATA,0);
     Textsw_folio       folio = FOLIO_FOR_VIEW(view);
-    int                error;
+    /*int                error;*/
     Textsw          textsw = FOLIO_REP_TO_ABS(folio);
     CHAR           *dir_str;
     register int    locx, locy;
@@ -356,7 +358,7 @@
 #ifdef OW_I18N
     char            curr_dir_mb[MAX_STR_LENGTH];
 #endif
-    Frame           popup_frame;
+    /*Frame           popup_frame;*/
     Frame           frame;
     Xv_Notice       text_notice;
     int		    textsw_changed_directory;
@@ -412,7 +414,7 @@
 	} else {
 	    frame = (Frame)FRAME_FROM_FOLIO_OR_VIEW(folio);
             text_notice = (Xv_Notice)xv_get(frame, 
-                                        XV_KEY_DATA, text_notice_key, NULL);
+                                        XV_KEY_DATA, (Attr_attribute)text_notice_key, NULL);
             if (!text_notice)  {
                 text_notice = xv_create(frame, NOTICE,
                                     NOTICE_LOCK_SCREEN, FALSE,
@@ -420,14 +422,14 @@
                                     NOTICE_MESSAGE_STRINGS,
 				    XV_MSG("Cannot change directory.\n\
 Change Directory Has Been Disabled."),
-                                    0,
+                                    NULL,
                                     NOTICE_BUTTON_YES, 
 					XV_MSG("Continue"),
                                     XV_SHOW, TRUE,
-                                    0);
+                                    NULL);
 
                 xv_set(frame, 
-                        XV_KEY_DATA, text_notice_key, text_notice,
+                        XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                         NULL);
             }
             else  {
@@ -437,7 +439,7 @@
                         NOTICE_MESSAGE_STRINGS,
 		        XV_MSG("Cannot change directory.\n\
 Change Directory Has Been Disabled."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, 
 				XV_MSG("Continue"),
                         XV_SHOW, TRUE, 
@@ -450,7 +452,7 @@
 	if (textsw_file_stuff_from_str(VIEW_FROM_FOLIO_OR_VIEW(folio),
 				       file, locx, locy) == 0) {
 	    
-	    (void) xv_set(fc, XV_SHOW, FALSE, 0);
+	    (void) xv_set(fc, XV_SHOW, FALSE, NULL);
 	    if (textsw_changed_directory)
 	        textsw_change_directory(folio, curr_dir, FALSE, locx, locy);
 	    return FALSE;
@@ -461,7 +463,7 @@
     }
 
     frame = (Frame)FRAME_FROM_FOLIO_OR_VIEW(folio);
-    text_notice = (Xv_Notice)xv_get(frame, XV_KEY_DATA, text_notice_key, NULL);
+    text_notice = (Xv_Notice)xv_get(frame, XV_KEY_DATA, (Attr_attribute)text_notice_key, NULL);
     if (!text_notice)  {
         text_notice = xv_create(frame, NOTICE,
                             NOTICE_LOCK_SCREEN, FALSE,
@@ -469,14 +471,14 @@
                             NOTICE_MESSAGE_STRINGS,
 			    XV_MSG("No file name was specified.\n\
 Specify a file name to Include File."),
-                            0,
+                            NULL,
                             NOTICE_BUTTON_YES, 
 				XV_MSG("Continue"),
                             XV_SHOW, TRUE,
-                            0);
+                            NULL);
 
         xv_set(frame, 
-            XV_KEY_DATA, text_notice_key, text_notice,
+            XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
             NULL);
     }
     else  {
@@ -486,7 +488,7 @@
             NOTICE_MESSAGE_STRINGS,
 	    XV_MSG("No file name was specified.\n\
 Specify a file name to Include File."),
-            0,
+            NULL,
             NOTICE_BUTTON_YES, XV_MSG("Continue"),
             XV_SHOW, TRUE, 
             NULL);
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_input.c xview-3.2p1.4/lib/libxview/textsw/txt_input.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_input.c	2013-01-07 12:36:48.809447000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/txt_input.c	2013-01-07 12:50:56.035144000 +0100
@@ -36,7 +36,7 @@
 #include <xview/cursor.h>
 #include <xview/screen.h>
 #include <xview_private/win_keymap.h>
-#ifdef SVR4 
+#if defined(SVR4) || defined(__linux__)
 #include <stdlib.h> 
 #endif /* SVR4 */
 
@@ -57,6 +57,40 @@
 Pkg_private     void textsw_implicit_commit_doit();
 #endif
 
+#ifdef __STDC__
+static void textsw_begin_delete(Textsw_view_handle view);
+static void textsw_end_again(Textsw_view_handle view, int x, int y);
+static void textsw_begin_again(Textsw_view_handle view);
+#ifndef OW_I18N
+static int textsw_do_newline(Textsw_view_handle view, int action);
+#endif
+static int textsw_scroll_event(Textsw_view_handle view, Event *ie, Notify_arg arg);
+static int textsw_function_key_event(Textsw_view_handle view, Event *ie, int *result);
+static int textsw_mouse_event(Textsw_view_handle view, Event *ie);
+static int textsw_edit_function_key_event(Textsw_view_handle view, Event *ie, int *result);
+static int textsw_caret_motion_event(Textsw_view_handle view, Event *ie);
+static int textsw_field_event(Textsw_view_handle view, Event *ie);
+static int textsw_file_operation(Textsw abstract, Event *ie);
+static int textsw_erase_action(Textsw textsw, Event *ie);
+#else
+static void textsw_begin_delete();
+static void textsw_end_again();
+static void textsw_begin_again();
+#ifndef OW_I18N
+static int textsw_do_newline();
+#endif
+static int textsw_scroll_event();
+static int textsw_function_key_event();
+static int textsw_mouse_event();
+static int textsw_edit_function_key_event();
+static int textsw_caret_motion_event();
+static int textsw_field_event();
+static int textsw_file_operation();
+static int textsw_erase_action();
+#endif
+
+Es_index ev_resolve_xy();
+
 #define SPACE_CHAR 0x20
 
 Pkg_private int
@@ -73,10 +107,10 @@
 	: (textsw->to_insert_next_free - textsw->to_insert);
     if (flags & TFC_DO_PD) {
 	if ((count > 0) || ((flags & TFC_PD_IFF_INSERT) == 0)) {
-	    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, 0);
+	    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, NULL);
 	    (void) textsw_do_pending_delete(view, EV_SEL_PRIMARY,
 					    end_clear | TFC_INSERT);
-	    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, 0);
+	    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, NULL);
 	    end_clear = 0;
 	}
     }
@@ -125,7 +159,7 @@
     Xv_Notice	text_notice;
 
     text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
 				NULL);
     if (!text_notice)  {
         text_notice = xv_create(frame, NOTICE,
@@ -134,13 +168,13 @@
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("The text is read-only and cannot be edited.\n\
 Press \"Continue\" to proceed."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
         xv_set(frame, 
-                XV_KEY_DATA, text_notice_key, text_notice,
+                XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                 NULL);
     }
     else  {
@@ -150,7 +184,7 @@
                 NOTICE_MESSAGE_STRINGS,
 		XV_MSG("The text is read-only and cannot be edited.\n\
 Press \"Continue\" to proceed."),
-                0,
+                NULL,
                 NOTICE_BUTTON_YES, XV_MSG("Continue"),
                 XV_SHOW, TRUE, 
                 NULL);
@@ -311,9 +345,9 @@
 #endif
     } else if (event_action(ie) == WIN_RESIZE) {
 	    textsw_resize(view);
-	    ev_set(view->e_view, EV_NO_REPAINT_TIL_EVENT, TRUE, 0);
+	    ev_set(view->e_view, EV_NO_REPAINT_TIL_EVENT, TRUE, NULL);
 	    textsw_display_view(VIEW_REP_TO_ABS(view), (Rect*) 0);
-	    ev_set(view->e_view, EV_NO_REPAINT_TIL_EVENT, FALSE, 0);
+	    ev_set(view->e_view, EV_NO_REPAINT_TIL_EVENT, FALSE, NULL);
     } else if (textsw_mouseless_scroll_event(view, ie, arg)) {
 	    /* taken care of -- new mouseless function  jcb 12/21/90 */
     } else if (textsw_mouseless_select_event( view, ie, arg)) {
@@ -351,7 +385,7 @@
 	if (!down_event) {
 	    textsw->state ^= TXTSW_CAPS_LOCK_ON;
 	    textsw_notify(view, TEXTSW_ACTION_CAPS_LOCK,
-			  (textsw->state & TXTSW_CAPS_LOCK_ON), 0);
+			  (textsw->state & TXTSW_CAPS_LOCK_ON), NULL);
 	}
 	/*
 	 * Type-in
@@ -547,28 +581,28 @@
 		    }
 		    frame = xv_get(VIEW_REP_TO_ABS(view), WIN_FRAME);
                     text_notice = (Xv_Notice)xv_get(frame, 
-                                    XV_KEY_DATA, text_notice_key, 
+                                    XV_KEY_DATA, (Attr_attribute)text_notice_key, 
 				    NULL);
 
                     if (!text_notice)  {
                         text_notice = xv_create(frame, NOTICE,
                             NOTICE_LOCK_SCREEN, FALSE,
 			    NOTICE_BLOCK_THREAD, TRUE,
-                            NOTICE_MESSAGE_STRINGS, msg, 0,
+                            NOTICE_MESSAGE_STRINGS, msg, NULL,
                             NOTICE_BUTTON_YES, 
 				XV_MSG("Continue"),
                             XV_SHOW, TRUE,
-                            0);
+                            NULL);
 
                         xv_set(frame, 
-                            XV_KEY_DATA, text_notice_key, text_notice,
+                            XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                             NULL);
                     }
                     else  {
                         xv_set(text_notice, 
                             NOTICE_LOCK_SCREEN, FALSE,
 			    NOTICE_BLOCK_THREAD, TRUE,
-                            NOTICE_MESSAGE_STRINGS, msg, 0,
+                            NOTICE_MESSAGE_STRINGS, msg, NULL,
                             NOTICE_BUTTON_YES, 
 				XV_MSG("Continue"),
                             XV_SHOW, TRUE, 
@@ -605,7 +639,7 @@
     CHAR            newline_str[2];
     
     newline_str[0] = action; /* 1030878 */
-    newline_str[1] = NULL;
+    newline_str[1] = '\0';
 
     textsw_flush_caches(view, TFC_INSERT | TFC_PD_SEL);
     if (folio->state & TXTSW_AUTO_INDENT)
@@ -678,7 +712,7 @@
     }
 }
 
-Pkg_private int
+Pkg_private void
 textsw_clear_pending_func_state(textsw)
     register Textsw_folio textsw;
 {
@@ -775,7 +809,7 @@
     masks_have_been_initialized = TRUE;
 }
 
-Pkg_private int
+Pkg_private void
 textsw_set_base_mask(win)
     Xv_object       win;
 {
@@ -790,7 +824,7 @@
 
     win_setinputmask(win, &basemask_kbd, 0, 0);
 
-    xv_set(win, WIN_CONSUME_EVENT, ACTION_HELP, 0);
+    xv_set(win, WIN_CONSUME_EVENT, ACTION_HELP, NULL);
 
 }
 
@@ -860,7 +894,7 @@
     textsw_end_selection_function(folio);
 }
 
-static
+static void
 textsw_begin_again(view)
     Textsw_view_handle view;
 {
@@ -875,7 +909,7 @@
     textsw_begin_function(view, TXTSW_FUNC_AGAIN);
 }
 
-static
+static void
 textsw_end_again(view, x, y)
     Textsw_view_handle view;
     int             x, y;
@@ -889,7 +923,7 @@
     textsw_checkpoint_again(VIEW_REP_TO_ABS(view));
 }
 
-Pkg_private int
+Pkg_private void
 textsw_again(view, x, y)
     Textsw_view_handle view;
     int             x, y;
@@ -898,7 +932,7 @@
     textsw_end_again(view, x, y);
 }
 
-static
+static void
 textsw_begin_delete(view)
     Textsw_view_handle view;
 {
@@ -1035,7 +1069,6 @@
 textsw_do_undo(view)
     Textsw_view_handle view;
 {
-    Pkg_private int      ev_remove_finger();
     Pkg_private Es_index textsw_set_insert();
     register Textsw_folio folio = FOLIO_FOR_VIEW(view);
     register Ev_finger_handle saved_insert_finger;
@@ -1059,12 +1092,12 @@
     (void) ev_add_finger(&views->fingers, EV_GET_INSERT(views), 0,
 			 &save_insert);
 
-    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, 0);
+    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, NULL);
     es_set(views->esh,
 	   ES_UNDO_NOTIFY_PAIR, textsw_undo_notify, (caddr_t) folio,
 	   ES_UNDO_MARK, folio->undo[0],
-	   0);
-    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, 0);
+	   NULL);
+    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, NULL);
     ev_update_chain_display(views);
     saved_insert_finger =
 	ev_find_finger(&views->fingers, save_insert);
@@ -1095,12 +1128,12 @@
 	folio->state &= ~TXTSW_EDITED;
 	if (folio->menu && folio->sub_menu_table)
 	    xv_set(folio->sub_menu_table[(int) TXTSW_FILE_SUB_MENU], 
-		   MENU_DEFAULT, 1, 0);	
+		   MENU_DEFAULT, 1, NULL);	
 
     }
 }
 
-Pkg_private int
+Pkg_private void
 textsw_undo(textsw)
     Textsw_folio    textsw;
 {
@@ -1343,7 +1376,6 @@
 	/* Menus */
       case TXTSW_MENU:
 	if (down_event) {
-	    Pkg_private          textsw_do_menu();
 	    textsw_flush_caches(view, TFC_STD);
 
 	    textsw_do_menu(view, ie);
@@ -1604,7 +1636,7 @@
 	    if (folio->state & TXTSW_NO_LOAD) {
 		frame = FRAME_FROM_FOLIO_OR_VIEW(folio);
                 text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
 				NULL);
                 if (!text_notice)  {
                     text_notice = xv_create(frame, NOTICE,
@@ -1613,13 +1645,13 @@
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Illegal Operation.\n\
 Load File Has Been Disabled."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
                     xv_set(frame, 
-                            XV_KEY_DATA, text_notice_key, text_notice,
+                            XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                             NULL);
                 }
                 else  {
@@ -1629,7 +1661,7 @@
                             NOTICE_MESSAGE_STRINGS,
 			    XV_MSG("Illegal Operation.\n\
 Load File Has Been Disabled."),
-                            0,
+                            NULL,
                             NOTICE_BUTTON_YES, XV_MSG("Continue"),
                             XV_SHOW, TRUE, 
                             NULL);
@@ -1638,7 +1670,7 @@
 		return is_file_op_event;
 	    }
 	    base_frame = (Frame) xv_get(abstract, WIN_FRAME);
-	    popup = (Frame) xv_get(base_frame, XV_KEY_DATA, LOAD_FILE_POPUP_KEY);
+	    popup = (Frame) xv_get(base_frame, XV_KEY_DATA, (Attr_attribute)LOAD_FILE_POPUP_KEY);
 	    if (popup) {
 		(void) textsw_set_dir_str((int) TEXTSW_MENU_LOAD);
 		(void) textsw_get_and_set_selection(popup, view, (int) TEXTSW_MENU_LOAD);
@@ -1664,7 +1696,7 @@
 							    EV_SEL_PRIMARY);
 	    if (primary_selection_exists) {
 		base_frame = (Frame) xv_get(abstract, WIN_FRAME);
-		popup = (Frame) xv_get(base_frame, XV_KEY_DATA, FILE_STUFF_POPUP_KEY);
+		popup = (Frame) xv_get(base_frame, XV_KEY_DATA, (Attr_attribute)FILE_STUFF_POPUP_KEY);
 		if (popup) {
 		    (void) textsw_set_dir_str((int) TEXTSW_MENU_FILE_STUFF);
 		    (void) textsw_get_and_set_selection(popup, view,
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_line.c xview-3.2p1.4/lib/libxview/textsw/txt_line.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_line.c	1993-06-29 07:17:42.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/txt_line.c	2013-01-07 12:50:56.203875000 +0100
@@ -47,6 +47,12 @@
 Pkg_private Textsw_view_handle text_view_frm_p_itm();
 Pkg_private Xv_Window frame_from_panel_item();
 
+#ifdef __STDC__
+static void sel_line_cmd_proc(Panel_item item, Event *event);
+#else
+static void sel_line_cmd_proc();
+#endif
+
 /*ARGSUSED*/
 static int
 do_sel_line_proc(folio, ie)
@@ -93,7 +99,7 @@
 	(void) textsw_set_insert(folio, last_plus_one);
 	popup_frame =
 	    frame_from_panel_item(sel_line_panel_items[(int) SEL_LINE_ITEM]);
-	(void) xv_set(popup_frame, XV_SHOW, FALSE, 0);
+	(void) xv_set(popup_frame, XV_SHOW, FALSE, NULL);
 	return FALSE;
     }
 }
@@ -112,7 +118,7 @@
 	item == sel_line_panel_items[(int) SEL_LINE_NUMBER_ITEM])
 	error = do_sel_line_proc(folio, event);
     if (error) {
-	xv_set(item, PANEL_NOTIFY_STATUS, XV_ERROR, 0);
+	xv_set(item, PANEL_NOTIFY_STATUS, XV_ERROR, NULL);
     }
 }
 
@@ -124,9 +130,9 @@
 {
 
     CHAR            line_number[MAX_STR_LENGTH];
-    int             dummy;
+    Es_index        dummy;
 
-    line_number[0] = NULL;
+    line_number[0] = (CHAR)'\0';
     (void) textsw_get_selection(view, &dummy, &dummy, line_number, MAX_STR_LENGTH);
 
     sel_line_panel_items[(int) SEL_LINE_NUMBER_ITEM] =
@@ -146,10 +152,10 @@
 			  PANEL_NOTIFY_STRING, "\n\r",
 			  PANEL_NOTIFY_PROC, sel_line_cmd_proc,
 			  HELP_INFO("textsw:linenumber")
-			  0);
+			  NULL);
 
     xv_set(panel, PANEL_CARET_ITEM,
-	   sel_line_panel_items[(int) SEL_LINE_NUMBER_ITEM], 0);
+	   sel_line_panel_items[(int) SEL_LINE_NUMBER_ITEM], NULL);
 
     sel_line_panel_items[(int) SEL_LINE_ITEM] =
 	panel_create_item(panel,
@@ -160,10 +166,10 @@
 				XV_MSG("Select Line at Number"),
 			  PANEL_NOTIFY_PROC, sel_line_cmd_proc,
 			  HELP_INFO("textsw:selectline")
-			  0);
+			  NULL);
     (void) xv_set(panel,
 	      PANEL_DEFAULT_ITEM, sel_line_panel_items[(int) SEL_LINE_ITEM],
-		  0);
+		  NULL);
 }
 Pkg_private          Panel
 textsw_create_sel_line_panel(frame, view)
@@ -174,7 +180,7 @@
 
     panel = (Panel) xv_get(frame, FRAME_CMD_PANEL,
 			   XV_HELP_DATA, "textsw:sellinepanel",
-			   0);
+			   NULL);
     (void) create_sel_line_items(panel, view);
 
     return (panel);
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_load.c xview-3.2p1.4/lib/libxview/textsw/txt_load.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_load.c	1993-06-29 07:17:37.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/txt_load.c	2013-01-07 12:50:56.308981000 +0100
@@ -29,6 +29,7 @@
 #include <xview/win_struct.h>
 #include <xview/win_screen.h>
 #include <xview/file_chsr.h>
+#include <unistd.h>			/* getcwd() */
 
 #ifdef SVR4
 #include <string.h>
@@ -49,7 +50,13 @@
 
 Pkg_private Textsw_view_handle text_view_frm_p_itm();
 Pkg_private Xv_Window frame_from_panel_item();
-
+#ifdef __STDC__
+static Panel_setting load_cmd_proc(Panel_item item, Event *event);
+static Panel_setting load_cmd_proc_accel(Panel_item item, Event *event);
+#else
+static Panel_setting load_cmd_proc();
+static Panel_setting load_cmd_proc_accel();
+#endif
 
 static int
 do_load_proc(folio, ie)
@@ -72,7 +79,7 @@
     if (textsw_has_been_modified(textsw)) {
 	frame = FRAME_FROM_FOLIO_OR_VIEW(folio);
         text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
 				NULL);
         if (!text_notice)  {
             text_notice = xv_create(frame, NOTICE,
@@ -81,16 +88,16 @@
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("The text has been edited.\n\
 Load File will discard these edits. Please confirm."),
-                        0,
+                        NULL,
 			NOTICE_BUTTON_YES, 
 				XV_MSG("Confirm, discard edits"),
 			NOTICE_BUTTON_NO, XV_MSG("Cancel"),
 			NOTICE_STATUS, &result,
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
             xv_set(frame, 
-                XV_KEY_DATA, text_notice_key, text_notice,
+                XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                 NULL);
         }
         else  {
@@ -100,7 +107,7 @@
                 NOTICE_MESSAGE_STRINGS,
 		XV_MSG("The text has been edited.\n\
 Load File will discard these edits. Please confirm."),
-                0,
+                NULL,
 		NOTICE_BUTTON_YES, 
 			XV_MSG("Confirm, discard edits"),
 		NOTICE_BUTTON_NO, XV_MSG("Cancel"),
@@ -168,7 +175,7 @@
 	    frame = FRAME_FROM_FOLIO_OR_VIEW(folio);
 
             text_notice = (Xv_Notice)xv_get(frame, 
-                                    XV_KEY_DATA, text_notice_key, 
+                                    XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                     NULL);
 
 	    if (!text_notice)  {
@@ -178,14 +185,14 @@
 		            NOTICE_MESSAGE_STRINGS,
 			    XV_MSG("Cannot change directory.\n\
 Change Directory Has Been Disabled."),
-		                0,
+		                NULL,
 		            NOTICE_BUTTON_YES, 
 				XV_MSG("Continue"),
 		            XV_SHOW, TRUE,
-		            0);
+		            NULL);
 
 		xv_set(frame, 
-		        XV_KEY_DATA, text_notice_key, text_notice,
+		        XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
 		        NULL);
 	    }
 	    else  {
@@ -195,7 +202,7 @@
 		        NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Cannot change directory.\n\
 Change Directory Has Been Disabled."),
-		            0,
+		            NULL,
 		        NOTICE_BUTTON_YES, XV_MSG("Continue"),
 			XV_SHOW, TRUE, 
 		        NULL);
@@ -205,12 +212,12 @@
 	}
     }
     if ((int)STRLEN(file_str) > 0) {
-	result = textsw_load_file(textsw, file_str, TRUE, 0, 0);
+	result = textsw_load_file(textsw, file_str, TRUE, NULL, NULL);
 	if (result == 0) {
 	    (void) textsw_set_insert(folio, 0L);
 	    popup_frame =
 		frame_from_panel_item(load_panel_items[(int) FILE_CMD_ITEM]);
-	    (void) xv_set(popup_frame, XV_SHOW, FALSE, 0);
+	    (void) xv_set(popup_frame, XV_SHOW, FALSE, NULL);
 	    return FALSE;
 	}
 	/* error */
@@ -218,7 +225,7 @@
     }
 
     text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
     if (!text_notice)  {
@@ -228,13 +235,13 @@
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("No file name was specified.\n\
 Specify a file name to Load."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
         xv_set(frame, 
-            XV_KEY_DATA, text_notice_key, text_notice,
+            XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
             NULL);
     }
     else  {
@@ -244,7 +251,7 @@
             NOTICE_MESSAGE_STRINGS,
 	    XV_MSG("No file name was specified.\n\
 Specify a file name to Load."),
-            0,
+            NULL,
             NOTICE_BUTTON_YES, XV_MSG("Continue"),
             XV_SHOW, TRUE, 
             NULL);
@@ -253,7 +260,7 @@
     return TRUE;
 }
 
-int
+Pkg_private int
 open_cmd_proc(fc, path,file,client_data)
     Frame             fc;
     CHAR             *path;
@@ -261,9 +268,9 @@
     Xv_opaque         client_data;
 {
 
-    Textsw_view_handle view  = (Textsw_view_handle)window_get(fc,WIN_CLIENT_DATA,0);
+    Textsw_view_handle view  = (Textsw_view_handle)window_get(fc,WIN_CLIENT_DATA,NULL);
     Textsw_folio       folio = FOLIO_FOR_VIEW(view);
-    int                error;
+    /*int                error;*/
     Textsw          textsw = FOLIO_REP_TO_ABS(folio);
     CHAR           *dir_str;
     int             result;
@@ -279,7 +286,7 @@
     if (textsw_has_been_modified(textsw)) {
         frame = FRAME_FROM_FOLIO_OR_VIEW(folio);
         text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
         if (!text_notice)  {
             text_notice = xv_create(frame, NOTICE,
@@ -288,16 +295,16 @@
                         NOTICE_MESSAGE_STRINGS,
                         XV_MSG("The text has been edited.\n\
 Load File will discard these edits. Please confirm."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, 
                                 XV_MSG("Confirm, discard edits"),
                         NOTICE_BUTTON_NO, XV_MSG("Cancel"),
                         NOTICE_STATUS, &result,
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
             xv_set(frame, 
-                XV_KEY_DATA, text_notice_key, text_notice,
+                XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                 NULL);
         }
         else  {
@@ -307,7 +314,7 @@
                 NOTICE_MESSAGE_STRINGS,
                 XV_MSG("The text has been edited.\n\
 Load File will discard these edits. Please confirm."),
-                0,
+                NULL,
                 NOTICE_BUTTON_YES, 
                         XV_MSG("Confirm, discard edits"),
                 NOTICE_BUTTON_NO, XV_MSG("Cancel"),
@@ -355,7 +362,7 @@
             frame = FRAME_FROM_FOLIO_OR_VIEW(folio);
  
             text_notice = (Xv_Notice)xv_get(frame,
-                                    XV_KEY_DATA, text_notice_key,
+                                    XV_KEY_DATA, (Attr_attribute)text_notice_key,
                                     NULL);
  
             if (!text_notice)  {
@@ -365,14 +372,14 @@
                             NOTICE_MESSAGE_STRINGS,
                             XV_MSG("Cannot change directory.\n\
 Change Directory Has Been Disabled."),
-                                0,   
+                                NULL,   
                             NOTICE_BUTTON_YES,
                                 XV_MSG("Continue"),
                             XV_SHOW, TRUE, 
-                            0);
+                            NULL);
 
                 xv_set(frame, 
-                        XV_KEY_DATA, text_notice_key, text_notice,
+                        XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                         NULL);
             }
             else  {
@@ -382,7 +389,7 @@
                         NOTICE_MESSAGE_STRINGS,
                         XV_MSG("Cannot change directory.\n\
 Change Directory Has Been Disabled."),
-                            0,
+                            NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,     
                         NULL);
@@ -395,7 +402,7 @@
         result = textsw_load_file(textsw, file, TRUE, 0, 0);
         if (result == 0) {
             (void) textsw_set_insert(folio, 0L);
-            (void) xv_set(fc, XV_SHOW, FALSE, 0);
+            (void) xv_set(fc, XV_SHOW, FALSE, NULL);
             return FALSE;
         }
         /* error */
@@ -403,7 +410,7 @@
     }
  
     text_notice = (Xv_Notice)xv_get(frame,
-                                XV_KEY_DATA, text_notice_key,
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key,
                                 NULL);
  
     if (!text_notice)  {
@@ -413,13 +420,13 @@
                         NOTICE_MESSAGE_STRINGS,
                         XV_MSG("No file name was specified.\n\
 Specify a file name to Load."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
  
         xv_set(frame,
-            XV_KEY_DATA, text_notice_key, text_notice,
+            XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
             NULL);
     }
     else  {
@@ -429,7 +436,7 @@
             NOTICE_MESSAGE_STRINGS,
             XV_MSG("No file name was specified.\n\
 Specify a file name to Load."),
-            0,
+            NULL,
             NOTICE_BUTTON_YES, XV_MSG("Continue"),
             XV_SHOW, TRUE,
             NULL);
@@ -439,14 +446,14 @@
 }
    
 
-int
+Pkg_private int
 save_cmd_proc(fc, path,exists)
     Frame             fc;
     CHAR             *path;
     int               exists;
 {
 
-   Textsw_view_handle view  = (Textsw_view_handle)window_get(fc,WIN_CLIENT_DATA,0);
+   Textsw_view_handle view  = (Textsw_view_handle)window_get(fc,WIN_CLIENT_DATA,NULL);
    Textsw_folio folio = FOLIO_FROM_VIEW(view);
    int		confirm_state_changed = 0;
 
@@ -481,7 +488,7 @@
     if (item == load_panel_items[(int) FILE_CMD_ITEM]) {
 	error = do_load_proc(folio, event);
 	if (error) {
-	    xv_set(item, PANEL_NOTIFY_STATUS, XV_ERROR, 0);
+	    xv_set(item, PANEL_NOTIFY_STATUS, XV_ERROR, NULL);
 	}
 	return PANEL_NONE;
     }
@@ -500,7 +507,7 @@
     if (item == load_panel_items[(int) FILE_STRING_ITEM]) {
 	error = do_load_proc(folio, event);
 	if (error) {
-	    xv_set(item, PANEL_NOTIFY_STATUS, XV_ERROR, 0);
+	    xv_set(item, PANEL_NOTIFY_STATUS, XV_ERROR, NULL);
 	}
 	return PANEL_NONE;
     }
@@ -515,9 +522,9 @@
 
     CHAR            load_string[MAX_STR_LENGTH];
     char            current_dir_load_string[MAX_STR_LENGTH];
-    int             dummy;
+    Es_index        dummy;
 
-    load_string[0] = NULL;
+    load_string[0] = (CHAR)NULL;
     (void) textsw_get_selection(view, &dummy, &dummy, load_string, MAX_STR_LENGTH);
  (void) getcwd(current_dir_load_string, MAX_STR_LENGTH); 
     load_panel_items[(int) DIR_STRING_ITEM] = panel_create_item(panel, PANEL_TEXT,
@@ -529,7 +536,7 @@
 					   PANEL_LABEL_STRING, 
 					   XV_MSG("Directory:"),
 					       HELP_INFO("textsw:dirstring")
-								0);
+								NULL);
     load_panel_items[(int) FILE_STRING_ITEM] = panel_create_item(panel, PANEL_TEXT,
 						 PANEL_LABEL_X, ATTR_COL(5),
 						 PANEL_LABEL_Y, ATTR_ROW(1),
@@ -546,7 +553,7 @@
 						PANEL_NOTIFY_STRING, "\n\r",
 				     PANEL_NOTIFY_PROC, load_cmd_proc_accel,
 					      HELP_INFO("textsw:loadstring")
-								 0);
+								 NULL);
     xv_set(panel, PANEL_CARET_ITEM,
 	   load_panel_items[(int) FILE_STRING_ITEM], 0);
 
@@ -558,10 +565,10 @@
 					      XV_MSG("Load File"),
 					   PANEL_NOTIFY_PROC, load_cmd_proc,
 						HELP_INFO("textsw:loadfile")
-							      0);
+							      NULL);
     (void) xv_set(panel,
 		  PANEL_DEFAULT_ITEM, load_panel_items[(int) FILE_CMD_ITEM],
-		  0);
+		  NULL);
 }
 
 Pkg_private          Panel
@@ -573,7 +580,7 @@
 
     panel = (Panel) xv_get(frame, FRAME_CMD_PANEL,
 			   HELP_INFO("textsw:loadpanel")
-			   0);
+			   NULL);
     (void) create_load_items(panel, view);
 
     return (panel);
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_match.c xview-3.2p1.4/lib/libxview/textsw/txt_match.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_match.c	1993-06-29 07:17:38.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/txt_match.c	2013-01-07 12:50:56.385712000 +0100
@@ -48,6 +48,8 @@
 
 Pkg_private Textsw_view_handle text_view_frm_p_itm();
 Pkg_private Xv_Window frame_from_panel_item();
+static Panel_setting match_cmd_proc();
+Textsw_index textsw_replace();
 
 #ifdef OW_I18N
 
@@ -97,7 +99,7 @@
 
     if (TXTSW_IS_READ_ONLY(folio)) {
         text_notice = (Xv_Notice)xv_get(frame, 
-			XV_KEY_DATA, text_notice_key, NULL);
+			XV_KEY_DATA, (Attr_attribute)text_notice_key, NULL);
         if (!text_notice)  {
             text_notice = xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
@@ -105,13 +107,13 @@
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Operation is aborted.\n\
 This text window is read only."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
             xv_set(frame, 
-                XV_KEY_DATA, text_notice_key, text_notice,
+                XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                 NULL);
         }
         else  {
@@ -121,7 +123,7 @@
                 NOTICE_MESSAGE_STRINGS,
 		XV_MSG("Operation is aborted.\n\
 This text window is read only."),
-                0,
+                NULL,
                 NOTICE_BUTTON_YES, XV_MSG("Continue"),
                 XV_SHOW, TRUE, 
                 NULL);
@@ -132,7 +134,7 @@
     (void) ev_get_selection(folio->views, &first, &last_plus_one, EV_SEL_PRIMARY);
     if ((ro_bdry != 0) && (last_plus_one <= ro_bdry)) {
         text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
         if (!text_notice)  {
@@ -142,13 +144,13 @@
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Operation is aborted.\n\
 Selected text is in read only area."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
             xv_set(frame, 
-                XV_KEY_DATA, text_notice_key, text_notice,
+                XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                 NULL);
         }
         else  {
@@ -158,7 +160,7 @@
                 NOTICE_MESSAGE_STRINGS,
 		XV_MSG("Operation is aborted.\n\
 Selected text is in read only area."),
-                0,
+                NULL,
                 NOTICE_BUTTON_YES, XV_MSG("Continue"),
                 XV_SHOW, TRUE, 
                 NULL);
@@ -169,7 +171,7 @@
     buf = sel_str = temp_ptr = NULL;
     if (do_insert) {
 	temp_ptr = buf = MALLOC((unsigned) ((last_plus_one - first) + 5));
-	buf[0] = NULL;
+	buf[0] = (CHAR)'\0';
 	STRCPY(buf, delimiter_pairs[0][value]);
 	temp_ptr = buf + STRLEN(buf);
 
@@ -198,10 +200,10 @@
 		    (STRNCMP(delimiter_pairs[1][value], temp_ptr, del_len2) == 0)) {
 		    STRNCPY(buf, sel_str + del_len1,
 			    (sel_str_len - (del_len1 + del_len2)));
-		    buf[(sel_str_len - (del_len1 + del_len2))] = NULL;
+		    buf[(sel_str_len - (del_len1 + del_len2))] = (CHAR)'\0';
 		} else {
                     text_notice = (Xv_Notice)xv_get(frame, 
-                                    XV_KEY_DATA, text_notice_key, 
+                                    XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                     NULL);
 
 	            if (!text_notice)  {
@@ -211,14 +213,14 @@
 		                    NOTICE_MESSAGE_STRINGS,
 				    XV_MSG("Operation is aborted.\n\
 Selection does not include the indicated pair."),
-		                    0,
+		                    NULL,
 		                    NOTICE_BUTTON_YES, 
 					XV_MSG("Continue"),
 		                    XV_SHOW, TRUE,
-		                    0);
+		                    NULL);
 
 		        xv_set(frame, 
-		                XV_KEY_DATA, text_notice_key, text_notice,
+		                XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
 		                NULL);
 	            }
 	            else  {
@@ -228,7 +230,7 @@
 		            NOTICE_MESSAGE_STRINGS,
 			    XV_MSG("Operation is aborted.\n\
 Selection does not include the indicated pair."),
-		            0,
+		            NULL,
 		            NOTICE_BUTTON_YES, 
 				XV_MSG("Continue"),
 			    XV_SHOW, TRUE, 
@@ -239,7 +241,7 @@
 	    }
 	} else {
             text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
             if (!text_notice)  {
@@ -248,13 +250,13 @@
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Operation is aborted, because no text is selected"),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
                 xv_set(frame, 
-                    XV_KEY_DATA, text_notice_key, text_notice,
+                    XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                     NULL);
             }
             else  {
@@ -263,7 +265,7 @@
 		    NOTICE_BLOCK_THREAD, TRUE,
                     NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Operation is aborted, because no text is selected"),
-                    0,
+                    NULL,
                     NOTICE_BUTTON_YES, XV_MSG("Continue"),
                     XV_SHOW, TRUE, 
                     NULL);
@@ -311,7 +313,7 @@
 	    break;
 	  case 2:{
 		Textsw_folio    folio = FOLIO_FOR_VIEW(view);
-		int             first, last_plus_one;
+		Es_index        first, last_plus_one;
 
 		first = last_plus_one = EV_GET_INSERT(folio->views);
 		(void) textsw_match_field_and_normalize(view,
@@ -361,9 +363,9 @@
 			  PANEL_CHOICE_STRINGS, parenthesis, double_quote,
 			  single_quote, back_qoute,
 			  field_marker, square_bracket,
-			  curly_bracket, comment, 0,
+			  curly_bracket, comment, NULL,
 			  XV_HELP_DATA, "textsw:fieldchoice",
-			  0);
+			  NULL);
 
 
     match_panel_items[(int) FIND_PAIR_ITEM] =
@@ -373,14 +375,14 @@
 			  PANEL_LABEL_STRING, Find_Pair,
 			  PANEL_NOTIFY_PROC, match_cmd_proc,
 			  XV_HELP_DATA, "textsw:findpair",
-			  0);
+			  NULL);
 
     match_panel_items[(int) FIND_PAIR_CHOICE_ITEM] =
 	panel_create_item(panel, PANEL_CHOICE,
 			  PANEL_LABEL_STRING, ":",
-			  PANEL_CHOICE_STRINGS, Forward, Backward, Expand, 0,
+			  PANEL_CHOICE_STRINGS, Forward, Backward, Expand, NULL,
 			  XV_HELP_DATA, "textsw:findpairchoice",
-			  0);
+			  NULL);
 
     match_panel_items[(int) INSERT_ITEM] =
 	panel_create_item(panel, PANEL_BUTTON,
@@ -389,14 +391,14 @@
 			  PANEL_LABEL_STRING, Insert_Pair,
 			  PANEL_NOTIFY_PROC, match_cmd_proc,
 			  XV_HELP_DATA, "textsw:insertpair",
-			  0);
+			  NULL);
 
     match_panel_items[(int) REMOVE_ITEM] =
 	panel_create_item(panel, PANEL_BUTTON,
 			  PANEL_LABEL_STRING, Remove_Pair,
 			  PANEL_NOTIFY_PROC, match_cmd_proc,
 			  XV_HELP_DATA, "textsw:removepair",
-			  0);
+			  NULL);
 
 }
 Pkg_private          Panel
@@ -408,7 +410,7 @@
 
     panel = (Panel) xv_get(frame, FRAME_CMD_PANEL,
 			   XV_HELP_DATA, "textsw:fieldpanel",
-			   0);
+			   NULL);
     (void) create_match_items(panel, view);
 
     return (panel);
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_menu.c xview-3.2p1.4/lib/libxview/textsw/txt_menu.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_menu.c	2013-01-07 12:36:16.523652000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/txt_menu.c	2013-01-07 16:51:04.954475000 +0100
@@ -67,7 +67,6 @@
 static Menu    *textsw_file_menu;
 static short    set_def  = FALSE;
 
-Pkg_private int      textsw_has_been_modified();
 pkg_private void textsw_get_extend_to_edge();
 pkg_private void textsw_set_extend_to_edge();
 Pkg_private Textsw_view_handle textsw_create_view();
@@ -79,6 +78,17 @@
 Pkg_private Menu_item textsw_extras_gen_proc();
 Pkg_private void     textsw_do_save();
 
+/* VARARGS0 */
+#ifdef __STDC__
+static void textsw_find_do_menu_action(Menu cmd_menu, Menu_item cmd_item);
+static void textsw_edit_do_menu_action(Menu cmd_menu, Menu_item cmd_item);
+static void textsw_view_do_menu_action(Menu cmd_menu, Menu_item cmd_item);
+#else
+static void textsw_find_do_menu_action();
+static void textsw_edit_do_menu_action();
+static void textsw_view_do_menu_action();
+#endif
+
 int             STORE_FILE_POPUP_KEY;
 int             SAVE_FILE_POPUP_KEY;
 int             LOAD_FILE_POPUP_KEY;
@@ -128,9 +138,6 @@
 
 
 
-/* VARARGS0 */
-static int      textsw_edit_do_menu_action(), textsw_view_do_menu_action(),
-                textsw_find_do_menu_action();
 static void
 textsw_new_menu(folio)
     Textsw_folio    folio;
@@ -179,29 +186,29 @@
     server = XV_SERVER_FROM_WINDOW(textsw);
     break_mode = xv_create(server, MENU_CHOICE_MENU,
 			   HELP_INFO("textsw:mbreakmode")
-			   0);
+			   NULL);
     menu_items[(int) TEXTSW_MENU_WRAP_LINES_AT_WORD] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG("Wrap at Word"),
 		  MENU_VALUE, TEXTSW_MENU_WRAP_LINES_AT_WORD,
 		  HELP_INFO("textsw:mwrapwords")
-		  0);
+		  NULL);
     menu_items[(int) TEXTSW_MENU_WRAP_LINES_AT_CHAR] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG("Wrap at Character"),
 		  MENU_VALUE, TEXTSW_MENU_WRAP_LINES_AT_CHAR,
 		  HELP_INFO("textsw:mwrapchars")
-		  0);
+		  NULL);
     menu_items[(int) TEXTSW_MENU_CLIP_LINES] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG("Wrap at Character"),
 		  MENU_STRING, XV_MSG("Clip Lines"),
 		  MENU_VALUE, TEXTSW_MENU_CLIP_LINES,
 		  HELP_INFO("textsw:mcliplines")
-		  0);
+		  NULL);
     def_str = defaults_get_string("text.lineBreak", "Text.LineBreak", (char *) 0);
     if (def_str == NULL || def_str[0] == '\0' ||
 	(line_break = (int) defaults_lookup(def_str, line_break_pairs)) == TEXTSW_WRAP_AT_WORD)
@@ -209,30 +216,30 @@
 	 MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_WRAP_LINES_AT_WORD],
 	 MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_WRAP_LINES_AT_CHAR],
 	       MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_CLIP_LINES],
-	       0);
+	       NULL);
     else if (TEXTSW_WRAP_AT_CHAR == line_break)
 	xv_set(break_mode,
 	 MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_WRAP_LINES_AT_CHAR],
 	 MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_WRAP_LINES_AT_WORD],
 	       MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_CLIP_LINES],
-	       0);
+	       NULL);
     else
 	xv_set(break_mode,
 	       MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_CLIP_LINES],
 	 MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_WRAP_LINES_AT_CHAR],
 	 MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_WRAP_LINES_AT_WORD],
-	       0);
+	       NULL);
 
     undo_cmds = xv_create(server, MENU,
 			  HELP_INFO("textsw:mundocmds")
-			  0);
+			  NULL);
     menu_items[(int) TEXTSW_MENU_UNDO] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG("Undo Last Edit"),
 		  MENU_VALUE, TEXTSW_MENU_UNDO,
 		  HELP_INFO("textsw:mundolast")
-		  0);
+		  NULL);
 
     /*
      * Set accelerator for menu item
@@ -241,59 +248,59 @@
 		MENU_ACCELERATOR, "coreset Undo", NULL);
 
     menu_items[(int) TEXTSW_MENU_UNDO_ALL] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG("Undo All Edits"),
 		  MENU_VALUE, TEXTSW_MENU_UNDO_ALL,
 		  HELP_INFO("textsw:mundoall")
-		  0);
+		  NULL);
     xv_set(undo_cmds,
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_UNDO],
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_UNDO_ALL],
-	   0);
-    xv_set(undo_cmds, XV_KEY_DATA, TEXTSW_MENU_DATA_KEY, textsw, 0);
+	   NULL);
+    xv_set(undo_cmds, XV_KEY_DATA, (Attr_attribute)TEXTSW_MENU_DATA_KEY, textsw, NULL);
 
     select_field_cmds = xv_create(server, MENU,
 				  HELP_INFO("textsw:mselfieldcmds")
-				  0);
+				  NULL);
     menu_items[(int) TEXTSW_MENU_SEL_ENCLOSE_FIELD] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG("Expand"),
 		  MENU_VALUE, TEXTSW_MENU_SEL_ENCLOSE_FIELD,
 		  HELP_INFO("textsw:mselexpand")
-		  0);
+		  NULL);
     menu_items[(int) TEXTSW_MENU_SEL_NEXT_FIELD] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG("Next"),
 		  MENU_VALUE, TEXTSW_MENU_SEL_NEXT_FIELD,
 		  HELP_INFO("textsw:mselnext")
-		  0);
+		  NULL);
     menu_items[(int) TEXTSW_MENU_SEL_PREV_FIELD] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG("Previous"),
 		  MENU_VALUE, TEXTSW_MENU_SEL_PREV_FIELD,
 		  HELP_INFO("textsw:mselprevious")
-		  0);
+		  NULL);
     xv_set(select_field_cmds,
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_SEL_ENCLOSE_FIELD],
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_SEL_NEXT_FIELD],
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_SEL_PREV_FIELD],
-	   0);
+	   NULL);
 
 
     find_sel_cmds = xv_create(server, MENU,
 			      HELP_INFO("textsw:mfindselcmds")
-			      0);
+			      NULL);
     menu_items[(int) TEXTSW_MENU_FIND] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG("Forward"),
 		  MENU_VALUE, TEXTSW_MENU_FIND,
 		  HELP_INFO("textsw:mfindforward")
-		  0);
+		  NULL);
 
     /*
      * Set accelerator for menu item
@@ -302,24 +309,24 @@
 		MENU_ACCELERATOR, "coreset Find", NULL);
 
     menu_items[(int) TEXTSW_MENU_FIND_BACKWARD] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG("Backward"),
 		  MENU_VALUE, TEXTSW_MENU_FIND_BACKWARD,
 		  HELP_INFO("textsw:mfindbackward")
-		  0);
+		  NULL);
     xv_set(find_sel_cmds,
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_FIND],
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_FIND_BACKWARD],
-	   0);
+	   NULL);
 
     menu_items[(int) TEXTSW_MENU_LOAD] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG(LOAD_FILE),
 		  MENU_VALUE, TEXTSW_MENU_LOAD,
 		  HELP_INFO("textsw:mloadfile")
-		  0);
+		  NULL);
 
     /*
      * Set accelerator for menu item
@@ -328,21 +335,21 @@
 		MENU_ACCELERATOR, "coreset Open", NULL);
 
     menu_items[(int) TEXTSW_MENU_SAVE] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG(SAVE_FILE),
 		  MENU_VALUE, TEXTSW_MENU_SAVE,
 		  HELP_INFO("textsw:msavefile")
-		  0);
+		  NULL);
 
     menu_items[(int) TEXTSW_MENU_STORE] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG(STORE_NEW_FILE),
 		  MENU_VALUE, TEXTSW_MENU_STORE,
     /* MENU_LINE_AFTER_ITEM,	MENU_HORIZONTAL_LINE, */
 		  HELP_INFO("textsw:mstorefile")
-		  0);
+		  NULL);
 
     /*
      * Set accelerator for menu item.
@@ -359,23 +366,23 @@
 
 
     menu_items[(int) TEXTSW_MENU_FILE_STUFF] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG(INCLUDE_FILE),
 		  MENU_VALUE, TEXTSW_MENU_FILE_STUFF,
 		  HELP_INFO("textsw:mincludefile")
-		  0);
+		  NULL);
     menu_items[(int) TEXTSW_MENU_RESET] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG(EMPTY_DOC),
 		  MENU_VALUE, TEXTSW_MENU_RESET,
 		  HELP_INFO("textsw:memptydoc")
-		  0);
+		  NULL);
 
     sub_menu[(int) TXTSW_FILE_SUB_MENU] = xv_create(server, MENU,
 					       HELP_INFO("textsw:mfilecmds")
-						    0);
+						    NULL);
 
     xv_set(sub_menu[(int) TXTSW_FILE_SUB_MENU],
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_LOAD],
@@ -383,44 +390,44 @@
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_STORE],
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_FILE_STUFF],
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_RESET],
-	   0);
+	   NULL);
 
     menu_items[(int) TEXTSW_MENU_AGAIN] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG(AGAIN_STR),
 		  MENU_VALUE, TEXTSW_MENU_AGAIN,
 		  HELP_INFO("textsw:meditagain")
-		  0);
-    undo_cmds_item = xv_create(NULL,
+		  NULL);
+    undo_cmds_item = xv_create((Xv_object)NULL,
 			       MENUITEM,
 			       MENU_STRING, XV_MSG(UNDO_STR),
 			       MENU_PULLRIGHT, undo_cmds,
     /* MENU_LINE_AFTER_ITEM,	 MENU_HORIZONTAL_LINE, */
 			       HELP_INFO("textsw:meditundo")
-			       0);
+			       NULL);
     menu_items[(int) TEXTSW_MENU_COPY] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING,  XV_MSG(COPY_STR),
 		  MENU_VALUE, TEXTSW_MENU_COPY,
 		  HELP_INFO("textsw:meditcopy")
-		  0);
+		  NULL);
     menu_items[(int) TEXTSW_MENU_PASTE] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG(PASTE_STR),
 		  MENU_VALUE, TEXTSW_MENU_PASTE,
 		  HELP_INFO("textsw:meditpaste")
-		  0);
+		  NULL);
     menu_items[(int) TEXTSW_MENU_CUT] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG(CUT_STR),
 		  MENU_VALUE, TEXTSW_MENU_CUT,
     /* MENU_LINE_AFTER_ITEM,	MENU_HORIZONTAL_LINE, */
 		  HELP_INFO("textsw:meditcut")
-		  0);
+		  NULL);
 
     /*
      * Set accelerator for menu items
@@ -434,137 +441,137 @@
 
     sub_menu[(int) TXTSW_EDIT_SUB_MENU] = xv_create(server, MENU,
 					       HELP_INFO("textsw:meditcmds")
-						    0);
+						    NULL);
     xv_set(sub_menu[(int) TXTSW_EDIT_SUB_MENU],
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_AGAIN],
 	   MENU_APPEND_ITEM, undo_cmds_item,
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_COPY],
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_PASTE],
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_CUT],
-	   0);
+	   NULL);
 
 
     menu_items[(int) TEXTSW_MENU_NORMALIZE_LINE] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG(SEL_LINE_AT_NUM),
 		  MENU_VALUE, TEXTSW_MENU_NORMALIZE_LINE,
 		  HELP_INFO("textsw:mselectline")
-		  0);
+		  NULL);
     menu_items[(int) TEXTSW_MENU_COUNT_TO_LINE] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG(WHAT_LINE_NUM),
 		  MENU_VALUE, TEXTSW_MENU_COUNT_TO_LINE,
     /* MENU_LINE_AFTER_ITEM,	MENU_HORIZONTAL_LINE, */
 		  HELP_INFO("textsw:mwhatline")
-		  0);
+		  NULL);
     menu_items[(int) TEXTSW_MENU_NORMALIZE_INSERTION] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG(SHOW_CARET_AT_TOP),
 		  MENU_VALUE, TEXTSW_MENU_NORMALIZE_INSERTION,
 		  HELP_INFO("textsw:mshowcaret")
-		  0);
-    break_mode_item = xv_create(NULL,
+		  NULL);
+    break_mode_item = xv_create((Xv_object)NULL,
 				MENUITEM,
 				MENU_STRING, 
 				XV_MSG(CHANGE_LINE_WRAP),
 				MENU_PULLRIGHT, break_mode,
 				HELP_INFO("textsw:mchangelinewrap")
-				0);
+				NULL);
 
     sub_menu[(int) TXTSW_VIEW_SUB_MENU] = xv_create(server, MENU,
 					    HELP_INFO("textsw:mdisplaycmds")
-						    0);
+						    NULL);
     xv_set(sub_menu[(int) TXTSW_VIEW_SUB_MENU],
 	   MENU_CLIENT_DATA, textsw,
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_NORMALIZE_LINE],
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_COUNT_TO_LINE],
 	MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_NORMALIZE_INSERTION],
 	   MENU_APPEND_ITEM, break_mode_item,
-	   0);
+	   NULL);
 
     menu_items[(int) TEXTSW_MENU_FIND_AND_REPLACE] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG(FIND_REPLACE),
 		  MENU_VALUE, TEXTSW_MENU_FIND_AND_REPLACE,
     /* MENU_LINE_AFTER_ITEM,	MENU_HORIZONTAL_LINE, */
 		  HELP_INFO("textsw:mfindreplace")
-		  0);
-    find_sel_cmds_item = xv_create(NULL,
+		  NULL);
+    find_sel_cmds_item = xv_create((Xv_object)NULL,
 				   MENUITEM,
 				   MENU_STRING, 
 				   XV_MSG(FIND_SELECTION),
 				   MENU_PULLRIGHT, find_sel_cmds,
 				   HELP_INFO("textsw:mfindselcmds")
-				   0);
+				   NULL);
     menu_items[(int) TEXTSW_MENU_SEL_MARK_TEXT] =
-	xv_create(NULL,
+	xv_create((Xv_object)NULL,
 		  MENUITEM,
 		  MENU_STRING, XV_MSG(FIND_MARKED_TEXT),
 		  MENU_VALUE, TEXTSW_MENU_SEL_MARK_TEXT,
 		  HELP_INFO("textsw:mfindtext")
-		  0);
-    select_field_cmds_item = xv_create(NULL,
+		  NULL);
+    select_field_cmds_item = xv_create((Xv_object)NULL,
 				       MENUITEM,
 				       MENU_STRING, 
 				       XV_MSG(REPLACE_FIELD),
 				       MENU_PULLRIGHT, select_field_cmds,
 				       HELP_INFO("textsw:mselfieldcmds")
-				       0);
+				       NULL);
 
     sub_menu[(int) TXTSW_FIND_SUB_MENU] = xv_create(server, MENU,
 					       HELP_INFO("textsw:mfindcmds")
-						    0);
+						    NULL);
     xv_set(sub_menu[(int) TXTSW_FIND_SUB_MENU],
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_FIND_AND_REPLACE],
 	   MENU_APPEND_ITEM, find_sel_cmds_item,
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_SEL_MARK_TEXT],
 	   MENU_APPEND_ITEM, select_field_cmds_item,
-	   0);
+	   NULL);
 
     sub_menu[(int) TXTSW_EXTRAS_SUB_MENU] = xv_create(server, MENU,
 					      HELP_INFO("textsw:extrasmenu")
-						      0);
+						      NULL);
 
 
     top_menu = xv_create(server, MENU,
 			 MENU_TITLE_ITEM, XV_MSG("Text Pane"),
 			 HELP_INFO("textsw:mtopmenu")
-			 0);
-    menu_items[(int) TEXTSW_MENU_FILE_CMDS] = xv_create(NULL,
+			 NULL);
+    menu_items[(int) TEXTSW_MENU_FILE_CMDS] = xv_create((Xv_object)NULL,
 							MENUITEM,
 							MENU_STRING, 
 						XV_MSG("File"),
 			MENU_PULLRIGHT, sub_menu[(int) TXTSW_FILE_SUB_MENU],
 					       HELP_INFO("textsw:mfilecmds")
-							0);
+							NULL);
 
 
-    menu_items[(int) TEXTSW_MENU_VIEW_CMDS] = xv_create(NULL,
+    menu_items[(int) TEXTSW_MENU_VIEW_CMDS] = xv_create((Xv_object)NULL,
 							MENUITEM,
 							MENU_STRING, 
 						XV_MSG("View"),
 			MENU_PULLRIGHT, sub_menu[(int) TXTSW_VIEW_SUB_MENU],
 					    HELP_INFO("textsw:mdisplaycmds")
-							0);
-    menu_items[(int) TEXTSW_MENU_EDIT_CMDS] = xv_create(NULL,
+							NULL);
+    menu_items[(int) TEXTSW_MENU_EDIT_CMDS] = xv_create((Xv_object)NULL,
 							MENUITEM,
 							MENU_STRING, 
 						XV_MSG("Edit"),
 			MENU_PULLRIGHT, sub_menu[(int) TXTSW_EDIT_SUB_MENU],
 					       HELP_INFO("textsw:meditcmds")
-							0);
-    menu_items[(int) TEXTSW_MENU_FIND_CMDS] = xv_create(NULL,
+							NULL);
+    menu_items[(int) TEXTSW_MENU_FIND_CMDS] = xv_create((Xv_object)NULL,
 							MENUITEM,
 							MENU_STRING, 
 						XV_MSG("Find"),
 			MENU_PULLRIGHT, sub_menu[(int) TXTSW_FIND_SUB_MENU],
 					       HELP_INFO("textsw:mfindcmds")
-							0);
-    menu_items[(int) TEXTSW_MENU_EXTRAS_CMDS] = xv_create(NULL,
+							NULL);
+    menu_items[(int) TEXTSW_MENU_EXTRAS_CMDS] = xv_create((Xv_object)NULL,
 							  MENUITEM,
 				      MENU_GEN_PROC, textsw_extras_gen_proc,
 		      MENU_PULLRIGHT, sub_menu[(int) TXTSW_EXTRAS_SUB_MENU],
@@ -572,7 +579,7 @@
 					 XV_MSG("Extras"),
 						   MENU_CLIENT_DATA, textsw,
 						 HELP_INFO("textsw:mextras")
-							  0);
+							  NULL);
 
     textsw_file_menu = (Menu *)menu_items[(int) TEXTSW_MENU_FILE_CMDS];
 
@@ -585,7 +592,7 @@
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_EDIT_CMDS],
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_FIND_CMDS],
 	   MENU_APPEND_ITEM, menu_items[(int) TEXTSW_MENU_EXTRAS_CMDS],
-	   0);
+	   NULL);
 
     for (index = (int) TEXTSW_MENU_LOAD;
 	 index <= (int) TEXTSW_MENU_RESET;
@@ -593,7 +600,7 @@
 	if (menu_items[index]) {
 	    menu_set(menu_items[index],
 		     MENU_ACTION, textsw_file_do_menu_action,
-		     0);
+		     NULL);
 	}
     }
     for (index = (int) TEXTSW_MENU_AGAIN;
@@ -602,7 +609,7 @@
 	if (menu_items[index]) {
 	    menu_set(menu_items[index],
 		     MENU_ACTION, textsw_edit_do_menu_action,
-		     0);
+		     NULL);
 	}
     }
     for (index = (int) TEXTSW_MENU_NORMALIZE_LINE;
@@ -611,7 +618,7 @@
 	if (menu_items[index]) {
 	    menu_set(menu_items[index],
 		     MENU_ACTION, textsw_view_do_menu_action,
-		     0);
+		     NULL);
 	}
     }
     for (index = (int) TEXTSW_MENU_FIND_AND_REPLACE;
@@ -620,7 +627,7 @@
 	if (menu_items[index]) {
 	    menu_set(menu_items[index],
 		     MENU_ACTION, textsw_find_do_menu_action,
-		     0);
+		     NULL);
 	}
     }
 
@@ -639,17 +646,17 @@
      * Sharing of the textsw menus may break menu accelerators.
      */
     xv_set(sub_menu[(int) TXTSW_FILE_SUB_MENU], 
-		XV_KEY_DATA, TEXTSW_HANDLE_KEY, textsw, NULL);
+		XV_KEY_DATA, (Attr_attribute)TEXTSW_HANDLE_KEY, textsw, NULL);
     xv_set(sub_menu[(int) TXTSW_EDIT_SUB_MENU], 
-		XV_KEY_DATA, TEXTSW_HANDLE_KEY, textsw, NULL);
+		XV_KEY_DATA, (Attr_attribute)TEXTSW_HANDLE_KEY, textsw, NULL);
     xv_set(undo_cmds,
-		XV_KEY_DATA, TEXTSW_HANDLE_KEY, textsw, NULL);
+		XV_KEY_DATA, (Attr_attribute)TEXTSW_HANDLE_KEY, textsw, NULL);
     xv_set(find_sel_cmds,
-		XV_KEY_DATA, TEXTSW_HANDLE_KEY, textsw, NULL);
+		XV_KEY_DATA, (Attr_attribute)TEXTSW_HANDLE_KEY, textsw, NULL);
 
     xv_set(sub_menu[(int) TXTSW_EDIT_SUB_MENU], MENU_GEN_PIN_WINDOW, frame, 
 	XV_MSG("Edit"),
-	   0);
+	   NULL);
 
     folio->sub_menu_table = sub_menu;
     folio->menu_table = menu_items;
@@ -670,25 +677,25 @@
 /* BUG: All this caching code was removed as a quick fix. It needs to be really
    fixed.
 
-	if (xv_get(screen, XV_KEY_DATA, TXT_MENU_KEY) != 0) {
-		folio->menu = (Menu) xv_get(screen, XV_KEY_DATA, TXT_MENU_KEY);
-		folio->menu_table = (Menu_item *) xv_get(screen, XV_KEY_DATA, TXT_MENU_ITEMS_KEY );
-		folio->sub_menu_table = (Menu *) xv_get(screen, XV_KEY_DATA, TXT_SUB_MENU_KEY);
+	if (xv_get(screen, XV_KEY_DATA, (Attr_attribute)TXT_MENU_KEY) != 0) {
+		folio->menu = (Menu) xv_get(screen, XV_KEY_DATA, (Attr_attribute)TXT_MENU_KEY);
+		folio->menu_table = (Menu_item *) xv_get(screen, XV_KEY_DATA, (Attr_attribute)TXT_MENU_ITEMS_KEY );
+		folio->sub_menu_table = (Menu *) xv_get(screen, XV_KEY_DATA, (Attr_attribute)TXT_SUB_MENU_KEY);
 	} else {
 
 */
                 (void) textsw_new_menu(folio);
 
-	    xv_set(screen, XV_KEY_DATA, TXT_MENU_KEY, folio->menu, 0);
-		xv_set(screen, XV_KEY_DATA, TXT_MENU_ITEMS_KEY, folio->menu_table, 0);
-		xv_set(screen, XV_KEY_DATA, TXT_SUB_MENU_KEY, folio->sub_menu_table, 0);
-		xv_set(screen, XV_KEY_DATA, TXT_MENU_REFCOUNT_KEY, 0, 0);
+	    xv_set(screen, XV_KEY_DATA, (Attr_attribute)TXT_MENU_KEY, folio->menu, NULL);
+		xv_set(screen, XV_KEY_DATA, (Attr_attribute)TXT_MENU_ITEMS_KEY, folio->menu_table, NULL);
+		xv_set(screen, XV_KEY_DATA, (Attr_attribute)TXT_SUB_MENU_KEY, folio->sub_menu_table, NULL);
+		xv_set(screen, XV_KEY_DATA, (Attr_attribute)TXT_MENU_REFCOUNT_KEY, 0L, NULL);
 /*
 	}
 */
-    ref = (int) xv_get(screen, XV_KEY_DATA, TXT_SUB_MENU_KEY);
+    ref = (int) xv_get(screen, XV_KEY_DATA, (Attr_attribute)TXT_SUB_MENU_KEY);
     ref++;
-    xv_set(screen, XV_KEY_DATA, TXT_MENU_REFCOUNT_KEY, ref, 0);
+    xv_set(screen, XV_KEY_DATA, (Attr_attribute)TXT_MENU_REFCOUNT_KEY, ref, NULL);
 
 
     return (folio->menu);
@@ -703,17 +710,17 @@
 	Xv_Screen screen = (Xv_Screen) xv_get(xv_get(textsw, WIN_FRAME),
 	XV_SCREEN);
 			 
-    if (folio->menu == (Menu) xv_get(screen, XV_KEY_DATA, TXT_MENU_KEY)) {    /* refcount == 1 ==> textsw is the only referencer */
-        ref = (int) xv_get(screen, XV_KEY_DATA, TXT_SUB_MENU_KEY);
+    if (folio->menu == (Menu) xv_get(screen, XV_KEY_DATA, (Attr_attribute)TXT_MENU_KEY)) {    /* refcount == 1 ==> textsw is the only referencer */
+        ref = (int) xv_get(screen, XV_KEY_DATA, (Attr_attribute)TXT_SUB_MENU_KEY);
         if (ref == 1) {
-            xv_set(screen, XV_KEY_DATA, TXT_MENU_KEY, 0, 0);
-            xv_set(screen, XV_KEY_DATA, TXT_MENU_ITEMS_KEY, 0, 0);
-            xv_set(screen, XV_KEY_DATA, TXT_MENU_REFCOUNT_KEY, 0, 0);
+            xv_set(screen, XV_KEY_DATA, (Attr_attribute)TXT_MENU_KEY, 0L, NULL);
+            xv_set(screen, XV_KEY_DATA, (Attr_attribute)TXT_MENU_ITEMS_KEY, 0L, NULL);
+            xv_set(screen, XV_KEY_DATA, (Attr_attribute)TXT_MENU_REFCOUNT_KEY, 0L, NULL);
         } else {
             (void) textsw_new_menu(folio);
-            xv_set(screen, XV_KEY_DATA, TXT_MENU_KEY, folio->menu, 0);
+            xv_set(screen, XV_KEY_DATA, (Attr_attribute)TXT_MENU_KEY, folio->menu, NULL);
             ref--;
-            xv_set(screen, XV_KEY_DATA, TXT_MENU_REFCOUNT_KEY, ref, 0);
+            xv_set(screen, XV_KEY_DATA, (Attr_attribute)TXT_MENU_REFCOUNT_KEY, ref, NULL);
         }
     }
     return (folio->menu);
@@ -730,10 +737,10 @@
     /* freeze caret so don't invalidate menu's bitmap under data */
     textsw_freeze_caret(folio);
 
-    xv_set(folio->menu, XV_KEY_DATA, TEXTSW_MENU_DATA_KEY,
-	   textsw_view, 0);
+    xv_set(folio->menu, XV_KEY_DATA, (Attr_attribute)TEXTSW_MENU_DATA_KEY,
+	   textsw_view, NULL);
 
-    menu_show(folio->menu, textsw_view, ie, 0);
+    menu_show(folio->menu, textsw_view, ie, NULL);
 
 }
 
@@ -743,7 +750,7 @@
     Xv_opaque	    result;
 {
     Textsw_view textsw_view = (Textsw_view) xv_get(menu,
-	XV_KEY_DATA, TEXTSW_MENU_DATA_KEY);
+	XV_KEY_DATA, (Attr_attribute)TEXTSW_MENU_DATA_KEY);
     Textsw_view_handle view = VIEW_ABS_TO_REP(textsw_view);
 
     textsw_thaw_caret(FOLIO_FOR_VIEW(view));
@@ -766,12 +773,12 @@
 	    /* if there is no menu parent, use menu's view */
 	    if (temp_menu == 0)
 		textsw_view = (Textsw_view) xv_get(menu, XV_KEY_DATA,
-			TEXTSW_MENU_DATA_KEY);
+			(Attr_attribute)TEXTSW_MENU_DATA_KEY);
 	    menu = temp_menu;
 
 	} else {
 	    textsw_view = (Textsw_view) xv_get(menu, XV_KEY_DATA,
-					       TEXTSW_MENU_DATA_KEY);
+					       (Attr_attribute)TEXTSW_MENU_DATA_KEY);
 	    break;
 	}
     }
@@ -796,9 +803,9 @@
 
     if AN_ERROR(textsw_view == 0)  {
 	if (event_action(ie) == ACTION_ACCELERATOR)  {
-            abstract = xv_get(cmd_menu, XV_KEY_DATA, TEXTSW_HANDLE_KEY);
+            abstract = xv_get(cmd_menu, XV_KEY_DATA, (Attr_attribute)TEXTSW_HANDLE_KEY);
             textsw = TEXTSW_PRIVATE(abstract);
-	    textsw_view = (Textsw_view)xv_get(abstract, OPENWIN_NTH_VIEW, 0);
+	    textsw_view = (Textsw_view)xv_get(abstract, OPENWIN_NTH_VIEW, NULL);
             view = VIEW_ABS_TO_REP(textsw_view);
 	}
 	else  {
@@ -823,20 +830,20 @@
 
       case TEXTSW_MENU_RESET:
 	textsw_empty_document(abstract, ie);
-	(void) xv_set( cmd_menu, MENU_DEFAULT, 1, 0 );
+	(void) xv_set( cmd_menu, MENU_DEFAULT, 1, NULL );
 	break;
 
       case TEXTSW_MENU_LOAD:{
 	    Frame           base_frame = (Frame) xv_get(abstract, WIN_FRAME);
 	    Frame           popup = (Frame) xv_get(base_frame, XV_KEY_DATA,
-						   LOAD_FILE_POPUP_KEY);
+						   (Attr_attribute)LOAD_FILE_POPUP_KEY);
 
 	    if (textsw->state & TXTSW_NO_LOAD) {
 		Frame	frame;
 
 		frame = FRAME_FROM_FOLIO_OR_VIEW(view);
                 text_notice = (Xv_Notice)xv_get(frame, 
-			XV_KEY_DATA, text_notice_key, NULL);
+			XV_KEY_DATA, (Attr_attribute)text_notice_key, NULL);
                 if (!text_notice)  {
                     text_notice = xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
@@ -844,13 +851,13 @@
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Illegal Operation.\n\
 Load File Has Been Disabled."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
                     xv_set(frame, 
-                        XV_KEY_DATA, text_notice_key, text_notice,
+                        XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                         NULL);
                 }
                 else  {
@@ -860,7 +867,7 @@
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Illegal Operation.\n\
 Load File Has Been Disabled."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE, 
                         NULL);
@@ -885,7 +892,7 @@
       case TEXTSW_MENU_STORE:{
 	    Frame           base_frame = (Frame) xv_get(abstract, WIN_FRAME);
 	    Frame           popup = (Frame) xv_get(base_frame, XV_KEY_DATA,
-						   STORE_FILE_POPUP_KEY);
+						   (Attr_attribute)STORE_FILE_POPUP_KEY);
 	    if (popup) {
 		(void) textsw_set_dir_str((int) TEXTSW_MENU_STORE);
 		(void) textsw_get_and_set_selection(popup, view, (int) TEXTSW_MENU_STORE);
@@ -898,7 +905,7 @@
       case TEXTSW_MENU_FILE_STUFF:{
 	    Frame           base_frame = (Frame) xv_get(abstract, WIN_FRAME);
 	    Frame           popup = (Frame) xv_get(base_frame, XV_KEY_DATA,
-						   FILE_STUFF_POPUP_KEY);
+						   (Attr_attribute)FILE_STUFF_POPUP_KEY);
 	    if (popup) {
 		(void) textsw_set_dir_str((int) TEXTSW_MENU_FILE_STUFF);
 		(void) textsw_get_and_set_selection(popup, view,
@@ -914,7 +921,7 @@
     }
 }
 
-static int
+static void
 textsw_edit_do_menu_action(cmd_menu, cmd_item)
     Menu            cmd_menu;
     Menu_item       cmd_item;
@@ -936,9 +943,9 @@
 
     if AN_ERROR(textsw_view == 0)  {
 	if (event_action(ie) == ACTION_ACCELERATOR)  {
-            abstract = xv_get(cmd_menu, XV_KEY_DATA, TEXTSW_HANDLE_KEY);
+            abstract = xv_get(cmd_menu, XV_KEY_DATA, (Attr_attribute)TEXTSW_HANDLE_KEY);
             textsw = TEXTSW_PRIVATE(abstract);
-	    textsw_view = (Textsw_view)xv_get(abstract, OPENWIN_NTH_VIEW, 0);
+	    textsw_view = (Textsw_view)xv_get(abstract, OPENWIN_NTH_VIEW, NULL);
             view = VIEW_ABS_TO_REP(textsw_view);
 	}
 	else  {
@@ -980,7 +987,7 @@
 
 	    frame = (Frame)xv_get(abstract, WIN_FRAME);
             text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
 				NULL);
             if (!text_notice)  {
                 text_notice = xv_create(frame, NOTICE,
@@ -989,7 +996,7 @@
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Undo All Edits will discard unsaved edits.\n\
 Please confirm."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, 
 			    XV_MSG("Confirm, discard edits"),
                         NOTICE_BUTTON_NO, XV_MSG("Cancel"),
@@ -998,10 +1005,10 @@
 			*/
 		        NOTICE_STATUS, &result,
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
                 xv_set(frame, 
-                        XV_KEY_DATA, text_notice_key, text_notice,
+                        XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                         NULL);
             }
             else  {
@@ -1011,7 +1018,7 @@
                     NOTICE_MESSAGE_STRINGS,
 		    XV_MSG("Undo All Edits will discard unsaved edits.\n\
 Please confirm."),
-                    0,
+                    NULL,
                     NOTICE_BUTTON_YES, 
 			XV_MSG("Confirm, discard edits"),
                     NOTICE_BUTTON_NO, XV_MSG("Cancel"),
@@ -1039,7 +1046,7 @@
 		frame = (Frame)xv_get(VIEW_REP_TO_ABS(view), WIN_FRAME);
 
                 text_notice = (Xv_Notice)xv_get(frame, 
-			        XV_KEY_DATA, text_notice_key, NULL);
+			        XV_KEY_DATA, (Attr_attribute)text_notice_key, NULL);
                 if (!text_notice)  {
                     text_notice = xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
@@ -1047,7 +1054,7 @@
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Please make a primary selection in this textsw first.\n\
 Press \"Continue\" to proceed."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
 			NOTICE_BUSY_FRAMES,
@@ -1056,7 +1063,7 @@
                         NULL);
 
                     xv_set(frame, 
-                        XV_KEY_DATA, text_notice_key, text_notice,
+                        XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                         NULL);
                 }
                 else  {
@@ -1066,7 +1073,7 @@
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Please make a primary selection in this textsw first.\n\
 Press \"Continue\" to proceed."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE, 
 			NOTICE_BUSY_FRAMES,
@@ -1083,7 +1090,7 @@
 	    else {
                 frame = (Frame)xv_get(VIEW_REP_TO_ABS(view), WIN_FRAME);
                 text_notice = (Xv_Notice)xv_get(frame, 
-			        XV_KEY_DATA, text_notice_key, NULL);
+			        XV_KEY_DATA, (Attr_attribute)text_notice_key, NULL);
                 if (!text_notice)  {
                     text_notice = xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
@@ -1091,17 +1098,17 @@
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Please make a primary selection first.\n\
 Press \"Continue\" to proceed."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
 			NOTICE_BUSY_FRAMES,
 				menu_pinned ? menu_cmd_frame : NULL,
 			NULL,
 			NULL,
-                        0);
+                        NULL);
 
                     xv_set(frame, 
-                        XV_KEY_DATA, text_notice_key, text_notice,
+                        XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                         NULL);
                 }
                 else  {
@@ -1111,7 +1118,7 @@
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Please make a primary selection first.\n\
 Press \"Continue\" to proceed."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE, 
 			NOTICE_BUSY_FRAMES,
@@ -1131,7 +1138,7 @@
     }
 }
 
-static int
+static void
 textsw_view_do_menu_action(cmd_menu, cmd_item)
     Menu            cmd_menu;
     Menu_item       cmd_item;
@@ -1141,8 +1148,7 @@
     Textsw_view     textsw_view = textsw_from_menu(cmd_menu);
     register Textsw_view_handle view;
     register Textsw_folio textsw;
-    Textsw_menu_cmd cmd = (Textsw_menu_cmd)
-    menu_get(cmd_item, MENU_VALUE, 0);
+    Textsw_menu_cmd cmd = (Textsw_menu_cmd) menu_get(cmd_item, MENU_VALUE, 0);
     Es_index        first, last_plus_one;
     Xv_Notice	    text_notice;
     Frame	    frame;
@@ -1160,19 +1166,19 @@
       case TEXTSW_MENU_CLIP_LINES:
 	xv_set(FOLIO_REP_TO_ABS(FOLIO_FOR_VIEW(view)),
 	       TEXTSW_LINE_BREAK_ACTION, TEXTSW_CLIP,
-	       0);
+	       NULL);
 	break;
 
       case TEXTSW_MENU_WRAP_LINES_AT_CHAR:
 	xv_set(FOLIO_REP_TO_ABS(FOLIO_FOR_VIEW(view)),
 	       TEXTSW_LINE_BREAK_ACTION, TEXTSW_WRAP_AT_CHAR,
-	       0);
+	       NULL);
 	break;
 
       case TEXTSW_MENU_WRAP_LINES_AT_WORD:
 	xv_set(FOLIO_REP_TO_ABS(FOLIO_FOR_VIEW(view)),
 	       TEXTSW_LINE_BREAK_ACTION, TEXTSW_WRAP_AT_WORD,
-	       0);
+	       NULL);
 	break;
 
       case TEXTSW_MENU_NORMALIZE_INSERTION:{
@@ -1191,7 +1197,7 @@
       case TEXTSW_MENU_NORMALIZE_LINE:{
 	    Frame           base_frame = (Frame) xv_get(abstract, WIN_FRAME);
 	    Frame           popup = (Frame) xv_get(base_frame, XV_KEY_DATA,
-						   SEL_LINE_POPUP_KEY);
+						   (Attr_attribute)SEL_LINE_POPUP_KEY);
 	    if (popup) {
 		(void) textsw_get_and_set_selection(popup, view,
 					  (int) TEXTSW_MENU_NORMALIZE_LINE);
@@ -1208,7 +1214,7 @@
 	    if (!textsw_is_seln_nonzero(textsw, EV_SEL_PRIMARY)) {
                 frame = (Frame)xv_get(VIEW_REP_TO_ABS(view), WIN_FRAME);
                 text_notice = (Xv_Notice)xv_get(frame, 
-			        XV_KEY_DATA, text_notice_key, NULL);
+			        XV_KEY_DATA, (Attr_attribute)text_notice_key, NULL);
                 if (!text_notice)  {
                     text_notice = xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
@@ -1216,13 +1222,13 @@
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Please make a primary selection first.\n\
 Press \"Continue\" to proceed."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
                     xv_set(frame, 
-                        XV_KEY_DATA, text_notice_key, text_notice,
+                        XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                         NULL);
                 }
                 else  {
@@ -1232,7 +1238,7 @@
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Please make a primary selection first.\n\
 Press \"Continue\" to proceed."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE, 
                         NULL);
@@ -1250,7 +1256,7 @@
 
 	    frame = (Frame)xv_get(abstract, WIN_FRAME);
             text_notice = (Xv_Notice)xv_get(frame, 
-				XV_KEY_DATA, text_notice_key, 
+				XV_KEY_DATA, (Attr_attribute)text_notice_key, 
 				NULL);
             if (!text_notice)  {
                 text_notice = xv_create(frame, NOTICE,
@@ -1259,14 +1265,14 @@
                                 NOTICE_MESSAGE_STRINGS,
                                     msg,
                                     XV_MSG("Press \"Continue\" to proceed."),
-                                0,
+                                NULL,
                                 NOTICE_BUTTON_YES, 
 				    XV_MSG("Continue"),
                                 XV_SHOW, TRUE,
-                                0);
+                                NULL);
 
                 xv_set(frame, 
-                    XV_KEY_DATA, text_notice_key, text_notice,
+                    XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                     NULL);
             }
             else  {
@@ -1276,7 +1282,7 @@
                     NOTICE_MESSAGE_STRINGS,
                         msg,
                         XV_MSG("Press \"Continue\" to proceed."),
-                    0,
+                    NULL,
                     NOTICE_BUTTON_YES, XV_MSG("Continue"),
                     XV_SHOW, TRUE, 
                     NULL);
@@ -1289,7 +1295,7 @@
 	break;
     }
 }
-static int
+static void
 textsw_find_do_menu_action(cmd_menu, cmd_item)
     Menu            cmd_menu;
     Menu_item       cmd_item;
@@ -1312,9 +1318,9 @@
 
     if AN_ERROR(textsw_view == 0)  {
 	if (event_action(ie) == ACTION_ACCELERATOR)  {
-            abstract = xv_get(cmd_menu, XV_KEY_DATA, TEXTSW_HANDLE_KEY);
+            abstract = xv_get(cmd_menu, XV_KEY_DATA, (Attr_attribute)TEXTSW_HANDLE_KEY);
             textsw = TEXTSW_PRIVATE(abstract);
-	    textsw_view = (Textsw_view)xv_get(abstract, OPENWIN_NTH_VIEW, 0);
+	    textsw_view = (Textsw_view)xv_get(abstract, OPENWIN_NTH_VIEW, NULL);
             view = VIEW_ABS_TO_REP(textsw_view);
 	}
 	else  {
@@ -1350,7 +1356,7 @@
 	break;
 
       case TEXTSW_MENU_SEL_ENCLOSE_FIELD:{
-	    int             first, last_plus_one;
+	    Es_index        first, last_plus_one;
 
 	    first = last_plus_one = EV_GET_INSERT(textsw->views);
 	    (void) textsw_match_field_and_normalize(view, &first, &last_plus_one,
@@ -1382,10 +1388,10 @@
       case TEXTSW_MENU_SEL_MARK_TEXT:{
 	    Frame           base_frame = (Frame) xv_get(abstract, WIN_FRAME);
 	    Frame           popup = (Frame) xv_get(base_frame, XV_KEY_DATA,
-						   MATCH_POPUP_KEY);
+						   (Attr_attribute)MATCH_POPUP_KEY);
 	    if (popup) {
 		(void) xv_set(popup, XV_SHOW, TRUE,
-			      WIN_CLIENT_DATA, view, 0);
+			      WIN_CLIENT_DATA, view, NULL);
 	    } else {
 		(void) textsw_create_popup_frame(view,
 					   (int) TEXTSW_MENU_SEL_MARK_TEXT);
@@ -1396,7 +1402,7 @@
       case TEXTSW_MENU_FIND_AND_REPLACE:{
 	    Frame           base_frame = (Frame) xv_get(abstract, WIN_FRAME);
 	    Frame           popup = (Frame) xv_get(base_frame, XV_KEY_DATA,
-						   SEARCH_POPUP_KEY);
+						   (Attr_attribute)SEARCH_POPUP_KEY);
 	    if (popup) {
 		(void) textsw_get_and_set_selection(popup, view,
 					(int) TEXTSW_MENU_FIND_AND_REPLACE);
@@ -1422,11 +1428,11 @@
 	if (height == WIN_EXTEND_TO_EDGE)
 	    xv_set(VIEW_REP_TO_ABS(view),
 		   WIN_DESIRED_HEIGHT, WIN_EXTEND_TO_EDGE,
-		   0);
+		   NULL);
 	if (width == WIN_EXTEND_TO_EDGE)
 	    xv_set(VIEW_REP_TO_ABS(view),
 		   WIN_DESIRED_WIDTH, WIN_EXTEND_TO_EDGE,
-		   0);
+		   NULL);
     }
 }
 
@@ -1453,7 +1459,7 @@
 textsw_set_file_menu_default_to_savefile()
 { 
   if( textsw_file_menu != NULL )
-	(void) xv_set( (Xv_opaque)textsw_file_menu, MENU_DEFAULT, 2, 0 );
+	(void) xv_set( (Xv_opaque)textsw_file_menu, MENU_DEFAULT, 2L, NULL);
   else
          set_def = TRUE;
 }
@@ -1466,7 +1472,7 @@
 {
     Frame           base_frame = (Frame) xv_get(abstract, WIN_FRAME);
     Frame           popup      = (Frame) xv_get(base_frame, XV_KEY_DATA,
-						    SAVE_FILE_POPUP_KEY);
+						    (Attr_attribute)SAVE_FILE_POPUP_KEY);
     CHAR           *name; 
     Xv_Notice	    text_notice;
 
@@ -1485,7 +1491,7 @@
 
             frame = FRAME_FROM_FOLIO_OR_VIEW(view);
             text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                                 NULL);
 
             if (!text_notice)  {
@@ -1494,12 +1500,12 @@
                                     NOTICE_BLOCK_THREAD, TRUE,
                                     NOTICE_MESSAGE_STRINGS,
                                         XV_MSG("Unable to Save Current File."),
-                                    0,
+                                    NULL,
                                     NOTICE_BUTTON_YES, XV_MSG("Continue"),
                                     XV_SHOW, TRUE,
-                                    0);
+                                    NULL);
                 xv_set(frame, 
-                    XV_KEY_DATA, text_notice_key, text_notice,
+                    XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                     NULL);
             }
             else  {
@@ -1508,7 +1514,7 @@
                         NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
                             XV_MSG("Unable to Save Current File."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE, 
                         NULL);
@@ -1519,7 +1525,7 @@
         Frame           base_frame = FRAME_FROM_FOLIO_OR_VIEW(view);
 
         text_notice = (Xv_Notice)xv_get(base_frame, 
-                            XV_KEY_DATA, text_notice_key, 
+                            XV_KEY_DATA, (Attr_attribute)text_notice_key, 
                             NULL);
 
         if (!text_notice)  {
@@ -1529,13 +1535,13 @@
                         NOTICE_MESSAGE_STRINGS,
                             XV_MSG("File has not been modified.\n\
 Save File operation ignored."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
             xv_set(base_frame, 
-                XV_KEY_DATA, text_notice_key, text_notice,
+                XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                 NULL);
         }
         else  {
@@ -1545,7 +1551,7 @@
                 NOTICE_MESSAGE_STRINGS,
                     XV_MSG("File has not been modified.\n\
 Save File operation ignored."),
-                0,
+                NULL,
                 NOTICE_BUTTON_YES, XV_MSG("Continue"),
                 XV_SHOW, TRUE, 
                 NULL);
@@ -1572,7 +1578,7 @@
                    
 final: 
 
-    popup = (Frame) xv_get(base_frame, XV_KEY_DATA, SAVE_FILE_POPUP_KEY);
+    popup = (Frame) xv_get(base_frame, XV_KEY_DATA, (Attr_attribute)SAVE_FILE_POPUP_KEY);
     if (popup){
         (void) textsw_get_and_set_selection(popup, view, (int) TEXTSW_MENU_SAVE);
     }
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_move.c xview-3.2p1.4/lib/libxview/textsw/txt_move.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_move.c	1993-06-29 07:17:47.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/txt_move.c	2013-01-07 12:50:56.479154000 +0100
@@ -35,21 +35,23 @@
 #include <xview/pixwin.h>
 #include <xview/dragdrop.h>
 #include <xview/notice.h>
-#ifdef SVR4 
+#include <xview/textsw.h>
+#if defined(SVR4) || defined(__linux__)
 #include <stdlib.h> 
 #endif /* SVR4 */
+#include <string.h>
 
 #ifdef OW_I18N		/* for reducing #ifdef OW_I18N */
 #define TEXTSW_CONTENTS_I18N		TEXTSW_CONTENTS_WCS
 #define textsw_insert_i18n		textsw_insert_wcs
 #define textsw_set_selection_i18n	textsw_set_selection_wcs
-#define textsw_delete_i18n		textsw_delete_wcs;
+#define textsw_delete_i18n		textsw_delete_wcs
 #define TEXTSW_INSERTION_POINT_I18N	TEXTSW_INSERTION_POINT_WC
 #else
 #define TEXTSW_CONTENTS_I18N		TEXTSW_CONTENTS
 #define textsw_insert_i18n		textsw_insert
 #define textsw_set_selection_i18n	textsw_set_selection
-#define textsw_delete_i18n		textsw_delete;
+#define textsw_delete_i18n		textsw_delete
 #define TEXTSW_INSERTION_POINT_I18N	TEXTSW_INSERTION_POINT
 #endif /* OW_I18N */
 
@@ -83,7 +85,7 @@
 textsw_save_selection(folio)
     Textsw_folio    folio;
 {
-    static          repeat_call;
+    static int      repeat_call;
 
     if (!repeat_call) {
 	(void) ev_get_selection(folio->views,
@@ -111,7 +113,7 @@
     /*
      * First, pre-process the primary selection.
      */
-    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, 0);
+    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, NULL);
     ro_bdry = textsw_read_only_boundary_is_at(folio);
 
     is_pending_delete = (EV_SEL_PENDING_DELETE & ev_get_selection(
@@ -210,7 +212,7 @@
     /*
      * Fourth, insert the text being gotten.
      */
-    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, 0);
+    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, NULL);
     EV_SET_INSERT(chain, textsw_get_saved_insert(folio), first);
     if (lower_context != EV_NO_CONTEXT) {
 	ev_check_insert_visibility(chain);
@@ -224,6 +226,9 @@
 
     TEXTSW_DO_INSERT_MAKES_VISIBLE(view);
     folio->track_state &= ~TXTSW_TRACK_QUICK_MOVE;
+
+    /* FIXME: what should really be returned? */
+    return XV_OK;
 }
 
 Pkg_private int
@@ -255,6 +260,7 @@
     textsw_checkpoint_undo(VIEW_REP_TO_ABS(view),
 			   (caddr_t) TEXTSW_INFINITY - 1);
     ASSUME(allock());
+    /* FIXME: textsw_do_move() is really returning void */
     result = textsw_do_move(view, selection_is_local);
     ASSUME(allock());
     textsw_checkpoint_undo(VIEW_REP_TO_ABS(view),
@@ -343,8 +349,8 @@
     screen = xv_get(VIEW_REP_TO_ABS(view), XV_SCREEN);
     server = xv_get(screen, SCREEN_SERVER);
     main_cursor = (Xv_Cursor) xv_get(server,
-				     XV_KEY_DATA, CURSOR_BASIC_PTR);
-    xv_set(VIEW_REP_TO_ABS(view), WIN_CURSOR, main_cursor, 0);
+				     XV_KEY_DATA, (Attr_attribute)CURSOR_BASIC_PTR);
+    xv_set(VIEW_REP_TO_ABS(view), WIN_CURSOR, main_cursor, NULL);
 }
 
 /*
@@ -358,7 +364,7 @@
  * all input events go to track move(). On button up, xv_do_move() is called...
  * resets track state.
  */
-Pkg_private int
+Pkg_private void
 xv_do_move(view, ie)
     Textsw_view_handle view;
     register Event *ie;
@@ -409,7 +415,7 @@
 		pos--;
 	}
     }
-    xv_set(textsw, TEXTSW_INSERTION_POINT_I18N, pos, 0);
+    xv_set(textsw, TEXTSW_INSERTION_POINT_I18N, pos, NULL);
 
 
     /* add leading/trailing space to selection if needed for new location */
@@ -438,7 +444,7 @@
 	    textsw_set_selection_i18n(textsw,
 				      pos, pos + sel_len - 1, EV_SEL_PRIMARY);
 	    /* correct insertion point */
-	    xv_set(textsw, TEXTSW_INSERTION_POINT_I18N, pos + sel_len - 1, 0);
+	    xv_set(textsw, TEXTSW_INSERTION_POINT_I18N, pos + sel_len - 1, NULL);
 	    return;
 	}
     }
@@ -465,7 +471,7 @@
     }
 }
 
-Pkg_private int
+Pkg_private void
 textsw_do_duplicate(view, ie)
     Textsw_view_handle view;
     register Event *ie;
@@ -478,7 +484,7 @@
 
     pos = ev_resolve_xy(view->e_view, ie->ie_locx, ie->ie_locy);
     position = textsw_do_balance_beam(view, ie->ie_locx, ie->ie_locy, pos, pos + 1);
-    xv_set(textsw, TEXTSW_INSERTION_POINT_I18N, position, 0);
+    xv_set(textsw, TEXTSW_INSERTION_POINT_I18N, position, NULL);
 
     xv_get(textsw, TEXTSW_CONTENTS_I18N, position, buf, 1);
     if (buf[0] == ' ') {
@@ -505,7 +511,7 @@
 	    textsw_set_selection_i18n(textsw, position,
 				position + STRLEN(buf) - 1, EV_SEL_PRIMARY);
 	    xv_set(textsw, TEXTSW_INSERTION_POINT_I18N,
-		   position + STRLEN(buf) - 1, 0);
+		   position + STRLEN(buf) - 1, NULL);
 	    return;
 	}
     }
@@ -670,13 +676,13 @@
 
 #ifdef OW_I18N
     buffer_mb = _xv_wcstombsdup(buffer);
-    xv_set(dnd, XV_KEY_DATA, dnd_data_key, buffer_mb, NULL);
+    xv_set(dnd, XV_KEY_DATA, (Attr_attribute)dnd_data_key, buffer_mb, NULL);
     if (buffer)
 	free((char *)buffer);
 #else
-    xv_set(dnd, XV_KEY_DATA, dnd_data_key, buffer, NULL);
+    xv_set(dnd, XV_KEY_DATA, (Attr_attribute)dnd_data_key, buffer, NULL);
 #endif
-    xv_set(dnd, XV_KEY_DATA, dnd_view_key, view, NULL);
+    xv_set(dnd, XV_KEY_DATA, (Attr_attribute)dnd_view_key, view, NULL);
 
     if ((dnd_status = dnd_send_drop(dnd)) != XV_OK) {
        if (dnd_status != DND_ABORTED)
@@ -698,16 +704,16 @@
 {
     Xv_Server server = XV_SERVER_FROM_WINDOW(xv_get((Xv_opaque)dnd, XV_OWNER));
     Textsw_view_handle 	 view = (Textsw_view_handle)xv_get(dnd, XV_KEY_DATA,
-							   dnd_view_key);
+							   (Attr_attribute)dnd_view_key);
     Textsw_folio        folio = FOLIO_FOR_VIEW(view);
 
     if (*type == (Atom)xv_get(server, SERVER_ATOM, "_SUN_DRAGDROP_DONE")) {
-	xv_set(dnd, SEL_OWN, False, 0);
-	xv_free((char *)xv_get(dnd, XV_KEY_DATA, dnd_data_key)); 
+	xv_set(dnd, SEL_OWN, False, NULL);
+	xv_free((char *)xv_get(dnd, XV_KEY_DATA, (Attr_attribute)dnd_data_key)); 
 	xv_destroy_safe(dnd);
 	*format = 32;
 	*length = 0;
-	*data = NULL;
+	*data = XV_NULL;
         *type = (Atom)xv_get(server, SERVER_ATOM, "NULL");
         return(True);
     } else if (*type == (Atom)xv_get(server, SERVER_ATOM, "DELETE")) {
@@ -716,7 +722,7 @@
                          */
         Es_index  first, last_plus_one, ro_bound;
 
-	view = (Textsw_view_handle)xv_get(dnd, XV_KEY_DATA, dnd_view_key);
+	view = (Textsw_view_handle)xv_get(dnd, XV_KEY_DATA, (Attr_attribute)dnd_view_key);
 	folio = FOLIO_FOR_VIEW(view);
         (void)ev_get_selection(folio->views, &first, &last_plus_one,
 			       EV_SEL_PRIMARY);
@@ -732,7 +738,7 @@
 	}
         *format = 32;
         *length = 0;
-        *data = NULL;
+        *data = XV_NULL;
         *type = (Atom)xv_get(server, SERVER_ATOM, "NULL");
         return(True);
     } else if (*type == (Atom)xv_get(server, SERVER_ATOM,
@@ -745,7 +751,7 @@
 	return(True);
     } else if (*type == XA_STRING || *type == (Atom)xv_get(server, SERVER_ATOM,
 								    "TEXT")) {
-	char *buf = (char *)xv_get(dnd, XV_KEY_DATA, dnd_data_key);
+	char *buf = (char *)xv_get(dnd, XV_KEY_DATA, (Attr_attribute)dnd_data_key);
 	*format = 8;
 	*length = strlen(buf);
 	*data = (Xv_opaque)buf;
@@ -777,7 +783,7 @@
  * ACTION_DRAG_MOVE is a result of XSendEvent called by the subwindow that
  * originally sees the button-down that starts the drag move
  */
-Pkg_private
+Pkg_private void
 textsw_do_remote_drag_copy_move(view, ie, is_copy)
     register Textsw_view_handle  view;
     Event          		*ie;
@@ -797,13 +803,13 @@
 				 index,
 				 temp;
     void	    		 DndReplyProc();
-    struct textsw_context  	 context;
+    /*struct textsw_context  	 context;*/
 
     is_read_only = NULL;
     /*
      * First, process insertion point .
      */
-    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, 0);
+    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, NULL);
     ro_bdry = textsw_read_only_boundary_is_at(folio);
     pos = ev_resolve_xy(view->e_view,
 			event_x(ie), event_y(ie));
@@ -862,7 +868,7 @@
 
 	if (pos >= first && pos < last_plus_one) {
 	    dnd_done(sel);
-    	    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, 0);
+    	    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, NULL);
 	    return;
 	}
     }
@@ -876,7 +882,7 @@
 	}
     }
 	/* Ask for the selection to be converted into a string. */
-    xv_set(sel, SEL_TYPE, XA_STRING, 0);
+    xv_set(sel, SEL_TYPE, XA_STRING, NULL);
     string = (char *)xv_get(sel, SEL_DATA, &length, &format);
     if (length == SEL_ERROR) {
 	if (string)
@@ -887,25 +893,25 @@
 	return;
     }
 
-    string = (char *)xv_get(sel, XV_KEY_DATA, dnd_data_key);
+    string = (char *)xv_get(sel, XV_KEY_DATA, (Attr_attribute)dnd_data_key);
 	
-    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, 0);
+    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, NULL);
     EV_SET_INSERT(folio->views, pos, temp);
 
 #ifdef OW_I18N
     string_wc = _xv_mbstowcsdup(string);
-    index = textsw_do_input(view, string_wc, (long int)STRLEN(string_wc),
+    index = textsw_do_input(view, string_wc, (long)STRLEN(string_wc),
 			    TXTSW_UPDATE_SCROLLBAR);
     if (string_wc)
 	free((char *)string_wc);
 #else
-    index = textsw_do_input(view, (char *)string, (long int)strlen(string),
+    index = textsw_do_input(view, (char *)string, (long)strlen(string),
 			    TXTSW_UPDATE_SCROLLBAR);
 #endif
         /* If this is a move operation and we were able to insert the text,
 	 * ask the source to delete the selection.*/
     if (!is_copy && !*is_read_only && index) {
-	xv_set(sel, SEL_TYPE_NAME, "DELETE", 0);
+	xv_set(sel, SEL_TYPE_NAME, "DELETE", NULL);
 	(void)xv_get(sel, SEL_DATA, &length, &format);
     }
 
@@ -940,7 +946,7 @@
 	if (type == (Atom)xv_get(server, SERVER_ATOM, "INCR")) {
 	    incr = True;
 	} else if (!incr) {
-	    xv_set(sel, XV_KEY_DATA, dnd_data_key, value, NULL);
+	    xv_set(sel, XV_KEY_DATA, (Attr_attribute)dnd_data_key, value, NULL);
 	    str_size = 0;
 	} else if (length) {
 	    if (!str_size)
@@ -950,7 +956,7 @@
 	    strncpy(string + str_size, (char *)value, length);
 	    str_size += length;
 	} else {
-	    xv_set(sel, XV_KEY_DATA, dnd_data_key, string, NULL);
+	    xv_set(sel, XV_KEY_DATA, (Attr_attribute)dnd_data_key, string, NULL);
 	    incr = str_size = 0;
 	}
     } 
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_once.c xview-3.2p1.4/lib/libxview/textsw/txt_once.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_once.c	2013-01-07 12:36:20.847914000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/txt_once.c	2013-01-07 15:26:00.981924000 +0100
@@ -17,6 +17,7 @@
 #include <xview_private/primal.h>
 #include <xview/textsw.h>
 #include <xview_private/txt_impl.h>
+#include <xview_private/ev_impl.h>
 #include <fcntl.h>
 #include <signal.h>
 #include <pixrect/pr_util.h>
@@ -70,6 +71,9 @@
 Xv_private void textsw_unregister_view();
 Xv_private void textsw_register_view();
 
+Menu textsw_menu_init();
+Pixfont * xv_pf_open();
+
 Textsw_folio    textsw_head;	/* = 0; implicit for cc -A-R */
 extern int termsw_creation_flag;
 
@@ -181,7 +185,7 @@
 	  case EV_ACTION_PAINT:
 	    if (view && (folio->notify_level & TEXTSW_NOTIFY_PAINT)) {
 		rect = (Rect *) attrs[1];
-		textsw_notify(view, TEXTSW_ACTION_PAINTED, rect, 0);
+		textsw_notify(view, TEXTSW_ACTION_PAINTED, rect, NULL);
 	    }
 	    break;
 	  case EV_ACTION_SCROLL:
@@ -190,7 +194,7 @@
 		to_rect = (Rect *) attrs[2];
 		textsw_notify(view,
 			      TEXTSW_ACTION_SCROLLED, from_rect, to_rect,
-			      0);
+			      NULL);
 	    }
 	    break;
 	  default:
@@ -210,7 +214,7 @@
     Xv_opaque       font = NULL;
     char	   *name;
     Xv_opaque       textsw_public = TEXTSW_PUBLIC(textsw);
-    int             is_client_pane = xv_get(textsw_public,
+    int             is_client_pane = (int)xv_get(textsw_public,
 					    WIN_IS_CLIENT_PANE);
 
     def_str = defaults_get_string("keyboard.deleteChar",
@@ -325,13 +329,13 @@
 	    font = (Xv_opaque) xv_find(textsw_public, FONT,
 			FONT_FAMILY, FONT_FAMILY_DEFAULT_FIXEDWIDTH,
 			FONT_SCALE, scale,
-			0);
+			NULL);
 	} else {
 	    size = (int) xv_get(parent_font, FONT_SIZE);
 	    font = (Xv_opaque) xv_find(textsw_public, FONT,
 			FONT_FAMILY, FONT_FAMILY_DEFAULT_FIXEDWIDTH,
 			FONT_SIZE, (size > 0) ? size : FONT_SIZE_DEFAULT,
-			0);
+			NULL);
 	}
  
 	if (!font)
@@ -355,21 +359,21 @@
 	int             scale, size;
 
 	if (!font) {
-	    parent_font = xv_get(textsw_public, WIN_FONT);
-	    scale = xv_get(parent_font, FONT_SCALE);
+	    parent_font = (Xv_opaque)xv_get(textsw_public, WIN_FONT);
+	    scale = (int)xv_get(parent_font, FONT_SCALE);
 	    if (scale > 0) {
 		font = (Xv_opaque) xv_find(textsw_public, FONT,
 				FONT_FAMILY, FONT_FAMILY_DEFAULT_FIXEDWIDTH,
 		/* FONT_FAMILY,        FONT_FAMILY_SCREEN, */
 		       FONT_SCALE, (scale > 0) ? scale : FONT_SCALE_DEFAULT,
-					   0);
+					   NULL);
 	    } else {
-		size = xv_get(parent_font, FONT_SIZE);
+		size = (int)xv_get(parent_font, FONT_SIZE);
 		font = (Xv_opaque) xv_find(textsw_public, FONT,
 				FONT_FAMILY, FONT_FAMILY_DEFAULT_FIXEDWIDTH,
 		/* FONT_FAMILY,        FONT_FAMILY_SCREEN, */
 			   FONT_SIZE, (size > 0) ? size : FONT_SIZE_DEFAULT,
-					   0);
+					   NULL);
 	    }
 	    if (font) {
 		attr = XV_FONT;
@@ -380,20 +384,20 @@
     } else {
 	if (!font) {
 	    Xv_opaque       parent_font = xv_get(textsw_public, WIN_FONT);
-	    int             scale = xv_get(parent_font, FONT_SCALE);
+	    int             scale = (int)xv_get(parent_font, FONT_SCALE);
 
 	    if (scale > 0) {
 	        font = (Xv_opaque) xv_find(textsw_public, FONT,
 				FONT_FAMILY, FONT_FAMILY_DEFAULT_FIXEDWIDTH,
 	    /* FONT_FAMILY,        FONT_FAMILY_SCREEN, */
 		       FONT_SCALE, (scale > 0) ? scale : FONT_SCALE_DEFAULT,
-				       0);
+				       NULL);
 	    } else {
-	        int             size = xv_get(parent_font, FONT_SIZE);
+	        int             size = (int)xv_get(parent_font, FONT_SIZE);
 	        font = (Xv_opaque) xv_find(textsw_public, FONT,
 				FONT_FAMILY, FONT_FAMILY_DEFAULT_FIXEDWIDTH,
 	    /* FONT_FAMILY,        FONT_FAMILY_SCREEN, */
-		       FONT_SIZE, (size > 0) ? size : FONT_SIZE_DEFAULT, 0);
+		       FONT_SIZE, (size > 0) ? size : FONT_SIZE_DEFAULT, NULL);
 	    }
 	}
 	if (font) {
@@ -437,7 +441,7 @@
     Xv_Window       child;
     Window_layout_op op;
 /* Alpha compatibility, mbuck@debian.org */
-#if defined(__alpha)
+#if defined(__alpha) || defined(__x86_64__) || defined(__ia64__) || defined(_XV_API_BROKEN_64BIT)
     unsigned long   d1, d2, d3, d4, d5;
 #else
     int             d1, d2, d3, d4, d5;
@@ -478,7 +482,7 @@
 	Xv_object       screen = xv_get(textsw, XV_SCREEN);
 	Xv_object       server = xv_get(screen, SCREEN_SERVER);
 	Xv_Cursor       cursor = (Xv_Cursor) xv_get(server, XV_KEY_DATA,
-						    cursor_type);
+						    (Attr_attribute)cursor_type);
 
 	/*
 	 * BUG: Should print out error message
@@ -486,7 +490,7 @@
 	if (cursor == NULL)
 	    return;
 	FORALL_TEXT_VIEWS(folio, view) {
-	    xv_set(VIEW_REP_TO_ABS(view), WIN_CURSOR, cursor, 0);
+	    xv_set(VIEW_REP_TO_ABS(view), WIN_CURSOR, cursor, NULL);
 	    view->cursor_type = cursor_type;
 	}
     }
@@ -512,7 +516,7 @@
 		  WIN_BIT_GRAVITY, ForgetGravity,
 		  XV_FONT, font,
 		  WIN_X_PAINT_WINDOW, TRUE,
-		  0);
+		  NULL);
 
     view->cursor_type = CURSOR_BASIC_PTR;
 
@@ -522,7 +526,7 @@
 
     if (view->e_view == EV_NULL)
 	goto Error_Return;
-    (void) ev_set(view->e_view, EV_NO_REPAINT_TIL_EVENT, FALSE, 0);
+    (void) ev_set(view->e_view, EV_NO_REPAINT_TIL_EVENT, FALSE, NULL);
 
     if (!folio->first_view) {
 	textsw_register_view(FOLIO_REP_TO_ABS(folio), view_public);
@@ -592,12 +596,12 @@
      */
     defaults = attr_find(defaults_array, XV_FONT);
     if (*defaults) {
-	(void) ei_set(plain_text_eih, EI_FONT, defaults[1], 0);
+	(void) ei_set(plain_text_eih, EI_FONT, defaults[1], NULL);
 	ATTR_CONSUME(*defaults);
     } else {
 	(void) ei_set(plain_text_eih,
 		      EI_FONT, xv_get(textsw, XV_FONT),
-		      0);
+		      NULL);
     }
     folio->state |= TXTSW_OPENED_FONT;
 #ifdef FULL_R5
@@ -672,7 +676,7 @@
 	if (es_status != ES_SUCCESS) {
 	    frame = (Frame)xv_get((Xv_opaque)textsw, WIN_FRAME);
             text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
 				NULL);
             if (!text_notice)  {
                 text_notice = xv_create(frame, NOTICE,
@@ -682,13 +686,13 @@
                         XV_MSG("Can't load specified file:"),
                         name,
                         XV_MSG("Starting with empty buffer."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
                 xv_set(frame, 
-                        XV_KEY_DATA, text_notice_key, text_notice,
+                        XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                         NULL);
             }
             else  {
@@ -699,7 +703,7 @@
                         XV_MSG("Can't load specified file:"),
                         name,
                         XV_MSG("Starting with empty buffer."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE, 
                         NULL);
@@ -784,7 +788,7 @@
 		  EV_CHAIN_DATA, folio,
 		  EV_CHAIN_NOTIFY_PROC, textsw_view_chain_notify,
 		  EV_CHAIN_NOTIFY_LEVEL, EV_NOTIFY_ALL,
-		  0);
+		  NULL);
 
     /*
      * Set the default, and then the client's, attributes.
@@ -806,8 +810,8 @@
     (void) xv_set(textsw,
 		  WIN_LAYOUT_PROC, textsw_layout,
 		  OPENWIN_ADJUST_FOR_VERTICAL_SCROLLBAR, TRUE,
-		  XV_FOCUS_RANK, XV_FOCUS_PRIMARY,
-		  0);
+		  XV_FOCUS_RANK, (Attr_attribute)XV_FOCUS_PRIMARY,
+		  NULL);
 
     /*
      * Make last_point/_adjust/_ie_time close (but not too close) to current
@@ -855,7 +859,7 @@
     if (textsw_head)
 	folio->next = textsw_head;
     textsw_head = folio;
-    xv_set(textsw, OPENWIN_SPLIT, OPENWIN_SPLIT_INIT_PROC, textsw_split_init_proc, 0, 0);
+    xv_set(textsw, OPENWIN_SPLIT, OPENWIN_SPLIT_INIT_PROC, textsw_split_init_proc, 0L, NULL);
 
     /* set delete replaces clipboard flag based on resource
        Text.DeleteReplacesClipboard */
@@ -923,16 +927,16 @@
     Pkg_private int textsw_compute_scroll();
     if (sb)
 	(void) xv_set(sb,
-		      SCROLLBAR_PIXELS_PER_UNIT, 1,
-		      SCROLLBAR_OBJECT_LENGTH, 0,
-		      SCROLLBAR_VIEW_START, 0,
-		      SCROLLBAR_VIEW_LENGTH, 0,
+		      SCROLLBAR_PIXELS_PER_UNIT, 1L,
+		      SCROLLBAR_OBJECT_LENGTH, 0L,
+		      SCROLLBAR_VIEW_START, 0L,
+		      SCROLLBAR_VIEW_LENGTH, 0L,
 		      SCROLLBAR_COMPUTE_SCROLL_PROC,
 		      textsw_compute_scroll,
 		      SCROLLBAR_SPLITTABLE, TRUE,
 		      SCROLLBAR_DIRECTION, SCROLLBAR_VERTICAL,
 		      WIN_COLLAPSE_MOTION_EVENTS, TRUE,
-		      0);
+		      NULL);
 
 }
 
@@ -942,12 +946,12 @@
      int key_data_name;
      Frame parent_frame;
 {
-    Frame           popup_frame = xv_get(parent_frame,
-					 XV_KEY_DATA, key_data_name);
+    Frame           popup_frame = (Frame)xv_get(parent_frame,
+					 XV_KEY_DATA, (Attr_attribute)key_data_name);
     if (popup_frame && 
-	(textsw==xv_get(popup_frame,
-			XV_KEY_DATA, TEXTSW_CURRENT_POPUP_KEY))) {
-	xv_set(parent_frame, XV_KEY_DATA, key_data_name, 0,
+	(textsw==(Textsw)xv_get(popup_frame,
+			XV_KEY_DATA, (Attr_attribute)TEXTSW_CURRENT_POPUP_KEY))) {
+	xv_set(parent_frame, XV_KEY_DATA, (Attr_attribute)key_data_name, 0L,
 	       NULL);
 	xv_destroy(popup_frame);
     }
@@ -959,7 +963,7 @@
 {
     Key_map_handle  this_key, next_key;
     Textsw textsw = FOLIO_REP_TO_ABS(folio);
-    Frame parent_frame = xv_get(textsw,WIN_FRAME);
+    Frame parent_frame = (Frame)xv_get(textsw,WIN_FRAME);
 
     textsw_init_again(folio, 0);/* Flush AGAIN info */
     /*
@@ -1065,7 +1069,7 @@
     view->state |= TXTSW_VIEW_DYING;
     /* Warn client that view is dying BEFORE killing it. */
     if (folio->notify_level & TEXTSW_NOTIFY_DESTROY_VIEW)
-	textsw_notify(view, TEXTSW_ACTION_DESTROY_VIEW, 0);
+	textsw_notify(view, TEXTSW_ACTION_DESTROY_VIEW, NULL);
 
     /* This is for the panel menu of textedit */
     if ((!(folio->state & TXTSW_DESTROY_ALL_VIEWS)) &&
@@ -1078,14 +1082,14 @@
 	    if (folio->sub_menu_table[i])
 		menu_set(folio->sub_menu_table[i],
 			 MENU_CLIENT_DATA, textsw,
-			 0);
+			 NULL);
 	}
 	for (i = (int) TEXTSW_MENU_FILE_CMDS;
 	     i < (int) TEXTSW_MENU_LAST_CMD; i++) {
 	    if (folio->menu_table[i])
 		menu_set(folio->menu_table[i],
 			 MENU_CLIENT_DATA, textsw,
-			 0);
+			 NULL);
 	}
     }
     /* Remove from the list. */
@@ -1113,7 +1117,7 @@
 
 	    frame = (Frame)xv_get(folio_public, WIN_FRAME);
             text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
 				NULL);
 
             if (!text_notice)  {
@@ -1126,17 +1130,17 @@
 You may discard edits now and quit, or cancel\n\
 the request to Quit and go back and either save the\n\
 contents or store the contents as a new file."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, 
 			XV_MSG("Cancel, do NOT Quit"),
                         NOTICE_BUTTON, 
-			XV_MSG("Discard edits, then Quit"), 123,
+			XV_MSG("Discard edits, then Quit"), (Attr_attribute)123,
 		        NOTICE_STATUS, &result,
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
                 xv_set(frame, 
-                        XV_KEY_DATA, text_notice_key, text_notice,
+                        XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                         NULL);
             }
             else  {
@@ -1149,11 +1153,11 @@
 You may discard edits now and quit, or cancel\n\
 the request to Quit and go back and either save the\n\
 contents or store the contents as a new file."),
-                    0,
+                    NULL,
                     NOTICE_BUTTON_YES, 
 		    XV_MSG("Cancel, do NOT Quit"),
                     NOTICE_BUTTON, 
-		    XV_MSG("Discard edits, then Quit"), 123,
+		    XV_MSG("Discard edits, then Quit"), (Attr_attribute)123,
 		    NOTICE_STATUS, &result,
                     XV_SHOW, TRUE, 
                     NULL);
@@ -1225,7 +1229,7 @@
 
 	    frame = (Frame)xv_get(folio_public, WIN_FRAME);
             text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
 				NULL);
             if (!text_notice)  {
                 text_notice = xv_create(frame, NOTICE,
@@ -1237,17 +1241,17 @@
 You may discard edits now and quit, or cancel\n\
 the request to Quit and go back and either save the\n\
 contents or store the contents as a new file."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, 
 			XV_MSG("Cancel, do NOT Quit"),
                         NOTICE_BUTTON, 
-			XV_MSG("Discard edits, then Quit"), 123,
+			XV_MSG("Discard edits, then Quit"), (Attr_attribute)123,
 			NOTICE_STATUS, &result,
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
                 xv_set(frame, 
-                        XV_KEY_DATA, text_notice_key, text_notice,
+                        XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                         NULL);
             }
             else  {
@@ -1260,11 +1264,11 @@
 You may discard edits now and quit, or cancel\n\
 the request to Quit and go back and either save the\n\
 contents or store the contents as a new file."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, 
 			XV_MSG("Cancel, do NOT Quit"),
                         NOTICE_BUTTON, 
-			XV_MSG("Discard edits, then Quit"), 123,
+			XV_MSG("Discard edits, then Quit"), (Attr_attribute)123,
 			NOTICE_STATUS, &result,
                         XV_SHOW, TRUE, 
                         NULL);
@@ -1311,7 +1315,7 @@
 			/* after care of caret */
 			textsw_hide_caret(folio);
 			folio->state &= ~TXTSW_HAS_FOCUS;
-			if (frame = xv_get(FOLIO_REP_TO_ABS(folio), WIN_FRAME))
+			if (frame = (Frame)xv_get(FOLIO_REP_TO_ABS(folio), WIN_FRAME))
 				frame_kbd_done(frame, FOLIO_REP_TO_ABS(folio));
 			textsw_stop_blinker(folio);
 
@@ -1326,7 +1330,7 @@
 	   TEXTSW_MENU_DATA_KEY to another view. */
 	if (view_public== (Textsw_view)xv_get(folio->menu,
 					      XV_KEY_DATA,
-					      TEXTSW_MENU_DATA_KEY)) {
+					      (Attr_attribute)TEXTSW_MENU_DATA_KEY)) {
 	    int v;
 	    Textsw_view another_view;
 	    for (v = 0; ; v++) {
@@ -1334,14 +1338,14 @@
 		if (!another_view)
 		    break;
 		if (view_public!=another_view) {
-		    xv_set(folio->menu,XV_KEY_DATA,TEXTSW_MENU_DATA_KEY,
+		    xv_set(folio->menu,XV_KEY_DATA,(Attr_attribute)TEXTSW_MENU_DATA_KEY,
 			   another_view,
 			   NULL);
 		    break;
 		}
 	    }
 	}
-	frame = xv_get(folio_public,WIN_FRAME);
+	frame = (Frame)xv_get(folio_public,WIN_FRAME);
 	/* destroy any popups which are accessing this textsw.
 	   Actually, I should destroy only those which access this view,
 	   but, I don't have the view information, so just destroy it
@@ -1357,6 +1361,8 @@
 	    
 	xv_destroy(view->drop_site);
 	textsw_view_cleanup(view);
+	/* Since this will resolve to an lvalue cast, modern compilers won't like it. */
+	/* VIEW_PRIVATE(view_public) = NULL; */ /* WG Mar '95 */
 	((Xv_textsw_view*)view_public)->private_data = NULL; /* WG Mar '95 */
 	break;
 
@@ -1383,19 +1389,19 @@
     }
 
     if (textsw_file_name(folio, &name))
-	textsw_notify(view, TEXTSW_ACTION_USING_MEMORY, 0);
+	textsw_notify(view, TEXTSW_ACTION_USING_MEMORY, NULL);
 #ifdef OW_I18N
     else {
 	char            *name_mb = _xv_wcstombsdup(name);
 
 	textsw_notify(view, TEXTSW_ACTION_LOADED_FILE, name_mb,
-			    TEXTSW_ACTION_LOADED_FILE_WCS, name, 0);
+			    TEXTSW_ACTION_LOADED_FILE_WCS, name, NULL);
 	if (name_mb)
 	    free(name_mb);
     }
 #else
     else
-	textsw_notify(view, TEXTSW_ACTION_LOADED_FILE, name, 0);
+	textsw_notify(view, TEXTSW_ACTION_LOADED_FILE, name, NULL);
 #endif /* OW_I18N */
 
     if (!folio->first_view) {
@@ -1404,7 +1410,7 @@
     } else {
 
 	(void) ev_set(view->e_view,
-		      EV_SAME_AS, folio->first_view->e_view, 0);
+		      EV_SAME_AS, folio->first_view->e_view, NULL);
 
 	/* set up the chain for the view */
 	view->next = folio->first_view;
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_popup.c xview-3.2p1.4/lib/libxview/textsw/txt_popup.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_popup.c	2013-01-07 12:36:20.623744000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/txt_popup.c	2013-01-07 15:31:21.872893000 +0100
@@ -30,6 +30,7 @@
 #include <xview/win_struct.h>
 #include <xview/win_screen.h>
 #include <xview/file_chsr.h>
+#include <xview/win.h>
 
 #ifdef SVR4
 #include <unistd.h>
@@ -101,12 +102,23 @@
 Panel_item      search_panel_items[MAX_SEARCH_PANEL_ITEMS];
 Panel_item      match_panel_items[MAX_MATCH_PANEL_ITEMS];
 Panel_item      sel_line_panel_items[MAX_SEL_LINE_PANEL_ITEMS];
-Pkg_private     open_cmd_proc();
-Pkg_private     include_cmd_proc();
-Pkg_private     save_cmd_proc();
-static void     add_exten_item();
-static void     show_dot_files_proc();
-static int      fc_exten_func();
+Pkg_private int open_cmd_proc();
+Pkg_private int include_cmd_proc();
+Pkg_private int save_cmd_proc();
+
+Panel textsw_create_match_panel();
+Panel textsw_create_search_panel();
+Panel textsw_create_sel_line_panel();
+
+#ifdef __STDC__
+static void show_dot_files_proc(Panel_choice_item item, int value, Event *event);
+static int fc_exten_func(File_chooser fc, Rect *frame_rect, Rect *exten_rect, int left_edge, int right_edge, int max_height);
+static void add_exten_item(File_chooser fc);
+#else
+static void show_dot_files_proc();
+static int fc_exten_func();
+static void add_exten_item();
+#endif
 
 static Notify_value
 textsw_popup_destroy_func(client, status)
@@ -118,12 +130,12 @@
     Textsw textsw;
     int popup_key_name;
 
-    popup_key_name = xv_get(popup_frame, XV_KEY_DATA, TEXTSW_POPUP_KEY);
-    textsw = xv_get(popup_frame,XV_KEY_DATA, TEXTSW_CURRENT_POPUP_KEY);
+    popup_key_name = (int)xv_get(popup_frame, XV_KEY_DATA, (Attr_attribute)TEXTSW_POPUP_KEY);
+    textsw = (Textsw)xv_get(popup_frame,XV_KEY_DATA, (Attr_attribute)TEXTSW_CURRENT_POPUP_KEY);
     
     if (textsw) {
-	textsw_frame = xv_get(textsw,WIN_FRAME);
-	xv_set(textsw_frame,XV_KEY_DATA, popup_key_name, 0, NULL);
+	textsw_frame = (Frame)xv_get(textsw,WIN_FRAME);
+	xv_set(textsw_frame,XV_KEY_DATA, (Attr_attribute)popup_key_name, 0L, NULL);
     }
     return notify_next_destroy_func(client,status);
 }
@@ -134,9 +146,9 @@
     int             popup_type;
 
 {
-    Frame           frame_parent = xv_get(VIEW_REP_TO_ABS(view), WIN_FRAME);
+    Frame           frame_parent = (Frame)xv_get(VIEW_REP_TO_ABS(view), WIN_FRAME);
     Frame           popup_frame, base_frame;
-    Panel           panel = NULL;
+    Panel           panel = (Panel)NULL;
     char           *label;
 #ifdef OW_I18N
     int		    win_use_im = ((popup_type != TEXTSW_MENU_SEL_MARK_TEXT) &&
@@ -163,12 +175,12 @@
 #endif
                                     FRAME_SHOW_LABEL, TRUE,
                                     WIN_CLIENT_DATA, view,
-                                    0);
-	xv_set(frame_parent, XV_KEY_DATA, STORE_FILE_POPUP_KEY, popup_frame, 
+                                    NULL);
+	xv_set(frame_parent, XV_KEY_DATA, (Attr_attribute)STORE_FILE_POPUP_KEY, popup_frame, 
 	       NULL);
         add_exten_item(popup_frame); /* add the dotfile choice item */
 	xv_set(popup_frame, 
-	       XV_KEY_DATA, TEXTSW_POPUP_KEY, STORE_FILE_POPUP_KEY,
+	       XV_KEY_DATA, (Attr_attribute)TEXTSW_POPUP_KEY, (Attr_attribute)STORE_FILE_POPUP_KEY,
 	       NULL);
 	label = XV_MSG("Text:Save As");
 	break;
@@ -185,12 +197,12 @@
 #endif
                                     FRAME_SHOW_LABEL, TRUE,
                                     WIN_CLIENT_DATA, view,
-                                    0);
-	xv_set(frame_parent, XV_KEY_DATA, LOAD_FILE_POPUP_KEY, popup_frame,
+                                    NULL);
+	xv_set(frame_parent, XV_KEY_DATA, (Attr_attribute)LOAD_FILE_POPUP_KEY, popup_frame,
 	       NULL);
         add_exten_item(popup_frame); /* add the dotfile choice item */
 	xv_set(popup_frame, 
-	       XV_KEY_DATA, TEXTSW_POPUP_KEY, LOAD_FILE_POPUP_KEY,
+	       XV_KEY_DATA, (Attr_attribute)TEXTSW_POPUP_KEY, (Attr_attribute)LOAD_FILE_POPUP_KEY,
 	       NULL);
 	label = XV_MSG("Text:Open");
 	break;
@@ -207,12 +219,12 @@
 #endif
                                     FRAME_SHOW_LABEL, TRUE,
                                     WIN_CLIENT_DATA, view,
-                                    0);
-	xv_set(frame_parent, XV_KEY_DATA, SAVE_FILE_POPUP_KEY, popup_frame,
+                                    NULL);
+	xv_set(frame_parent, XV_KEY_DATA, (Attr_attribute)SAVE_FILE_POPUP_KEY, popup_frame,
 	       NULL);
         add_exten_item(popup_frame); /* add the dotfile choice item */
 	xv_set(popup_frame, 
-	       XV_KEY_DATA, TEXTSW_POPUP_KEY, SAVE_FILE_POPUP_KEY,
+	       XV_KEY_DATA, (Attr_attribute)TEXTSW_POPUP_KEY, (Attr_attribute)SAVE_FILE_POPUP_KEY,
 	       NULL);
 
 	label = XV_MSG("Text:Save");
@@ -233,13 +245,13 @@
                                     FILE_CHOOSER_NOTIFY_FUNC, include_cmd_proc,
 #endif
                                     WIN_CLIENT_DATA, view,
-                                    0);
+                                    NULL);
 
-	xv_set(frame_parent, XV_KEY_DATA, FILE_STUFF_POPUP_KEY, popup_frame,
+	xv_set(frame_parent, XV_KEY_DATA, (Attr_attribute)FILE_STUFF_POPUP_KEY, popup_frame,
 	       NULL);
         add_exten_item(popup_frame); /* add the dotfile choice item */
 	xv_set(popup_frame, 
-	       XV_KEY_DATA, TEXTSW_POPUP_KEY, FILE_STUFF_POPUP_KEY,
+	       XV_KEY_DATA, (Attr_attribute)TEXTSW_POPUP_KEY, (Attr_attribute)FILE_STUFF_POPUP_KEY,
 	       NULL);
 	label = XV_MSG("Text:Include");
 	break;
@@ -252,11 +264,11 @@
                                     FRAME_SHOW_LABEL, TRUE,
                                     WIN_CLIENT_DATA, view,
                                     WIN_FRONT,
-                                    0);
-	xv_set(frame_parent, XV_KEY_DATA, SEARCH_POPUP_KEY, popup_frame,
+                                    NULL);
+	xv_set(frame_parent, XV_KEY_DATA, (Attr_attribute)SEARCH_POPUP_KEY, popup_frame,
 	       NULL);
 	xv_set(popup_frame, 
-	       XV_KEY_DATA, TEXTSW_POPUP_KEY, SEARCH_POPUP_KEY,
+	       XV_KEY_DATA, (Attr_attribute)TEXTSW_POPUP_KEY, (Attr_attribute)SEARCH_POPUP_KEY,
 	       NULL);
 	panel = (Panel) textsw_create_search_panel(popup_frame, view);
 	label = XV_MSG("Text:Find and Replace");
@@ -270,11 +282,11 @@
                                     FRAME_SHOW_LABEL, TRUE,
                                     WIN_CLIENT_DATA, view,
                                     WIN_FRONT,
-                                    0);
-	xv_set(frame_parent, XV_KEY_DATA, MATCH_POPUP_KEY, popup_frame,
+                                    NULL);
+	xv_set(frame_parent, XV_KEY_DATA, (Attr_attribute)MATCH_POPUP_KEY, popup_frame,
 	       NULL);
 	xv_set(popup_frame, 
-	       XV_KEY_DATA, TEXTSW_POPUP_KEY, MATCH_POPUP_KEY,
+	       XV_KEY_DATA, (Attr_attribute)TEXTSW_POPUP_KEY, (Attr_attribute)MATCH_POPUP_KEY,
 	       NULL);
 	panel = (Panel) textsw_create_match_panel(popup_frame, view);
 	label = XV_MSG("Text:Find Marked Text");
@@ -288,11 +300,11 @@
                                     FRAME_SHOW_LABEL, TRUE,
                                     WIN_CLIENT_DATA, view,
                                     WIN_FRONT,
-                                    0);
-	xv_set(frame_parent, XV_KEY_DATA, SEL_LINE_POPUP_KEY, popup_frame,
+                                    NULL);
+	xv_set(frame_parent, XV_KEY_DATA, (Attr_attribute)SEL_LINE_POPUP_KEY, popup_frame,
 	       NULL);
 	xv_set(popup_frame, 
-	       XV_KEY_DATA, TEXTSW_POPUP_KEY, SEL_LINE_POPUP_KEY,
+	       XV_KEY_DATA, (Attr_attribute)TEXTSW_POPUP_KEY, (Attr_attribute)SEL_LINE_POPUP_KEY,
 	       NULL);
 	panel = (Panel) textsw_create_sel_line_panel(popup_frame, view);
 	label = XV_MSG("Text:Line Number");
@@ -307,13 +319,13 @@
     }
     (void) xv_set(popup_frame, 
                   FRAME_LABEL, label,
-		  XV_KEY_DATA, TEXTSW_CURRENT_POPUP_KEY, 
+		  XV_KEY_DATA, (Attr_attribute)TEXTSW_CURRENT_POPUP_KEY, 
 		  FOLIO_REP_TO_ABS(FOLIO_FOR_VIEW(view)),
-		  XV_SHOW, TRUE, 0);
+		  XV_SHOW, TRUE, NULL);
     notify_interpose_destroy_func(popup_frame,textsw_popup_destroy_func);
 }
 
-Pkg_private
+Pkg_private void
 textsw_get_and_set_selection(popup_frame, view, popup_type)
     Frame           popup_frame;
     Textsw_view_handle view;
@@ -328,9 +340,9 @@
 #define PANEL_SET_VALUE		panel_set_value
 #endif
 
-    show_str[0] = NULL;
+    show_str[0] = (CHAR)'\0';
     xv_set(popup_frame, 
-	   XV_KEY_DATA, TEXTSW_CURRENT_POPUP_KEY, 
+	   XV_KEY_DATA, (Attr_attribute)TEXTSW_CURRENT_POPUP_KEY, 
 	   FOLIO_REP_TO_ABS(FOLIO_FOR_VIEW(view)),
 	   NULL);
     (void) textsw_get_selection(view, &dummy, &dummy, show_str, MAX_STR_LENGTH);
@@ -354,18 +366,18 @@
 
     (void) xv_set(popup_frame, XV_SHOW, TRUE,
 		  WIN_CLIENT_DATA, view,
-		  0);
+		  NULL);
 
 #undef PANEL_SET_VALUE
 }
 
-Pkg_private
+Pkg_private void
 textsw_set_dir_str(popup_type)
     int             popup_type;
 {
+/*
     char            curr_dir[MAX_STR_LENGTH];
 
-/*
     (void) getcwd(curr_dir, MAX_STR_LENGTH);
     switch (popup_type) {
       case TEXTSW_MENU_STORE:
@@ -388,9 +400,9 @@
 text_view_frm_p_itm(panel_item)
     Panel_item      panel_item;
 {
-    Panel           panel = panel_get(panel_item, XV_OWNER, 0);
-    Xv_Window       search_frame = xv_get(panel, WIN_FRAME);
-    Textsw_view_handle view = (Textsw_view_handle) window_get(search_frame, WIN_CLIENT_DATA, 0);
+    Panel           panel = panel_get(panel_item, XV_OWNER, NULL);
+    Xv_Window       search_frame = (Frame)xv_get(panel, WIN_FRAME);
+    Textsw_view_handle view = (Textsw_view_handle) window_get(search_frame, WIN_CLIENT_DATA, NULL);
 
     return (view);
 }
@@ -398,15 +410,15 @@
 frame_from_panel_item(panel_item)
     Panel_item      panel_item;
 {
-    Panel           panel = panel_get(panel_item, XV_OWNER, 0);
-    Xv_Window       popup_frame = xv_get(panel, WIN_FRAME);
+    Panel           panel = panel_get(panel_item, XV_OWNER, NULL);
+    Xv_Window       popup_frame = (Frame)xv_get(panel, WIN_FRAME);
 
     return (popup_frame);
 }
-Pkg_private int
+Pkg_private Es_index
 textsw_get_selection(view, first, last_plus_one, selected_str, max_str_len)
     Textsw_view_handle view;
-    int            *first, *last_plus_one;
+    Es_index       *first, *last_plus_one;
     CHAR           *selected_str;
     int             max_str_len;
 {
@@ -444,7 +456,7 @@
 	    selection.buf_len = max_str_len - 1;
 
 	STRNCPY(selected_str, selection.buf, selection.buf_len);
-	selected_str[selection.buf_len] = NULL;
+	selected_str[selection.buf_len] = (CHAR)'\0';
     }
     *first = selection.first;
     *last_plus_one = selection.last_plus_one;
@@ -506,13 +518,13 @@
     Panel_item item;
  
     
-    panel = xv_get(fc, FRAME_CMD_PANEL);
+    panel = (Panel)xv_get(fc, FRAME_CMD_PANEL);
     
-    item = xv_create(panel, PANEL_CHOICE,
+    item = (Panel_item)xv_create(panel, PANEL_CHOICE,
                       PANEL_LABEL_STRING,       XV_MSG("Hidden Files:"),
                       PANEL_CHOICE_STRINGS,     XV_MSG("Hide"), XV_MSG("Show"), NULL,
                       PANEL_NOTIFY_PROC,        show_dot_files_proc,
-                      XV_KEY_DATA,              FC_PARENT_KEY, fc,
+                      XV_KEY_DATA,              (Attr_attribute)FC_PARENT_KEY, fc,
 		      XV_HELP_DATA,		"textsw:hiddenfileschoice",
                       NULL);
     
@@ -548,7 +560,7 @@
     xv_set(fc,
            FILE_CHOOSER_EXTEN_HEIGHT,   item_height,
            FILE_CHOOSER_EXTEN_FUNC,     fc_exten_func,
-           XV_KEY_DATA,                 FC_EXTEN_ITEM_KEY, item,
+           XV_KEY_DATA,                 (Attr_attribute)FC_EXTEN_ITEM_KEY, item,
            NULL);
 }
 
@@ -558,7 +570,7 @@
      int value;
      Event *event;
 {
-    File_chooser fc = xv_get(item, XV_KEY_DATA, FC_PARENT_KEY);
+    File_chooser fc = xv_get(item, XV_KEY_DATA, (Attr_attribute)FC_PARENT_KEY);
 
     xv_set(fc, FILE_CHOOSER_SHOW_DOT_FILES, value, NULL);
 }
@@ -576,7 +588,7 @@
      int right_edge;
      int max_height;
 {
-    Panel_item item = (Panel_item) xv_get(fc, XV_KEY_DATA, FC_EXTEN_ITEM_KEY);
+    Panel_item item = (Panel_item) xv_get(fc, XV_KEY_DATA, (Attr_attribute)FC_EXTEN_ITEM_KEY);
     int item_width;
 
     item_width = (int) xv_get(item, XV_WIDTH);
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_putkey.c xview-3.2p1.4/lib/libxview/textsw/txt_putkey.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_putkey.c	2013-01-07 12:36:19.490907000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/txt_putkey.c	2013-01-07 12:50:56.692851000 +0100
@@ -28,7 +28,13 @@
 Pkg_private caddr_t  textsw_checkpoint_undo();
 static int textsw_do_put(Textsw_view_handle view, int local_operands);
 
-Pkg_private int
+#ifdef __STDC__
+static int textsw_do_put(Textsw_view_handle view, int local_operands);
+#else
+static int textsw_do_put();
+#endif
+
+Pkg_private void
 textsw_begin_put(view, inform_svc)
     Textsw_view_handle view;
     int             inform_svc;
@@ -103,7 +109,7 @@
     /*
      * First, pre-process the primary selection.
      */
-    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, 0);
+    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, TRUE, NULL);
     ro_bdry = textsw_read_only_boundary_is_at(textsw);
     if (local_operands) {
 	(void) ev_get_selection(views, &first, &last_plus_one,
@@ -193,7 +199,7 @@
 				 ES_INFINITY, ES_INFINITY, EV_SEL_PRIMARY);
 	}
     }
-    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, 0);
+    ev_set(view->e_view, EV_CHAIN_DELAY_UPDATE, FALSE, NULL);
     if (sec_insert == ES_INFINITY) {
 	Es_handle       temp = textsw->trash;
 	textsw->trash = primary;
@@ -229,7 +235,7 @@
     return (result);
 }
 
-Pkg_private int
+Pkg_private void
 textsw_put(view)
     Textsw_view_handle view;
 {
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_scroll.c xview-3.2p1.4/lib/libxview/textsw/txt_scroll.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_scroll.c	1993-06-29 07:17:28.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/txt_scroll.c	2013-01-07 12:50:56.717137000 +0100
@@ -14,9 +14,11 @@
  * Liason routines between textsw and scrollbar
  */
 
+#include <xview/textsw.h>
 #include <xview_private/primal.h>
 #include <xview_private/txt_impl.h>
 #include <xview_private/draw_impl.h>
+#include <xview_private/ev_impl.h>
 
 #define TEXTSW_FOR_SB(_sb) ((Textsw)xv_get(_sb, SCROLLBAR_NOTIFY_CLIENT))
 
@@ -75,7 +77,7 @@
  	     * Check for expose events (from unmapping scrollbar menu).
  	     * Dont worry about sync'ing with server, because menu already did.
  	     */
- 	    Display *dpy;
+ 	    /*Display *dpy;*/
  	    XEvent xevent;
  	    Xv_window win;
  	    Xv_Drawable_info *info;
@@ -285,7 +287,7 @@
 		       SCROLLBAR_VIEW_START, first,
 		       SCROLLBAR_VIEW_LENGTH, vlen,
 		       SCROLLBAR_OBJECT_LENGTH, olen,
-		       0);
+		       NULL);
 	}
 
 	return is_scroll_event;
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_search.c xview-3.2p1.4/lib/libxview/textsw/txt_search.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_search.c	2013-01-07 12:36:18.468540000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/txt_search.c	2013-01-07 12:50:56.745401000 +0100
@@ -57,6 +57,15 @@
 
 Pkg_private Textsw_view_handle text_view_frm_p_itm();
 
+Ev_mark_object textsw_add_mark_internal();
+Textsw_index textsw_replace();
+
+#ifdef __STDC__
+static Panel_setting search_cmd_proc(Panel_item item, Event *event);
+#else
+static Panel_setting search_cmd_proc();
+#endif
+
 Pkg_private	Es_index
 textsw_do_search_proc(view, direction, ring_bell_status, wrapping_off, is_global)
     Textsw_view_handle view;
@@ -126,13 +135,13 @@
     Panel_item      item;
     Event          *event;
 {
-    Panel           panel = panel_get(item, XV_OWNER, 0);
+    Panel           panel = panel_get(item, XV_OWNER, NULL);
     Textsw_view_handle view = text_view_frm_p_itm(item);
     extern Menu     direction_menu;
 
-    (void) xv_set(direction_menu, XV_KEY_DATA, DIRECTION_VIEW, view, 0);
+    (void) xv_set(direction_menu, XV_KEY_DATA, (Attr_attribute)DIRECTION_VIEW, view, NULL);
     if (event_action(event) == ACTION_MENU && event_is_down(event)) {
-	(void) menu_show(direction_menu, panel, event, 0);
+	(void) menu_show(direction_menu, panel, event, NULL);
     } else {
 	(void) panel_default_handle_event(item, event);
     }
@@ -143,7 +152,7 @@
     Menu            menu;
     Menu_item       item;
 {
-    Textsw_view_handle view = (Textsw_view_handle) xv_get(menu, XV_KEY_DATA, DIRECTION_VIEW);
+    Textsw_view_handle view = (Textsw_view_handle) xv_get(menu, XV_KEY_DATA, (Attr_attribute)DIRECTION_VIEW);
     int             wrapping_off = (int) panel_get(search_panel_items[(int) WRAP_ITEM], PANEL_VALUE, NULL);
 
     (void) textsw_do_search_proc(view, EV_FIND_DEFAULT,
@@ -155,7 +164,7 @@
     Menu            menu;
     Menu_item       item;
 {
-    Textsw_view_handle view = (Textsw_view_handle) xv_get(menu, XV_KEY_DATA, DIRECTION_VIEW);
+    Textsw_view_handle view = (Textsw_view_handle) xv_get(menu, XV_KEY_DATA, (Attr_attribute)DIRECTION_VIEW);
     int             wrapping_off = (int) panel_get(search_panel_items[(int) WRAP_ITEM], PANEL_VALUE, NULL);
 
     (void) textsw_do_search_proc(view, EV_FIND_BACKWARD,
@@ -169,7 +178,7 @@
     Textsw          textsw = VIEW_REP_TO_ABS(view);
     CHAR            buf[MAX_STR_LENGTH];
     int             selection_found;
-    int             first, last_plus_one;
+    Es_index        first, last_plus_one;
 
 
 
@@ -341,7 +350,7 @@
     static char    *forward = "Forward";
     static int	   init_str = 0;
     CHAR           search_string[MAX_STR_LENGTH];
-    int            dummy;
+    Es_index       dummy;
     Pkg_private void search_event_proc();
 
     if (!init_str)  {
@@ -364,25 +373,25 @@
 
 
 
-    search_string[0] = NULL;
+    search_string[0] = (CHAR)'\0';
     (void) textsw_get_selection(view, &dummy, &dummy, search_string,
 				MAX_STR_LENGTH);
 
-    direction_menu = xv_create(NULL, MENU,
+    direction_menu = xv_create((Xv_object)NULL, MENU,
 			       MENU_ITEM,
 			       MENU_STRING, forward,
 			       MENU_VALUE, 1,
 			       HELP_INFO("textsw:mdirforward")
 			       MENU_ACTION_PROC, find_forwards_action_proc,
-			       0,
+			       NULL,
 			       MENU_ITEM,
 			       MENU_STRING, backward,
 			       MENU_VALUE, 2,
 			       MENU_ACTION_PROC, find_backwards_action_proc,
 			       HELP_INFO("textsw:mdirbackward")
-			       0,
+			       NULL,
 			       HELP_INFO("textsw:mdirection")
-			       0);
+			       NULL);
 
     search_panel_items[(int) FIND_ITEM] =
 	panel_create_item(panel, PANEL_BUTTON,
@@ -393,7 +402,7 @@
 			  PANEL_EVENT_PROC, search_event_proc,
 			  PANEL_ITEM_MENU, direction_menu,
 			  HELP_INFO("textsw:find")
-			  0);
+			  NULL);
 
 
     search_panel_items[(int) FIND_STRING_ITEM] =
@@ -408,7 +417,7 @@
 			  PANEL_VALUE, search_string,
 #endif
 			  HELP_INFO("textsw:findstring")
-			  0);
+			  NULL);
 
 
     search_panel_items[(int) REPLACE_ITEM] =
@@ -418,7 +427,7 @@
 			  PANEL_LABEL_STRING, replace,
 			  PANEL_NOTIFY_PROC, search_cmd_proc,
 			  HELP_INFO("textsw:replace")
-			  0);
+			  NULL);
 
 
     search_panel_items[(int) REPLACE_STRING_ITEM] = panel_create_item(panel, PANEL_TEXT,
@@ -427,7 +436,7 @@
 				  PANEL_VALUE_STORED_LENGTH, MAX_STR_LENGTH,
 						    PANEL_LABEL_STRING, ":",
 					   HELP_INFO("textsw:replacestring")
-								      0);
+								      NULL);
 
 
     search_panel_items[(int) FIND_THEN_REPLACE_ITEM] =
@@ -437,37 +446,37 @@
 			  PANEL_LABEL_STRING, search_replace,
 			  PANEL_NOTIFY_PROC, search_cmd_proc,
 			  HELP_INFO("textsw:findreplace")
-			  0);
+			  NULL);
 
     search_panel_items[(int) REPLACE_THEN_FIND_ITEM] =
 	panel_create_item(panel, PANEL_BUTTON,
 			  PANEL_LABEL_STRING, replace_search,
 			  PANEL_NOTIFY_PROC, search_cmd_proc,
 			  HELP_INFO("textsw:replacefind")
-			  0);
+			  NULL);
 
     search_panel_items[(int) REPLACE_ALL_ITEM] =
 	panel_create_item(panel, PANEL_BUTTON,
 			  PANEL_LABEL_STRING, all,
 			  PANEL_NOTIFY_PROC, search_cmd_proc,
 			  HELP_INFO("textsw:replaceall")
-			  0);
+			  NULL);
 
     search_panel_items[(int) WRAP_ITEM] =
 	panel_create_item(panel, PANEL_CYCLE,
 			  PANEL_CHOICE_STRINGS, 
 			      XV_MSG("All Text"), 
 			      XV_MSG("To End"), 
-			  0,
+			  NULL,
 			  HELP_INFO("textsw:wrap")
-			  0);
+			  NULL);
 
-    if (search_string[0] != NULL)
+    if (search_string[0] != (CHAR)'\0')
 	xv_set(panel, PANEL_CARET_ITEM,
-	       search_panel_items[(int) REPLACE_STRING_ITEM], 0);
+	       search_panel_items[(int) REPLACE_STRING_ITEM], NULL);
     else {
 	xv_set(panel, PANEL_CARET_ITEM,
-	       search_panel_items[(int) FIND_STRING_ITEM], 0);
+	       search_panel_items[(int) FIND_STRING_ITEM], NULL);
     }
 
 }
@@ -480,7 +489,7 @@
 
     panel = (Panel) xv_get(frame, FRAME_CMD_PANEL,
 			   HELP_INFO("textsw:searchpanel")
-			   0);
+			   NULL);
     (void) create_search_items(panel, view);
 
     return (panel);
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_sel.c xview-3.2p1.4/lib/libxview/textsw/txt_sel.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_sel.c	1993-06-29 07:17:52.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/txt_sel.c	2013-01-07 12:50:56.773081000 +0100
@@ -34,6 +34,15 @@
 Xv_public   void	textsw_set_selection_wcs();
 #endif
 
+Es_index ev_considered_for_line();
+Es_index ev_index_for_line();
+
+#ifdef __STDC__
+static void update_selection(Textsw_view_handle view, Event *ie);
+#else
+static void update_selection();
+#endif
+
 Xv_public void
 #ifdef OW_I18N
 textsw_normalize_view_wc(abstract, pos)
@@ -128,7 +137,7 @@
 	   TXTSW_NI_NOT_IF_IN_VIEW | TXTSW_NI_MARK | TXTSW_NI_SELECT(type));
 }
 
-Pkg_private int
+Pkg_private void
 textsw_normalize_internal(
 	    view, first, last_plus_one, upper_context, lower_context, flags)
     register Textsw_view_handle view;
@@ -143,7 +152,7 @@
     CHAR            newline_str[2];
     
     newline_str[0] = '\n';
-    newline_str[1] = NULL;
+    newline_str[1] = (CHAR)'\0';
 
     if (flags & TXTSW_NI_NOT_IF_IN_VIEW) {
 	switch (ev_xy_in_view(view->e_view, first, &lt_index, &rect)) {
@@ -242,13 +251,13 @@
     caddr_t         current_mark;
 
     /* AGAIN/UNDO support */
-    if (((int) undo_mark) < TEXTSW_INFINITY - 1) {
+    if (((unsigned long) undo_mark) < TEXTSW_INFINITY - 1) {
 	current_mark = undo_mark;
     } else {
 	current_mark = es_get(folio->views->esh, ES_UNDO_MARK);
     }
     if (TXTSW_DO_UNDO(folio) &&
-	(((int) undo_mark) != TEXTSW_INFINITY)) {
+	(((unsigned long)undo_mark) != TEXTSW_INFINITY)) {
 	if (current_mark != folio->undo[0]) {
 	    /* Make room for, and then record the current mark. */
 	    XV_BCOPY((char *) (&folio->undo[0]), (char *) (&folio->undo[1]),
@@ -298,7 +307,7 @@
     unsigned        type;
 {
     extern int      ev_set_selection();
-    Es_index        first_valid,max_len;
+    Es_index        max_len;
     Textsw_view_handle view = VIEW_ABS_TO_REP(abstract);
     register Textsw_folio folio = (view ? FOLIO_FOR_VIEW(view) :
 				   FOLIO_ABS_TO_REP(abstract));
@@ -311,9 +320,9 @@
     }
     /* make sure selection falls within valid text for WRAPAROUND case
        by trying to read at the first or last_plus_one position */
-    max_len = (int)es_get(folio->views->esh,ES_PS_SCRATCH_MAX_LEN);
+    max_len = (Es_index)es_get(folio->views->esh,ES_PS_SCRATCH_MAX_LEN);
     if (max_len != ES_INFINITY) {
-	int next,result;
+	int next, result;
 	CHAR buf[1];
 	if (first < last_plus_one) {
 	    es_set_position(folio->views->esh,first);
@@ -360,7 +369,7 @@
        by trying to read at position */
     max_len = (int)es_get(folio->views->esh,ES_PS_SCRATCH_MAX_LEN);
     if (max_len != ES_INFINITY) {
-	int next,result;
+	int next, int result;
 	CHAR buf[1];
 	if (first < last_plus_one) {
 	    es_set_position(folio->views->esh,first);
@@ -416,7 +425,7 @@
 	Textsw_folio    folio		= FOLIO_FOR_VIEW(view);
 	char		*msg		= NULL;
 	int             action		= event_action(ie);
-	int		char_count	= 1;
+	/*int		char_count	= 1;*/
 	int             is_select_event	= TRUE;
 	Ev_chain 	chain 		= folio->views;
 	short		do_dir		= FALSE;
@@ -588,7 +597,7 @@
 	return is_select_event;
 }
 
-static int
+static void
 update_selection(view, ie)
     Textsw_view_handle view;
     register Event *ie;
@@ -799,7 +808,7 @@
     ASSERT(allock());
 }
 
-Pkg_private
+Pkg_private void
 textsw_start_seln_tracking(view, ie)
     Textsw_view_handle view;
     register Event *ie;
@@ -1124,6 +1133,7 @@
     register Textsw_folio folio;
     unsigned        type;
     CHAR           *buf;
+    int             buf_max_len;
 
 {
     Textsw_selection_object selection;
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_selsvc.c xview-3.2p1.4/lib/libxview/textsw/txt_selsvc.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_selsvc.c	2013-01-07 12:36:17.251794000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/txt_selsvc.c	2013-01-07 12:50:56.828073000 +0100
@@ -23,6 +23,7 @@
 #ifdef SVR4
 #include <stdlib.h>
 #endif /* SVR4 */
+#include <unistd.h>				/* unlink() */
 
 
 static int textsw_should_ask_seln_svc(Textsw_folio textsw);
@@ -47,6 +48,12 @@
 typedef Continuation_object *Continuation;
 static Continuation_object fast_continuation;	/* Default init to zeros */
 
+#ifdef __STDC__
+static int textsw_should_ask_seln_svc(Textsw_folio textsw);
+#else
+static int textsw_should_ask_seln_svc();
+#endif
+
 Pkg_private void
 textsw_clear_secondary_selection(textsw, type)
     register Textsw_folio textsw;
@@ -258,7 +265,7 @@
     register Textsw_folio textsw;
     int             acquire;
 {
-    register unsigned result;
+    register unsigned result = 0;
     register int    ask_svc =
 	textsw_should_ask_seln_svc(textsw);
     register Seln_rank rank;
@@ -590,7 +597,7 @@
 #undef  ALL_SELECTIONS_ARE_LOCAL
 }
 
-Pkg_private int
+Pkg_private void
 textsw_abort(textsw)
     register Textsw_folio textsw;
 {
@@ -674,9 +681,9 @@
  */
 Pkg_private int
 textsw_prepare_buf_for_es_read(to_read, buf, buf_max_len, fixed_size)
-    register int   *to_read;
+    register int *to_read;
     register CHAR **buf;
-    register int    buf_max_len;
+    register int buf_max_len;
     int             fixed_size;
 {
     if (*to_read > buf_max_len) {
@@ -1276,15 +1283,16 @@
 
 #endif /* OW_I18N */
 
-Pkg_private int
+Pkg_private Es_index
 textsw_stuff_selection(view, type)
     Textsw_view_handle view;
     int        type;
 {
     register Textsw_folio folio = FOLIO_FOR_VIEW(view);
     Textsw_selection_object selection;
-    int             result;
-    int             delta, record;
+    Es_index        result;
+    Es_index        delta;
+    int		    record;
     Es_index        old_insert_pos, old_length;
 
     textsw_init_selection_object(folio, &selection, NULL, 0, 0);
@@ -1454,7 +1462,7 @@
 	break;
       case SELN_FIND:
 	textsw->func_state |= TXTSW_FUNC_FIND;
-	textsw_end_find(textsw->func_view,
+	textsw_end_find(textsw->func_view, 0,
 			textsw->func_x, textsw->func_y);
 	break;
       case SELN_DELETE:
@@ -1570,7 +1578,7 @@
     CHAR            buf[200];	/* Must be bigger than wrap msg */
 
     if (first != ES_INFINITY &&
-	((int) es_get(esh, ES_PS_SCRATCH_MAX_LEN) !=
+	((Es_index) es_get(esh, ES_PS_SCRATCH_MAX_LEN) !=
 	 ES_INFINITY)) {
 	(void) es_set_position(esh, first);
 	first_valid = es_read(esh, SIZEOF(buf) - 1, buf, &count_read);
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_store.c xview-3.2p1.4/lib/libxview/textsw/txt_store.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_store.c	1993-06-29 07:17:40.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/txt_store.c	2013-01-07 12:50:56.875677000 +0100
@@ -29,7 +29,7 @@
 #include <xview/win_struct.h>
 #include <xview/win_screen.h>
 
-#ifdef SVR4
+#if defined(SVR4) || defined(__linux__)
 #include <unistd.h>
 #include <string.h>
 #endif /* SVR4 */
@@ -50,6 +50,10 @@
 Pkg_private Textsw_view_handle text_view_frm_p_itm();
 Pkg_private Xv_Window frame_from_panel_item();
 
+static Panel_setting store_cmd_proc(Panel_item item, Event *event);
+static Panel_setting store_cmd_proc_accel(Panel_item item, Event *event);
+
+
 static int
 do_store_proc(folio, ie)
     Textsw_folio    folio;
@@ -119,21 +123,21 @@
 	} else {
 	    frame = FRAME_FROM_FOLIO_OR_VIEW(folio);
             text_notice = (Xv_Notice)xv_get(frame, 
-			    XV_KEY_DATA, text_notice_key, NULL);
+			    XV_KEY_DATA, (Attr_attribute)text_notice_key, NULL);
             if (!text_notice)  {
-                text_notice = xv_create(frame, NOTICE,
+                text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
 			NOTICE_BLOCK_THREAD, TRUE,
                         NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Cannot change directory.\n\
 Change Directory Has Been Disabled."),
-                        0,
+                        NULL,
                         NOTICE_BUTTON_YES, XV_MSG("Continue"),
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
                 xv_set(frame, 
-                    XV_KEY_DATA, text_notice_key, text_notice,
+                    XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                     NULL);
             }
             else  {
@@ -143,7 +147,7 @@
                     NOTICE_MESSAGE_STRINGS,
 		    XV_MSG("Cannot change directory.\n\
 Change Directory Has Been Disabled."),
-                    0,
+                    NULL,
                     NOTICE_BUTTON_YES, XV_MSG("Continue"),
                     XV_SHOW, TRUE, 
                     NULL);
@@ -159,29 +163,29 @@
 #endif /* OW_I18N */
 	    popup_frame =
 		frame_from_panel_item(store_panel_items[(int) FILE_CMD_ITEM]);
-	    (void) xv_set(popup_frame, XV_SHOW, FALSE, 0);
+	    (void) xv_set(popup_frame, XV_SHOW, FALSE, NULL);
 	    return FALSE;
 	}
 	return TRUE;
     }
     frame = FRAME_FROM_FOLIO_OR_VIEW(folio);
     text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key,
 				NULL);
     if (!text_notice)  {
-        text_notice = xv_create(frame, NOTICE,
+        text_notice = (Xv_Notice)xv_create(frame, NOTICE,
                             NOTICE_LOCK_SCREEN, FALSE,
 			    NOTICE_BLOCK_THREAD, TRUE,
                             NOTICE_MESSAGE_STRINGS,
 			    XV_MSG("No file name was specified.\n\
 Specify a file name to store as new file."),
-                            0,
+                            NULL,
                             NOTICE_BUTTON_YES, XV_MSG("Continue"),
                             XV_SHOW, TRUE,
-                            0);
+                            NULL);
 
         xv_set(frame, 
-                XV_KEY_DATA, text_notice_key, text_notice,
+                XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                 NULL);
     }
     else  {
@@ -191,7 +195,7 @@
                     NOTICE_MESSAGE_STRINGS,
 		    XV_MSG("No file name was specified.\n\
 Specify a file name to store as new file."),
-                    0,
+                    NULL,
                     NOTICE_BUTTON_YES, XV_MSG("Continue"),
                     XV_SHOW, TRUE, 
                     NULL);
@@ -213,7 +217,7 @@
     if (item == store_panel_items[(int) FILE_CMD_ITEM]) {
 	error = do_store_proc(folio, event);
 	if (error) {
-	    xv_set(item, PANEL_NOTIFY_STATUS, XV_ERROR, 0);
+	    xv_set(item, PANEL_NOTIFY_STATUS, XV_ERROR, NULL);
 	}
 	return PANEL_NONE;
     }
@@ -232,7 +236,7 @@
     if (item == store_panel_items[(int) FILE_STRING_ITEM]) {
 	error = do_store_proc(folio, event);
 	if (error) {
-	    xv_set(item, PANEL_NOTIFY_STATUS, XV_ERROR, 0);
+	    xv_set(item, PANEL_NOTIFY_STATUS, XV_ERROR, NULL);
 	}
 	return PANEL_NONE;
     }
@@ -248,10 +252,10 @@
 
     CHAR            store_string[MAX_STR_LENGTH];
     char            current_dir_store_string[MAX_STR_LENGTH];
-    int             dummy;
+    Es_index        dummy;
 
 
-    store_string[0] = NULL;
+    store_string[0] = (CHAR)'\0';
     (void) textsw_get_selection(view, &dummy, &dummy, store_string, MAX_STR_LENGTH);
     (void) getcwd(current_dir_store_string, MAX_STR_LENGTH);
     store_panel_items[(int) DIR_STRING_ITEM] = panel_create_item(panel, PANEL_TEXT,
@@ -263,7 +267,7 @@
 					   PANEL_LABEL_STRING, 
 					   XV_MSG("Directory:"),
 					       HELP_INFO("textsw:dirstring")
-								 0);
+								 NULL);
     store_panel_items[(int) FILE_STRING_ITEM] = panel_create_item(panel, PANEL_TEXT,
 						 PANEL_LABEL_X, ATTR_COL(5),
 						 PANEL_LABEL_Y, ATTR_ROW(1),
@@ -280,9 +284,9 @@
 						PANEL_NOTIFY_STRING, "\n\r",
 				    PANEL_NOTIFY_PROC, store_cmd_proc_accel,
 					     HELP_INFO("textsw:storestring")
-								  0);
+								  NULL);
     xv_set(panel, PANEL_CARET_ITEM,
-	   store_panel_items[(int) FILE_STRING_ITEM], 0);
+	   store_panel_items[(int) FILE_STRING_ITEM], NULL);
 
     store_panel_items[(int) FILE_CMD_ITEM] = panel_create_item(panel,
 							       PANEL_BUTTON,
@@ -292,10 +296,10 @@
 				    XV_MSG("Store as New File"),
 					  PANEL_NOTIFY_PROC, store_cmd_proc,
 					       HELP_INFO("textsw:storefile")
-							       0);
+							       NULL);
     (void) xv_set(panel,
 		  PANEL_DEFAULT_ITEM, store_panel_items[(int) FILE_CMD_ITEM],
-		  0);
+		  NULL);
 }
 
 Pkg_private          Panel
@@ -307,7 +311,7 @@
 
     panel = (Panel) xv_get(frame, FRAME_CMD_PANEL,
 			   HELP_INFO("textsw:storepanel")
-			   0);
+			   NULL);
     (void) create_store_items(panel, view);
 
     return (panel);
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_tool.c xview-3.2p1.4/lib/libxview/textsw/txt_tool.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_tool.c	1993-06-29 07:17:52.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/textsw/txt_tool.c	2013-01-07 12:50:56.957035000 +0100
@@ -29,7 +29,7 @@
 Xv_public Notify_error win_post_event();
 Pkg_private Textsw_view_handle textsw_init_internal();
 
-Pkg_private int
+Pkg_private void
 textsw_default_notify(abstract, attrs)
     Textsw          abstract;
     Attr_attribute *attrs;
@@ -39,7 +39,7 @@
     Xv_Notice	text_notice;
 
     for (; *attrs; attrs = attr_next(attrs)) {
-	switch (*attrs) {
+	switch ((int)*attrs) {
 	  case TEXTSW_ACTION_TOOL_CLOSE:
 	  case TEXTSW_ACTION_TOOL_MGR:
 	  case TEXTSW_ACTION_TOOL_DESTROY:
@@ -59,7 +59,7 @@
 			int             result;
 
                         text_notice = (Xv_Notice)xv_get(frame, 
-                                XV_KEY_DATA, text_notice_key, 
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, 
 				NULL);
                         if (!text_notice)  {
                             text_notice = xv_create(frame, NOTICE,
@@ -71,17 +71,17 @@
 You may discard edits now and quit, or cancel\n\
 the request to Quit and go back and either save the\n\
 contents or store the contents as a new file."),
-                                0,
+                                NULL,
                                 NOTICE_BUTTON_YES, 
 				XV_MSG("Cancel, do NOT Quit"),
                                 NOTICE_BUTTON, 
-				XV_MSG("Discard edits, then Quit"), 123,
+				XV_MSG("Discard edits, then Quit"), (Attr_attribute)123,
                                 NOTICE_STATUS, &result,
                                 XV_SHOW, TRUE,
-                                0);
+                                NULL);
 
                             xv_set(frame, 
-                                XV_KEY_DATA, text_notice_key, text_notice,
+                                XV_KEY_DATA, (Attr_attribute)text_notice_key, text_notice,
                                 NULL);
                         }
                         else  {
@@ -94,11 +94,11 @@
 You may discard edits now and quit, or cancel\n\
 the request to Quit and go back and either save the\n\
 contents or store the contents as a new file."),
-                                0,
+                                NULL,
                                 NOTICE_BUTTON_YES, 
 				XV_MSG("Cancel, do NOT Quit"),
                                 NOTICE_BUTTON, 
-				XV_MSG("Discard edits, then Quit"), 123,
+				XV_MSG("Discard edits, then Quit"), (Attr_attribute)123,
 				NOTICE_STATUS, &result,
                                 XV_SHOW, TRUE, 
                                 NULL);
@@ -114,7 +114,7 @@
 		    xv_destroy_safe(frame);
 		    break;
 		  case TEXTSW_ACTION_TOOL_DESTROY:
-		    xv_set(frame, FRAME_NO_CONFIRM, TRUE, 0);
+		    xv_set(frame, FRAME_NO_CONFIRM, TRUE, NULL);
 		    xv_destroy_safe(frame);
 		    break;
 		}
diff -Naur xview-3.2p1.4.orig/lib/libxview/textsw/txt_view.c xview-3.2p1.4/lib/libxview/textsw/txt_view.c
--- xview-3.2p1.4.orig/lib/libxview/textsw/txt_view.c	2013-01-07 12:36:16.920431000 +0100
+++ xview-3.2p1.4/lib/libxview/textsw/txt_view.c	2013-01-07 12:50:56.981386000 +0100
@@ -15,10 +15,12 @@
 #include <xview/defaults.h>
 #include <xview_private/primal.h>
 #include <xview_private/txt_impl.h>
+#include <xview_private/ev_impl.h>
 #include <xview/textsw.h>
 #include <xview/win_struct.h>
 #include <xview/window.h>
 #include <xview/text.h>
+#include <xview/win.h>
 
 #define SET_NEW_START(_view, _char_pos) _view->e_view->line_table.seq[0]= (_char_pos == TEXTSW_INFINITY) ? 0 : _char_pos
 
@@ -30,7 +32,7 @@
 Pkg_private Xv_opaque textsw_view_get();
 Pkg_private int textsw_view_destroy();
 
-
+Es_index ev_index_for_line();
 
 Pkg_private int
 textsw_view_init(parent, textsw_view_public, avlist)
@@ -48,8 +50,8 @@
 	text_notice_key = xv_unique_key();
     }
 
-    for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-	switch (*attrs) {
+    for (attrs = avlist; (int)*attrs; attrs = attr_next(attrs)) {
+	switch ((int)*attrs) {
 	  case TEXTSW_STATUS:
 	    status = (Textsw_status *) attrs[1];
 	    break;
@@ -67,7 +69,7 @@
     view->public_self = textsw_view_public;
     view->magic = TEXTSW_VIEW_MAGIC;
 /* Alpha compatibility, mbuck@debian.org */
-#if defined(__alpha)
+#if defined(__alpha) || defined(__x86_64__) || defined(__ia64__) || defined(_XV_API_BROKEN_64BIT)
     view->window_fd = (Xv_Window) xv_get(textsw_view_public, WIN_FD);
 #else
     view->window_fd = (int) xv_get(textsw_view_public, WIN_FD);
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/charscreen.h xview-3.2p1.4/lib/libxview/ttysw/charscreen.h
--- xview-3.2p1.4.orig/lib/libxview/ttysw/charscreen.h	2013-01-07 12:36:12.569109000 +0100
+++ xview-3.2p1.4/lib/libxview/ttysw/charscreen.h	2013-01-07 12:50:57.007754000 +0100
@@ -44,9 +44,9 @@
 extern int	delaypainting;
 #endif
 
-#ifdef cplus
-void	ttysw_pstring(char *s, int col, int row);
+#if defined(cplus)
+void	ttysw_pstring(CHAR *s, char mode, int col, int row, int op);
 void	ttysw_pclearline(int fromcol, int tocol, int row);
 void	ttysw_pcopyline(int fromcol, int tocol, int count, int row);
-void	ttysw_pclearscreen(int fromrow, int torow, int count);
+void	ttysw_pclearscreen(int fromrow, int torow);
 #endif
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/csr_change.c xview-3.2p1.4/lib/libxview/ttysw/csr_change.c
--- xview-3.2p1.4.orig/lib/libxview/ttysw/csr_change.c	2013-01-07 12:36:13.361333000 +0100
+++ xview-3.2p1.4/lib/libxview/ttysw/csr_change.c	2013-01-07 12:50:57.033242000 +0100
@@ -124,12 +124,14 @@
 }
 
 /* NOT USED */
+int
 ttysw_get_inverse_mode()
 {
     return inverse_mode;
 }
 
 /* NOT USED */
+int
 ttysw_get_underline_mode()
 {
     return underline_mode;
@@ -143,6 +145,7 @@
 }
 
 /* NOT USED */
+int
 ttysw_getleftmargin()
 {
     return chrleftmargin;
@@ -209,7 +212,7 @@
     if (xv_get(XV_SERVER_FROM_WINDOW(csr_pixwin), SERVER_JOURNALLING))
         if (INDEX(s, xv_shell_prompt[0]))
 	    xv_set(XV_SERVER_FROM_WINDOW(csr_pixwin), 
-                         SERVER_JOURNAL_SYNC_EVENT, 1, 0);
+                         SERVER_JOURNAL_SYNC_EVENT, 1, NULL);
 
     if (delaypainting) {
 	if (row == ttysw_bottom)
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/term_impl.h xview-3.2p1.4/lib/libxview/ttysw/term_impl.h
--- xview-3.2p1.4.orig/lib/libxview/ttysw/term_impl.h	2013-01-07 12:36:12.896696000 +0100
+++ xview-3.2p1.4/lib/libxview/ttysw/term_impl.h	2013-01-07 12:50:57.115035000 +0100
@@ -238,7 +238,7 @@
 #define	textsw_add_mark_i18n		textsw_add_mark_wc
 #define	textsw_erase_i18n		textsw_erase_wcs
 #define	textsw_delete_i18n		textsw_delete_wcs
-#else /OW_I18N */
+#else /* OW_I18N */
 #define	TEXTSW_LENGTH_I18N		TEXTSW_LENGTH
 #define	TEXTSW_CONTENTS_I18N		TEXTSW_CONTENTS
 #define	textsw_replace_i18n		textsw_replace_bytes
@@ -251,4 +251,4 @@
 #define	textsw_delete_i18n		textsw_delete
 #endif /* OW_I18N */
 
-#endif /* _xview_private_termsw_impl_h_already_included */
+#endif
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/term_ntfy.c xview-3.2p1.4/lib/libxview/ttysw/term_ntfy.c
--- xview-3.2p1.4.orig/lib/libxview/ttysw/term_ntfy.c	2013-01-07 12:36:13.062824000 +0100
+++ xview-3.2p1.4/lib/libxview/ttysw/term_ntfy.c	2013-01-07 12:50:57.151831000 +0100
@@ -41,13 +41,13 @@
 #include <xview/window.h>
 #include <xview_private/tty_impl.h>
 #include <xview_private/term_impl.h>
+#include <xview_private/txt_impl.h>
 #include <xview_private/ultrix_cpt.h>
 
 #define PTY_OFFSET	(int) &(((Ttysw_folio)0)->ttysw_pty)
 
 extern Textsw   textsw_first();
 extern Textsw   textsw_next();
-extern int      textsw_default_notify();
 extern char    *textsw_checkpoint_undo();
 extern Textsw_index textsw_insert();
 extern Textsw_index textsw_erase_i18n();
@@ -181,7 +181,7 @@
 	    ttysw->remote = ttysw->pending_remote;
     }
 
-    if (!ttysw_getopt((caddr_t) ttysw, TTYOPT_TEXT)) {
+    if (!ttysw_getopt(ttysw, TTYOPT_TEXT)) {
 	/*
 	 * Currently acting as a tty; hand the event off to its notification
 	 * routine.
@@ -244,7 +244,7 @@
 
 
         if (!tty_iscanon(ttysw)) /*1030878*/
-            xv_set( textsw, TEXTSW_DIFFERENTIATE_CR_LF, 1, 0 );
+            xv_set( textsw, TEXTSW_DIFFERENTIATE_CR_LF, 1, NULL );
 
 	/* Implement "go to end of file" ourselves. */
 	/* First let textsw do it to get at normalize_internal. */
@@ -252,7 +252,7 @@
 				    (Notify_client) (event), arg, type);
 
         if (!tty_iscanon(ttysw)) /*1030878*/
-            xv_set( textsw, TEXTSW_DIFFERENTIATE_CR_LF, 0, 0 );
+            xv_set( textsw, TEXTSW_DIFFERENTIATE_CR_LF, 0, NULL );
 
 	/*
 	 * Now fix it up. Only necessary when !append_only_log because
@@ -261,7 +261,7 @@
 	 */
 	if (!termsw->append_only_log)
 	    (void) xv_set(textsw, TEXTSW_INSERTION_POINT_I18N,
-			  textsw_find_mark_i18n(textsw, termsw->pty_mark), 0);
+			  textsw_find_mark_i18n(textsw, termsw->pty_mark), NULL);
     } else if (!termsw->cooked_echo
 	       && action <= ASCII_LAST
 	       && (iscntrl((char) action) || (char) action == '\177')
@@ -283,7 +283,7 @@
 #ifndef __linux__
 	if (action == tty_getintrc(ttysw)) {
 	        (void) xv_set(textsw, TEXTSW_INSERTION_POINT_I18N,
-			  TEXTSW_INFINITY, 0);
+			  TEXTSW_INFINITY, NULL);
 	}
 #endif
 	(void) textsw_insert(textsw, &input_char, (long) 1);
@@ -467,7 +467,7 @@
 	return (NOTIFY_IGNORED);
     }
     if (write(tty, "\r", 1) < 0) {
-	fprintf(stderr, "for tty%x, tty fd %d, ",
+	fprintf(stderr, "for tty%lx, tty fd %d, ",
 		tty_public, ttysw_folio->ttysw_tty);
 	perror(XV_MSG("TTYSW tty write failure"));
     }
@@ -489,8 +489,8 @@
 	if (notify_set_output_func((Notify_client) (tty_public),
 			  ttysw_cr, ttysw->ttysw_tty) == NOTIFY_FUNC_NULL) {
 	    fprintf(stderr,
-		    XV_MSG("cannot set output func on ttysw %x, tty fd %d\n"),
-		    ttysw, ttysw->ttysw_tty);
+		    XV_MSG("cannot set output func on ttysw %lx, tty fd %d\n"),
+		    (unsigned long)ttysw, ttysw->ttysw_tty);
 	}
     }
 }
@@ -514,7 +514,7 @@
 	}
     }
     frame = (Frame)xv_get(public_folio_or_view, WIN_FRAME),
-    tty_notice = xv_get(frame, XV_KEY_DATA, tty_notice_key, NULL);
+    tty_notice = xv_get(frame, XV_KEY_DATA, (Attr_attribute)tty_notice_key, NULL);
     if (!tty_notice)  {
         tty_notice = xv_create(frame, NOTICE,
                         NOTICE_LOCK_SCREEN, FALSE,
@@ -523,12 +523,12 @@
 				XV_MSG("Continue"),
                         NOTICE_MESSAGE_STRINGS,
 			buf,
-                        0,
+                        NULL,
                         XV_SHOW, TRUE,
-                        0);
+                        NULL);
 
         xv_set(frame, 
-                XV_KEY_DATA, tty_notice_key, tty_notice, 
+                XV_KEY_DATA, (Attr_attribute)tty_notice_key, tty_notice, 
                 NULL);
 
     }
@@ -539,9 +539,9 @@
                 NOTICE_BUTTON_YES, XV_MSG("Continue"),
                 NOTICE_MESSAGE_STRINGS,
                 buf,
-                0,
+                NULL,
                 XV_SHOW, TRUE, 
-                0);
+                NULL);
     }
 }
 
@@ -652,11 +652,11 @@
     if (toggle) {
 	window_set(textsw,
 		   TEXTSW_NOTIFY_LEVEL, notify_level & (~TEXTSW_NOTIFY_EDIT),
-		   0);
+		   NULL);
     } else {
 	window_set(textsw,
 		   TEXTSW_NOTIFY_LEVEL, notify_level | TEXTSW_NOTIFY_EDIT,
-		   0);
+		   NULL);
     }
 }
 
@@ -697,7 +697,7 @@
 	insert_at = length;
     }
     if (insert != insert_at) {
-	(void) xv_set(textsw, TEXTSW_INSERTION_POINT_I18N, insert_at, 0);
+	(void) xv_set(textsw, TEXTSW_INSERTION_POINT_I18N, insert_at, NULL);
     }
     (void) textsw_checkpoint_undo(textsw, termsw->next_undo_point);
     /* Stop this insertion from triggering the cmd scanner! */
@@ -721,11 +721,11 @@
 	    insert = find_and_remove_mark(textsw, insert_mark);
 	    if (insert == TEXTSW_INFINITY)
 		ERROR_RETURN(-1);
-	    (void) xv_set(textsw, TEXTSW_INSERTION_POINT_I18N, insert, 0);
+	    (void) xv_set(textsw, TEXTSW_INSERTION_POINT_I18N, insert, NULL);
 	}
     } else {
 	if (insert < length)
-	    (void) xv_set(textsw, TEXTSW_INSERTION_POINT_I18N, insert, 0);
+	    (void) xv_set(textsw, TEXTSW_INSERTION_POINT_I18N, insert, NULL);
 	if (termsw->append_only_log) {
             length = (int) xv_get(textsw, TEXTSW_LENGTH_I18N);
 	    termsw->read_only_mark =
@@ -872,7 +872,7 @@
                 length = (Textsw_index) xv_get(textsw, TEXTSW_LENGTH_I18N);
 		if (length == insert + 1) {
 		    (void) xv_set(textsw,
-				  TEXTSW_INSERTION_POINT_I18N, length, 0);
+				  TEXTSW_INSERTION_POINT_I18N, length, NULL);
 		    ttysw_reset_column(ttysw);
 		} else if (length == 0) {
 		    ttysw_reset_column(ttysw);
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/termsw.c xview-3.2p1.4/lib/libxview/ttysw/termsw.c
--- xview-3.2p1.4.orig/lib/libxview/ttysw/termsw.c	2013-01-07 12:36:47.887412000 +0100
+++ xview-3.2p1.4/lib/libxview/ttysw/termsw.c	2013-01-07 12:50:57.252044000 +0100
@@ -16,6 +16,8 @@
 #include <xview_private/i18n_impl.h>
 #include <stdio.h>
 #include <fcntl.h>
+#include <stdlib.h>		/* getenv() */
+#include <unistd.h>		/* close() */
 #include <sys/types.h>
 #include <sys/wait.h>
 #include <xview/sun.h>
@@ -41,7 +43,6 @@
 
 #define HELP_INFO(s) XV_HELP_DATA, s,
 
-extern char    *getenv();
 extern caddr_t  textsw_checkpoint_undo();
 extern Xv_opaque xv_pf_open();
 Bool            defaults_get_boolean();
@@ -128,7 +129,7 @@
     Xv_Window       termsw_view_public;
     Window_layout_op op;
 /* Alpha compatibility, mbuck@debian.org */
-#if defined(__alpha)
+#if defined(__alpha) || defined(__x86_64__) || defined(__ia64__) || defined(_XV_API_BROKEN_64BIT)
     unsigned long   d1, d2, d3, d4, d5;
 #else
     int             d1, d2, d3, d4, d5;
@@ -315,14 +316,14 @@
 				FONT_FAMILY, FONT_FAMILY_DEFAULT_FIXEDWIDTH,
 		/* FONT_FAMILY,        FONT_FAMILY_SCREEN, */
 		       FONT_SCALE, (scale > 0) ? scale : FONT_SCALE_DEFAULT,
-					   0);
+					   NULL);
 	    } else {
 		size = (int) xv_get(parent_font, FONT_SIZE);
 		font = (Xv_opaque) xv_find(termsw_public, FONT,
 				FONT_FAMILY, FONT_FAMILY_DEFAULT_FIXEDWIDTH,
 		/* FONT_FAMILY,        FONT_FAMILY_SCREEN,  */
 			   FONT_SIZE, (size > 0) ? size : FONT_SIZE_DEFAULT,
-					   0);
+					   NULL);
 	    }
 	}
     } else {
@@ -335,14 +336,14 @@
 				FONT_FAMILY, FONT_FAMILY_DEFAULT_FIXEDWIDTH,
 	    			/* FONT_FAMILY,        FONT_FAMILY_SCREEN, */
 		       		FONT_SCALE, (scale > 0) ? scale : FONT_SCALE_DEFAULT,
-				0);
+				NULL);
 	    } else {
 	        int             size = (int) xv_get(parent_font, FONT_SIZE);
 	        font = (Xv_opaque) xv_find(termsw_public, FONT,
 				FONT_FAMILY, FONT_FAMILY_DEFAULT_FIXEDWIDTH,
 	    			/* FONT_FAMILY,        FONT_FAMILY_SCREEN, */
 			   	FONT_SIZE, (size > 0) ? size : FONT_SIZE_DEFAULT,
-				0);
+				NULL);
 	    }
 	}
     }
@@ -362,7 +363,7 @@
 		  TEXTSW_NOTIFY_STANDARD | TEXTSW_NOTIFY_EDIT |
 		  TEXTSW_NOTIFY_DESTROY_VIEW | TEXTSW_NOTIFY_SPLIT_VIEW,
 		  HELP_INFO("ttysw:termsw")
-		  0);
+		  NULL);
     if (status != TEXTSW_STATUS_OKAY) {
 	goto Error_Return;
     }
@@ -505,18 +506,18 @@
 		  ATTR_LIST, defaults_array,
 		  TEXTSW_CLIENT_DATA, termsw_object->private_tty,
 		  TEXTSW_STATUS, &status,
-		  OPENWIN_VIEW_ATTRS, TEXTSW_FILE, tmpfile_name, 0,
+		  OPENWIN_VIEW_ATTRS, TEXTSW_FILE, tmpfile_name, 0L,
 		  TEXTSW_TEMP_FILENAME, tmpfile_name,
 		  TEXTSW_NOTIFY_PROC, ttysw_textsw_changed,
 		  WIN_LAYOUT_PROC, termsw_layout,
-		  0);
+		  NULL);
     /*
-     * (void)xv_set(termsw_public, TEXTSW_CLIENT_DATA, 0, 0);
+     * (void)xv_set(termsw_public, TEXTSW_CLIENT_DATA, 0L, NULL);
      * 
      */
      /* jcb */ (void) xv_set(termsw_public, OPENWIN_AUTO_CLEAR, FALSE,
 			     WIN_BIT_GRAVITY, ForgetGravity,
-			     0);
+			     NULL);
 
     if (status != TEXTSW_STATUS_OKAY) {
 	goto Error_Return;
@@ -535,7 +536,7 @@
      * append_only_log toggle item, and after textsw_menu has been restored.
      */
     ttysw_set_menu(termsw_public);
-    xv_set(termsw_public, WIN_MENU, termsw_folio->text_menu, 0);
+    xv_set(termsw_public, WIN_MENU, termsw_folio->text_menu, NULL);
     return (XV_OK);
 
 Error_Return:
@@ -628,7 +629,7 @@
 		Termsw_folio    termsw_folio = TERMSW_PRIVATE(termsw_folio_public);
 		Ttysw_folio     ttysw = TTY_FOLIO_FROM_TTY_VIEW_HANDLE(ttysw_view);
 
-		if (ttysw_getopt((caddr_t) ttysw, TTYOPT_TEXT) &&
+		if (ttysw_getopt(ttysw, TTYOPT_TEXT) &&
 		    termsw_folio->cooked_echo) {
 		    buf = (char *) attrs[1];
 		    buf_len = (int) attrs[2];
@@ -644,13 +645,13 @@
 		(termsw_folio_public);
 		Ttysw_folio     ttysw = TTY_FOLIO_FROM_TTY_VIEW_HANDLE(ttysw_view);
 
-		ttysw_setopt((caddr_t) ttysw, TTYOPT_TEXT, ((Termsw_mode) attrs[1] == TERMSW_MODE_TYPE));
+		ttysw_setopt(ttysw, TTYOPT_TEXT, ((Termsw_mode) attrs[1] == TERMSW_MODE_TYPE));
 		ATTR_CONSUME(*attrs);
 	    }
 	    break;
 
 	  default:
-	    (void) xv_check_bad_attr(TERMSW, attrs[0]);
+	    (void) xv_check_bad_attr(TERMSW, (int)attrs[0]);
 	    break;
 	}
     }
@@ -766,7 +767,7 @@
 	    Termsw_view_handle temp_view = folio->first_view, next;
 
 	    (void) xv_set(termsw_folio_public,
-			  WIN_LAYOUT_PROC, folio->layout_proc, 0);
+			  WIN_LAYOUT_PROC, folio->layout_proc, NULL);
 
 	    while (temp_view) {
 		next = temp_view->next;
@@ -867,7 +868,7 @@
 		Ttysw_folio     ttysw =
 			TTY_FOLIO_FROM_TTY_VIEW_HANDLE(ttysw_view);
 
-		if (ttysw_getopt((caddr_t) ttysw, TTYOPT_TEXT) &&
+		if (ttysw_getopt(ttysw, TTYOPT_TEXT) &&
 		    termsw_folio->cooked_echo) {
 		    buf = (char *) attrs[1];
 		    buf_len = (int) attrs[2];
@@ -924,10 +925,10 @@
     register Xv_opaque save = termsw_object->parent_data.private_data;
 
 
-    if ((attr == XV_IS_SUBTYPE_OF) && (va_arg(args, Xv_pkg *) == TEXTSW_VIEW))
+    if (((int)attr == XV_IS_SUBTYPE_OF) && (va_arg(args, Xv_pkg *) == TEXTSW_VIEW))
 	return ((Xv_opaque) TRUE);
 
-    switch (attr) {
+    switch ((int)attr) {
       case OPENWIN_VIEW_CLASS:
 	return ((Xv_opaque) TERMSW_VIEW);
       case XV_IS_SUBTYPE_OF:{
@@ -1184,6 +1185,7 @@
 }
 
 /* NOT USED */
+void
 termsw_caret_rendered()
 {
     caret_cleared = FALSE;
@@ -1193,6 +1195,7 @@
  * this only returns correct value the next time
  */
 /* NOT USED */
+short
 termsw_caret_invalid()
 {
     short           ret = caret_cleared;
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/tty.c xview-3.2p1.4/lib/libxview/ttysw/tty.c
--- xview-3.2p1.4.orig/lib/libxview/ttysw/tty.c	1993-06-29 07:17:12.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/ttysw/tty.c	2013-01-07 12:50:57.324822000 +0100
@@ -50,7 +50,18 @@
 extern caddr_t  textsw_checkpoint_undo();
 extern Attr_avlist attr_find();
 
-static int      tty_quit_on_death(), tty_handle_death();
+#ifdef __STDC__
+#ifndef SVR4
+static void	tty_quit_on_death(Ttysw_folio tty_folio_private, int pid, union wait *status, struct rusage *rusage);
+static void	tty_handle_death(Ttysw_folio tty_folio_private, int pid, union wait *status, struct rusage *rusage);
+#else
+static void	tty_quit_on_death(Ttysw_folio tty_folio_private, int pid, int *status, struct rusage *rusage);
+static void	tty_handle_death(Ttysw_folio tty_folio_private, int pid, int *status, struct rusage *rusage);
+#endif
+#else
+static void	tty_quit_on_death();
+static void	tty_handle_death();
+#endif
 
 Pkg_private Xv_Window csr_pixwin;
 Pkg_private Notify_value ttysw_event();
@@ -218,7 +229,7 @@
 #endif
 
     for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
-	switch (attrs[0]) {
+	switch ((int)attrs[0]) {
 
 	  case TTY_ARGV:
 	    do_fork = TRUE;
@@ -393,10 +404,10 @@
                 view = TTY_VIEW_HANDLE_FROM_TTY_FOLIO(ttysw);
                 view_public = TTY_VIEW_PUBLIC(view);
 
-                xv_set(view_public, WIN_IC, ttysw->ic, 0);
+                xv_set(view_public, WIN_IC, ttysw->ic, NULL);
 
 		if ( xv_get(ttysw_pub, WIN_IC_ACTIVE) == FALSE )
-		    xv_set(view_public, WIN_IC_ACTIVE, FALSE, 0);
+		    xv_set(view_public, WIN_IC_ACTIVE, FALSE, NULL);
             }
 #endif
             break;
@@ -412,7 +423,7 @@
      * track of the process id of the current child, and could be tricked
      * into having multiple children executing at once.
      */
-    if ((int) argv == TTY_ARGV_DO_NOT_FORK) {
+    if ((long)argv == TTY_ARGV_DO_NOT_FORK) {
 	ttysw->ttysw_pidchild = TEXTSW_INFINITY;
     } else {
 	if (argv_set && ttysw->ttysw_pidchild == TEXTSW_INFINITY) {
@@ -475,12 +486,12 @@
 {
     Ttysw_folio     ttysw = TTY_PRIVATE_FROM_ANY_PUBLIC(tty_public);
 
-    switch (attr) {
+    switch ((int)attr) {
       case OPENWIN_VIEW_CLASS:
 	return ((Xv_opaque) TTY_VIEW);
 
       case TTY_PAGE_MODE:
-	return (Xv_opaque) ttysw_getopt((char *) (ttysw), TTYOPT_PAGEMODE);
+	return (Xv_opaque) ttysw_getopt(ttysw, TTYOPT_PAGEMODE);
 
       case TTY_QUIT_ON_CHILD_DEATH:
 	return (Xv_opaque) 0;
@@ -530,9 +541,9 @@
 
 
 /* ARGSUSED */
-static
+static void
 tty_quit_on_death(client, pid, status, rusage)
-    caddr_t         client;
+    Ttysw_folio     client;
     int             pid;
 #ifndef SVR4
     union wait     *status;
@@ -575,14 +586,14 @@
 	    }
 	}
 	frame = xv_get(tty_public, WIN_FRAME);
-	(void) xv_set(frame, FRAME_NO_CONFIRM, TRUE, 0);
+	(void) xv_set(frame, FRAME_NO_CONFIRM, TRUE, NULL);
 	xv_destroy(frame);
 
     }
 }
 
 /* ARGSUSED */
-static
+static void
 tty_handle_death(tty_folio_private, pid, status, rusage)
     Ttysw_folio     tty_folio_private;
     int             pid;
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/tty.h xview-3.2p1.4/lib/libxview/ttysw/tty.h
--- xview-3.2p1.4.orig/lib/libxview/ttysw/tty.h	1993-06-29 07:17:13.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/ttysw/tty.h	2013-01-07 12:50:57.356188000 +0100
@@ -44,7 +44,7 @@
 
 #define TTY_ATTR(type, ordinal)	ATTR(ATTR_PKG_TTY, type, ordinal)
 #define	ATTR_BUF_LEN_USED	ATTR_TYPE(ATTR_BASE_OPAQUE, 3)
-#define	TTY_ARGV_DO_NOT_FORK	-1
+#define	TTY_ARGV_DO_NOT_FORK	-1L
 #define	TTY_INFINITY		((long)0x77777777)
 
 /*
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/tty_compat.c xview-3.2p1.4/lib/libxview/ttysw/tty_compat.c
--- xview-3.2p1.4.orig/lib/libxview/ttysw/tty_compat.c	1993-06-29 07:17:14.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/ttysw/tty_compat.c	2013-01-07 12:50:57.399777000 +0100
@@ -31,6 +31,7 @@
 }
 
 /* NOT USED */
+int
 ttysw_cmd(ttysw_opaque, buf, buflen)
     caddr_t         ttysw_opaque;
     char           *buf;
@@ -44,7 +45,8 @@
 
 Xv_public int
 ttysw_input(ttysw0, addr, len)
-    caddr_t         ttysw0;
+/*  caddr_t         ttysw0;*/
+    Tty             ttysw0;
     char           *addr;
     int             len;
 {
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/tty_es.c xview-3.2p1.4/lib/libxview/ttysw/tty_es.c
--- xview-3.2p1.4.orig/lib/libxview/ttysw/tty_es.c	1993-06-29 07:17:18.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/ttysw/tty_es.c	2013-01-07 12:50:57.652054000 +0100
@@ -120,7 +120,7 @@
     register Termsw_folio folio = TERMSW_FOLIO_FROM_TERMSW_VIEW_HANDLE(termsw_view);
     Attr_attribute *attrs;
     Es_handle       to_insert;
-    u_int           result;
+    int             result;
 
     /* do this only if we're not in cooked echo mode */
     for (attrs = attr_argv; *attrs; attrs = attr_next(attrs)) {
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/tty_gtty.c xview-3.2p1.4/lib/libxview/ttysw/tty_gtty.c
--- xview-3.2p1.4.orig/lib/libxview/ttysw/tty_gtty.c	2013-01-07 12:36:13.119942000 +0100
+++ xview-3.2p1.4/lib/libxview/ttysw/tty_gtty.c	2013-01-07 12:50:57.679387000 +0100
@@ -15,9 +15,12 @@
  */
 
 #include <sys/types.h>
+#include <sys/stat.h>
+#include <fcntl.h>
 #include <stdio.h>
 #include <xview_private/portable.h>	/* for tty_mode_t and XV* defines */
 #include <xview_private/tty_impl.h>
+#include <unistd.h>			/* isatty() */
 
 #undef CTRL
 #define CTRL(c) (c & 037)
@@ -132,6 +135,12 @@
 
 #endif	/* XV_USE_TERMIOS */
 
+#ifdef __STDC__
+extern int _we_setstrfromenvironment(char *tag, char *target);
+#else
+extern int _we_setstrfromenvironment();
+#endif
+
 #ifdef	XV_USE_TERMIOS
 
 /*
@@ -292,7 +301,7 @@
 
 #ifndef __linux__
 	if (sscanf(str,
-		"%ld,%ld,%ld,%ld,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd",
+		"%d,%d,%d,%d,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd",
 		&tp->c_iflag, &tp->c_oflag, &tp->c_cflag, &tp->c_lflag,
 		&temps[0],  &temps[1],  &temps[2],  &temps[3],
 		&temps[4],  &temps[5],  &temps[6],  &temps[7],
@@ -310,7 +319,7 @@
     }
 #else /* __linux__ */
 	if (sscanf(str,
-		"%ld,%ld,%ld,%ld,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd",
+		"%d,%d,%d,%d,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd",
 		&tp->c_iflag, &tp->c_oflag, &tp->c_cflag, &tp->c_lflag,
 		&temps[0],  &temps[1],  &temps[2],  &temps[3],
 		&temps[4],  &temps[5],  &temps[6],  &temps[7],
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/tty_impl.h xview-3.2p1.4/lib/libxview/ttysw/tty_impl.h
--- xview-3.2p1.4.orig/lib/libxview/ttysw/tty_impl.h	2013-01-07 12:36:12.523998000 +0100
+++ xview-3.2p1.4/lib/libxview/ttysw/tty_impl.h	2013-01-07 12:50:57.845646000 +0100
@@ -450,7 +450,7 @@
 	ttysw_walkmenu();
 
 
-#ifdef	cplus
+#if defined(cplus) || defined(__STDC__) || defined (__cplusplus)
 /*
  * C Library routines specifically related to private ttysw subwindow
  * functions.  ttysw_output and ttysw_input return the number of characters
@@ -464,6 +464,6 @@
 ttysw_input(Tty ttysw_public, char *addr, int len);
 
 /* Add string to the input queue. */
-#endif	/* cplus */
+#endif
 
 #endif /* _xview_private_ttysw_impl_h_already_included */
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/tty_init.c xview-3.2p1.4/lib/libxview/ttysw/tty_init.c
--- xview-3.2p1.4.orig/lib/libxview/ttysw/tty_init.c	2013-01-07 12:36:13.549952000 +0100
+++ xview-3.2p1.4/lib/libxview/ttysw/tty_init.c	2013-01-07 12:50:58.027676000 +0100
@@ -90,8 +90,11 @@
 #define jcsetpgrp(p)	setpgrp((p),(p))
 #endif
 
-
-extern long     lseek();
+#ifdef __linux__
+#include <unistd.h>
+#else
+extern off_t    lseek();
+#endif
 char           *textsw_checkpoint_undo();
 
 /* static */ void ttysw_parseargs();
@@ -149,6 +152,12 @@
 
 static int ttyinit(Ttysw *ttysw);
 
+#ifdef __STDC__
+static int ttyinit(Ttysw *ttysw);
+#else
+static int ttyinit();
+#endif
+
 Pkg_private int
 ttysw_lookup_boldstyle(str)
     char           *str;
@@ -207,21 +216,21 @@
     }
     /* create stop cursor but don't show it */
     DRAWABLE_INFO_MACRO(tty_view_public, info);	/* define info */
-    ttysw_stop_cursor = xv_get(xv_server(info), XV_KEY_DATA, CURSOR_STOP_PTR);
+    ttysw_stop_cursor = xv_get(xv_server(info), XV_KEY_DATA, (Attr_attribute)CURSOR_STOP_PTR);
     if (!ttysw_stop_cursor) {
 	ttysw_stop_cursor = xv_create(tty_view_public, CURSOR,
 				      CURSOR_SRC_CHAR, OLC_STOP_PTR,
 				      CURSOR_MASK_CHAR, 0,
-				      0);
+				      NULL);
 	xv_set(xv_server(info),
-	       XV_KEY_DATA, CURSOR_STOP_PTR, ttysw_stop_cursor,
-	       0);
+	       XV_KEY_DATA, (Attr_attribute)CURSOR_STOP_PTR, ttysw_stop_cursor,
+	       NULL);
     }
     xv_set(tty_view_public,
 	   WIN_ROW_HEIGHT, xv_get(parent, WIN_ROW_HEIGHT),
 	   WIN_RETAINED, xv_get(xv_screen(info), SCREEN_RETAIN_WINDOWS),
 	   XV_HELP_DATA, "xview:ttysw",
-	   0);
+	   NULL);
 
     return ((Xv_opaque) ttysw_view);
 
@@ -306,7 +315,7 @@
 
     (void) ttysw_readrc(ttysw);
 
-    xv_set(tty_public, XV_HELP_DATA, "xview:ttysw", 0);
+    xv_set(tty_public, XV_HELP_DATA, "xview:ttysw", NULL);
 
     if (ttyinit(ttysw) == XV_ERROR) {
 	free((char *) ttysw);
@@ -377,14 +386,14 @@
 				FONT_FAMILY, FONT_FAMILY_DEFAULT_FIXEDWIDTH,
 		/* FONT_FAMILY,	FONT_FAMILY_SCREEN, */
 		       FONT_SCALE, (scale > 0) ? scale : FONT_SCALE_DEFAULT,
-					   0);
+					   NULL);
 	    } else {
 		size = (int) xv_get(parent_font, FONT_SIZE);
 		font = (Xv_opaque) xv_find(tty_public, FONT,
 				FONT_FAMILY, FONT_FAMILY_DEFAULT_FIXEDWIDTH,
 		/* FONT_FAMILY,	FONT_FAMILY_SCREEN, */
 			   FONT_SIZE, (size > 0) ? size : FONT_SIZE_DEFAULT,
-					   0);
+					   NULL);
 	    }
 	}
     } else {
@@ -397,14 +406,14 @@
 				FONT_FAMILY, FONT_FAMILY_DEFAULT_FIXEDWIDTH,
 	    			/* FONT_FAMILY,	FONT_FAMILY_SCREEN, */
 		       		FONT_SCALE, (scale > 0) ? scale : FONT_SCALE_DEFAULT,
-				0);
+				NULL);
 	    } else {
 	        int             size = (int) xv_get(parent_font, FONT_SIZE);
 	        font = (Xv_opaque) xv_find(tty_public, FONT,
 				FONT_FAMILY, FONT_FAMILY_DEFAULT_FIXEDWIDTH,
 	    			/* FONT_FAMILY,	FONT_FAMILY_SCREEN, */
 			   	FONT_SIZE, (size > 0) ? size : FONT_SIZE_DEFAULT,
-				0);
+				NULL);
 	    }
         }
     }
@@ -428,7 +437,7 @@
     /* Set WIN_ROW_HEIGHT so that xv_set of WIN_ROWS will work when
      * Text.LineSpacing is set to a nonzero value.
      */
-    xv_set(tty_public, WIN_ROW_HEIGHT, chrheight, 0);
+    xv_set(tty_public, WIN_ROW_HEIGHT, chrheight, NULL);
 
     return ((Xv_opaque) ttysw);
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/tty_main.c xview-3.2p1.4/lib/libxview/ttysw/tty_main.c
--- xview-3.2p1.4.orig/lib/libxview/ttysw/tty_main.c	2013-01-07 12:36:12.622910000 +0100
+++ xview-3.2p1.4/lib/libxview/ttysw/tty_main.c	2013-01-07 12:50:58.070362000 +0100
@@ -68,6 +68,7 @@
 #if defined(__linux__) && defined(__GLIBC__)
 /* martin.buck@bigfoot.com */
 #include <sys/ioctl.h>
+#include <unistd.h>			/* write() */
 #endif
 
 #ifdef OW_I18N
@@ -85,6 +86,18 @@
 extern Textsw_index textsw_insert_wcs();
 #endif
 
+#ifdef __STDC__
+static int ttysw_process_point(Ttysw_folio ttysw, struct inputevent *ie);
+static int ttysw_process_adjust(Ttysw_folio ttysw, struct inputevent *ie);
+static int ttysw_process_motion(Ttysw_folio ttysw, struct inputevent *ie);
+static int ttysw_process_keyboard(Ttysw_folio ttysw, struct inputevent *ie);
+#else
+static int ttysw_process_point();
+static int ttysw_process_adjust();
+static int ttysw_process_motion();
+static int ttysw_process_keyboard();
+#endif
+
 /*
  * jcb	-- remove continual cursor repaint in shelltool windows also known to
  * ttyansi.c
@@ -222,7 +235,7 @@
         int		mb_nbytes;		/* number of bytes converted */
         CHAR		save_char;
 
-    if (ttysw_getopt((caddr_t) ttysw, TTYOPT_TEXT)) {
+    if (ttysw_getopt(ttysw, TTYOPT_TEXT)) {
         Termsw_folio    termsw =
                 TERMSW_FOLIO_FOR_VIEW(TERMSW_VIEW_PRIVATE_FROM_TTY_PRIVATE(ttysw));
 
@@ -378,7 +391,7 @@
 {
     register int    cc;
 
-    if (ttysw_getopt((caddr_t) ttysw, TTYOPT_TEXT)) {
+    if (ttysw_getopt(ttysw, TTYOPT_TEXT)) {
 	Termsw_folio    termsw = TERMSW_FOLIO_FOR_VIEW(TERMSW_VIEW_PRIVATE_FROM_TTY_PRIVATE(ttysw));
 
 	if (termsw->pty_eot > -1) {
@@ -1043,12 +1056,12 @@
 	/*
 	 * Input buffer would overflow, so tell user and discard chars.
 	 */
-	Frame		frame = xv_get(TTY_PUBLIC(ttysw), WIN_FRAME);
+	Frame		frame = (Frame)xv_get(TTY_PUBLIC(ttysw), WIN_FRAME);
 	Xv_Notice	tty_notice;
 
-	tty_notice = xv_get(frame, XV_KEY_DATA, tty_notice_key, NULL);
+	tty_notice = (Xv_Notice)xv_get(frame, XV_KEY_DATA, (Attr_attribute)tty_notice_key, NULL);
 	if (!tty_notice)  {
-	    tty_notice = xv_create(frame, NOTICE,
+	    tty_notice = (Xv_Notice)xv_create(frame, NOTICE,
 		NOTICE_LOCK_SCREEN, FALSE,
 		NOTICE_BLOCK_THREAD, TRUE,
 		NOTICE_BUTTON_YES, XV_MSG("Continue"),
@@ -1056,11 +1069,11 @@
 		    XV_MSG("Too many characters to add to the input buffer.\n\
 Wait a few seconds after you click Continue,\n\
 then retype the missing characters."),
-		    0,
+		    NULL,
 		XV_SHOW, TRUE,
-		0);
+		NULL);
 	    xv_set(frame, 
-		XV_KEY_DATA, tty_notice_key, tty_notice, 
+		XV_KEY_DATA, (Attr_attribute)tty_notice_key, tty_notice, 
 		NULL);
 	} else {
 	    xv_set(tty_notice, 
@@ -1071,9 +1084,9 @@
 		    XV_MSG("Too many characters to add to the input buffer.\n\
 Wait a few seconds after you click Continue,\n\
 then retype the missing characters."),
-		    0,
+		    NULL,
 		XV_SHOW, TRUE, 
-		0);
+		NULL);
 	}
 	return (0);
     }
@@ -1595,14 +1608,14 @@
 	if (tty_iscanon(&tmp)) {
 	    xv_set(ttysw_view_public,
 		   WIN_CURSOR, ttysw_stop_cursor,
-		   0);
+		   NULL);
 	    ttysw->ttysw_flags |= TTYSW_FL_FROZEN;
 	} else
 	    ttysw->ttysw_lpp = 0;
     } else if ((ttysw->ttysw_flags & TTYSW_FL_FROZEN) && !on) {
 	xv_set(ttysw_view_public,
 	       WIN_CURSOR, ttysw_cursor,
-	       0);
+	       NULL);
 	ttysw->ttysw_flags &= ~TTYSW_FL_FROZEN;
 	ttysw->ttysw_lpp = 0;
     }
@@ -1614,7 +1627,7 @@
  */
 Pkg_private void
 ttysw_setopt(ttysw_folio_or_view, opt, on)
-    Xv_opaque       ttysw_folio_or_view;
+    Ttysw_folio     ttysw_folio_or_view;
     int             opt, on;
 {
     Tty             folio_or_view_public = 
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/tty_menu.c xview-3.2p1.4/lib/libxview/ttysw/tty_menu.c
--- xview-3.2p1.4.orig/lib/libxview/ttysw/tty_menu.c	1993-06-29 07:17:15.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/ttysw/tty_menu.c	2013-01-07 12:50:58.525044000 +0100
@@ -67,6 +67,11 @@
 static void     ttysw_menu_page();
 static void     ttysw_menu_copy();
 static void     ttysw_menu_paste();
+#ifdef __STDC__
+static void	panel_button_proc(Panel_item *item, Event *event);
+#else
+static void	panel_button_proc();
+#endif
 /* static */ int ttysw_enable_editor();
 /* static */ int ttysw_disable_editor();
 /* static */ int ttysw_mode_action();
@@ -91,9 +96,9 @@
 
     ttysw_menu = xv_create(XV_SERVER_FROM_WINDOW(ttysw_folio_public), MENU,
 			   HELP_INFO("ttysw:menu")
-			   0);
+			   NULL);
 
-    page_mode_item = xv_create(NULL,
+    page_mode_item = xv_create((Xv_object)NULL,
 			       MENUITEM,
 			       MENU_STRING, 
 			       XV_MSG("Disable Page Mode"),
@@ -101,26 +106,26 @@
 			       MENU_GEN_PROC, ttysw_menu_page_state,
 			       MENU_CLIENT_DATA, ttysw_folio_public,
 			       HELP_INFO("ttysw:mdsbpage")
-			       0);
+			       NULL);
 
 
-    copy_item = xv_create(NULL,
+    copy_item = xv_create((Xv_object)NULL,
 			  MENUITEM,
 			  MENU_STRING, 
 			  XV_MSG("Copy"),
 			  MENU_ACTION, ttysw_menu_copy,
 			  MENU_CLIENT_DATA, ttysw_folio_public,
 			  HELP_INFO("ttysw:mcopy")
-			  0);
+			  NULL);
 
-    paste_item = xv_create(NULL,
+    paste_item = xv_create((Xv_object)NULL,
 			   MENUITEM,
 			   MENU_STRING, 
 			   XV_MSG("Paste"),
 			   MENU_ACTION, ttysw_menu_paste,
 			   MENU_CLIENT_DATA, ttysw_folio_public,
 			   HELP_INFO("ttysw:mpaste")
-			   0);
+			   NULL);
 
 
 
@@ -129,20 +134,20 @@
 		  MENU_APPEND_ITEM, page_mode_item,
 		  MENU_APPEND_ITEM, copy_item,
 		  MENU_APPEND_ITEM, paste_item,
-		  0);
+		  NULL);
 
 
     if (IS_TERMSW(ttysw_folio_public)) {
-	enable_scroll_item = xv_create(NULL,
+	enable_scroll_item = xv_create((Xv_object)NULL,
 				       MENUITEM,
 				       MENU_STRING, 
 				       XV_MSG("Enable Scrolling"),
 				       MENU_ACTION, ttysw_enable_scrolling,
 				       MENU_CLIENT_DATA, ttysw_folio_public,
 				       HELP_INFO("ttysw:menscroll")
-				       0);
+				       NULL);
 	(void) xv_set(ttysw_menu,
-		      MENU_APPEND_ITEM, enable_scroll_item, 0);
+		      MENU_APPEND_ITEM, enable_scroll_item, NULL);
 
     }
     return (ttysw_menu);
@@ -166,14 +171,14 @@
 	if (ttysw_getopt(ttysw, TTYOPT_TEXT)) {
 	    ttysw->current_view_public = anysw_view_public;
 	    menu = termsw->text_menu;
-	    xv_set(menu, XV_KEY_DATA, TEXTSW_MENU_DATA_KEY,
-		   anysw_view_public, 0);
+	    xv_set(menu, XV_KEY_DATA, (Attr_attribute)TEXTSW_MENU_DATA_KEY,
+		   anysw_view_public, NULL);
 	} else if (ttysw->current_view_public == anysw_view_public)
 	    menu = termsw->tty_menu;
 	else {
 	    menu = termsw->text_menu;
-	    xv_set(menu, XV_KEY_DATA, TEXTSW_MENU_DATA_KEY,
-		   anysw_view_public, 0);
+	    xv_set(menu, XV_KEY_DATA, (Attr_attribute)TEXTSW_MENU_DATA_KEY,
+		   anysw_view_public, NULL);
 	}
     }
 
@@ -182,9 +187,9 @@
 
     /* insure that there are no caret render race conditions */
     termsw_menu_set();
-    xv_set(menu, MENU_DONE_PROC, termsw_menu_clr, 0);
+    xv_set(menu, MENU_DONE_PROC, termsw_menu_clr, NULL);
 
-    menu_show(menu, anysw_view_public, event, 0);
+    menu_show(menu, anysw_view_public, event, NULL);
 }
 
 
@@ -213,17 +218,17 @@
     if (ttysw->ttysw_flags & TTYSW_FL_FROZEN)
 	(void) menu_set(mi, MENU_STRING, XV_MSG("Continue"),
 			HELP_INFO("ttysw:mcont")
-			0);
+			NULL);
     else if (ttysw_getopt((caddr_t) ttysw, TTYOPT_PAGEMODE))
 	(void) menu_set(mi, MENU_STRING, 
 		XV_MSG("Disable Page Mode"),
 			HELP_INFO("ttysw:mdsbpage")
-			0);
+			NULL);
     else
 	(void) menu_set(mi, MENU_STRING, 
 		XV_MSG("Enable Page Mode "),
 			HELP_INFO("ttysw:menbpage")
-			0);
+			NULL);
     return mi;
 }
 
@@ -277,7 +282,7 @@
 
     if (!ttysw_do_copy(ttysw)) {
 	Frame           frame = xv_get(ttysw_public, WIN_FRAME);
-	tty_notice = xv_get(frame, XV_KEY_DATA, tty_notice_key, NULL);
+	tty_notice = xv_get(frame, XV_KEY_DATA, (Attr_attribute)tty_notice_key, NULL);
 
 	if (!tty_notice)  {
     	    tty_notice = xv_create(frame, NOTICE,
@@ -287,12 +292,12 @@
 			  XV_MSG("Continue"),
 		          NOTICE_MESSAGE_STRINGS,
 		      XV_MSG("Please make a primary selection first."),
-		              0,
+		              NULL,
 			  XV_SHOW, TRUE,
-		          0);
+		          NULL);
 
 	    xv_set(frame, 
-		XV_KEY_DATA, tty_notice_key, tty_notice, 
+		XV_KEY_DATA, (Attr_attribute)tty_notice_key, tty_notice, 
 		NULL);
 
         }
@@ -304,9 +309,9 @@
 			XV_MSG("Continue"),
 		        NOTICE_MESSAGE_STRINGS,
 		      XV_MSG("Please make a primary selection first."),
-		        0,
+		        NULL,
 			XV_SHOW, TRUE, 
-			0);
+			NULL);
 	}
     }
 }
@@ -330,7 +335,7 @@
 #endif
     if (!ttysw_do_paste(ttysw)) {
 	Frame           frame = xv_get(ttysw_public, WIN_FRAME);
-	tty_notice = xv_get(frame, XV_KEY_DATA, tty_notice_key, NULL);
+	tty_notice = xv_get(frame, XV_KEY_DATA, (Attr_attribute)tty_notice_key, NULL);
 	if (!tty_notice)  {
     	    tty_notice = xv_create(frame, NOTICE,
 			  NOTICE_LOCK_SCREEN, FALSE,
@@ -339,12 +344,12 @@
 			  XV_MSG("Continue"),
 		          NOTICE_MESSAGE_STRINGS,
 		      XV_MSG("Please Copy text onto clipboard first."),
-		              0,
+		              NULL,
 			  XV_SHOW, TRUE,
-		          0);
+		          NULL);
 
 	    xv_set(frame, 
-		XV_KEY_DATA, tty_notice_key, tty_notice, 
+		XV_KEY_DATA, (Attr_attribute)tty_notice_key, tty_notice, 
 		NULL);
 
         }
@@ -356,9 +361,9 @@
 			XV_MSG("Continue"),
 			NOTICE_MESSAGE_STRINGS,
 		      XV_MSG("Please Copy text onto clipboard first."),
-			0,
+			NULL,
 			XV_SHOW, TRUE, 
-			0);
+			NULL);
 	}
 
     }
@@ -382,18 +387,18 @@
     server = XV_SERVER_FROM_WINDOW(termsw_public);
     termsw_folio->text_menu = xv_create(server, MENU,
 					HELP_INFO("ttysw:mterms")
-					0);
+					NULL);
 
     /* History sub menu */
     history_menu = xv_create(server, MENU,
 			     MENU_CLIENT_DATA, textsw,
 			     HELP_INFO("ttysw:mhistory")
-			     0);
+			     NULL);
     mode_menu = xv_create(server, MENU_CHOICE_MENU,
 			  HELP_INFO("ttysw:mmode")
-			  0);
+			  NULL);
 
-    editiable_item = xv_create(NULL,
+    editiable_item = xv_create((Xv_object)NULL,
 			       MENUITEM,
 			       MENU_STRING, 
 			       XV_MSG("Editable"),
@@ -401,8 +406,8 @@
 			       MENU_ACTION, ttysw_mode_action,
 			       MENU_CLIENT_DATA, textsw,
 			       HELP_INFO("ttysw:mmode")
-			       0);
-    readonly_item = xv_create(NULL,
+			       NULL);
+    readonly_item = xv_create((Xv_object)NULL,
 			      MENUITEM,
 			      MENU_STRING, 
 			      XV_MSG("Read Only"),
@@ -410,23 +415,23 @@
 			      MENU_ACTION, ttysw_mode_action,
 			      MENU_CLIENT_DATA, textsw,
 			      HELP_INFO("ttysw:mmode")
-			      0);
+			      NULL);
 
     xv_set(mode_menu,
 	   MENU_APPEND_ITEM, editiable_item,
 	   MENU_APPEND_ITEM, readonly_item,
 	   MENU_DEFAULT_ITEM, readonly_item,
-	   0);
+	   NULL);
 
-    mode_item = (Menu_item) xv_create(NULL,
+    mode_item = (Menu_item) xv_create((Xv_object)NULL,
 				      MENUITEM,
 				      MENU_STRING, 
 				      XV_MSG("Mode"),
 				      MENU_PULLRIGHT, mode_menu,
 				      HELP_INFO("ttysw:mmode")
-				      0);
+				      NULL);
 
-    store_item = xv_create(NULL,
+    store_item = xv_create((Xv_object)NULL,
 			   MENUITEM,
 			   MENU_STRING, 
 			   XV_MSG("Store log as new file "),
@@ -434,8 +439,8 @@
 			   MENU_VALUE, TEXTSW_MENU_STORE,
 			   MENU_CLIENT_DATA, textsw,
 			   HELP_INFO("textsw:mstorelog")
-			   0);
-    clear_item = xv_create(NULL,
+			   NULL);
+    clear_item = xv_create((Xv_object)NULL,
 			   MENUITEM,
 			   MENU_STRING, 
 			   XV_MSG("Clear log"),
@@ -443,93 +448,93 @@
 			   MENU_VALUE, TEXTSW_MENU_RESET,
 			   MENU_CLIENT_DATA, textsw,
 			   HELP_INFO("textsw:mclearlog")
-			   0);
+			   NULL);
 
     xv_set(history_menu,
 	   MENU_APPEND_ITEM, mode_item,
 	   MENU_APPEND_ITEM, store_item,
 	   MENU_APPEND_ITEM, clear_item,
-	   0);
+	   NULL);
 
-    history_item = (Menu_item) xv_create(NULL,
+    history_item = (Menu_item) xv_create((Xv_object)NULL,
 					 MENUITEM,
 					 MENU_STRING, 
 					 XV_MSG("History"),
 					 MENU_PULLRIGHT, history_menu,
 					 HELP_INFO("ttysw:mhistory")
-					 0);
+					 NULL);
 
-    edit_item = (Menu) xv_create(NULL,
+    edit_item = (Menu) xv_create((Xv_object)NULL,
 				 MENUITEM,
 				 MENU_STRING, XV_MSG("Edit"),
 		 MENU_PULLRIGHT, xv_get(termsw_public, TEXTSW_SUBMENU_EDIT),
 				 HELP_INFO("ttysw:medit")
-				 0);
+				 NULL);
 
-    find_item = (Menu) xv_create(NULL,
+    find_item = (Menu) xv_create((Xv_object)NULL,
 				 MENUITEM,
 				 MENU_STRING, XV_MSG("Find"),
 		 MENU_PULLRIGHT, xv_get(termsw_public, TEXTSW_SUBMENU_FIND),
 				 HELP_INFO("ttysw:mfind")
-				 0);
+				 NULL);
 
-    extras_item = (Menu) xv_create(NULL,
+    extras_item = (Menu) xv_create((Xv_object)NULL,
 				   MENUITEM,
 				   MENU_STRING, 
 				   XV_MSG("Extras"),
 	      MENU_PULLRIGHT, xv_get(termsw_public, TEXTSW_EXTRAS_CMD_MENU),
 				   HELP_INFO("ttysw:mcommands")
-				   0);
+				   NULL);
 
     /* Editor sub menu */
     editor_menu = xv_create(server, MENU_CHOICE_MENU,
 			    HELP_INFO("textsw:meditor")
-			    0);
+			    NULL);
 
-    enable_editor_item = xv_create(NULL,
+    enable_editor_item = xv_create((Xv_object)NULL,
 				   MENUITEM,
 				   MENU_STRING, 
 				   XV_MSG("Enable"),
 				   MENU_ACTION, ttysw_enable_editor,
 				   MENU_CLIENT_DATA, textsw,
 				   HELP_INFO("textsw:meneditor")
-				   0);
-    disable_editor_item = xv_create(NULL,
+				   NULL);
+    disable_editor_item = xv_create((Xv_object)NULL,
 				    MENUITEM,
 				    MENU_STRING, 
 				    XV_MSG("Disable"),
 				    MENU_CLIENT_DATA, textsw,
 				    MENU_ACTION, ttysw_disable_editor,
 				    HELP_INFO("textsw:mdiseditor")
-				    0);
+				    NULL);
 
     xv_set(editor_menu,
 	   MENU_APPEND_ITEM, enable_editor_item,
 	   MENU_APPEND_ITEM, disable_editor_item,
 	   MENU_DEFAULT_ITEM, enable_editor_item,
-	   0);
-    editor_item = (Menu) xv_create(NULL,
+	   NULL);
+    editor_item = (Menu) xv_create((Xv_object)NULL,
 				   MENUITEM,
 				   MENU_STRING, 
 				   XV_MSG("File Editor"),
 				   MENU_PULLRIGHT, editor_menu,
 				   HELP_INFO("ttysw:meditor")
-				   0);
+				   NULL);
 
     /* Scrolling sub menu */
     scroll_menu = xv_create(server, MENU_CHOICE_MENU,
 			    HELP_INFO("textsw:mscroll")
-			    0);
+			    NULL);
 
-    enable_scroll_item = xv_create(NULL,
+    enable_scroll_item = xv_create((Xv_object)NULL,
 				   MENUITEM,
 				   MENU_STRING, 
 				   XV_MSG("Enable Scrolling"),
 				   MENU_VALUE, ENABLE_SCROLL,
 				   MENU_CLIENT_DATA, textsw,
 				   HELP_INFO("textsw:menscroll")
-				   0);
-    disable_scroll_item = xv_create(NULL,
+				   NULL);
+    disable_scroll_item = xv_create((Xv_object)NULL,
 				    MENUITEM,
 				    MENU_STRING, 
 				    XV_MSG("Disable Scrolling"),
@@ -537,20 +542,20 @@
 				    MENU_ACTION, ttysw_disable_scrolling,
 				    MENU_CLIENT_DATA, textsw,
 				    HELP_INFO("textsw:mdisscroll")
-				    0);
+				    NULL);
 
     xv_set(scroll_menu,
 	   MENU_APPEND_ITEM, enable_scroll_item,
 	   MENU_APPEND_ITEM, disable_scroll_item,
 	   HELP_INFO("textsw:mscroll")
-	   0);
-    scroll_item = (Menu) xv_create(NULL,
+	   NULL);
+    scroll_item = (Menu) xv_create((Xv_object)NULL,
 				   MENUITEM,
 				   MENU_STRING, 
 				   XV_MSG("Scrolling"),
 				   MENU_PULLRIGHT, scroll_menu,
 				   HELP_INFO("ttysw:mscroll")
-				   0);
+				   NULL);
 
     (void) xv_set(termsw_folio->text_menu,
 		  MENU_TITLE_ITEM, XV_MSG("Term Pane"),
@@ -560,7 +565,7 @@
 		  MENU_APPEND_ITEM, extras_item,
 		  MENU_APPEND_ITEM, editor_item,
 		  MENU_APPEND_ITEM, scroll_item,
-		  0);
+		  NULL);
 }
 
 /*ARGSUSED*/
@@ -569,15 +574,15 @@
     Panel_item     *item;
     Event          *event;
 {
-    Textsw textsw = (Textsw)xv_get((Xv_opaque)item, XV_KEY_DATA, ITEM_DATA_KEY);
+    Textsw textsw = (Textsw)xv_get((Xv_opaque)item, XV_KEY_DATA, (Attr_attribute)ITEM_DATA_KEY);
     Menu            menu = (Menu) xv_get((Xv_opaque)item, PANEL_ITEM_MENU);
     Panel           p_menu = (Panel) xv_get(menu, MENU_PIN_WINDOW);
     Menu_item       menu_item;
     Menu            pullr_menu;
     int             num_items, i;
 
-    xv_set(menu, XV_KEY_DATA, TEXTSW_MENU_DATA_KEY,
-	   textsw, 0);
+    xv_set(menu, XV_KEY_DATA, (Attr_attribute)TEXTSW_MENU_DATA_KEY,
+	   textsw, NULL);
     if (p_menu) {
 	num_items = (int) xv_get(menu, MENU_NITEMS);
 	for (i = 1; i <= num_items; i++) {
@@ -585,8 +590,8 @@
 	    if (menu_item) {
 		pullr_menu = (Menu) xv_get(menu_item, MENU_PULLRIGHT);
 		if (pullr_menu)
-		    xv_set(pullr_menu, XV_KEY_DATA, TEXTSW_MENU_DATA_KEY,
-			   textsw, 0);
+		    xv_set(pullr_menu, XV_KEY_DATA, (Attr_attribute)TEXTSW_MENU_DATA_KEY,
+			   textsw, NULL);
 	    }
 	}
     }
@@ -607,20 +612,20 @@
 				XV_MSG("File"),
 				PANEL_NOTIFY_PROC, panel_button_proc,
 		PANEL_ITEM_MENU, (Menu) xv_get(textsw, TEXTSW_SUBMENU_FILE),
-				0);
+				NULL);
     display_panel_item = xv_create(panel, PANEL_BUTTON,
 				   PANEL_LABEL_STRING, 
 				   XV_MSG("View"),
 				   PANEL_NOTIFY_PROC, panel_button_proc,
 		PANEL_ITEM_MENU, (Menu) xv_get(textsw, TEXTSW_SUBMENU_VIEW),
-				   0);
+				   NULL);
 
     edit_panel_item = xv_create(panel, PANEL_BUTTON,
 				PANEL_LABEL_STRING, 
 				XV_MSG("Edit"),
 				PANEL_NOTIFY_PROC, panel_button_proc,
 		PANEL_ITEM_MENU, (Menu) xv_get(textsw, TEXTSW_SUBMENU_EDIT),
-				0);
+				NULL);
 
 
     find_panel_item = xv_create(panel, PANEL_BUTTON,
@@ -628,16 +633,16 @@
 				XV_MSG("Find"),
 				PANEL_NOTIFY_PROC, panel_button_proc,
 		PANEL_ITEM_MENU, (Menu) xv_get(textsw, TEXTSW_SUBMENU_FIND),
-				0);
+				NULL);
 
-    xv_set(file_panel_item, XV_KEY_DATA, ITEM_DATA_KEY,
-	   textsw, 0);
-    xv_set(display_panel_item, XV_KEY_DATA, ITEM_DATA_KEY,
-	   textsw, 0);
-    xv_set(edit_panel_item, XV_KEY_DATA, ITEM_DATA_KEY,
-	   textsw, 0);
-    xv_set(find_panel_item, XV_KEY_DATA, ITEM_DATA_KEY,
-	   textsw, 0);
+    xv_set(file_panel_item, XV_KEY_DATA, (Attr_attribute)ITEM_DATA_KEY,
+	   textsw, NULL);
+    xv_set(display_panel_item, XV_KEY_DATA, (Attr_attribute)ITEM_DATA_KEY,
+	   textsw, NULL);
+    xv_set(edit_panel_item, XV_KEY_DATA, (Attr_attribute)ITEM_DATA_KEY,
+	   textsw, NULL);
+    xv_set(find_panel_item, XV_KEY_DATA, (Attr_attribute)ITEM_DATA_KEY,
+	   textsw, NULL);
 
     window_fit_height(panel);
 
@@ -658,7 +663,7 @@
     rect = *((Rect *) xv_get(TERMSW_PUBLIC(termsw_folio), WIN_RECT));
 
     termsw_height = (rect.r_height / 3);
-    xv_set(TERMSW_PUBLIC(termsw_folio), XV_HEIGHT, termsw_height, 0);
+    xv_set(TERMSW_PUBLIC(termsw_folio), XV_HEIGHT, termsw_height, NULL);
 
     panel_rect = *((Rect *) xv_get(termsw_folio->textedit_panel, WIN_RECT));
     panel_rect.r_left = rect.r_left;
@@ -666,18 +671,18 @@
     panel_rect.r_width = rect.r_width;
 
     xv_set(termsw_folio->textedit_panel, WIN_RECT, &panel_rect,
-	   XV_SHOW, TRUE, 0);
+	   XV_SHOW, TRUE, NULL);
 
     textsw_rect.r_left = panel_rect.r_left;
     textsw_rect.r_top = panel_rect.r_top + panel_rect.r_height + 1;
     textsw_rect.r_width = panel_rect.r_width;
     if ((textsw_rect.r_height =
-                rect.r_height - (panel_rect.r_top + panel_rect.r_height)) <= 0)
+                rect.r_height - (panel_rect.r_top + panel_rect.r_height)) <= NULL)
         textsw_rect.r_height = 1;
 
 
     xv_set(termsw_folio->textedit, WIN_RECT, &textsw_rect,
-	   XV_SHOW, TRUE, 0);
+	   XV_SHOW, TRUE, NULL);
 
     window_fit(frame);
 
@@ -699,7 +704,7 @@
 
 
     if (termsw_folio->first_view->next) {
-	tty_notice = xv_get(frame, XV_KEY_DATA, tty_notice_key, NULL);
+	tty_notice = xv_get(frame, XV_KEY_DATA, (Attr_attribute)tty_notice_key, NULL);
 	if (!tty_notice)  {
     	    tty_notice = xv_create(frame, NOTICE,
 			  NOTICE_LOCK_SCREEN, FALSE,
@@ -709,12 +714,12 @@
 		          NOTICE_MESSAGE_STRINGS,
 			  XV_MSG("Please destroy all split views before enabling File Editor.\n\
 Press \"Continue\" to proceed."),
-		              0,
+		              NULL,
 			  XV_SHOW, TRUE,
-		          0);
+		          NULL);
 
 	    xv_set(frame, 
-		XV_KEY_DATA, tty_notice_key, tty_notice, 
+		XV_KEY_DATA, (Attr_attribute)tty_notice_key, tty_notice, 
 		NULL);
 
         }
@@ -727,9 +732,9 @@
 			NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Please destroy all split views before enabling File Editor.\n\
 Press \"Continue\" to proceed."),
-			0,
+			NULL,
 			XV_SHOW, TRUE, 
-			0);
+			NULL);
 	}
 	return;
     }
@@ -739,19 +744,19 @@
 					     PANEL_LAYOUT, PANEL_HORIZONTAL,
 						 XV_SHOW, FALSE,
 				    XV_WIDTH, (int) xv_get(frame, XV_WIDTH),
-						 0);
+						 NULL);
 
 	termsw_folio->textedit = xv_create(frame, TEXTSW,
 					   WIN_FONT, my_font,
 				    WIN_BELOW, termsw_folio->textedit_panel,
 					   XV_SHOW, FALSE,
-					   0);
+					   NULL);
 
 	(void) create_textedit_panel_item(termsw_folio->textedit_panel, termsw_folio->textedit);
 
     }
     if ((int) xv_get(termsw_folio->textedit, XV_SHOW)) {
-	tty_notice = xv_get(frame, XV_KEY_DATA, tty_notice_key, NULL);
+	tty_notice = xv_get(frame, XV_KEY_DATA, (Attr_attribute)tty_notice_key, NULL);
 	if (!tty_notice)  {
     	    tty_notice = xv_create(frame, NOTICE,
 			  NOTICE_LOCK_SCREEN, FALSE,
@@ -761,12 +766,12 @@
 		          NOTICE_MESSAGE_STRINGS,
 			  XV_MSG("Textedit is already created.\n\
 Press \"Continue\" to proceed."),
-		              0,
+		              NULL,
 			  XV_SHOW, TRUE,
-		          0);
+		          NULL);
 
 	    xv_set(frame, 
-		XV_KEY_DATA, tty_notice_key, tty_notice, 
+		XV_KEY_DATA, (Attr_attribute)tty_notice_key, tty_notice, 
 		NULL);
 
         }
@@ -779,17 +784,17 @@
 			NOTICE_MESSAGE_STRINGS,
 			XV_MSG("Textedit is already created.\n\
 Press \"Continue\" to proceed."),
-			0,
+			NULL,
 			XV_SHOW, TRUE, 
-			0);
+			NULL);
 	}
 	return;
     }
     (void) fit_termsw_panel_and_textsw(frame, termsw_folio);
 
     /* Change default to "Disable editor" */
-    xv_set(cmd_item, MENU_SELECTED, FALSE, 0);
-    xv_set(cmd_menu, MENU_DEFAULT, 2, 0);
+    xv_set(cmd_item, MENU_SELECTED, FALSE, NULL);
+    xv_set(cmd_menu, MENU_DEFAULT, 2, NULL);
 }
 
 
@@ -812,7 +817,7 @@
 
     if ((!termsw_folio->textedit) ||
 	(!(int) xv_get(termsw_folio->textedit, XV_SHOW))) {
-	tty_notice = xv_get(frame, XV_KEY_DATA, tty_notice_key, NULL);
+	tty_notice = xv_get(frame, XV_KEY_DATA, (Attr_attribute)tty_notice_key, NULL);
 	if (!tty_notice)  {
     	    tty_notice = xv_create(frame, NOTICE,
 			  NOTICE_LOCK_SCREEN, FALSE,
@@ -822,12 +827,12 @@
 		          NOTICE_MESSAGE_STRINGS,
 			  XV_MSG("No textedit is enabled yet.\n\
 Press \"Continue\" to proceed."),
-		              0,
+		              NULL,
 			  XV_SHOW, TRUE,
-		          0);
+		          NULL);
 
 	    xv_set(frame, 
-		XV_KEY_DATA, tty_notice_key, tty_notice, 
+		XV_KEY_DATA, (Attr_attribute)tty_notice_key, tty_notice, 
 		NULL);
 
         }
@@ -840,9 +845,9 @@
 			NOTICE_MESSAGE_STRINGS,
 			XV_MSG("No textedit is enabled yet.\n\
 Press \"Continue\" to proceed."),
-			0,
+			NULL,
 			XV_SHOW, TRUE, 
-			0);
+			NULL);
 	}
 	return;
     }
@@ -851,14 +856,14 @@
 	return;
 
     /* Change default to "Enable editor" */
-    xv_set(cmd_item, MENU_SELECTED, FALSE, 0);
-    xv_set(cmd_menu, MENU_DEFAULT, 1, 0);
+    xv_set(cmd_item, MENU_SELECTED, FALSE, NULL);
+    xv_set(cmd_menu, MENU_DEFAULT, 1, NULL);
 
     rect = *((Rect *) xv_get(termsw_folio->textedit, WIN_RECT));
 
 
-    xv_set(termsw_folio->textedit, XV_SHOW, FALSE, 0);
-    xv_set(termsw_folio->textedit_panel, XV_SHOW, FALSE, 0);
+    xv_set(termsw_folio->textedit, XV_SHOW, FALSE, NULL);
+    xv_set(termsw_folio->textedit_panel, XV_SHOW, FALSE, NULL);
 
     xv_set(TERMSW_PUBLIC(termsw_folio),
 	   XV_HEIGHT, rect.r_top + rect.r_height - 1,
@@ -878,8 +883,8 @@
     /*Textsw    textsw = (Textsw) (menu_get(cmd_item, MENU_CLIENT_DATA));*/
     register        Termsw_folio
                     termsw = TERMSW_FOLIO_FOR_VIEW(TERMSW_VIEW_PRIVATE_FROM_TEXTSW(textsw));
-    int         value = (int) (xv_get(cmd_item, MENU_VALUE, 0));
-    /*int       value = (int) menu_get(cmd_item, MENU_VALUE, 0);*/
+    int         value = (int) (xv_get(cmd_item, MENU_VALUE, NULL));
+    /*int       value = (int) menu_get(cmd_item, MENU_VALUE, NULL);*/
 
     Textsw_index    tmp_index, insert;
 
@@ -887,7 +892,7 @@
 	tmp_index = (int) textsw_find_mark_i18n(textsw, termsw->pty_mark);
 	insert = (Textsw_index) xv_get(textsw, TEXTSW_INSERTION_POINT_I18N);
 	if (insert != tmp_index) {
-	    (void) xv_set(textsw, TEXTSW_INSERTION_POINT_I18N, tmp_index, 0);
+	    (void) xv_set(textsw, TEXTSW_INSERTION_POINT_I18N, tmp_index, NULL);
 	}
 	termsw->read_only_mark =
 	    textsw_add_mark_i18n(textsw,
@@ -930,7 +935,7 @@
     } else {
 	Frame           frame = xv_get(textsw, WIN_FRAME);
 
-	tty_notice = xv_get(frame, XV_KEY_DATA, tty_notice_key, NULL);
+	tty_notice = xv_get(frame, XV_KEY_DATA, (Attr_attribute)tty_notice_key, NULL);
 
 	if (!tty_notice)  {
     	    tty_notice = xv_create(frame, NOTICE,
@@ -940,12 +945,12 @@
 			  XV_MSG("Continue"),
 		          NOTICE_MESSAGE_STRINGS,
 		          XV_MSG("Cannot enable scrolling while this application is running."),
-		              0,
+		              NULL,
 			  XV_SHOW, TRUE,
-		          0);
+		          NULL);
 
 	    xv_set(frame, 
-		XV_KEY_DATA, tty_notice_key, tty_notice, 
+		XV_KEY_DATA, (Attr_attribute)tty_notice_key, tty_notice, 
 		NULL);
 
         }
@@ -957,9 +962,9 @@
 			XV_MSG("Continue"),
 		        NOTICE_MESSAGE_STRINGS,
 		        XV_MSG("Cannot enable scrolling while this application is running."),
-		        0,
+		        NULL,
 			XV_SHOW, TRUE, 
-			0);
+			NULL);
 	}
     }
 }
@@ -985,7 +990,7 @@
     } else {
 	Frame           frame = xv_get(textsw, WIN_FRAME);
 
-	tty_notice = xv_get(frame, XV_KEY_DATA, tty_notice_key, NULL);
+	tty_notice = xv_get(frame, XV_KEY_DATA, (Attr_attribute)tty_notice_key, NULL);
 
 	if (!tty_notice)  {
     	    tty_notice = xv_create(frame, NOTICE,
@@ -995,12 +1000,12 @@
 			  XV_MSG("Continue"),
 		          NOTICE_MESSAGE_STRINGS,
 		    XV_MSG("Only one termsw view can turn into a ttysw at a time."),
-		              0,
+		              NULL,
 			  XV_SHOW, TRUE,
-		          0);
+		          NULL);
 
 	    xv_set(frame, 
-		XV_KEY_DATA, tty_notice_key, tty_notice, 
+		XV_KEY_DATA, (Attr_attribute)tty_notice_key, tty_notice, 
 		NULL);
 
         }
@@ -1012,10 +1017,10 @@
 			XV_MSG("Continue"),
 		        NOTICE_MESSAGE_STRINGS,
 		    XV_MSG("Only one termsw view can turn into a ttysw at a time."),
-		        0,
+		        NULL,
 			XV_SHOW, TRUE, 
-			0);
+			NULL);
 	}
     }
-    xv_set(cmd_menu, MENU_DEFAULT, 1, 0);
+    xv_set(cmd_menu, MENU_DEFAULT, 1, NULL);
 }
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/tty_modes.c xview-3.2p1.4/lib/libxview/ttysw/tty_modes.c
--- xview-3.2p1.4.orig/lib/libxview/ttysw/tty_modes.c	2013-01-07 12:36:13.231432000 +0100
+++ xview-3.2p1.4/lib/libxview/ttysw/tty_modes.c	2013-01-07 12:50:58.745585000 +0100
@@ -227,20 +227,20 @@
     Textsw          textsw = TEXTSW_FROM_TTY(ttysw);
     Textsw_view     textsw_view;
     Termsw_folio    termsw;
-    int		    on = 1;
+    /*int		    on = 1;*/
 #ifdef OW_I18N
     Termsw              termsw_public;
     Textsw_folio        text_folio;
 #endif
 
-    if ((!TTY_IS_TERMSW(ttysw)) || ttysw_getopt((caddr_t) ttysw, TTYOPT_TEXT))
+    if ((!TTY_IS_TERMSW(ttysw)) || ttysw_getopt(ttysw, TTYOPT_TEXT))
 	return (-1);
 
     textsw_view = ttysw->current_view_public;	/* Textsw really need the
 						 * public view handle */
     (void) xv_set(textsw_view,
 		  TEXTSW_READ_ONLY, FALSE,
-		  0);
+		  NULL);
 
     termsw = TERMSW_PRIVATE(TTY_PUBLIC(ttysw));
 
@@ -255,7 +255,7 @@
 	textsw_do_resize(textsw_view);
     }
     (void) xv_set(xv_get(textsw_view, WIN_VERTICAL_SCROLLBAR),
-		  XV_SHOW, TRUE, 0);
+		  XV_SHOW, TRUE, NULL);
 #   ifdef XV_USE_SVR4_PTYS
     /*
      * Since we track all tty ioctls as they come up in packetized form
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/tty_newtxt.c xview-3.2p1.4/lib/libxview/ttysw/tty_newtxt.c
--- xview-3.2p1.4.orig/lib/libxview/ttysw/tty_newtxt.c	2013-01-07 12:36:12.686035000 +0100
+++ xview-3.2p1.4/lib/libxview/ttysw/tty_newtxt.c	2013-01-07 12:50:58.771699000 +0100
@@ -129,7 +129,7 @@
     depth = xv_depth(info);
     fore = xv_fg(info);
     back = xv_bg(info);
-    front = (Tty_GC_List *)xv_get(screen, XV_KEY_DATA, TTY_GC_LIST_KEY);
+    front = (Tty_GC_List *)xv_get(screen, XV_KEY_DATA, (Attr_attribute)TTY_GC_LIST_KEY);
     gc_list = front;
     while (gc_list != (Tty_GC_List *)NULL) {
 	if (gc_list->depth == depth &&
@@ -151,7 +151,7 @@
     gc_list->gcs[INVERTED_GC] = create_GC(display, xid, fore ^ back, back, GXxor);
     gc_list->gcs[DEFAULT_GC] = create_GC(display, xid, fore, back, GXcopy);
     gc_list->gcs[BACK_GC] = create_GC(display, xid, fore, back, GXcopy);
-    xv_set(screen, XV_KEY_DATA, TTY_GC_LIST_KEY, gc_list, NULL);
+    xv_set(screen, XV_KEY_DATA, (Attr_attribute)TTY_GC_LIST_KEY, gc_list, NULL);
     return(gc_list->gcs);
 }
 
@@ -328,9 +328,9 @@
     if (!TTY_CURRENT_FONT_KEY)
       TTY_CURRENT_FONT_KEY = xv_unique_key();
     
-    if (pixfont != (Xv_opaque) xv_get(screen, XV_KEY_DATA, TTY_CURRENT_FONT_KEY) || old_gc_list != gc_list) {
+    if (pixfont != (Xv_opaque) xv_get(screen, XV_KEY_DATA, (Attr_attribute)TTY_CURRENT_FONT_KEY) || old_gc_list != gc_list) {
         setup_font(window, pixfont);
-        xv_set(screen, XV_KEY_DATA, TTY_CURRENT_FONT_KEY, pixfont, 0);
+        xv_set(screen, XV_KEY_DATA, (Attr_attribute)TTY_CURRENT_FONT_KEY, pixfont, NULL);
 	old_gc_list = gc_list;
     }
     
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/ttyansi.c xview-3.2p1.4/lib/libxview/ttysw/ttyansi.c
--- xview-3.2p1.4.orig/lib/libxview/ttysw/ttyansi.c	2013-01-07 12:36:13.000195000 +0100
+++ xview-3.2p1.4/lib/libxview/ttysw/ttyansi.c	2013-01-07 12:50:58.931374000 +0100
@@ -32,6 +32,16 @@
 
 #include <xview/sel_attrs.h>
 
+#ifdef __STDC__
+static int send_input_to_textsw(Textsw textsw, CHAR *buf, long buf_len, Textsw_index end_transcript);
+static int ansi_lf(Ttysw_view_handle ttysw_view, CHAR *addr, int len);
+static int ansi_char(Ttysw_view_handle ttysw_view, CHAR *addr, int olen);
+#else
+static int send_input_to_textsw();
+static int ansi_lf();
+static int ansi_char();
+#endif
+
 char           *textsw_checkpoint_undo();
 Textsw_index    textsw_replace_i18n(), textsw_erase_i18n();
 
@@ -703,7 +713,7 @@
 	textsw = (Textsw) TTY_PUBLIC(ttysw);
 	views = (VIEW_ABS_TO_REP(textsw)->e_view)->view_chain;
 	termsw = TERMSW_FOLIO_FOR_VIEW(TERMSW_VIEW_PRIVATE_FROM_TEXTSW(textsw));
-	if (!ttysw_getopt((caddr_t) ttysw, TTYOPT_TEXT) &&
+	if (!ttysw_getopt(ttysw, TTYOPT_TEXT) &&
 	    do_cursor_draw /* jcb */ ) {
 	    (void) ttysw_removeCursor();
 	}
@@ -817,7 +827,7 @@
 
 	  case S_ALPHA:
 	  default:
-	    if (ttysw_getopt((caddr_t) ttysw, TTYOPT_TEXT)) {
+	    if (ttysw_getopt(ttysw, TTYOPT_TEXT)) {
 		state = S_ALPHA;
 		switch (*addr) {
 		  case CTRL('['):	/* Escape */
@@ -1104,7 +1114,7 @@
 	}			/* switch (state) */
     }				/* for (; *addr; addr++) */
 ret:
-    if (ttysw_getopt((caddr_t) ttysw, TTYOPT_TEXT)) {
+    if (ttysw_getopt(ttysw, TTYOPT_TEXT)) {
 	cp = from_pty_to_textsw(textsw, cp, buf);
         if (TTY_IS_TERMSW(ttysw)) {
 	    FORALLVIEWS(views,e_view){
@@ -1286,7 +1296,7 @@
     register int    av0, i, found = TRUE;
     Textsw          textsw;
     register Termsw_folio termsw = NULL;
-    static          reset_as_termsw;
+    static int      reset_as_termsw;
 
     if (IS_TERMSW_VIEW(ttysw_view_public))
 	termsw = TERMSW_FOLIO_FROM_TERMSW_VIEW(ttysw_view_public);
@@ -1295,7 +1305,7 @@
 
     if ((av0 = av[0]) <= 0)
 	av0 = 1;
-    if (ttysw_getopt((caddr_t) ttysw, TTYOPT_TEXT)) {
+    if (ttysw_getopt(ttysw, TTYOPT_TEXT)) {
 	found = FALSE;
     } else
 	switch (c) {
@@ -1401,7 +1411,7 @@
     if (!found)
 	switch (c) {
 	  case 'J':
-	    if (ttysw_getopt((caddr_t) ttysw, TTYOPT_TEXT)) {
+	    if (ttysw_getopt(ttysw, TTYOPT_TEXT)) {
 		textsw = TTY_PUBLIC(ttysw);
 		if (termsw) {
 		    if (erase_chars(textsw,
@@ -1419,7 +1429,7 @@
 	    }
 	    break;
 	  case 'K':		/* clear to end of line */
-	    if (ttysw_getopt((caddr_t) ttysw, TTYOPT_TEXT)) {
+	    if (ttysw_getopt(ttysw, TTYOPT_TEXT)) {
 		textsw = TTY_PUBLIC(ttysw);
 		if (termsw) {
 		    if (erase_chars(textsw,
@@ -1460,7 +1470,7 @@
 
 		    (void) sprintf(buf, "\33[>%d%c",
 				   av[i] & 0x00ffffff,
-				   ttysw_getopt((caddr_t) ttysw,
+				   ttysw_getopt(ttysw,
 					   av[i] & 0x00ffffff) ? 'h' : 'l');
 		    (void) ttysw_input_it(ttysw,
 					  buf, strlen(buf));
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/ttyselect.c xview-3.2p1.4/lib/libxview/ttysw/ttyselect.c
--- xview-3.2p1.4.orig/lib/libxview/ttysw/ttyselect.c	2013-01-07 12:36:13.483894000 +0100
+++ xview-3.2p1.4/lib/libxview/ttysw/ttyselect.c	2013-01-07 17:07:12.321960000 +0100
@@ -16,10 +16,6 @@
 #include <sys/types.h>
 #include <sys/file.h>
 #include <sys/time.h>
-#ifndef XVIEW_USE_INSECURE_TMPFILES
-/* martin.buck@bigfoot.com */
-#include <dirent.h>
-#endif
 
 #include <pixrect/pixrect.h>
 #include <pixrect/pixfont.h>
@@ -40,6 +36,18 @@
 #include <xview_private/charimage.h>
 #include <xview_private/charscreen.h>
 
+#ifndef XVIEW_USE_INSECURE_TMPFILES
+/* martin.buck@bigfoot.com */
+#include <dirent.h>
+Xv_public char *xv_getlogindir();
+#endif
+
+#ifdef __STDC__
+static void ttysel_resynch(struct ttysubwindow *ttysw, Seln_function_buffer *buffer);
+#else
+static void ttysel_resynch();
+#endif
+
 /*
  * global which can be used to make a shell tool which doesn't talk to the
  * service
@@ -113,8 +121,6 @@
 static char    ttysel_filename[MAXNAMLEN];
 #endif
 
-static ttysel_resynch(struct ttysubwindow *ttysw, Seln_function_buffer *buffer);
-
 /* static */ int
 ttysw_is_seln_nonzero(ttysw, rank)
     register struct ttysubwindow *ttysw;
@@ -125,7 +131,7 @@
     char          **argv;
     int             bytesize = 0;
 
-    if (!ttysw_getopt((caddr_t) ttysw, TTYOPT_SELSVC)) {
+    if (!ttysw_getopt(ttysw, TTYOPT_SELSVC)) {
 	return 0;
     }
     holder = seln_inquire(rank);
@@ -147,7 +153,7 @@
 ttysel_init_client(ttysw)
     register Ttysw_folio ttysw;
 {
-    if (!ttysw_getopt((caddr_t) ttysw, TTYOPT_SELSVC)) {
+    if (!ttysw_getopt(ttysw, TTYOPT_SELSVC)) {
 	return;
     }
     ttysw->ttysw_caret = ttysw_nullttysel;
@@ -165,7 +171,7 @@
 ttysel_destroy(ttysw)
     register struct ttysubwindow *ttysw;
 {
-    if (!ttysw_getopt((caddr_t) ttysw, TTYOPT_SELSVC)) {
+    if (!ttysw_getopt(ttysw, TTYOPT_SELSVC)) {
 	return;
     }
     if (ttysw->ttysw_seln_client != (char *) NULL) {
@@ -185,7 +191,7 @@
     register Seln_rank sel_received;
     register struct ttyselection *ttysel;
 
-    if (!ttysw_getopt((caddr_t) ttysw, TTYOPT_SELSVC)) {
+    if (!ttysw_getopt(ttysw, TTYOPT_SELSVC)) {
 	return;
     }
     ttysel = ttysel_from_rank(ttysw, sel_desired);
@@ -217,7 +223,7 @@
 {
     Seln_holder     sel_holder;
 
-    if (!ttysw_getopt((caddr_t) ttysw, TTYOPT_SELSVC)) {
+    if (!ttysw_getopt(ttysw, TTYOPT_SELSVC)) {
 	return SELN_PRIMARY;
     } else {
 	sel_holder = seln_inquire(SELN_UNSPECIFIED);
@@ -239,7 +245,7 @@
     struct textselpos tspb, tspe;
     struct timeval  td;
 
-    if (!ttysw_getopt((caddr_t) ttysw, TTYOPT_SELSVC)) {
+    if (!ttysw_getopt(ttysw, TTYOPT_SELSVC)) {
 	sel_received = SELN_PRIMARY;
     } else {
 	sel_received =
@@ -247,7 +253,7 @@
     }
     if (sel_received == SELN_PRIMARY) {
 	ttysel = &ttysw->ttysw_primary;
-	if (ttysw_getopt((caddr_t) ttysw, TTYOPT_SELSVC)) {
+	if (ttysw_getopt(ttysw, TTYOPT_SELSVC)) {
 	    ttysel_acquire(ttysw, SELN_CARET);
 
 	}
@@ -523,7 +529,7 @@
 	return;
     ttysel_deselect(ttysel, rank);
     ttysel->sel_made = FALSE;
-    if (!ttysw_getopt((caddr_t) ttysw, TTYOPT_SELSVC))
+    if (!ttysw_getopt(ttysw, TTYOPT_SELSVC))
 	(void) seln_done(ttysw->ttysw_seln_client, rank);
 }
 
@@ -1006,7 +1012,7 @@
 	    if( delim_init == FALSE )
 		    init_delim_table();
 
-	    match_mode	= delim_table[line[te->tsp_col]];
+	    match_mode	= delim_table[(int)line[te->tsp_col]];
 
 	    for (col = te->tsp_col; col < (int)LINE_LENGTH(line); col++) {
 		chr = line[col];
@@ -1290,7 +1296,7 @@
 		 ERROR_STRING,
 		   XV_MSG("ttysw didn't recognize function to perform on selection"),
 		 ERROR_PKG, TTY,
-		 0);
+		 NULL);
 	break;
     }
     ttysel_resynch(ttysw, buffer);
@@ -1411,7 +1417,7 @@
     Seln_replier_data *context;
     int             buffer_length;
 {
-    unsigned        count;
+    unsigned long        count;
     struct ttysubwindow *ttysw;
     struct ttyselection *ttysel;
 
@@ -1791,7 +1797,7 @@
 	max_length--;
     }
     /* round up to word boundary  */
-    while ((unsigned) dest % 4 != 0) {
+    while ((unsigned long) dest % 4 != 0) {
 	*dest++ = '\0';
     }
 
@@ -1963,7 +1969,7 @@
 }
 #endif  /* OW_I18N */
 
-static
+static void
 ttysel_resynch(ttysw, buffer)
     register struct ttysubwindow *ttysw;
     register Seln_function_buffer *buffer;
diff -Naur xview-3.2p1.4.orig/lib/libxview/ttysw/ttysw.h xview-3.2p1.4/lib/libxview/ttysw/ttysw.h
--- xview-3.2p1.4.orig/lib/libxview/ttysw/ttysw.h	1993-06-29 07:17:16.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/ttysw/ttysw.h	2013-01-07 12:50:59.118202000 +0100
@@ -20,6 +20,7 @@
 
 #include <xview/xv_c_types.h>
 #include <xview/tty.h>
+#include <xview_private/tty_impl.h>
 
 /*
  ***********************************************************************
@@ -75,7 +76,6 @@
 EXTERN_FUNCTION (int ttysw_output, (Tty ttysw, char *addr, int len));
 
 
-#ifdef _OTHER_TTYSW_FUNCTIONS
 
 /*
  * C Library routines specifically related to ttysw subwindow functions.
@@ -85,9 +85,11 @@
  * PRIVATE functions 
  */
 
-EXTERN_FUNCTION (void ttysw_done, (Tty ttysw));
-EXTERN_FUNCTION (void ttysw_setopt, (Tty ttysw, int opt, int on));
-EXTERN_FUNCTION (int ttysw_getopt, (Tty ttysw, int opt));
+EXTERN_FUNCTION (void ttysw_done, (Ttysw_folio ttysw));
+EXTERN_FUNCTION (void ttysw_setopt, (Ttysw_folio ttysw, int opt, int on));
+EXTERN_FUNCTION (int ttysw_getopt, (Ttysw_folio ttysw, int opt));
+EXTERN_FUNCTION (Pkg_private int ttysw_cooked_echo_cmd, (Ttysw_view_handle ttysw_view, char *buf, int buflen));
+EXTERN_FUNCTION (Pkg_private int ttysw_copy_to_input_buffer, (Ttysw_folio ttysw, CHAR *addr, int len));
 
 /*
  * PUBLIC functions
@@ -95,6 +97,4 @@
  */
 EXTERN_FUNCTION (void ttysw_becomeconsole, (Tty ttysw));
 
-#endif /* _OTHER_TTYSW_FUNCTIONS */
-
 #endif /* ~xview_ttysw_DEFINED */
diff -Naur xview-3.2p1.4.orig/lib/libxview/win/Imakefile xview-3.2p1.4/lib/libxview/win/Imakefile
--- xview-3.2p1.4.orig/lib/libxview/win/Imakefile	2013-01-07 12:36:32.289136000 +0100
+++ xview-3.2p1.4/lib/libxview/win/Imakefile	2013-01-07 12:50:59.351622000 +0100
@@ -22,7 +22,7 @@
 #endif
 
 HDRSPUBLIC=	win_enum.h win_env.h win_event.h win_input.h win_notify.h \
-		win_screen.h  win_struct.h
+		win_screen.h win_struct.h win.h
 HDRSPRIVATE=	win_info.h    win_keymap.h  
 
 DATA_OBJS =
diff -Naur xview-3.2p1.4.orig/lib/libxview/win/win.h xview-3.2p1.4/lib/libxview/win/win.h
--- xview-3.2p1.4.orig/lib/libxview/win/win.h	1970-01-01 01:00:00.000000000 +0100
+++ xview-3.2p1.4/lib/libxview/win/win.h	2013-01-07 12:50:59.372826000 +0100
@@ -0,0 +1,116 @@
+/*
+ * Just some forward declarations...
+ * -ukh
+ */
+
+#ifndef xview_win_DEFINED
+#define xview_win_DEFINED
+
+#include <xview/rectlist.h>
+#include <xview/window.h>
+#include <xview/win_input.h>
+
+#ifdef __STDC__
+
+/* win_bell.c */
+Xv_private void win_beep(Display *display, struct timeval tv);
+void win_bell(Xv_object window, struct timeval tv, Xv_object pw);
+
+/* win_cursor.c */
+void win_setmouseposition(Xv_object window, short x, short y);
+void win_setmouseposition_internal(Display *display, unsigned int xid, short x, short y);
+void win_getmouseposition(Xv_object window, short *x, short *y);
+
+/* win_damage.c */
+Xv_public int win_set_clip(Xv_object window, Rectlist *rl);
+void win_clear_damage(Xv_object window);
+Pkg_private int win_do_expose_event(Display *display, Event *event, register XExposeEvent *e, Xv_opaque *window, short collapse_exposures);
+Xv_private int win_convert_to_x_rectlist(Rectlist *rl, XRectangle *xrect_array, int xrect_count);
+
+/* win_geom.c */
+Xv_private void win_getsize(Xv_object window, Rect *rect);
+Xv_private int win_translate_xy_internal(Display *display, XID src_id, XID dst_id, int src_x, int src_y, int *dst_x, int *dst_y);
+Xv_private void win_get_outer_rect(Xv_object window, Rect *rect);
+Xv_private void win_getrect(Xv_object window, Rect *rect);
+Xv_private void win_setrect(Xv_object window, Rect *rect);
+Xv_private void win_set_outer_rect(Xv_object window, Rect *rect);
+Xv_private void win_x_getrect(Display *display, XID xid, Rect *rect);
+Xv_private int win_get_retained(Xv_object window);
+
+/* win_global.c */
+void win_lockdata(Xv_object window);
+void win_unlockdata(Xv_object window);
+void win_releaseio(Xv_object window);
+int win_grabio(Xv_object window);
+int win_xgrabio_sync(Xv_object window, Inputmask *im, Xv_object cursor_window, Xv_object cursor);
+
+/* win_input.c */
+void input_imnull(struct inputmask *im);
+void input_imall(struct inputmask *im);
+Xv_private void win_xmask_to_im(unsigned int xevent_mask, Inputmask *im);
+Xv_private unsigned int win_im_to_xmask(Xv_object window, Inputmask *im);
+int win_set_kbd_focus(Xv_object window, XID xid);
+
+/* win_treeop.c */
+Xv_private void win_change_property(Xv_object window, Server_attr property_name, Atom property_type, int data_size, unsigned char *property_data, int data_count);
+void win_remove(Xv_object window);
+void win_insert(Xv_object window);
+Xv_public void win_setlink(Xv_object window, int linkname, XID number);
+Xv_private int win_view_state(Display *display, XID xid);
+Xv_private void win_set_parent(Xv_object window, Xv_object parent, int x, int y);
+Xv_private void win_free(Xv_object window);
+
+#else
+
+/* win_bell.c */
+Xv_private void win_beep();
+void win_bell();
+
+/* win_cursor.c */
+void win_setmouseposition();
+void win_setmouseposition_internal();
+void win_getmouseposition();
+
+/* win_damage.c */
+Xv_public int win_set_clip();
+void win_clear_damage();
+Pkg_private int win_do_expose_event();
+Xv_private int win_convert_to_x_rectlist();
+
+/* win_geom.c */
+Xv_private void win_getsize();
+Xv_private int win_translate_xy_internal();
+Xv_private void win_get_outer_rect();
+Xv_private void win_getrect();
+Xv_private void win_setrect();
+Xv_private void win_set_outer_rect();
+Xv_private void win_x_getrect();
+Xv_private int win_get_retained();
+
+/* win_global.c */
+void win_lockdata();
+void win_unlockdata();
+void win_releaseio();
+int win_grabio();
+int win_xgrabio_sync();
+
+/* win_input.c */
+void input_imnull();
+void input_imall();
+Xv_private void win_xmask_to_im();
+Xv_private unsigned int win_im_to_xmask();
+int win_set_kbd_focus();
+
+/* win_treeop.c */
+Xv_private void win_change_property();
+Xv_private void win_xmask_to_im();
+void win_remove();
+void win_insert();
+Xv_public void win_setlink();
+Xv_private int win_view_state();
+Xv_private void win_set_parent();
+Xv_private void win_free();
+
+#endif
+
+#endif
diff -Naur xview-3.2p1.4.orig/lib/libxview/win/win_bell.c xview-3.2p1.4/lib/libxview/win/win_bell.c
--- xview-3.2p1.4.orig/lib/libxview/win/win_bell.c	1993-06-29 07:15:39.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/win/win_bell.c	2013-01-07 12:50:59.455095000 +0100
@@ -25,8 +25,7 @@
 #include <xview/rect.h>
 #include <X11/Xlib.h>
 #include <xview_private/draw_impl.h>
-
-Xv_private void win_beep();
+#include <xview/win.h>
 
 /* Bell cached defaults */
 static Bool     win_do_audible_bell;
@@ -43,6 +42,7 @@
 /*
  * Ring bell and flash window
  */
+void
 win_bell(window, tv, pw)
     Xv_object       window;
     struct timeval  tv;
@@ -82,6 +82,7 @@
     }
 }
 
+void
 win_blocking_wait(wait_tv)
     struct timeval  wait_tv;
 {
diff -Naur xview-3.2p1.4.orig/lib/libxview/win/win_compat.c xview-3.2p1.4/lib/libxview/win/win_compat.c
--- xview-3.2p1.4.orig/lib/libxview/win/win_compat.c	1993-06-29 07:15:40.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/win/win_compat.c	2013-01-07 12:50:59.632239000 +0100
@@ -31,6 +31,7 @@
 }
 
 /* ARGSUSED */
+void
 win_setinputmask(window, im, im_flush, nextwindownumber)
     Xv_object       window;
     Xv_opaque       nextwindownumber;
@@ -42,7 +43,7 @@
 		XV_MSG(" Attempting to set the input mask of a window in fullscreen mode!\n"));
 	abort();
     }
-    xv_set(window, WIN_INPUT_MASK, im, 0);
+    xv_set(window, WIN_INPUT_MASK, im, NULL);
 }
 
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/win/win_cursor.c xview-3.2p1.4/lib/libxview/win/win_cursor.c
--- xview-3.2p1.4.orig/lib/libxview/win/win_cursor.c	1993-06-29 07:15:43.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/win/win_cursor.c	2013-01-07 12:50:59.660607000 +0100
@@ -19,10 +19,12 @@
 #include <xview/win_struct.h>
 #include <xview_private/draw_impl.h>
 #include <X11/Xlib.h>
+#include <xview/win.h>
 
 /*
  * Mouse cursor operations.
  */
+void
 win_setmouseposition(window, x, y)
     Xv_object       window;
     short           x, y;
@@ -34,6 +36,7 @@
 	win_setmouseposition_internal(xv_display(info), xv_xid(info), x, y);
 }
 
+void
 win_setmouseposition_internal(display, xid, x, y)
     Display        *display;
     unsigned int    xid;
@@ -46,6 +49,7 @@
     XAllowEvents(display, SyncPointer, CurrentTime);
 }
 
+void
 win_getmouseposition(window, x, y)
     Xv_object       window;
     short          *x, *y;
diff -Naur xview-3.2p1.4.orig/lib/libxview/win/win_damage.c xview-3.2p1.4/lib/libxview/win/win_damage.c
--- xview-3.2p1.4.orig/lib/libxview/win/win_damage.c	1993-06-29 07:15:39.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/win/win_damage.c	2013-01-07 12:50:59.686075000 +0100
@@ -15,6 +15,7 @@
  * functions of the win_struct.h interface.
  */
 
+#define xview_other_rl_funcs
 #include <stdio.h>
 #include <xview_private/i18n_impl.h>
 #include <xview_private/draw_impl.h>
@@ -76,6 +77,7 @@
 win_convert_to_x_rectlist(rl, xrect_array, xrect_count)
     Rectlist       *rl;
     XRectangle     *xrect_array;
+    int             xrect_count;
 {
     register XRectangle *xrect;
     register Rectnode *rect;
@@ -103,7 +105,7 @@
 		     ERROR_SEVERITY, ERROR_NON_RECOVERABLE,
 		     ERROR_STRING, 
 		     XV_MSG("too many rectangles (Win package)"),
-		     0);
+		     NULL);
     }
     return ((xrect - xrect_array));
 }
@@ -180,7 +182,9 @@
     }
     if (e->window == damaged_drawable) {
 	queued.type = 0;	/* Flag to detect use of XCheckIfEvent */
+#ifdef COLLAPSE_MULTIPLE_EXPOSURE_GROUPS
 More_Damage:
+#endif
 	/* Accumulate damage */
 	rect.r_left = e->x;
 	rect.r_top = e->y;
@@ -252,6 +256,8 @@
 	fprintf(stderr, 
 		XV_MSG("Specified drawable is current damaged_drawable.\n"));
     }
+/* FIXME: where is win_expose_status_predicate? */
+#if 0
     if (XCheckIfEvent(display, &event, win_expose_status_predicate,
 		      (char *) d)) {
 	XPutBackEvent(display, &event);
@@ -261,6 +267,7 @@
 	fprintf(stderr, 
 		XV_MSG("No enqueued exposures.\n"));
     }
+#endif
     fflush(stderr);
 }
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/win/win_env.c xview-3.2p1.4/lib/libxview/win/win_env.c
--- xview-3.2p1.4.orig/lib/libxview/win/win_env.c	1993-06-29 07:15:40.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/win/win_env.c	2013-01-07 12:50:59.711251000 +0100
@@ -18,6 +18,9 @@
 #include <xview/rect.h>
 #include <xview/win_env.h>
 #include <xview/win_struct.h>
+#include <stdio.h>			/* sprintf() */
+#include <string.h>
+#include <stdlib.h>
 
 /*
  * Public routines
@@ -56,6 +59,7 @@
     return (_we_setstrfromenvironment(WE_GFX, windevname));
 }
 
+void
 we_setinitdata(initialrect, initialsavedrect, iconic) 
     struct rect    *initialrect, *initialsavedrect; 
     int             iconic; 
diff -Naur xview-3.2p1.4.orig/lib/libxview/win/win_env.h xview-3.2p1.4/lib/libxview/win/win_env.h
--- xview-3.2p1.4.orig/lib/libxview/win/win_env.h	1993-06-29 07:15:43.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/win/win_env.h	2013-01-07 12:50:59.765191000 +0100
@@ -65,6 +65,11 @@
 EXTERN_FUNCTION (void we_setparentwindow, (char *windevname));
 EXTERN_FUNCTION (int we_getparentwindow, (char *windevname));
 
+/*
+ * And some...
+ */
+EXTERN_FUNCTION (void we_setinitdata, (struct rect *initialrect, struct rect *initialsavedrect, int iconic));
+
 #endif /* _OTHER_WIN_ENV_FUNCTIONS */
  
 #endif /* ~xview_win_environ_DEFINED */
diff -Naur xview-3.2p1.4.orig/lib/libxview/win/win_geom.c xview-3.2p1.4/lib/libxview/win/win_geom.c
--- xview-3.2p1.4.orig/lib/libxview/win/win_geom.c	1993-06-29 07:15:36.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/win/win_geom.c	2013-01-07 12:50:59.828201000 +0100
@@ -20,6 +20,7 @@
 #include <xview/window.h>
 #include <xview_private/draw_impl.h>
 #include <xview_private/windowimpl.h>
+#include <xview/win.h>
 
 /*
  * Geometry operations.
@@ -59,9 +60,9 @@
 				  WIN_WIDTH_SET | WIN_HEIGHT_SET);
 
     old_rect_info = (int)xv_get(window, WIN_RECT_INFO);
-    xv_set(window, WIN_RECT_INFO, rect_info, 0);
+    xv_set(window, WIN_RECT_INFO, rect_info, NULL);
     window_set_cache_rect(window, rect);
-    xv_set(window, WIN_RECT_INFO, old_rect_info, 0);
+    xv_set(window, WIN_RECT_INFO, old_rect_info, NULL);
 }
 
 /* these next two functions deak with the outer rect */
@@ -89,9 +90,9 @@
     }
 
     old_rect_info = (int)xv_get(window, WIN_RECT_INFO);
-    xv_set(window, WIN_RECT_INFO, rect_info, 0);
+    xv_set(window, WIN_RECT_INFO, rect_info, NULL);
     window_set_cache_rect(window, rect);
-    xv_set(window, WIN_RECT_INFO, old_rect_info, 0);
+    xv_set(window, WIN_RECT_INFO, old_rect_info, NULL);
 }
 
 Xv_private void
diff -Naur xview-3.2p1.4.orig/lib/libxview/win/win_global.c xview-3.2p1.4/lib/libxview/win/win_global.c
--- xview-3.2p1.4.orig/lib/libxview/win/win_global.c	1993-06-29 07:15:40.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/win/win_global.c	2013-01-07 12:50:59.862324000 +0100
@@ -46,6 +46,7 @@
 /*
  * Server operations applying globally.
  */
+void
 win_lockdata(window)
     Xv_object       window;
 {
@@ -58,6 +59,7 @@
     XGrabServer(xv_display(info));
 }
 
+void
 win_unlockdata(window)
     Xv_object       window;
 {
@@ -104,7 +106,7 @@
     display = xv_display(info);
 
     if (xv_get(xv_server(info), SERVER_JOURNALLING))
-	xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1, 0);
+	xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1L, NULL);
     if (grab_server)
     	XGrabServer(display);
     if (grab_pointer)
@@ -185,9 +187,10 @@
     if (ungrab_pointer)
     	XUngrabPointer(display, CurrentTime);
     if (xv_get(xv_server(info), SERVER_JOURNALLING))
-	xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1, 0);
+	xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1L, NULL);
 }
 
+int
 win_grabio(window)
     Xv_object       window;
 {
@@ -196,6 +199,7 @@
     return (win_xgrabio_async(window, im, 0, 0));
 }
 
+int
 win_xgrabio_sync(window, im, cursor_window, cursor)
     Xv_object       window;
     Inputmask      *im;
@@ -212,7 +216,7 @@
     display = xv_display(info);
 
     if (xv_get(xv_server(info), SERVER_JOURNALLING))
-	xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1, 0);
+	xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1L, NULL);
     if (XGrabPointer(display, 
     		     xv_xid(info),
     		     FALSE,
@@ -261,7 +265,7 @@
     display = xv_display(info);
 
     if (xv_get(xv_server(info), SERVER_JOURNALLING))
-	xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1, 0);
+	xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1L, NULL);
     if (XGrabPointer(display, 
     		     xv_xid(info), 
     		     FALSE, 
@@ -309,6 +313,7 @@
 			     CurrentTime);
 }
 
+void
 win_releaseio(window)
     Xv_object       window;
 {
@@ -328,7 +333,7 @@
 #endif
     XUngrabPointer(display, CurrentTime);
     if (xv_get(xv_server(info), SERVER_JOURNALLING))
-	xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1, 0);
+	xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1L, NULL);
 }
 
 win_private_gc(window, create_private_gc)
@@ -345,12 +350,12 @@
     xid = xv_xid(info);
     if (create_private_gc == TRUE) {
 	new = XCreateGC(display, xid, 0, (XGCValues *) 0);
-	(void) xv_set(window, XV_KEY_DATA, XV_GC, new, 0);
+	(void) xv_set(window, XV_KEY_DATA, (Attr_attribute)XV_GC, new, NULL);
 	info->private_gc = TRUE;
     } else {
 	if (info->private_gc) {
 	    XFreeGC(display, xv_gc(window, info));
-	    (void) xv_set(window, XV_KEY_DATA_REMOVE, XV_GC, 0);
+	    (void) xv_set(window, XV_KEY_DATA_REMOVE, (Attr_attribute)XV_GC, NULL);
 	    info->private_gc = FALSE;
 	}
     }
diff -Naur xview-3.2p1.4.orig/lib/libxview/win/win_impl.h xview-3.2p1.4/lib/libxview/win/win_impl.h
--- xview-3.2p1.4.orig/lib/libxview/win/win_impl.h	1993-06-29 07:15:37.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/win/win_impl.h	2013-01-07 12:50:59.889655000 +0100
@@ -7,6 +7,11 @@
  */
 
 /*
+ * FIXME: this file is apparently NOT used!
+ */
+
+
+/*
  * Defines sunwindow library PRIVATE data structures used in centralized
  * window event management.
  */
diff -Naur xview-3.2p1.4.orig/lib/libxview/win/win_info.h xview-3.2p1.4/lib/libxview/win/win_info.h
--- xview-3.2p1.4.orig/lib/libxview/win/win_info.h	1993-06-29 07:15:36.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/win/win_info.h	2013-01-07 12:50:59.931956000 +0100
@@ -12,6 +12,7 @@
 #define _xview_win_visual_h_already_included
 
 #include <xview_private/scrn_vis.h>
+#include <xview_private/windowimpl.h>
 
 typedef struct {
     XID			 xid;
diff -Naur xview-3.2p1.4.orig/lib/libxview/win/win_input.c xview-3.2p1.4/lib/libxview/win/win_input.c
--- xview-3.2p1.4.orig/lib/libxview/win/win_input.c	2013-01-07 12:36:49.057725000 +0100
+++ xview-3.2p1.4/lib/libxview/win/win_input.c	2013-01-07 12:50:59.982922000 +0100
@@ -54,13 +54,19 @@
 #include <xview/panel.h>
 #include <xview/textsw.h>
 #include <xview/termsw.h>
+#include <xview/win.h>
 
 static void     tvdiff();
 static void     win_handle_quick_selection();
 static int      BlockForEvent();
 static int      GetButtonEvent();
+static int	chording();
+
+#if 0
 static int      win_translate_KP_keysym();
 static int 	translate_key();
+#endif
+static int	xevent_to_event(Display *display, XEvent *xevent, Event *event, Xv_object *pwindow);
 
 extern struct rectlist *win_get_damage();
 extern void     server_set_timestamp();
@@ -87,7 +93,6 @@
 #endif
 
 Xv_object       xview_x_input_readevent();
-extern          input_imnull();
 
 static int      process_clientmessage_events();
 static int      process_property_events();
@@ -320,6 +325,7 @@
 /*
  * Utilities
  */
+void
 input_imnull(im)
     struct inputmask *im;
 {
@@ -330,6 +336,7 @@
 	im->im_keycode[i] = 0;
 }
 
+void
 input_imall(im)
     struct inputmask *im;
 {
@@ -403,12 +410,12 @@
 	win = WIN_PRIVATE(window);
 	if (win->softkey_flag) {
 	    xv_set(server_public, SERVER_FOCUS_TIMESTAMP, 
-				  server_get_timestamp(server_public),0);
+				  server_get_timestamp(server_public), NULL);
 	}
     }
     /*
      * if(xv_get(xv_server(info),SERVER_JOURNALLING))
-     * xv_set(xv_server(info),SERVER_JOURNAL_SYNC_EVENT,1,0);
+     * xv_set(xv_server(info),SERVER_JOURNAL_SYNC_EVENT, 1L, NULL);
      */
     return (rtn);
 }
@@ -616,12 +623,12 @@
     register int    	 event_type = (xevent->type & 0177);
     register unsigned 	 temp;
     XAnyEvent      	*any = (XAnyEvent *) xevent;
-    Xv_object       	 window = NULL;
+    Xv_object       	 window = (Xv_object)NULL;
     Xv_Drawable_info 	*info;
     Xv_opaque       	 server_public;
     static XID      	 pointer_window_xid;
     static short    	 nbuttons = 0;
-    static Xv_opaque 	 last_server_public = NULL;
+    static Xv_opaque 	 last_server_public = XV_NULL;
     static unsigned int  but2_mod,
 			 but3_mod,
 			 chord,
@@ -1080,7 +1087,7 @@
 		 * Check if this menu accelerator exists for the frame
 		 * containing this window
 		 */
-		frame = xv_get(event_window(event), WIN_FRAME);
+		frame = (Frame)xv_get(event_window(event), WIN_FRAME);
                 menu_accelerator = (Frame_menu_accelerator *) xv_get(frame,
                                         FRAME_MENU_X_ACCELERATOR, 
 					ek->keycode, ek->state, NoSymbol);
@@ -1141,7 +1148,7 @@
 		int             found_focuswindow = FALSE;
 		Xv_object       dummy_window = window;
 
-		while (window = xv_get(window, WIN_PARENT)) {
+		while (window = (Xv_window)xv_get(window, WIN_PARENT)) {
 		    Xv_Drawable_info	*draw_info;
 		    DRAWABLE_INFO_MACRO(window, draw_info);
 		    if (xv_has_focus(draw_info)) {
@@ -1165,7 +1172,7 @@
 			    event_set_window(event, window);
 			    break;
 			}
-			window = xv_get(window, WIN_PARENT);
+			window = (Xv_window)xv_get(window, WIN_PARENT);
 		    }
 	        /* If we didn't find the focus window, send it to its original
 		 * destination.  The focus might have been lost, but due
@@ -1533,7 +1540,7 @@
 		fce->detail == NotifyInferior ||
 		fce->detail == NotifyNonlinear) {
 		if (xv_get(xv_server(info), SERVER_JOURNALLING))
-		    xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1, 0);
+		    xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1L, NULL);
 		xv_set_has_focus(info, TRUE);
 		event_set_id(event, KBD_USE);
 	    } else {
@@ -1549,7 +1556,7 @@
 
       case FocusOut:{
 	    XFocusChangeEvent  *fce = (XFocusChangeEvent *) xevent;
-	    Frame		frame = xv_get(event_window(event), WIN_FRAME);
+	    Frame		frame = (Frame)xv_get(event_window(event), WIN_FRAME);
 
 		/* On FocusOut events turn off the compose LED */
 	    if (xv_get(frame, FRAME_COMPOSE_STATE)) {
@@ -1779,7 +1786,7 @@
     KeySym          keysym;
 
     keysym = XKeycodeToKeysym(ek->display, ek->keycode, 0);
-    frame = xv_get(event_window(event), WIN_FRAME);
+    frame = (Frame)xv_get(event_window(event), WIN_FRAME);
     accelerator = (Frame_accelerator *) xv_get(frame,
                             FRAME_ACCELERATOR, event_id(event), keysym);
     if (accelerator) {
@@ -1804,7 +1811,7 @@
     Frame	frame;
     Frame_menu_accelerator *menu_accelerator;
 
-    frame = xv_get(event_window(event), WIN_FRAME);
+    frame = (Frame)xv_get(event_window(event), WIN_FRAME);
     menu_accelerator = (Frame_menu_accelerator *) xv_get(frame,
                     FRAME_MENU_X_ACCELERATOR, 
 			ek->keycode, ek->state, NoSymbol);
@@ -1845,7 +1852,7 @@
 
     DRAWABLE_INFO_MACRO(window, info);
     rect = (Rect *) xv_get(window, WIN_RECT);
-    if (xv_get(window, XV_SHOW)) {
+    if ((int)xv_get(window, XV_SHOW)) {
 	temp = XQueryTree(xv_display(info), xv_xid(info), &root, &parent,
 			  &children, &nchildren);
 	if (temp) {
@@ -2078,7 +2085,7 @@
 	    msg_y = clientmessage->data.l[2] & 0xffff;
 
 	    (void) win_translate_xy_internal(xv_display(info),
-					     xv_get(xv_root(info), XV_XID),
+					     (int)xv_get(xv_root(info), XV_XID),
 					     xv_xid(info), msg_x, msg_y,
 					     &actual_x, &actual_y);
 	    event_set_x(event, actual_x);
@@ -2113,7 +2120,7 @@
 	    msg_y = clientmessage->data.l[2] & 0xffff;
 
 	    (void) win_translate_xy_internal(xv_display(info),
-					     xv_get(xv_root(info), XV_XID),
+					     (int)xv_get(xv_root(info), XV_XID),
 					     xv_xid(info), msg_x, msg_y,
 					     &actual_x, &actual_y);
 	    event_set_x(event, actual_x);
@@ -2160,7 +2167,7 @@
 		    XFlush(xv_display(info));
 		    break;
 	      case SERVER_WM_DELETE_WINDOW_TYPE:
-		if (xv_get(window, XV_OWNER) == xv_get(xv_screen(info),
+		if ((Xv_opaque)xv_get(window, XV_OWNER) == (Xv_object)xv_get(xv_screen(info),
 						       XV_ROOT) &&
 		    ((Xv_pkg *)xv_get(window, XV_TYPE) == FRAME))
 		    xv_destroy_safe(window);
@@ -2181,7 +2188,7 @@
 	 * stuffed into window struct
 	 */
 
-	if (clientmessage->message_type == xv_get(server_public, SERVER_ATOM,
+	if (clientmessage->message_type == (Atom)xv_get(server_public, SERVER_ATOM,
 						  "_OL_TRANSLATED_KEY")) {
 
 	    /* Initialise an xevent  */
@@ -2343,6 +2350,7 @@
 }
 
 
+static int
 chording(display, bEvent, timeout)
     Display        *display;
     XButtonEvent   *bEvent;
@@ -2525,8 +2533,8 @@
 	    return (0);
 
 
-	enter_lang_atom = xv_get(server, SERVER_ATOM, "_OL_ENTER_LANG_MODE");
-	exit_lang_atom = xv_get(server, SERVER_ATOM, "_OL_EXIT_LANG_MODE");
+	enter_lang_atom = (Atom)xv_get(server, SERVER_ATOM, "_OL_ENTER_LANG_MODE");
+	exit_lang_atom = (Atom)xv_get(server, SERVER_ATOM, "_OL_EXIT_LANG_MODE");
 
 	if (event_is_down(event)) {
 
@@ -2580,7 +2588,7 @@
 	if ((event->ie_code < 33) || (event->ie_code == 127))
 	    return (0);		/* Do not send unwanted events */
 
-	translate_key_atom = xv_get(server, SERVER_ATOM, "_OL_TRANSLATE_KEY");
+	translate_key_atom = (Atom)xv_get(server, SERVER_ATOM, "_OL_TRANSLATE_KEY");
 
 	/* Construct an Event */
 
@@ -2616,7 +2624,7 @@
     Atom            sftk_process_atom;
     Window          seln_owner;
 
-    sftk_process_atom = xv_get(server, SERVER_ATOM, "_OL_SOFT_KEYS_PROCESS");
+    sftk_process_atom = (Atom)xv_get(server, SERVER_ATOM, "_OL_SOFT_KEYS_PROCESS");
     seln_owner = XGetSelectionOwner(display, sftk_process_atom);
     return (seln_owner);
 
@@ -2628,10 +2636,10 @@
     Event		*event;
 {
 
-    Atom		 key_type = xv_get(xv_server(info), SERVER_ATOM,
+    Atom		 key_type = (Atom)xv_get(xv_server(info), SERVER_ATOM,
 			                   (event_action(event) == ACTION_CUT ?
 				           "MOVE" : "DUPLICATE"));
-    Atom		 property = xv_get(xv_server(info), SERVER_ATOM,
+    Atom		 property = (Atom)xv_get(xv_server(info), SERVER_ATOM,
 					    "_SUN_QUICK_SELECTION_KEY_STATE");
 
     switch(event_action(event)) {
@@ -2682,7 +2690,7 @@
     XComposeStatus	*c_status;
     int			 last;
 {
-    Frame		 frame = xv_get(event_window(event), WIN_FRAME);
+    Frame		 frame = (Frame)xv_get(event_window(event), WIN_FRAME);
     int			 current = c_status->chars_matched;
 
     /* State table for the compose key. */
diff -Naur xview-3.2p1.4.orig/lib/libxview/win/win_input.h xview-3.2p1.4/lib/libxview/win/win_input.h
--- xview-3.2p1.4.orig/lib/libxview/win/win_input.h	2013-01-07 12:36:49.221199000 +0100
+++ xview-3.2p1.4/lib/libxview/win/win_input.h	2013-01-07 12:51:00.093567000 +0100
@@ -429,9 +429,9 @@
 				  (ie)->ie_shiftmask = (ie)->ie_locx = \
 				  (ie)->ie_locy = (ie)->ie_time.tv_sec = \
 				  (ie)->ie_time.tv_usec = 0, \
-				  (ie)->ie_win = NULL, \
-				  (ie)->ie_xevent = NULL, \
-                    		  (ie)->ie_string = NULL, \
+				  (ie)->ie_win = (Xv_object)NULL, \
+				  (ie)->ie_xevent = (XEvent *)NULL, \
+                    		  (ie)->ie_string = (char *)NULL, \
 				  (ie)->ie_code = (ie)->action  =  \
 				  ACTION_NULL_EVENT)
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/win/win_keymap.c xview-3.2p1.4/lib/libxview/win/win_keymap.c
--- xview-3.2p1.4.orig/lib/libxview/win/win_keymap.c	1993-06-29 07:15:39.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/win/win_keymap.c	2013-01-07 12:51:00.133246000 +0100
@@ -31,6 +31,8 @@
 #include <xview_private/bitmask.h>
 #include <xview_private/win_keymap.h>
 
+#if 0
+/* What's this? */
 static          caddr_t
 Malloc(s)
     unsigned        s;
@@ -48,6 +50,7 @@
 	return p;
     }
 }
+#endif
 
 #define isctrl(c)	(0 <= (c) && (c) <= 0x1f)
 #define isprintable(c)	(33 <= (c) && (c) <= 126)
@@ -76,7 +79,10 @@
 int             keymap_errno;	/* Public errno value */
 int             keymap_initialized;	/* Public initialization flag */
 
+#if 0
+/* What's this? */
 static int      keymap_quoted;	/* Keymap quote in-progress flag */
+#endif
 
 
 
@@ -201,8 +207,6 @@
  *		a keymap mapping; return 1 if translation occurs, 0 if not
  ******************************************************************************/
 
-static Xv_object mapped_win;
-static unsigned short mapped_event, mapped_action;
 int
 win_keymap_map(win, event)
     Xv_object       win;
diff -Naur xview-3.2p1.4.orig/lib/libxview/win/win_treeop.c xview-3.2p1.4/lib/libxview/win/win_treeop.c
--- xview-3.2p1.4.orig/lib/libxview/win/win_treeop.c	1993-06-29 07:15:42.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/win/win_treeop.c	2013-01-07 12:51:00.160472000 +0100
@@ -27,11 +27,10 @@
 #include <X11/Xutil.h>
 #include <X11/X.h>
 #include <xview/screen.h>
+#include <xview/win.h>
 
 Xv_object       win_data();
 
-Xv_private void win_set_parent();
-
 /*
  * Tree operations.
  * 
@@ -197,6 +196,7 @@
     XReparentWindow(display, xv_xid(info), xv_xid(parent_info), x, y);
 }
 
+void
 win_insert(window)
     Xv_object       window;
 {
@@ -206,6 +206,7 @@
     XMapWindow(xv_display(info), xv_xid(info));
 }
 
+void
 win_insert_in_front(window)
     Xv_object       window;
 {
@@ -215,6 +216,7 @@
     XMapRaised(xv_display(info), xv_xid(info));
 }
 
+void
 win_remove(window)
     Xv_object       window;
 {
@@ -239,7 +241,7 @@
     Display        *display;
     XID             xid;
 {
-    (void) sprintf(name, "%s:%d", XDisplayString(display), xid);
+    (void) sprintf(name, "%s:%ld", XDisplayString(display), xid);
     return (name);
 }
  
diff -Naur xview-3.2p1.4.orig/lib/libxview/window/window.c xview-3.2p1.4/lib/libxview/window/window.c
--- xview-3.2p1.4.orig/lib/libxview/window/window.c	2013-01-07 12:36:31.402378000 +0100
+++ xview-3.2p1.4/lib/libxview/window/window.c	2013-01-07 12:51:00.225321000 +0100
@@ -37,6 +37,8 @@
 #ifdef OW_I18N
 #include <xview/frame.h>
 #endif /* OW_I18N */
+#include <xview/win_notify.h>
+#include <xview/win.h>
 
 /*
  * Private
@@ -50,16 +52,18 @@
 Pkg_private XID window_new();
 Pkg_private void window_get_grab_flag();
 
+Xv_Font xv_font_with_name();
+
 #define eexit(msg, error_msg) \
   if (error_msg) { \
       char dummy[128]; \
       (void) sprintf(dummy, "%s\n%s", msg, error_msg); \
-      xv_error(NULL, \
+      xv_error((Xv_object)NULL, \
           ERROR_SEVERITY, ERROR_NON_RECOVERABLE, \
-          ERROR_STRING, dummy, ERROR_PKG, WINDOW, 0); \
+          ERROR_STRING, dummy, ERROR_PKG, WINDOW, NULL); \
   } else { \
-      xv_error(NULL, \
-          ERROR_STRING, msg, ERROR_PKG, WINDOW, 0); \
+      xv_error((Xv_object)NULL, \
+          ERROR_STRING, msg, ERROR_PKG, WINDOW, NULL); \
       return XV_ERROR; \
   }
 
@@ -283,12 +287,12 @@
 	} else if (xv_get(parent_public, WIN_IS_ROOT))
 	    win->top_level = TRUE;
 	else if (!xv_get(parent_public, XV_IS_SUBTYPE_OF, WINDOW)) {
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
         	     ERROR_SEVERITY, ERROR_NON_RECOVERABLE,
         	     ERROR_STRING, 
 			XV_MSG("Subwindow owner is not a window\n"),
 		     ERROR_PKG, WINDOW,
-		     0);
+		     NULL);
 	} else
 	    win->top_level = FALSE;
 
@@ -404,19 +408,19 @@
     }
     
     if (!is_root && !is_sel_window) {
-        default_cursor = (Xv_Cursor) xv_get(screen, XV_KEY_DATA, WIN_CURSOR);
+        default_cursor = (Xv_Cursor) xv_get(screen, XV_KEY_DATA, (Attr_attribute)WIN_CURSOR);
         if (!default_cursor) {
 	    default_cursor = xv_create(screen, CURSOR,
 				   CURSOR_SRC_CHAR, OLC_BASIC_PTR,
 				   CURSOR_MASK_CHAR, OLC_BASIC_MASK_PTR,
 				   /* Can never free */
 				   XV_INCREMENT_REF_COUNT,	
-				   0);
-	    (void) xv_set(screen, XV_KEY_DATA, CURSOR_BASIC_PTR,
-							   default_cursor, 0);
-	    (void) xv_set(screen, XV_KEY_DATA, WIN_CURSOR, default_cursor, 0);
+				   NULL);
+	    (void) xv_set(screen, XV_KEY_DATA, (Attr_attribute)CURSOR_BASIC_PTR,
+							   default_cursor, NULL);
+	    (void) xv_set(screen, XV_KEY_DATA, (Attr_attribute)WIN_CURSOR, default_cursor, NULL);
         } 
-        (void) xv_set(default_cursor, XV_INCREMENT_REF_COUNT, 0);
+        (void) xv_set(default_cursor, XV_INCREMENT_REF_COUNT, NULL);
         win->cursor = (Xv_opaque) default_cursor;
     } else {
 	win->cursor = (Xv_opaque)NULL;
@@ -473,15 +477,15 @@
              CMS_NAME, cms_name,				    
              XV_VISUAL, xv_visual(info)->vinfo->visual,
              CMS_DEFAULT_CMS, TRUE,
-             CMS_SIZE, 2,
+             CMS_SIZE, 2L,
 	     CMS_NAMED_COLORS, "white", "black", NULL,
 	     NULL);
 	xv_cms_bg(info) = 0;
-	xv_bg(info) = (unsigned long)xv_get(xv_cms(info), CMS_PIXEL, 0);
+	xv_bg(info) = (unsigned int)xv_get(xv_cms(info), CMS_PIXEL, (Attr_attribute)0);
 	xv_cms_fg(info) = 1;
-	xv_fg(info) = (unsigned long)xv_get(xv_cms(info), CMS_PIXEL, 1);
+	xv_fg(info) = (unsigned int)xv_get(xv_cms(info), CMS_PIXEL, (Attr_attribute)1);
     }	
-    cmap_id = (Colormap)xv_get(xv_cms(info), XV_XID, 0);
+    cmap_id = (Colormap)xv_get(xv_cms(info), XV_XID, NULL);
 
     xv_xid(info) = window_new(display, screen, win, cmap_id, parent_info);
     
@@ -517,7 +521,7 @@
         win->font = (Xv_font) xv_font_with_name(server, (char *)NULL);
     }
 
-    (void) xv_set(win->font, XV_INCREMENT_REF_COUNT, 0);
+    (void) xv_set(win->font, XV_INCREMENT_REF_COUNT, NULL);
 
     /* register with the notifier */
     if (notify_set_event_func(win_public, window_default_event_func,
@@ -654,7 +658,7 @@
      * ConfigureNotify events in the queue. Then process the events, then
      * finally map the frame.
      */
-    xv_set(xv_server(info), SERVER_SYNC_AND_PROCESS_EVENTS, 0);
+    xv_set(xv_server(info), SERVER_SYNC_AND_PROCESS_EVENTS, NULL);
 
 
     /* install win in tree */
@@ -662,13 +666,13 @@
 
     /* server is in journalling mode */
     if (xv_get(xv_server(info), SERVER_JOURNALLING))
-	xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, 1, 0);
+	xv_set(xv_server(info), SERVER_JOURNAL_SYNC_EVENT, (Attr_attribute)1, NULL);
 
     XFlush(display);		/* flush anthing left in the buffer */
     (void) notify_start();	/* and then loop in the notifier */
 
     if (xv_default_server && xv_get(xv_default_server, SERVER_JOURNALLING))
-	xv_set(xv_default_server, SERVER_JOURNAL_SYNC_EVENT, 1, 0);
+	xv_set(xv_default_server, SERVER_JOURNAL_SYNC_EVENT, (Attr_attribute)1, NULL);
 }
 
 int				/* bool */
@@ -728,11 +732,11 @@
       case DESTROY_CLEANUP: {
 	/* Decrement the ref count on all ref counted objects */
 	if (win->cursor)
-	    (void) xv_set(win->cursor, XV_DECREMENT_REF_COUNT, 0);
+	    (void) xv_set(win->cursor, XV_DECREMENT_REF_COUNT, NULL);
 	if (win->menu)
-	    (void) xv_set(win->menu, XV_DECREMENT_REF_COUNT, 0);
+	    (void) xv_set(win->menu, XV_DECREMENT_REF_COUNT, NULL);
 	if (win->font)
-	    (void) xv_set(win->font, XV_DECREMENT_REF_COUNT, 0);
+	    (void) xv_set(win->font, XV_DECREMENT_REF_COUNT, NULL);
 
 	if (win->cmdline && ((int)win->cmdline != -1))  {
 	    free(win->cmdline);
diff -Naur xview-3.2p1.4.orig/lib/libxview/window/window_cms.c xview-3.2p1.4/lib/libxview/window/window_cms.c
--- xview-3.2p1.4.orig/lib/libxview/window/window_cms.c	1993-06-29 07:15:50.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/window/window_cms.c	2013-01-07 12:51:00.284860000 +0100
@@ -20,11 +20,11 @@
 #include <X11/Xatom.h>
 
 
-Attr_attribute  xv_cms_name_key = NULL;
+Attr_attribute  xv_cms_name_key = (Attr_attribute)NULL;
 void            window_set_cms();
 void		window_set_cmap_property();
 
-Xv_private
+Xv_private void
 window_set_cms_name(win_public, new_name)
     Xv_Window       win_public;
     char           *new_name;
@@ -37,21 +37,21 @@
     if (!xv_cms_name_key) {
 	xv_cms_name_key = xv_unique_key();
     }
-    cur_name = (char *) xv_get(win_public, XV_KEY_DATA, xv_cms_name_key);
+    cur_name = (char *) xv_get(win_public, XV_KEY_DATA, (Attr_attribute)xv_cms_name_key);
 
     cms = xv_find(xv_screen(info), CMS,
-		  XV_VISUAL, xv_get(win_public, XV_VISUAL), 
+		  XV_VISUAL, (Visual *)xv_get(win_public, XV_VISUAL), 
 		  XV_AUTO_CREATE, FALSE,
 		  CMS_NAME, new_name,
 		  NULL);
-    if (cms != NULL) {
+    if (cms != (Cms)NULL) {
 	if (cur_name) {
 	    free(cur_name);
-	    xv_set(win_public, XV_KEY_DATA, xv_cms_name_key, NULL, 0);
+	    xv_set(win_public, XV_KEY_DATA, (Attr_attribute)xv_cms_name_key, NULL, NULL);
 	}
 	if (xv_cms(info) != cms)
 	    window_set_cms(win_public, cms, 0, 
-			   (int)xv_get(cms, CMS_SIZE, 0) - 1);
+			   (int)xv_get(cms, CMS_SIZE, NULL) - 1);
     } else {
 	if (cur_name) {
 	    if (strcmp(cur_name, new_name) == 0)
@@ -61,11 +61,11 @@
 	}
 	cur_name = (char *) xv_malloc(strlen(new_name) + 1);
 	strcpy(cur_name, new_name);
-	xv_set(win_public, XV_KEY_DATA, xv_cms_name_key, cur_name, 0);
+	xv_set(win_public, XV_KEY_DATA, (Attr_attribute)xv_cms_name_key, cur_name, NULL);
     }
 }
 
-Xv_private
+Xv_private void
 window_set_cms_data(win_public, cms_data)
     Xv_Window       win_public;
     Xv_cmsdata     *cms_data;
@@ -86,23 +86,23 @@
     visual_class = (int)xv_get(win_public, XV_VISUAL_CLASS);
     visual = (Visual *)xv_get(win_public, XV_VISUAL);
     if ((cms_data->type == XV_DYNAMIC_CMS) && !(visual_class % 2)) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 		 ERROR_STRING,
 		   XV_MSG("Cannot set a dynamic colormap segment on a window created\n\
 with a static visual"),
 		 ERROR_PKG, WINDOW,
-		 0);
+		 NULL);
 	return;
     }
     if (!xv_cms_name_key) {
-	xv_error(NULL,
+	xv_error((Xv_object)NULL,
 	  ERROR_STRING,
 	    XV_MSG("Attempting to set colormap segment data before naming the segment"),
 	  ERROR_PKG, WINDOW,
-	  0);
+	  NULL);
 	return;
     }
-    cur_name = (char *) xv_get(win_public, XV_KEY_DATA, xv_cms_name_key);
+    cur_name = (char *) xv_get(win_public, XV_KEY_DATA, (Attr_attribute)xv_cms_name_key);
 
     cms_colors = (Xv_singlecolor *)xv_malloc(cms_data->rgb_count *
 					sizeof(Xv_singlecolor));
@@ -118,7 +118,7 @@
 			    XV_AUTO_CREATE, FALSE,
 			    CMS_NAME, cur_name,
 			    NULL);
-	if (cms == NULL) {
+	if (cms == (Cms)NULL) {
 	    cms = xv_create(xv_screen(info), CMS, 
 			XV_VISUAL, visual,
 			CMS_NAME, cur_name,
@@ -146,14 +146,14 @@
     } 
 
     xv_free(cms_colors);
-    if (cms == NULL) {
+    if (cms == (Cms)NULL) {
 	cms = (Cms) xv_get(xv_screen(info), SCREEN_DEFAULT_CMS);
     }
     window_set_cms(win_public, cms, 0, 
-		   (int)xv_get(cms, CMS_SIZE, 0) - 1);
+		   (int)xv_get(cms, CMS_SIZE, NULL) - 1);
     if (cur_name) {
 	xv_free(cur_name);
-	xv_set(win_public, XV_KEY_DATA, xv_cms_name_key, NULL, 0);
+	xv_set(win_public, XV_KEY_DATA, (Attr_attribute)xv_cms_name_key, NULL, NULL);
     }
 }
 
@@ -180,18 +180,18 @@
 
     if (XVisualIDFromVisual((Visual *)xv_get(win_public, XV_VISUAL)) != 
 	XVisualIDFromVisual((Visual *)xv_get(cms, XV_VISUAL))) {
-	    xv_error(NULL, 
+	    xv_error((Xv_object)NULL, 
 		     ERROR_STRING,
 		     XV_MSG("Can not set a CMS on a window that was created with a different visual"),
 		     ERROR_PKG, WINDOW,
-		     0);
+		     NULL);
 	    return;
     }
     
     old_fg = xv_fg(info);
-    new_fg = (unsigned long)xv_get(cms, CMS_PIXEL, cms_fg, 0);
+    new_fg = (unsigned int)xv_get(cms, CMS_PIXEL, cms_fg, NULL);
     old_bg = xv_bg(info);
-    new_bg = (unsigned long)xv_get(cms, CMS_PIXEL, cms_bg, 0);
+    new_bg = (unsigned int)xv_get(cms, CMS_PIXEL, cms_bg, NULL);
     old_cmap = (Colormap)xv_get(xv_cms(info), XV_XID);
     new_cmap = (Colormap)xv_get(cms, XV_XID);
     
@@ -301,7 +301,7 @@
      * that has multiple windows. 
      */
     if (win->created) {
-        xv_set(win_public, WIN_CMS_CHANGE, 0);
+        xv_set(win_public, WIN_CMS_CHANGE, NULL);
     }
 }
 
@@ -315,7 +315,7 @@
     Atom atom;
 
     DRAWABLE_INFO_MACRO(win_public, info);
-    cmap = (Colormap)xv_get(xv_cms(info), XV_XID, 0);
+    cmap = (Colormap)(int)xv_get(xv_cms(info), XV_XID, NULL);
     default_cmap = DefaultColormap(xv_display(info), 
 				   (int)xv_get(xv_screen(info), SCREEN_NUMBER));
 
@@ -325,7 +325,7 @@
      * window manager automatically.
      */
     if ((cmap != default_cmap) &&
-	!(int)xv_get(win_public, XV_IS_SUBTYPE_OF, FRAME_CLASS, 0)) {
+	!(int)xv_get(win_public, XV_IS_SUBTYPE_OF, FRAME_CLASS, NULL)) {
 	frame_public = (Frame)xv_get(win_public, WIN_FRAME);
         DRAWABLE_INFO_MACRO(frame_public, frame_info);
 	
diff -Naur xview-3.2p1.4.orig/lib/libxview/window/window_get.c xview-3.2p1.4/lib/libxview/window/window_get.c
--- xview-3.2p1.4.orig/lib/libxview/window/window_get.c	2013-01-07 12:36:49.289779000 +0100
+++ xview-3.2p1.4/lib/libxview/window/window_get.c	2013-01-07 12:51:00.321350000 +0100
@@ -27,6 +27,7 @@
 #include <xview_private/svr_impl.h>
 #endif /* FULL_R5 */
 #endif /* OW_I18N */
+#include <xview/win.h>
 
 /*
  * Private
@@ -50,6 +51,7 @@
 extern unsigned int	win_im_to_xmask(); /* defined in win_input.c */
 Xv_private Xv_font	xv_find_olglyph_font(); /* defined in font.c */
 
+XID win_findintersect();
 
 /* VARARGS2 */
 Xv_public       Xv_opaque
@@ -194,7 +196,9 @@
       case WIN_OUTER_RECT:
 	{
 	    static Rect     rec;
-	    (void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_RECT, (Xv_opaque) & rec);
+	    /* FIXME: d2? */
+	    /*(void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_RECT, (Xv_opaque) & rec);*/
+	    (void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_RECT, (Xv_opaque) & rec, XV_NULL);
 	    if (win->has_border)
 		rect_borderadjust(&rec, WIN_DEFAULT_BORDER_WIDTH);
 	    v = (Xv_opaque) & rec;
@@ -257,8 +261,11 @@
 	break;
 
       case WIN_COLUMNS:
+	/* FIXME: d2? */
+	/*(void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_WIDTH,
+				   (Xv_opaque) & vp);*/
 	(void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_WIDTH,
-				   (Xv_opaque) & vp);
+				   (Xv_opaque) & vp, XV_NULL);
 	vp -= win->left_margin + win->right_margin;
 	v = (Xv_opaque) (vp / (actual_column_width(win) + win->column_gap));
 	break;
@@ -278,8 +285,11 @@
 	break;
 
       case WIN_HEIGHT:
+	/* FIXME: d2? */
+	/*(void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_HEIGHT,
+				   (Xv_opaque) & vp);*/
 	(void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_HEIGHT,
-				   (Xv_opaque) & vp);
+				   (Xv_opaque) & vp, XV_NULL);
 	v = (Xv_opaque) vp;	/* Move to register */
 	break;
 
@@ -325,13 +335,17 @@
       case WIN_RECT:
 	{
 	    static Rect     rec;
-	    (void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_RECT, (Xv_opaque) & rec);
+	    /* FIXME: d2? */
+	    /*(void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_RECT, (Xv_opaque) & rec);*/
+	    (void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_RECT, (Xv_opaque) & rec, XV_NULL);
 	    v = (Xv_opaque) & rec;
 	}
 	break;
 
       case WIN_ROWS:
-	(void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_HEIGHT, (Xv_opaque) & vp);
+	/* FIXME: d2? */
+	/*(void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_HEIGHT, (Xv_opaque) & vp);*/
+	(void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_HEIGHT, (Xv_opaque) & vp, XV_NULL);
 	vp -= win->top_margin + win->bottom_margin;
 	v = (Xv_opaque) (vp / (actual_row_height(win) + win->row_gap));
 	break;
@@ -357,7 +371,9 @@
 	break;
 
       case WIN_WIDTH:
-	(void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_WIDTH, (Xv_opaque) & vp);
+	/* FIXME: d2? */
+	/*(void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_WIDTH, (Xv_opaque) & vp);*/
+	(void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_WIDTH, (Xv_opaque) & vp, XV_NULL);
 	v = (Xv_opaque) vp;	/* Move to register */
 	break;
 
@@ -371,12 +387,16 @@
 	break;
 	
       case WIN_X:
-	(void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_X, (Xv_opaque) & vp);
+	/* FIXME: d2? */
+	/*(void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_X, (Xv_opaque) & vp);*/
+	(void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_X, (Xv_opaque) & vp, XV_NULL);
 	v = (Xv_opaque) vp;	/* Move to register */
 	break;
 
       case WIN_Y:
-	(void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_Y, (Xv_opaque) & vp);
+	/* FIXME: d2? */
+	/*(void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_Y, (Xv_opaque) & vp);*/
+	(void) win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_Y, (Xv_opaque) & vp, XV_NULL);
 	v = (Xv_opaque) vp;	/* Move to register */
 	break;
 
@@ -866,8 +886,8 @@
 #ifdef FULL_R5
 	cms = xv_get(win_public, WIN_CMS);
 	cmap = (Colormap)xv_get(cms, XV_XID);
-	fg = (unsigned long)xv_get(cms, CMS_FOREGROUND_PIXEL);
-	bg = (unsigned long)xv_get(cms, CMS_BACKGROUND_PIXEL);
+	fg = (unsigned int)xv_get(cms, CMS_FOREGROUND_PIXEL);
+	bg = (unsigned int)xv_get(cms, CMS_BACKGROUND_PIXEL);
 	bg_pixmap = (Pixmap)xv_get(win_public, WIN_BACKGROUND_PIXMAP);
 #endif /* FULL_R5 */
 
@@ -925,8 +945,8 @@
 
 	cms = xv_get(frame->imstatus, WIN_CMS);
 	cmap = (Colormap)xv_get(cms, XV_XID);
-	fg = (unsigned long)xv_get(cms, CMS_FOREGROUND_PIXEL);
-	bg = (unsigned long)xv_get(cms, CMS_BACKGROUND_PIXEL);
+	fg = (unsigned int)xv_get(cms, CMS_FOREGROUND_PIXEL);
+	bg = (unsigned int)xv_get(cms, CMS_BACKGROUND_PIXEL);
 	bg_pixmap = (Pixmap)xv_get(frame->imstatus, WIN_BACKGROUND_PIXMAP);
 #endif
         status_list = XVaCreateNestedList(NULL,
diff -Naur xview-3.2p1.4.orig/lib/libxview/window/window_set.c xview-3.2p1.4/lib/libxview/window/window_set.c
--- xview-3.2p1.4.orig/lib/libxview/window/window_set.c	2013-01-07 12:36:31.343682000 +0100
+++ xview-3.2p1.4/lib/libxview/window/window_set.c	2013-01-07 13:28:06.284544000 +0100
@@ -21,6 +21,7 @@
 #include <xview/server.h>
 #include <xview/fullscreen.h>
 #include <xview/defaults.h>
+#include <xview/win.h>
 #ifdef SVR4 
 #include <stdlib.h> 
 #endif /* SVR4 */
@@ -60,6 +61,13 @@
     NULL,		FALSE
 };
 
+#ifdef __STDC__
+static void window_set_softkey_labels(Xv_Drawable_info *info, char *string);
+#else
+static void window_set_softkey_labels();
+#endif
+
+
 Pkg_private     Xv_opaque
 window_set_avlist(win_public, avlist)
     Xv_Window       win_public;
@@ -84,7 +92,7 @@
     if (win->created) {
 	win->rect_info = 0;
     }
-    for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
+    for (attrs = avlist; (int)*attrs; attrs = attr_next(attrs)) {
       /* The following check is done for performance reasons.  The check
        * short-circuits attribute xv_set's for attributes not owned by
        * this class or its' super-class.
@@ -92,7 +100,7 @@
       if ((ATTR_PKG(attrs[0]) == ATTR_PKG_WIN) ||
 	  (ATTR_PKG(attrs[0]) == ATTR_PKG_GENERIC) || 
 	  (ATTR_PKG(attrs[0]) == ATTR_PKG_SV)) {
-	switch (attrs[0]) {
+	switch ((int)attrs[0]) {
 
 	  case WIN_RECT_INFO:
 	    win->rect_info = (int) attrs[1];
@@ -105,10 +113,10 @@
 
 	  case WIN_CURSOR:
 	    if (win->cursor) {
-		(void) xv_set(win->cursor, XV_DECREMENT_REF_COUNT, 0);
+		(void) xv_set(win->cursor, XV_DECREMENT_REF_COUNT, NULL);
 	    }
 	    win->cursor = (Xv_opaque) attrs[1];
-	    (void) xv_set(win->cursor, XV_INCREMENT_REF_COUNT, 0);
+	    (void) xv_set(win->cursor, XV_INCREMENT_REF_COUNT, NULL);
 	    win_attrs_mask |= CWCursor;
 	    win_attrs.cursor = (Cursor)xv_get(win->cursor, XV_XID);
 #ifdef OW_I18N
@@ -221,7 +229,7 @@
 	    cms = (Cms)attrs[1];
 	    if (xv_cms(info) != cms)
 	      window_set_cms(win_public, cms, 0, 
-			     (int)(xv_get(cms, CMS_SIZE, 0) - 1));
+			     (int)(xv_get(cms, CMS_SIZE, NULL) - 1));
 	    break;
           }
 
@@ -460,17 +468,20 @@
 	    Rect            rect;
 
 	    (void) update_rect(win, &old_rect, &new_rect);
+	    /* FIXME: d2? */
+	    /*win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_RECT,
+			        (Xv_opaque) & rect);*/
 	    win_appeal_to_owner(FALSE, win, (Xv_opaque) WIN_GET_RECT,
-			        (Xv_opaque) & rect);
+			        (Xv_opaque) & rect, XV_NULL);
 	    win_set_parent(win_public, attrs[1], rect.r_left, rect.r_top);
 	    break;
 	  }
 
 	  case XV_FONT:
 	    if ((attrs[1]) && (win->font != (Xv_font) attrs[1])) {
-		(void) xv_set(win->font, XV_DECREMENT_REF_COUNT, 0);
+		(void) xv_set(win->font, XV_DECREMENT_REF_COUNT, NULL);
 		win->font = (Xv_font) attrs[1];
-		(void) xv_set(win->font, XV_INCREMENT_REF_COUNT, 0);
+		(void) xv_set(win->font, XV_INCREMENT_REF_COUNT, NULL);
 #ifdef OW_I18N
 #ifdef FULL_R5
 		/*
@@ -662,7 +673,7 @@
 {
     register Window_info 	*win = WIN_PRIVATE(win_public);
 
-    switch (attrs[0]) {
+    switch ((Window_attribute)attrs[0]) {
 
 #ifdef OW_I18N
       case WIN_IC_RESET:
@@ -688,7 +699,7 @@
             } 
         } else {
 	    if (win->win_use_im) {
-                xv_error(NULL, ERROR_STRING,
+                xv_error((Xv_object)NULL, ERROR_STRING,
                                     XV_MSG("Invalid IC: Unable to reset IC. "),
                                     ERROR_PKG, WINDOW,
                                     NULL);
@@ -709,7 +720,7 @@
 	    xv_error(win_public,
 		    ERROR_STRING,
 		    XV_MSG("WIN_TOP_LEVEL_NO_DECOR specified for non-top level non-frame window"),
-		    0);
+		    NULL);
 	}
 	win->top_level_no_decor = (int) attrs[1];
 	*win_attrs_mask |= CWOverrideRedirect;
@@ -719,7 +730,7 @@
       case WIN_FIT_HEIGHT: {
 	int	y;
 
-	y = (int) xv_get(win_public, WIN_FIT_HEIGHT, attrs[1]);
+	y = (int) xv_get(win_public, WIN_FIT_HEIGHT, (int)attrs[1]);
 	if (y <= 0) {
 	    sync_rect(win, old_rect, new_rect);
 	    y = new_rect->r_height;
@@ -734,7 +745,7 @@
       case WIN_FIT_WIDTH: {
 	int	x;
 
-	x = (int) xv_get(win_public, WIN_FIT_WIDTH, attrs[1]);
+	x = (int) xv_get(win_public, WIN_FIT_WIDTH, (int)attrs[1]);
 	if (x <= 0) {
 	    sync_rect(win, old_rect, new_rect);
 	    x = new_rect->r_width;
@@ -789,12 +800,12 @@
 
       case WIN_MENU:
         if (win->menu)
-	    (void) xv_set(win->menu, XV_DECREMENT_REF_COUNT, 0);
+	    (void) xv_set(win->menu, XV_DECREMENT_REF_COUNT, NULL);
 
 	win->menu = (Xv_opaque) attrs[1];
 
 	if (win->menu)
-	    (void) xv_set(win->menu, XV_INCREMENT_REF_COUNT, 0);
+	    (void) xv_set(win->menu, XV_INCREMENT_REF_COUNT, NULL);
 	break;
 
       case WIN_REMOVE_CARET:
@@ -973,7 +984,7 @@
 {
     register Window_info 	*win = WIN_PRIVATE(win_public);
 
-    switch (attrs[0]) {
+    switch ((Window_attribute)attrs[0]) {
       case WIN_WINDOW_GRAVITY:
 	*win_attrs_mask |= CWWinGravity;
 	win_attrs->win_gravity = (int) attrs[1];
@@ -1122,7 +1133,7 @@
 	break;
 
       default:
-	if (attrs[0])
+	if ((Window_attribute)attrs[0])
 	    xv_check_bad_attr(&xv_window_pkg, attrs[0]);
 	break;
     }
@@ -1169,8 +1180,11 @@
     sync_rect(win, old_rect, new_rect);
 
     if (!rect_equal(old_rect, new_rect)) {
+	/* FIXME: d2? */
+	/*win_appeal_to_owner(TRUE, win, (Xv_opaque) WIN_ADJUST_RECT,
+			    (Xv_opaque) new_rect);*/
 	win_appeal_to_owner(TRUE, win, (Xv_opaque) WIN_ADJUST_RECT,
-			    (Xv_opaque) new_rect);
+			    (Xv_opaque) new_rect, XV_NULL);
 	*old_rect = *new_rect;
     }
 }
@@ -1332,9 +1346,13 @@
 	if (!win->created)
 	    return;
 
+	/* FIXME: d2? */
+	/*(void) win_appeal_to_owner(FALSE, win,
+			 (Xv_opaque) ((win->map) ? WIN_INSERT : WIN_REMOVE),
+				   (Xv_opaque) flag);*/
 	(void) win_appeal_to_owner(FALSE, win,
 			 (Xv_opaque) ((win->map) ? WIN_INSERT : WIN_REMOVE),
-				   (Xv_opaque) flag);
+				   (Xv_opaque) flag, XV_NULL);
     }
 }
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/window/windowcmpt.c xview-3.2p1.4/lib/libxview/window/windowcmpt.c
--- xview-3.2p1.4.orig/lib/libxview/window/windowcmpt.c	1993-06-29 07:15:47.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/window/windowcmpt.c	2013-01-07 12:51:00.519621000 +0100
@@ -90,13 +90,13 @@
     register Window_info *win = WIN_PRIVATE(win_public);
     register Attr_avlist attrs;
 
-    for (attrs = avlist; *attrs; attrs = attr_next(attrs)) {
+    for (attrs = avlist; (int)*attrs; attrs = attr_next(attrs)) {
 	switch ((Window_attribute) attrs[0]) {
 	  case WIN_FONT:
 	    if (attrs[1]) {
-		(void) xv_set(win->font, XV_DECREMENT_REF_COUNT, 0);
+		(void) xv_set(win->font, XV_DECREMENT_REF_COUNT, NULL);
 		win->font = (Xv_font) attrs[1];
-		(void) xv_set(win->font, XV_INCREMENT_REF_COUNT, 0);
+		(void) xv_set(win->font, XV_INCREMENT_REF_COUNT, NULL);
 	    }
 	    ATTR_CONSUME(attrs[0]);
 	    break;
@@ -140,6 +140,7 @@
 	    win->column_gap = (int) attrs[1];
 	    ATTR_CONSUME(attrs[0]);
 	    break;
+
 	}
     }
     window_rc_units_to_pixels(win_public, avlist);
diff -Naur xview-3.2p1.4.orig/lib/libxview/window/windowimpl.h xview-3.2p1.4/lib/libxview/window/windowimpl.h
--- xview-3.2p1.4.orig/lib/libxview/window/windowimpl.h	1993-06-29 07:15:49.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/window/windowimpl.h	2013-01-07 12:51:00.593296000 +0100
@@ -225,16 +225,64 @@
 				xv_get(par->font, FONT_DEFAULT_CHAR_WIDTH))
 #endif /* OW_I18N */ 
 
-/* window.c */
-Pkg_private Notify_value	window_default_event_func();
-Xv_private int			window_getrelrect();
+#ifdef __STDC__
+
+/* window_set.c */
+Pkg_private Xv_opaque		window_set_avlist(Xv_Window win_public, Attr_attribute avlist[]);
+Pkg_private void		sync_rect(Window_info *win, Rect *old_rect, Rect *new_rect);
+
+/* window_get.c */
+Pkg_private Xv_opaque		window_get_attr(Xv_Window win_public, int *status, Window_attribute attr, va_list valist);
+Xv_public Xv_opaque		window_get(Xv_Window win_public, Window_attribute attr, ...);
+
+/* window_layout.c */
+Pkg_private int			window_layout(Xv_Window parent, Xv_Window child, Window_layout_op op, Xv_opaque d1, Xv_opaque d2, Xv_opaque d3, Xv_opaque d4, Xv_opaque d5);
+
+/* window_compat.c */
+Xv_private void			window_scan_and_convert_to_pixels(Xv_Window win_public, Attr_avlist avlist);
+
+/* windowdrop.c */
+Pkg_private void		win_add_drop_item(Window_info *win, Xv_drop_site dropItem);
+Pkg_private Xv_opaque		win_delete_drop_item(Window_info *win, Xv_drop_site dropItem, Win_drop_site_mode mode);
+Pkg_private void		win_add_drop_interest(Window_info *win, Xv_drop_site dropItem);
+Pkg_private void		win_update_dnd_property(Window_info *win);
+Xv_private Xv_opaque		win_get_top_level(Xv_Window window);
+
+/* windowutil.c */
+Xv_private void			win_set_wm_command(Xv_window window);
+Xv_private void			win_set_wm_class(Xv_window window);
+Xv_private int			window_set_tree_flag(Xv_window topLevel, Xv_cursor pointer, int deafBit, Bool flag);
+Xv_private int			window_set_tree_child_flag(Xv_window query, Xv_cursor pointer, int deafBit, Bool flag);
+Xv_private int			window_set_flag_cursor(Xv_window window, Xv_cursor pointer, Bool flag);
+Xv_private void			window_set_map_cache(Xv_Window window, int flag);
+Xv_private void			win_grab_quick_sel_keys(Xv_Window window);
+Xv_private void			window_outer_to_innerrect(Xv_Window window, Rect *rect);
+Xv_private void			window_inner_to_outerrect(Xv_Window window, Rect *rect);
+Xv_private void			window_adjust_rects(Window_rescale_rect_obj *rect_obj_list, Xv_Window parent_public, int num_elems, int parent_width, int parent_height);
+Xv_private void			window_set_border(Xv_object window, int width);
+Xv_private void			window_update_cache_rect(Xv_Window window, Rect *rect);
+Xv_private void			window_calculate_new_size(Xv_Window parent, Xv_Window window, int *new_width, int *new_height);
+Pkg_private Notify_value	window_default_event_func(Xv_Window win_public, Event *event, Notify_arg arg, Notify_event_type type);
+Xv_private int			window_getrelrect(Xv_object dest_child, Xv_object source, Rect *source_rect);
+Pkg_private int			win_appeal_to_owner(int adjust, Window_info *win, Xv_opaque op, Xv_opaque d1, Xv_opaque d2);
+Xv_private void			window_set_parent(Xv_Window window, Xv_Window parent);
+Xv_private void			window_get_outer_rect(Xv_Window window, Rect *rect);
+Xv_private void			window_get_cache_rect(Xv_Window window, Rect *rect);
+
+/* window_cms.c */
+Xv_private void			window_set_cms_data(Xv_Window win_public, Xv_cmsdata *cms_data);
+Xv_private void			window_set_cms_name(Xv_Window win_public, char *new_name);
+Pkg_private void		window_set_cms(Xv_Window win_public, Cms cms, int cms_bg, int cms_fg);
+
+#else
 
 /* window_set.c */
 Pkg_private Xv_opaque		window_set_avlist();
-Pkg_private int			win_appeal_to_owner();
+Pkg_private void		sync_rect();
 
 /* window_get.c */
 Pkg_private Xv_opaque		window_get_attr();
+Xv_public Xv_opaque		window_get();
 
 /* window_layout.c */
 Pkg_private int			window_layout();
@@ -255,6 +303,26 @@
 Xv_private int			window_set_tree_flag();
 Xv_private int			window_set_tree_child_flag();
 Xv_private int			window_set_flag_cursor();
+Xv_private void			window_set_map_cache();
+Xv_private void			win_grab_quick_sel_keys();
+Xv_private void			window_outer_to_innerrect();
+Xv_private void			window_inner_to_outerrect();
+Xv_private void			window_adjust_rects();
+Xv_private void			window_set_border();
+Xv_private void			window_update_cache_rect();
+Xv_private void			window_calculate_new_size();
+Pkg_private Notify_value	window_default_event_func();
+Xv_private int			window_getrelrect();
+Pkg_private int			win_appeal_to_owner();
+Xv_private void			window_set_parent();
+Xv_private void			window_get_outer_rect();
+Xv_private void			window_get_cache_rect();
+
+/* window_cms.c */
+Xv_private void			window_set_cms_data();
+Xv_private void			window_set_cms_name();
+Pkg_private void		window_set_cms();
 
+#endif
 
 #endif /* ~window_impl_DEFINED */
diff -Naur xview-3.2p1.4.orig/lib/libxview/window/windowlayt.c xview-3.2p1.4/lib/libxview/window/windowlayt.c
--- xview-3.2p1.4.orig/lib/libxview/window/windowlayt.c	2013-01-07 12:36:31.118513000 +0100
+++ xview-3.2p1.4/lib/libxview/window/windowlayt.c	2013-01-07 12:51:00.699214000 +0100
@@ -16,6 +16,7 @@
 #include <xview/window.h>
 #include <xview/rect.h>
 #include <xview_private/windowimpl.h>
+#include <xview/win.h>
 
 
 /* ARGSUSED */
@@ -25,10 +26,7 @@
     Xv_Window       parent;
     register Xv_Window child;
     Window_layout_op op;
-/* Alpha compatibility, mbuck@debian.org */
-#if defined(__alpha)
-    unsigned long *d1, *d2, *d3, *d4, *d5;
-#endif
+    Xv_opaque d1, d2, d3, d4, d5;
 {
 
     Rect            rect;
@@ -123,10 +121,10 @@
 	    (void) sprintf(dummy, 
 		XV_MSG("window layout option (%d) not recognized (window_layout)"),
 			   op);
-	    xv_error(NULL,
+	    xv_error((Xv_object)NULL,
 		     ERROR_STRING, dummy,
 		     ERROR_PKG, WINDOW,
-		     0);
+		     NULL);
 	    return FALSE;
 	}
     }
diff -Naur xview-3.2p1.4.orig/lib/libxview/window/windowutil.c xview-3.2p1.4/lib/libxview/window/windowutil.c
--- xview-3.2p1.4.orig/lib/libxview/window/windowutil.c	2013-01-07 12:36:31.229751000 +0100
+++ xview-3.2p1.4/lib/libxview/window/windowutil.c	2013-01-07 12:51:00.760005000 +0100
@@ -29,6 +29,8 @@
 #include <xview/font.h>
 #include <xview/sel_svc.h>
 #include <xview/sel_attrs.h>
+#include <xview/win_notify.h>
+#include <xview/win.h>
 #include <X11/Xatom.h>
 #include <X11/Xutil.h>
 
@@ -50,6 +52,9 @@
  */
 static void     adjust_rect_obj();
 
+Xv_object input_readevent();
+Xv_object win_data();
+
 
 void
 window_release_event_lock(window)
@@ -92,8 +97,8 @@
 win_appeal_to_owner(adjust, win, op, d1, d2)
     int             adjust;
     register Window_info *win;
-    caddr_t         op;
-    caddr_t         d1, d2;
+    Xv_opaque       op;
+    Xv_opaque       d1, d2;
 {
     /* BUG: is adjust use right here? */
 
@@ -103,7 +108,9 @@
      */
     if (!win->owner) {
 	/* must be a root window */
-	window_layout(WIN_PUBLIC(win), WIN_PUBLIC(win), op, d1, d2);
+	/* FIXME: d4, d5, d6? */
+	/*window_layout(WIN_PUBLIC(win), WIN_PUBLIC(win), op, d1, d2);*/
+	window_layout(WIN_PUBLIC(win), WIN_PUBLIC(win), op, d1, d2, XV_NULL, XV_NULL, XV_NULL);
 	return adjust;
     }
     if (win->owner && win->owner->layout_proc) {
@@ -139,11 +146,11 @@
           Xv_Font  new_font = (win->font) ?
 				(Xv_Font) xv_find(win_public, FONT,
 			  			FONT_RESCALE_OF, win->font, arg,
-						0) :
+						NULL) :
 				(Xv_Font) 0;
 
           if (new_font)
-	      xv_set(win_public, XV_FONT, new_font, 0);
+	      xv_set(win_public, XV_FONT, new_font, NULL);
 	}
 	break;
       case KBD_USE:
@@ -231,7 +238,7 @@
 window_private_gc(win_public)
     Xv_Window       win_public;
 {
-    return ((GC) xv_get(win_public, XV_KEY_DATA, XV_GC));
+    return ((GC) xv_get(win_public, XV_KEY_DATA, (Attr_attribute)XV_GC));
 }
 
 /*
@@ -406,7 +413,7 @@
 		 ERROR_STRING, 
 		     XV_MSG("window: zero width or height specified"),
 		 ERROR_PKG, WINDOW,
-		 0);
+		 NULL);
 	if (!rect->r_height)
 	    rect->r_height = 1;
 	if (!rect->r_width)
@@ -508,7 +515,7 @@
 	}
 }
 
-Xv_private
+Xv_private void
 window_set_parent(window, parent)
     Xv_Window       window, parent;
 {
@@ -520,12 +527,12 @@
 	return;
     win_private->parent = parent;
     DRAWABLE_INFO_MACRO(window, info);
-    if (parent == xv_get(xv_screen(info), XV_ROOT))
+    if (parent == (Xv_object)xv_get(xv_screen(info), XV_ROOT))
 	win_private->top_level = TRUE;
     else
 	win_private->top_level = FALSE;
     win_xmask_to_im(win_private->xmask, &im);
-    xv_set(window, WIN_INPUT_MASK, &im, 0);
+    xv_set(window, WIN_INPUT_MASK, &im, NULL);
 }
 
 Xv_private void
@@ -634,7 +641,7 @@
  */
 
 Xv_private void
-window_calculate_new_size(parent, window, state, new_width, new_height)
+window_calculate_new_size(parent, window, new_width, new_height)
     Xv_Window       parent, window;
     int            *new_width, *new_height;
 {
@@ -646,8 +653,8 @@
      * vars.
      */
 
-    int             rows = (int) xv_get(window, WIN_ROWS, 0);
-    int             cols = (int) xv_get(window, WIN_COLUMNS, 0);
+    int             rows = (int) xv_get(window, WIN_ROWS, NULL);
+    int             cols = (int) xv_get(window, WIN_COLUMNS, NULL);
 
     /*
      * vp = old_rect.r_height; vp -= win->top_margin + win->bottom_margin;
@@ -724,7 +731,9 @@
     int             i;
 
     for (i = 0; i < num_elems; i++) {
-	window_calculate_new_size(parent_public, &(rect_obj_list[i].sw), &new_width, &new_height);
+	/* FIXME: is this intentional? */
+	/*window_calculate_new_size(parent_public, &(rect_obj_list[i].sw), &new_width, &new_height);*/
+	window_calculate_new_size(parent_public, rect_obj_list[i].sw, &new_width, &new_height);
 	/* add it to the local version */
 	rect_obj_list[i].new_rect.r_width = new_width;
 	rect_obj_list[i].new_rect.r_height = new_height;
@@ -766,8 +775,11 @@
 	 */
 
 	adjust_rect_obj(num_elems, this_sw, rect_obj_list, parent_width, parent_height);
-	window_outer_to_innerrect(&(rect_obj_list[this_sw]),
-				  rect_obj_list[this_sw].new_rect);
+	/* FIXME: is this intentional? */
+	/*window_outer_to_innerrect(&(rect_obj_list[this_sw]),
+				  rect_obj_list[this_sw].new_rect);*/
+	window_outer_to_innerrect(rect_obj_list[this_sw].sw,
+				  &(rect_obj_list[this_sw].new_rect));
     }
 }
 
@@ -996,7 +1008,6 @@
 {
     Xv_Drawable_info *info;
     int		    keycode;
-    KeySym	    keysym;
 
     DRAWABLE_INFO_MACRO(window, info);
 
@@ -1058,7 +1069,7 @@
     }
 
     if (!xv_app_name || 
-	(xv_get(window, XV_OWNER) != xv_get(xv_screen(info), XV_ROOT)))  {
+	((Xv_opaque)xv_get(window, XV_OWNER) != (Xv_object)xv_get(xv_screen(info), XV_ROOT)))  {
 	reset = TRUE;
     }
     else  {
@@ -1069,7 +1080,7 @@
 	     */
             if ((int)appl_cmdline != -1) {
                 int   len = 1000;
-                char *str = NULL;
+                char *str = '\0';
         
                 if (appl_cmdline)
                     len += strlen(appl_cmdline);
@@ -1262,7 +1273,7 @@
         xv_error(query,
             ERROR_STRING, 
 		XV_MSG("Attempt to query the window tree failed"), 
-            0);
+            NULL);
 
 	return(XV_ERROR);
     }
diff -Naur xview-3.2p1.4.orig/lib/libxview/wmgr/wmgr_decor.c xview-3.2p1.4/lib/libxview/wmgr/wmgr_decor.c
--- xview-3.2p1.4.orig/lib/libxview/wmgr/wmgr_decor.c	1993-06-29 07:17:25.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/wmgr/wmgr_decor.c	2013-01-07 12:51:00.857758000 +0100
@@ -19,6 +19,7 @@
 #include <xview/server.h>
 #include <xview_private/fm_impl.h>
 #include <xview_private/draw_impl.h>
+#include <xview_private/scrn_impl.h>
 
 #include <X11/Xatom.h>
 
diff -Naur xview-3.2p1.4.orig/lib/libxview/wmgr/wmgr_decor.h xview-3.2p1.4/lib/libxview/wmgr/wmgr_decor.h
--- xview-3.2p1.4.orig/lib/libxview/wmgr/wmgr_decor.h	2013-01-07 12:36:33.157359000 +0100
+++ xview-3.2p1.4/lib/libxview/wmgr/wmgr_decor.h	2013-01-07 12:51:00.891375000 +0100
@@ -10,6 +10,7 @@
 #define _wmgr_decor_h_already_included
 
 #include <X11/Xlib.h>
+#include <xview/frame.h>
 
 #define		WM_MAX_DECOR		6
 
@@ -68,4 +69,17 @@
 #define WMWindowNotBusy	0
 #define WMWindowIsBusy	1
 
+/*
+ * PRIVATE functions
+ */
+#ifdef __STDC__
+Xv_private int wmgr_add_decor(Frame frame_public, Atom *decor_list, int num_of_decor);
+Xv_private int wmgr_delete_decor(Frame frame_public, Atom *decor_list, int num_of_decor);
+Xv_private int wmgr_set_win_attr(Frame frame_public, WM_Win_Type *win_attr);
+#else
+Xv_private int wmgr_add_decor();
+Xv_private int wmgr_delete_decor();
+Xv_private int wmgr_set_win_attr();
+#endif
+
 #endif /* _wmgr_decor_h_already_included */
diff -Naur xview-3.2p1.4.orig/lib/libxview/wmgr/wmgr_menu.c xview-3.2p1.4/lib/libxview/wmgr/wmgr_menu.c
--- xview-3.2p1.4.orig/lib/libxview/wmgr/wmgr_menu.c	2013-01-07 12:36:33.055479000 +0100
+++ xview-3.2p1.4/lib/libxview/wmgr/wmgr_menu.c	2013-01-07 12:51:00.916189000 +0100
@@ -28,9 +28,18 @@
 #include <X11/Xlib.h>
 #include <xview_private/draw_impl.h>
 #include <xview_private/fm_impl.h>
+#include <xview/win.h>
+#define _OTHER_WIN_ENV_FUNCTIONS
+#include <xview/win_env.h>
 
 static void     wmgr_top_bottom();
 
+#ifdef __STDC__
+Pkg_private int wmgr_constructargs(char *args[], char *programname, char *otherargs, int maxargcount);
+#else
+Pkg_private int wmgr_constructargs();
+#endif
+
 Xv_public void
 wmgr_open(frame_public)
     Frame           frame_public;
@@ -159,13 +168,13 @@
     char           *args[], *programname, *otherargs;
     int             maxargcount;
 {   
-#define terminatearg() {*cpt = NULL;needargstart = 1;}
+#define terminatearg() {*cpt = '\0';needargstart = 1;}
 #define STRINGQUOTE     '"'
     int             argindex = 0, needargstart = 1, quotedstring = 0;
     register char  *cpt;
      
     args[argindex++] = programname;
-    for (cpt = otherargs; (cpt != 0) && (*cpt != NULL); cpt++) {
+    for (cpt = otherargs; (cpt != NULL) && (*cpt != '\0'); cpt++) {
         if (quotedstring) {
             if (*cpt == STRINGQUOTE) {
                 terminatearg();
diff -Naur xview-3.2p1.4.orig/lib/libxview/wmgr/wmgr_rect.c xview-3.2p1.4/lib/libxview/wmgr/wmgr_rect.c
--- xview-3.2p1.4.orig/lib/libxview/wmgr/wmgr_rect.c	1993-06-29 07:17:25.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/wmgr/wmgr_rect.c	2013-01-07 12:51:00.943976000 +0100
@@ -15,6 +15,7 @@
  */
 
 #include <xview/wmgr.h>
+#include <xview/win.h>
 
 Xv_public void
 wmgr_completechangerect(
diff -Naur xview-3.2p1.4.orig/lib/libxview/wmgr/wmgr_state.c xview-3.2p1.4/lib/libxview/wmgr/wmgr_state.c
--- xview-3.2p1.4.orig/lib/libxview/wmgr/wmgr_state.c	1993-06-29 07:17:25.000000000 +0200
+++ xview-3.2p1.4/lib/libxview/wmgr/wmgr_state.c	2013-01-07 12:51:00.990123000 +0100
@@ -17,6 +17,9 @@
 #include <stdio.h>
 #include <xview/wmgr.h>
 #include <xview/win_struct.h>
+#include <xview/win.h>
+
+XID win_getlink();
 
 Xv_public void
 wmgr_changelevel(window, parent, top)
